+ python train.py --dataset csv --csv_train /Data/train.csv --csv_classes /Data/classes.csv --csv_val /Data/val.csv --depth 101 --epochs 200
CUDA available: True
Num training images: 2920
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.083654420442196, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.713101960837841
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.083654420442196, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.0494049107533874, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.713101960837841
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.0665296676312472, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.713101960837841
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.0665296676312472, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.713101960837841
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.0665296676312472, Max: 2.587712421417236
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.713101960837841
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.0665296676312472, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.713101960837841
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.713101960837841
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.713101960837841
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.0665296676312472, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.0357142857142856, Max: 2.6051416142781574
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.570283228556315
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.0665296676312472, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.0494049107533874, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.083654420442196, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.0322801579424388, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.0665296676312472, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.713101960837841
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.0357142857142856, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.0357142857142856, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.0665296676312472, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -1.9980306523205411, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.713101960837841
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.0357142857142856, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.083654420442196, Max: 2.6051416142781574
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.0322801579424388, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -1.8781573745100777, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.713101960837841
After normalization, Min: -2.0357142857142856, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.713101960837841
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.0494049107533874, Max: 2.570283228556315
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.0665296676312472, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.083654420442196, Max: 2.6051416142781574
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.0151554051314897, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.0665296676312472, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.713101960837841
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.083654420442196, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6225708071390788
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6225708071390788
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.0494049107533874, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.0007002780413523, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.713101960837841
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.713101960837841
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.0494049107533874, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.0665296676312472, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.0357142857142856, Max: 2.6051416142781574
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.0494049107533874, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.083654420442196, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.0357142857142856, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.713101960837841
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.0322801579424388, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.0665296676312472, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.0494049107533874, Max: 2.6225708071390788
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.0357142857142856, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.083654420442196, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.0665296676312472, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.0494049107533874, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.0322801579424388, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.0151554051314897, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.570283228556315
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.0322801579424388, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.083654420442196, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.083654420442196, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.0357142857142856, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.083654420442196, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.0665296676312472, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.0665296676312472, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.0665296676312472, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.083654420442196, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.713101960837841
After normalization, Min: -2.1007791752866, Max: 2.6051416142781574
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6225708071390788
After normalization, Min: -2.083654420442196, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.083654420442196, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.570283228556315
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.083654420442196, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6225708071390788
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.0494049107533874, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -1.9980306523205411, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.0665296676312472, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.713101960837841
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
After normalization, Min: -2.083654420442196, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.083654420442196, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.0151554051314897, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.083654420442196, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1007791752866, Max: 2.6051416142781574
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.713101960837841
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.0322801579424388, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.0665296676312472, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After normalization, Min: -2.0007002780413523, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.713101960837841
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After normalization, Min: -2.0357142857142856, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.083654420442196, Max: 2.6051416142781574
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.0665296676312472, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.0357142857142856, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.713101960837841
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.0494049107533874, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.083654420442196, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.0665296676312472, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -1.9637811385648218, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.0494049107533874, Max: 2.570283228556315
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.0665296676312472, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.083654420442196, Max: 2.6051416142781574
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.587712421417236
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After flip, Min: 0.40688235299335795, Max: 0.714
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Epoch: 0 | Iteration: 0 | Classification loss: 0.05783 | Regression loss: 0.00000 | Running loss: 0.05783
Epoch: 0 | Iteration: 1 | Classification loss: 0.05783 | Regression loss: 0.00000 | Running loss: 0.05783
Epoch: 0 | Iteration: 2 | Classification loss: 0.05783 | Regression loss: 0.00000 | Running loss: 0.05783
Epoch: 0 | Iteration: 3 | Classification loss: 0.05783 | Regression loss: 0.00000 | Running loss: 0.05783
Epoch: 0 | Iteration: 4 | Classification loss: 0.05783 | Regression loss: 0.00000 | Running loss: 0.05783
Epoch: 0 | Iteration: 5 | Classification loss: 0.05783 | Regression loss: 0.00000 | Running loss: 0.05783
Epoch: 0 | Iteration: 6 | Classification loss: 1.15730 | Regression loss: 1.27549 | Running loss: 0.39711
Epoch: 0 | Iteration: 7 | Classification loss: 0.05783 | Regression loss: 0.00000 | Running loss: 0.35470
Epoch: 0 | Iteration: 8 | Classification loss: 0.05783 | Regression loss: 0.00000 | Running loss: 0.32171
Epoch: 0 | Iteration: 9 | Classification loss: 0.05783 | Regression loss: 0.00000 | Running loss: 0.29533
Epoch: 0 | Iteration: 10 | Classification loss: 0.05783 | Regression loss: 0.00000 | Running loss: 0.27374
Epoch: 0 | Iteration: 11 | Classification loss: 0.05780 | Regression loss: 0.00000 | Running loss: 0.25574
Epoch: 0 | Iteration: 12 | Classification loss: 0.05783 | Regression loss: 0.00000 | Running loss: 0.24052
Epoch: 0 | Iteration: 13 | Classification loss: 0.05782 | Regression loss: 0.00000 | Running loss: 0.22747
Epoch: 0 | Iteration: 14 | Classification loss: 0.05782 | Regression loss: 0.00000 | Running loss: 0.21616
Epoch: 0 | Iteration: 15 | Classification loss: 0.05782 | Regression loss: 0.00000 | Running loss: 0.20626
Epoch: 0 | Iteration: 16 | Classification loss: 0.05782 | Regression loss: 0.00000 | Running loss: 0.19753
Epoch: 0 | Iteration: 17 | Classification loss: 0.05782 | Regression loss: 0.00000 | Running loss: 0.18977
Epoch: 0 | Iteration: 18 | Classification loss: 0.05782 | Regression loss: 0.00000 | Running loss: 0.18282
Epoch: 0 | Iteration: 19 | Classification loss: 0.05782 | Regression loss: 0.00000 | Running loss: 0.17657
Epoch: 0 | Iteration: 20 | Classification loss: 1.13161 | Regression loss: 0.93489 | Running loss: 0.26657
Epoch: 0 | Iteration: 21 | Classification loss: 0.05780 | Regression loss: 0.00000 | Running loss: 0.25708
Epoch: 0 | Iteration: 22 | Classification loss: 0.05780 | Regression loss: 0.00000 | Running loss: 0.24842
Epoch: 0 | Iteration: 23 | Classification loss: 0.05782 | Regression loss: 0.00000 | Running loss: 0.24047
Epoch: 0 | Iteration: 24 | Classification loss: 0.05782 | Regression loss: 0.00000 | Running loss: 0.23317
Epoch: 0 | Iteration: 25 | Classification loss: 0.05782 | Regression loss: 0.00000 | Running loss: 0.22642
Epoch: 0 | Iteration: 26 | Classification loss: 0.05781 | Regression loss: 0.00000 | Running loss: 0.22018
Epoch: 0 | Iteration: 27 | Classification loss: 0.05781 | Regression loss: 0.00000 | Running loss: 0.21438
Epoch: 0 | Iteration: 28 | Classification loss: 0.05781 | Regression loss: 0.00000 | Running loss: 0.20898
Epoch: 0 | Iteration: 29 | Classification loss: 0.05781 | Regression loss: 0.00000 | Running loss: 0.20394
Epoch: 0 | Iteration: 30 | Classification loss: 1.13255 | Regression loss: 1.25847 | Running loss: 0.27449
Epoch: 0 | Iteration: 31 | Classification loss: 0.05781 | Regression loss: 0.00000 | Running loss: 0.26772
Epoch: 0 | Iteration: 32 | Classification loss: 0.05781 | Regression loss: 0.00000 | Running loss: 0.26136
Epoch: 0 | Iteration: 33 | Classification loss: 0.05781 | Regression loss: 0.00000 | Running loss: 0.25537
Epoch: 0 | Iteration: 34 | Classification loss: 0.05781 | Regression loss: 0.00000 | Running loss: 0.24973
Epoch: 0 | Iteration: 35 | Classification loss: 0.05781 | Regression loss: 0.00000 | Running loss: 0.24440
Epoch: 0 | Iteration: 36 | Classification loss: 0.05781 | Regression loss: 0.00000 | Running loss: 0.23936
Epoch: 0 | Iteration: 37 | Classification loss: 0.05781 | Regression loss: 0.00000 | Running loss: 0.23458
Epoch: 0 | Iteration: 38 | Classification loss: 0.05781 | Regression loss: 0.00000 | Running loss: 0.23005
Epoch: 0 | Iteration: 39 | Classification loss: 0.05780 | Regression loss: 0.00000 | Running loss: 0.22574
Epoch: 0 | Iteration: 40 | Classification loss: 0.05780 | Regression loss: 0.00000 | Running loss: 0.22164
Epoch: 0 | Iteration: 41 | Classification loss: 0.05780 | Regression loss: 0.00000 | Running loss: 0.21774
Epoch: 0 | Iteration: 42 | Classification loss: 0.05781 | Regression loss: 0.00000 | Running loss: 0.21402
Epoch: 0 | Iteration: 43 | Classification loss: 0.05780 | Regression loss: 0.00000 | Running loss: 0.21047
Epoch: 0 | Iteration: 44 | Classification loss: 0.05780 | Regression loss: 0.00000 | Running loss: 0.20708
Epoch: 0 | Iteration: 45 | Classification loss: 1.13207 | Regression loss: 0.96907 | Running loss: 0.24825
Epoch: 0 | Iteration: 46 | Classification loss: 0.05780 | Regression loss: 0.00000 | Running loss: 0.24420
Epoch: 0 | Iteration: 47 | Classification loss: 0.05779 | Regression loss: 0.00000 | Running loss: 0.24032
Epoch: 0 | Iteration: 48 | Classification loss: 0.05780 | Regression loss: 0.00000 | Running loss: 0.23659
Epoch: 0 | Iteration: 49 | Classification loss: 0.05780 | Regression loss: 0.00000 | Running loss: 0.23302
Epoch: 0 | Iteration: 50 | Classification loss: 0.05780 | Regression loss: 0.00000 | Running loss: 0.22958
Epoch: 0 | Iteration: 51 | Classification loss: 0.05779 | Regression loss: 0.00000 | Running loss: 0.22628
Epoch: 0 | Iteration: 52 | Classification loss: 0.05780 | Regression loss: 0.00000 | Running loss: 0.22310
Epoch: 0 | Iteration: 53 | Classification loss: 1.13420 | Regression loss: 1.42220 | Running loss: 0.26631
Epoch: 0 | Iteration: 54 | Classification loss: 0.05779 | Regression loss: 0.00000 | Running loss: 0.26252
Epoch: 0 | Iteration: 55 | Classification loss: 0.05779 | Regression loss: 0.00000 | Running loss: 0.25886
Epoch: 0 | Iteration: 56 | Classification loss: 0.05778 | Regression loss: 0.00000 | Running loss: 0.25533
Epoch: 0 | Iteration: 57 | Classification loss: 0.05779 | Regression loss: 0.00000 | Running loss: 0.25193
Epoch: 0 | Iteration: 58 | Classification loss: 0.05779 | Regression loss: 0.00000 | Running loss: 0.24864
Epoch: 0 | Iteration: 59 | Classification loss: 0.05779 | Regression loss: 0.00000 | Running loss: 0.24546
Epoch: 0 | Iteration: 60 | Classification loss: 0.05779 | Regression loss: 0.00000 | Running loss: 0.24238
Epoch: 0 | Iteration: 61 | Classification loss: 0.05779 | Regression loss: 0.00000 | Running loss: 0.23940
Epoch: 0 | Iteration: 62 | Classification loss: 0.05779 | Regression loss: 0.00000 | Running loss: 0.23652
Epoch: 0 | Iteration: 63 | Classification loss: 0.05779 | Regression loss: 0.00000 | Running loss: 0.23373
Epoch: 0 | Iteration: 64 | Classification loss: 0.05779 | Regression loss: 0.00000 | Running loss: 0.23102
Epoch: 0 | Iteration: 65 | Classification loss: 0.05779 | Regression loss: 0.00000 | Running loss: 0.22840
Epoch: 0 | Iteration: 66 | Classification loss: 0.05779 | Regression loss: 0.00000 | Running loss: 0.22585
Epoch: 0 | Iteration: 67 | Classification loss: 0.05778 | Regression loss: 0.00000 | Running loss: 0.22338
Epoch: 0 | Iteration: 68 | Classification loss: 0.05779 | Regression loss: 0.00000 | Running loss: 0.22098
Epoch: 0 | Iteration: 69 | Classification loss: 0.05778 | Regression loss: 0.00000 | Running loss: 0.21865
Epoch: 0 | Iteration: 70 | Classification loss: 0.05778 | Regression loss: 0.00000 | Running loss: 0.21638
Epoch: 0 | Iteration: 71 | Classification loss: 0.05778 | Regression loss: 0.00000 | Running loss: 0.21418
Epoch: 0 | Iteration: 72 | Classification loss: 0.05778 | Regression loss: 0.00000 | Running loss: 0.21204
Epoch: 0 | Iteration: 73 | Classification loss: 0.05778 | Regression loss: 0.00000 | Running loss: 0.20995
Epoch: 0 | Iteration: 74 | Classification loss: 0.05778 | Regression loss: 0.00000 | Running loss: 0.20792
Epoch: 0 | Iteration: 75 | Classification loss: 0.05778 | Regression loss: 0.00000 | Running loss: 0.20595
Epoch: 0 | Iteration: 76 | Classification loss: 0.05778 | Regression loss: 0.00000 | Running loss: 0.20402
Epoch: 0 | Iteration: 77 | Classification loss: 0.05778 | Regression loss: 0.00000 | Running loss: 0.20215
Epoch: 0 | Iteration: 78 | Classification loss: 0.05778 | Regression loss: 0.00000 | Running loss: 0.20032
Epoch: 0 | Iteration: 79 | Classification loss: 0.05778 | Regression loss: 0.00000 | Running loss: 0.19854
Epoch: 0 | Iteration: 80 | Classification loss: 0.05778 | Regression loss: 0.00000 | Running loss: 0.19680
Epoch: 0 | Iteration: 81 | Classification loss: 1.15738 | Regression loss: 0.94481 | Running loss: 0.22004
Epoch: 0 | Iteration: 82 | Classification loss: 0.05777 | Regression loss: 0.00000 | Running loss: 0.21808
Epoch: 0 | Iteration: 83 | Classification loss: 0.05778 | Regression loss: 0.00000 | Running loss: 0.21617
Epoch: 0 | Iteration: 84 | Classification loss: 0.05777 | Regression loss: 0.00000 | Running loss: 0.21431
Epoch: 0 | Iteration: 85 | Classification loss: 0.05777 | Regression loss: 0.00000 | Running loss: 0.21249
Epoch: 0 | Iteration: 86 | Classification loss: 0.05777 | Regression loss: 0.00000 | Running loss: 0.21071
Epoch: 0 | Iteration: 87 | Classification loss: 0.05777 | Regression loss: 0.00000 | Running loss: 0.20897
Epoch: 0 | Iteration: 88 | Classification loss: 0.05777 | Regression loss: 0.00000 | Running loss: 0.20728
Epoch: 0 | Iteration: 89 | Classification loss: 0.05777 | Regression loss: 0.00000 | Running loss: 0.20561
Epoch: 0 | Iteration: 90 | Classification loss: 0.05777 | Regression loss: 0.00000 | Running loss: 0.20399
Epoch: 0 | Iteration: 91 | Classification loss: 0.05776 | Regression loss: 0.00000 | Running loss: 0.20240
Epoch: 0 | Iteration: 92 | Classification loss: 0.05777 | Regression loss: 0.00000 | Running loss: 0.20084
Epoch: 0 | Iteration: 93 | Classification loss: 0.05776 | Regression loss: 0.00000 | Running loss: 0.19932
Epoch: 0 | Iteration: 94 | Classification loss: 0.05776 | Regression loss: 0.00000 | Running loss: 0.19783
Epoch: 0 | Iteration: 95 | Classification loss: 0.05776 | Regression loss: 0.00000 | Running loss: 0.19637
Epoch: 0 | Iteration: 96 | Classification loss: 1.13683 | Regression loss: 1.30473 | Running loss: 0.21952
Epoch: 0 | Iteration: 97 | Classification loss: 0.05776 | Regression loss: 0.00000 | Running loss: 0.21787
Epoch: 0 | Iteration: 98 | Classification loss: 0.05776 | Regression loss: 0.00000 | Running loss: 0.21625
Epoch: 0 | Iteration: 99 | Classification loss: 0.05776 | Regression loss: 0.00000 | Running loss: 0.21467
Epoch: 0 | Iteration: 100 | Classification loss: 1.13430 | Regression loss: 1.03558 | Running loss: 0.23403
Epoch: 0 | Iteration: 101 | Classification loss: 0.05776 | Regression loss: 0.00000 | Running loss: 0.23230
Epoch: 0 | Iteration: 102 | Classification loss: 0.05776 | Regression loss: 0.00000 | Running loss: 0.23060
Epoch: 0 | Iteration: 103 | Classification loss: 0.05776 | Regression loss: 0.00000 | Running loss: 0.22894
Epoch: 0 | Iteration: 104 | Classification loss: 0.05776 | Regression loss: 0.00000 | Running loss: 0.22731
Epoch: 0 | Iteration: 105 | Classification loss: 0.05775 | Regression loss: 0.00000 | Running loss: 0.22571
Epoch: 0 | Iteration: 106 | Classification loss: 0.05776 | Regression loss: 0.00000 | Running loss: 0.22414
Epoch: 0 | Iteration: 107 | Classification loss: 0.05776 | Regression loss: 0.00000 | Running loss: 0.22260
Epoch: 0 | Iteration: 108 | Classification loss: 1.14309 | Regression loss: 1.22366 | Running loss: 0.24227
Epoch: 0 | Iteration: 109 | Classification loss: 0.05776 | Regression loss: 0.00000 | Running loss: 0.24059
Epoch: 0 | Iteration: 110 | Classification loss: 0.05775 | Regression loss: 0.00000 | Running loss: 0.23895
Epoch: 0 | Iteration: 111 | Classification loss: 0.05775 | Regression loss: 0.00000 | Running loss: 0.23733
Epoch: 0 | Iteration: 112 | Classification loss: 0.05775 | Regression loss: 0.00000 | Running loss: 0.23574
Epoch: 0 | Iteration: 113 | Classification loss: 0.05775 | Regression loss: 0.00000 | Running loss: 0.23418
Epoch: 0 | Iteration: 114 | Classification loss: 0.05775 | Regression loss: 0.00000 | Running loss: 0.23264
Epoch: 0 | Iteration: 115 | Classification loss: 0.05775 | Regression loss: 0.00000 | Running loss: 0.23114
Epoch: 0 | Iteration: 116 | Classification loss: 0.05775 | Regression loss: 0.00000 | Running loss: 0.22966
Epoch: 0 | Iteration: 117 | Classification loss: 0.05776 | Regression loss: 0.00000 | Running loss: 0.22820
Epoch: 0 | Iteration: 118 | Classification loss: 0.05776 | Regression loss: 0.00000 | Running loss: 0.22677
Epoch: 0 | Iteration: 119 | Classification loss: 0.05775 | Regression loss: 0.00000 | Running loss: 0.22536
Epoch: 0 | Iteration: 120 | Classification loss: 0.05775 | Regression loss: 0.00000 | Running loss: 0.22397
Epoch: 0 | Iteration: 121 | Classification loss: 0.05775 | Regression loss: 0.00000 | Running loss: 0.22261
Epoch: 0 | Iteration: 122 | Classification loss: 0.05774 | Regression loss: 0.00000 | Running loss: 0.22127
Epoch: 0 | Iteration: 123 | Classification loss: 0.05774 | Regression loss: 0.00000 | Running loss: 0.21995
Epoch: 0 | Iteration: 124 | Classification loss: 1.13432 | Regression loss: 1.52365 | Running loss: 0.23945
Epoch: 0 | Iteration: 125 | Classification loss: 0.05774 | Regression loss: 0.00000 | Running loss: 0.23801
Epoch: 0 | Iteration: 126 | Classification loss: 0.05774 | Regression loss: 0.00000 | Running loss: 0.23659
Epoch: 0 | Iteration: 127 | Classification loss: 0.05774 | Regression loss: 0.00000 | Running loss: 0.23520
Epoch: 0 | Iteration: 128 | Classification loss: 0.05774 | Regression loss: 0.00000 | Running loss: 0.23382
Epoch: 0 | Iteration: 129 | Classification loss: 0.05774 | Regression loss: 0.00000 | Running loss: 0.23247
Epoch: 0 | Iteration: 130 | Classification loss: 0.05774 | Regression loss: 0.00000 | Running loss: 0.23113
Epoch: 0 | Iteration: 131 | Classification loss: 1.14303 | Regression loss: 1.35426 | Running loss: 0.24830
Epoch: 0 | Iteration: 132 | Classification loss: 0.05774 | Regression loss: 0.00000 | Running loss: 0.24687
Epoch: 0 | Iteration: 133 | Classification loss: 0.05774 | Regression loss: 0.00000 | Running loss: 0.24546
Epoch: 0 | Iteration: 134 | Classification loss: 1.13239 | Regression loss: 1.08532 | Running loss: 0.26007
Epoch: 0 | Iteration: 135 | Classification loss: 0.05773 | Regression loss: 0.00000 | Running loss: 0.25858
Epoch: 0 | Iteration: 136 | Classification loss: 0.05774 | Regression loss: 0.00000 | Running loss: 0.25711
Epoch: 0 | Iteration: 137 | Classification loss: 0.05773 | Regression loss: 0.00000 | Running loss: 0.25567
Epoch: 0 | Iteration: 138 | Classification loss: 0.05773 | Regression loss: 0.00000 | Running loss: 0.25424
Epoch: 0 | Iteration: 139 | Classification loss: 0.05772 | Regression loss: 0.00000 | Running loss: 0.25284
Epoch: 0 | Iteration: 140 | Classification loss: 0.05773 | Regression loss: 0.00000 | Running loss: 0.25146
Epoch: 0 | Iteration: 141 | Classification loss: 0.05774 | Regression loss: 0.00000 | Running loss: 0.25009
Epoch: 0 | Iteration: 142 | Classification loss: 0.05773 | Regression loss: 0.00000 | Running loss: 0.24875
Epoch: 0 | Iteration: 143 | Classification loss: 0.05775 | Regression loss: 0.00000 | Running loss: 0.24742
Epoch: 0 | Iteration: 144 | Classification loss: 0.05773 | Regression loss: 0.00000 | Running loss: 0.24611
Epoch: 0 | Iteration: 145 | Classification loss: 1.13199 | Regression loss: 1.05055 | Running loss: 0.25937
Epoch: 0 | Iteration: 146 | Classification loss: 0.05774 | Regression loss: 0.00000 | Running loss: 0.25800
Epoch: 0 | Iteration: 147 | Classification loss: 0.05773 | Regression loss: 0.00000 | Running loss: 0.25665
Epoch: 0 | Iteration: 148 | Classification loss: 0.05773 | Regression loss: 0.00000 | Running loss: 0.25531
Epoch: 0 | Iteration: 149 | Classification loss: 0.05772 | Regression loss: 0.00000 | Running loss: 0.25400
Epoch: 0 | Iteration: 150 | Classification loss: 0.05772 | Regression loss: 0.00000 | Running loss: 0.25270
Epoch: 0 | Iteration: 151 | Classification loss: 0.05772 | Regression loss: 0.00000 | Running loss: 0.25141
Epoch: 0 | Iteration: 152 | Classification loss: 0.05772 | Regression loss: 0.00000 | Running loss: 0.25015
Epoch: 0 | Iteration: 153 | Classification loss: 0.05771 | Regression loss: 0.00000 | Running loss: 0.24890
Epoch: 0 | Iteration: 154 | Classification loss: 0.05772 | Regression loss: 0.00000 | Running loss: 0.24767
Epoch: 0 | Iteration: 155 | Classification loss: 1.14014 | Regression loss: 1.40594 | Running loss: 0.26240
Epoch: 0 | Iteration: 156 | Classification loss: 0.05773 | Regression loss: 0.00000 | Running loss: 0.26110
Epoch: 0 | Iteration: 157 | Classification loss: 0.05773 | Regression loss: 0.00000 | Running loss: 0.25981
Epoch: 0 | Iteration: 158 | Classification loss: 0.05772 | Regression loss: 0.00000 | Running loss: 0.25854
Epoch: 0 | Iteration: 159 | Classification loss: 0.05771 | Regression loss: 0.00000 | Running loss: 0.25728
Epoch: 0 | Iteration: 160 | Classification loss: 0.05772 | Regression loss: 0.00000 | Running loss: 0.25604
Epoch: 0 | Iteration: 161 | Classification loss: 0.05773 | Regression loss: 0.00000 | Running loss: 0.25482
Epoch: 0 | Iteration: 162 | Classification loss: 0.05772 | Regression loss: 0.00000 | Running loss: 0.25361
Epoch: 0 | Iteration: 163 | Classification loss: 0.05772 | Regression loss: 0.00000 | Running loss: 0.25241
Epoch: 0 | Iteration: 164 | Classification loss: 1.13680 | Regression loss: 0.71935 | Running loss: 0.26213
Epoch: 0 | Iteration: 165 | Classification loss: 0.05772 | Regression loss: 0.00000 | Running loss: 0.26090
Epoch: 0 | Iteration: 166 | Classification loss: 0.05772 | Regression loss: 0.00000 | Running loss: 0.25969
Epoch: 0 | Iteration: 167 | Classification loss: 0.05772 | Regression loss: 0.00000 | Running loss: 0.25848
Epoch: 0 | Iteration: 168 | Classification loss: 0.05771 | Regression loss: 0.00000 | Running loss: 0.25730
Epoch: 0 | Iteration: 169 | Classification loss: 0.05771 | Regression loss: 0.00000 | Running loss: 0.25612
Epoch: 0 | Iteration: 170 | Classification loss: 0.05771 | Regression loss: 0.00000 | Running loss: 0.25496
Epoch: 0 | Iteration: 171 | Classification loss: 0.05771 | Regression loss: 0.00000 | Running loss: 0.25382
Epoch: 0 | Iteration: 172 | Classification loss: 0.05772 | Regression loss: 0.00000 | Running loss: 0.25268
Epoch: 0 | Iteration: 173 | Classification loss: 0.05771 | Regression loss: 0.00000 | Running loss: 0.25156
Epoch: 0 | Iteration: 174 | Classification loss: 1.15743 | Regression loss: 1.09095 | Running loss: 0.26297
Epoch: 0 | Iteration: 175 | Classification loss: 0.05772 | Regression loss: 0.00000 | Running loss: 0.26181
Epoch: 0 | Iteration: 176 | Classification loss: 0.05771 | Regression loss: 0.00000 | Running loss: 0.26065
Epoch: 0 | Iteration: 177 | Classification loss: 0.05770 | Regression loss: 0.00000 | Running loss: 0.25951
Epoch: 0 | Iteration: 178 | Classification loss: 1.13053 | Regression loss: 0.98554 | Running loss: 0.26988
Epoch: 0 | Iteration: 179 | Classification loss: 0.05772 | Regression loss: 0.00000 | Running loss: 0.26871
Epoch: 0 | Iteration: 180 | Classification loss: 0.05771 | Regression loss: 0.00000 | Running loss: 0.26754
Epoch: 0 | Iteration: 181 | Classification loss: 0.05770 | Regression loss: 0.00000 | Running loss: 0.26639
Epoch: 0 | Iteration: 182 | Classification loss: 1.13344 | Regression loss: 1.18771 | Running loss: 0.27761
Epoch: 0 | Iteration: 183 | Classification loss: 0.05770 | Regression loss: 0.00000 | Running loss: 0.27642
Epoch: 0 | Iteration: 184 | Classification loss: 0.05770 | Regression loss: 0.00000 | Running loss: 0.27524
Epoch: 0 | Iteration: 185 | Classification loss: 0.05771 | Regression loss: 0.00000 | Running loss: 0.27407
Epoch: 0 | Iteration: 186 | Classification loss: 0.05771 | Regression loss: 0.00000 | Running loss: 0.27291
Epoch: 0 | Iteration: 187 | Classification loss: 0.05770 | Regression loss: 0.00000 | Running loss: 0.27177
Epoch: 0 | Iteration: 188 | Classification loss: 0.05771 | Regression loss: 0.00000 | Running loss: 0.27063
Epoch: 0 | Iteration: 189 | Classification loss: 0.05769 | Regression loss: 0.00000 | Running loss: 0.26951
Epoch: 0 | Iteration: 190 | Classification loss: 0.05771 | Regression loss: 0.00000 | Running loss: 0.26840
Epoch: 0 | Iteration: 191 | Classification loss: 0.05771 | Regression loss: 0.00000 | Running loss: 0.26731
Epoch: 0 | Iteration: 192 | Classification loss: 0.05771 | Regression loss: 0.00000 | Running loss: 0.26622
Epoch: 0 | Iteration: 193 | Classification loss: 0.05768 | Regression loss: 0.00000 | Running loss: 0.26515
Epoch: 0 | Iteration: 194 | Classification loss: 0.05770 | Regression loss: 0.00000 | Running loss: 0.26408
Epoch: 0 | Iteration: 195 | Classification loss: 0.05771 | Regression loss: 0.00000 | Running loss: 0.26303
Epoch: 0 | Iteration: 196 | Classification loss: 0.05771 | Regression loss: 0.00000 | Running loss: 0.26199
Epoch: 0 | Iteration: 197 | Classification loss: 0.05769 | Regression loss: 0.00000 | Running loss: 0.26095
Epoch: 0 | Iteration: 198 | Classification loss: 0.05770 | Regression loss: 0.00000 | Running loss: 0.25993
Epoch: 0 | Iteration: 199 | Classification loss: 0.05770 | Regression loss: 0.00000 | Running loss: 0.25892
Epoch: 0 | Iteration: 200 | Classification loss: 0.05770 | Regression loss: 0.00000 | Running loss: 0.25792
Epoch: 0 | Iteration: 201 | Classification loss: 0.05769 | Regression loss: 0.00000 | Running loss: 0.25693
Epoch: 0 | Iteration: 202 | Classification loss: 0.05770 | Regression loss: 0.00000 | Running loss: 0.25595
Epoch: 0 | Iteration: 203 | Classification loss: 0.05770 | Regression loss: 0.00000 | Running loss: 0.25498
Epoch: 0 | Iteration: 204 | Classification loss: 0.05769 | Regression loss: 0.00000 | Running loss: 0.25401
Epoch: 0 | Iteration: 205 | Classification loss: 0.05769 | Regression loss: 0.00000 | Running loss: 0.25306
Epoch: 0 | Iteration: 206 | Classification loss: 0.05770 | Regression loss: 0.00000 | Running loss: 0.25212
Epoch: 0 | Iteration: 207 | Classification loss: 0.05769 | Regression loss: 0.00000 | Running loss: 0.25118
Epoch: 0 | Iteration: 208 | Classification loss: 0.05770 | Regression loss: 0.00000 | Running loss: 0.25026
Epoch: 0 | Iteration: 209 | Classification loss: 0.05769 | Regression loss: 0.00000 | Running loss: 0.24934
Epoch: 0 | Iteration: 210 | Classification loss: 0.05768 | Regression loss: 0.00000 | Running loss: 0.24843
Epoch: 0 | Iteration: 211 | Classification loss: 1.13355 | Regression loss: 1.09285 | Running loss: 0.25776
Epoch: 0 | Iteration: 212 | Classification loss: 0.05768 | Regression loss: 0.00000 | Running loss: 0.25682
Epoch: 0 | Iteration: 213 | Classification loss: 0.05768 | Regression loss: 0.00000 | Running loss: 0.25589
Epoch: 0 | Iteration: 214 | Classification loss: 0.05768 | Regression loss: 0.00000 | Running loss: 0.25497
Epoch: 0 | Iteration: 215 | Classification loss: 0.05769 | Regression loss: 0.00000 | Running loss: 0.25406
Epoch: 0 | Iteration: 216 | Classification loss: 0.05767 | Regression loss: 0.00000 | Running loss: 0.25315
Epoch: 0 | Iteration: 217 | Classification loss: 0.05768 | Regression loss: 0.00000 | Running loss: 0.25225
Epoch: 0 | Iteration: 218 | Classification loss: 0.05768 | Regression loss: 0.00000 | Running loss: 0.25137
Epoch: 0 | Iteration: 219 | Classification loss: 0.05766 | Regression loss: 0.00000 | Running loss: 0.25049
Epoch: 0 | Iteration: 220 | Classification loss: 1.14795 | Regression loss: 1.47223 | Running loss: 0.26121
Epoch: 0 | Iteration: 221 | Classification loss: 0.05767 | Regression loss: 0.00000 | Running loss: 0.26029
Epoch: 0 | Iteration: 222 | Classification loss: 0.05767 | Regression loss: 0.00000 | Running loss: 0.25938
Epoch: 0 | Iteration: 223 | Classification loss: 0.05767 | Regression loss: 0.00000 | Running loss: 0.25848
Epoch: 0 | Iteration: 224 | Classification loss: 1.18625 | Regression loss: 1.13366 | Running loss: 0.26764
Epoch: 0 | Iteration: 225 | Classification loss: 0.05769 | Regression loss: 0.00000 | Running loss: 0.26672
Epoch: 0 | Iteration: 226 | Classification loss: 0.05769 | Regression loss: 0.00000 | Running loss: 0.26579
Epoch: 0 | Iteration: 227 | Classification loss: 0.05768 | Regression loss: 0.00000 | Running loss: 0.26488
Epoch: 0 | Iteration: 228 | Classification loss: 0.05768 | Regression loss: 0.00000 | Running loss: 0.26398
Epoch: 0 | Iteration: 229 | Classification loss: 1.14792 | Regression loss: 1.21019 | Running loss: 0.27308
Epoch: 0 | Iteration: 230 | Classification loss: 0.05767 | Regression loss: 0.00000 | Running loss: 0.27215
Epoch: 0 | Iteration: 231 | Classification loss: 0.05765 | Regression loss: 0.00000 | Running loss: 0.27122
Epoch: 0 | Iteration: 232 | Classification loss: 0.05767 | Regression loss: 0.00000 | Running loss: 0.27031
Epoch: 0 | Iteration: 233 | Classification loss: 0.05766 | Regression loss: 0.00000 | Running loss: 0.26940
Epoch: 0 | Iteration: 234 | Classification loss: 0.05765 | Regression loss: 0.00000 | Running loss: 0.26850
Epoch: 0 | Iteration: 235 | Classification loss: 0.05766 | Regression loss: 0.00000 | Running loss: 0.26761
Epoch: 0 | Iteration: 236 | Classification loss: 0.05765 | Regression loss: 0.00000 | Running loss: 0.26672
Epoch: 0 | Iteration: 237 | Classification loss: 0.05768 | Regression loss: 0.00000 | Running loss: 0.26584
Epoch: 0 | Iteration: 238 | Classification loss: 0.05765 | Regression loss: 0.00000 | Running loss: 0.26497
Epoch: 0 | Iteration: 239 | Classification loss: 0.05766 | Regression loss: 0.00000 | Running loss: 0.26411
Epoch: 0 | Iteration: 240 | Classification loss: 0.05767 | Regression loss: 0.00000 | Running loss: 0.26325
Epoch: 0 | Iteration: 241 | Classification loss: 0.05766 | Regression loss: 0.00000 | Running loss: 0.26240
Epoch: 0 | Iteration: 242 | Classification loss: 0.05766 | Regression loss: 0.00000 | Running loss: 0.26156
Epoch: 0 | Iteration: 243 | Classification loss: 0.05768 | Regression loss: 0.00000 | Running loss: 0.26072
Epoch: 0 | Iteration: 244 | Classification loss: 1.14319 | Regression loss: 0.81210 | Running loss: 0.26764
Epoch: 0 | Iteration: 245 | Classification loss: 0.05766 | Regression loss: 0.00000 | Running loss: 0.26678
Epoch: 0 | Iteration: 246 | Classification loss: 0.05767 | Regression loss: 0.00000 | Running loss: 0.26594
Epoch: 0 | Iteration: 247 | Classification loss: 0.05765 | Regression loss: 0.00000 | Running loss: 0.26510
Epoch: 0 | Iteration: 248 | Classification loss: 0.05768 | Regression loss: 0.00000 | Running loss: 0.26427
Epoch: 0 | Iteration: 249 | Classification loss: 0.05767 | Regression loss: 0.00000 | Running loss: 0.26344
Epoch: 0 | Iteration: 250 | Classification loss: 0.05767 | Regression loss: 0.00000 | Running loss: 0.26262
Epoch: 0 | Iteration: 251 | Classification loss: 0.05762 | Regression loss: 0.00000 | Running loss: 0.26181
Epoch: 0 | Iteration: 252 | Classification loss: 0.05766 | Regression loss: 0.00000 | Running loss: 0.26100
Epoch: 0 | Iteration: 253 | Classification loss: 0.05766 | Regression loss: 0.00000 | Running loss: 0.26020
Epoch: 0 | Iteration: 254 | Classification loss: 0.05764 | Regression loss: 0.00000 | Running loss: 0.25940
Epoch: 0 | Iteration: 255 | Classification loss: 0.05764 | Regression loss: 0.00000 | Running loss: 0.25862
Epoch: 0 | Iteration: 256 | Classification loss: 0.05767 | Regression loss: 0.00000 | Running loss: 0.25783
Epoch: 0 | Iteration: 257 | Classification loss: 0.05766 | Regression loss: 0.00000 | Running loss: 0.25706
Epoch: 0 | Iteration: 258 | Classification loss: 0.05764 | Regression loss: 0.00000 | Running loss: 0.25629
Epoch: 0 | Iteration: 259 | Classification loss: 0.05767 | Regression loss: 0.00000 | Running loss: 0.25552
Epoch: 0 | Iteration: 260 | Classification loss: 0.05766 | Regression loss: 0.00000 | Running loss: 0.25477
Epoch: 0 | Iteration: 261 | Classification loss: 0.05766 | Regression loss: 0.00000 | Running loss: 0.25401
Epoch: 0 | Iteration: 262 | Classification loss: 0.05764 | Regression loss: 0.00000 | Running loss: 0.25327
Epoch: 0 | Iteration: 263 | Classification loss: 0.05766 | Regression loss: 0.00000 | Running loss: 0.25253
Epoch: 0 | Iteration: 264 | Classification loss: 0.05764 | Regression loss: 0.00000 | Running loss: 0.25179
Epoch: 0 | Iteration: 265 | Classification loss: 0.05763 | Regression loss: 0.00000 | Running loss: 0.25106
Epoch: 0 | Iteration: 266 | Classification loss: 0.05765 | Regression loss: 0.00000 | Running loss: 0.25034
Epoch: 0 | Iteration: 267 | Classification loss: 1.15767 | Regression loss: 1.43013 | Running loss: 0.25906
Epoch: 0 | Iteration: 268 | Classification loss: 0.05764 | Regression loss: 0.00000 | Running loss: 0.25831
Epoch: 0 | Iteration: 269 | Classification loss: 0.05765 | Regression loss: 0.00000 | Running loss: 0.25757
Epoch: 0 | Iteration: 270 | Classification loss: 0.05765 | Regression loss: 0.00000 | Running loss: 0.25683
Epoch: 0 | Iteration: 271 | Classification loss: 0.05766 | Regression loss: 0.00000 | Running loss: 0.25610
Epoch: 0 | Iteration: 272 | Classification loss: 0.05763 | Regression loss: 0.00000 | Running loss: 0.25537
Epoch: 0 | Iteration: 273 | Classification loss: 1.14317 | Regression loss: 1.39151 | Running loss: 0.26369
Epoch: 0 | Iteration: 274 | Classification loss: 0.05764 | Regression loss: 0.00000 | Running loss: 0.26294
Epoch: 0 | Iteration: 275 | Classification loss: 0.05765 | Regression loss: 0.00000 | Running loss: 0.26219
Epoch: 0 | Iteration: 276 | Classification loss: 0.05762 | Regression loss: 0.00000 | Running loss: 0.26146
Epoch: 0 | Iteration: 277 | Classification loss: 0.05761 | Regression loss: 0.00000 | Running loss: 0.26072
Epoch: 0 | Iteration: 278 | Classification loss: 0.05766 | Regression loss: 0.00000 | Running loss: 0.26000
Epoch: 0 | Iteration: 279 | Classification loss: 0.05762 | Regression loss: 0.00000 | Running loss: 0.25927
Epoch: 0 | Iteration: 280 | Classification loss: 0.05765 | Regression loss: 0.00000 | Running loss: 0.25856
Epoch: 0 | Iteration: 281 | Classification loss: 0.05766 | Regression loss: 0.00000 | Running loss: 0.25784
Epoch: 0 | Iteration: 282 | Classification loss: 1.15750 | Regression loss: 0.81400 | Running loss: 0.26390
Epoch: 0 | Iteration: 283 | Classification loss: 0.05762 | Regression loss: 0.00000 | Running loss: 0.26317
Epoch: 0 | Iteration: 284 | Classification loss: 0.05765 | Regression loss: 0.00000 | Running loss: 0.26245
Epoch: 0 | Iteration: 285 | Classification loss: 0.05763 | Regression loss: 0.00000 | Running loss: 0.26173
Epoch: 0 | Iteration: 286 | Classification loss: 0.05764 | Regression loss: 0.00000 | Running loss: 0.26102
Epoch: 0 | Iteration: 287 | Classification loss: 0.05761 | Regression loss: 0.00000 | Running loss: 0.26032
Epoch: 0 | Iteration: 288 | Classification loss: 0.05764 | Regression loss: 0.00000 | Running loss: 0.25962
Epoch: 0 | Iteration: 289 | Classification loss: 0.05762 | Regression loss: 0.00000 | Running loss: 0.25892
Epoch: 0 | Iteration: 290 | Classification loss: 1.18640 | Regression loss: 0.86298 | Running loss: 0.26507
Epoch: 0 | Iteration: 291 | Classification loss: 0.05763 | Regression loss: 0.00000 | Running loss: 0.26436
Epoch: 0 | Iteration: 292 | Classification loss: 0.05762 | Regression loss: 0.00000 | Running loss: 0.26366
Epoch: 0 | Iteration: 293 | Classification loss: 0.05764 | Regression loss: 0.00000 | Running loss: 0.26296
Epoch: 0 | Iteration: 294 | Classification loss: 0.05764 | Regression loss: 0.00000 | Running loss: 0.26226
Epoch: 0 | Iteration: 295 | Classification loss: 0.05765 | Regression loss: 0.00000 | Running loss: 0.26157
Epoch: 0 | Iteration: 296 | Classification loss: 0.05763 | Regression loss: 0.00000 | Running loss: 0.26088
Epoch: 0 | Iteration: 297 | Classification loss: 1.14020 | Regression loss: 1.25506 | Running loss: 0.26804
Epoch: 0 | Iteration: 298 | Classification loss: 0.05764 | Regression loss: 0.00000 | Running loss: 0.26734
Epoch: 0 | Iteration: 299 | Classification loss: 0.05760 | Regression loss: 0.00000 | Running loss: 0.26664
Epoch: 0 | Iteration: 300 | Classification loss: 0.05761 | Regression loss: 0.00000 | Running loss: 0.26595
Epoch: 0 | Iteration: 301 | Classification loss: 0.05762 | Regression loss: 0.00000 | Running loss: 0.26526
Epoch: 0 | Iteration: 302 | Classification loss: 0.05761 | Regression loss: 0.00000 | Running loss: 0.26457
Epoch: 0 | Iteration: 303 | Classification loss: 0.05763 | Regression loss: 0.00000 | Running loss: 0.26389
Epoch: 0 | Iteration: 304 | Classification loss: 0.05761 | Regression loss: 0.00000 | Running loss: 0.26321
Epoch: 0 | Iteration: 305 | Classification loss: 0.05760 | Regression loss: 0.00000 | Running loss: 0.26254
Epoch: 0 | Iteration: 306 | Classification loss: 0.05762 | Regression loss: 0.00000 | Running loss: 0.26187
Epoch: 0 | Iteration: 307 | Classification loss: 0.05761 | Regression loss: 0.00000 | Running loss: 0.26121
Epoch: 0 | Iteration: 308 | Classification loss: 0.05761 | Regression loss: 0.00000 | Running loss: 0.26055
Epoch: 0 | Iteration: 309 | Classification loss: 0.05763 | Regression loss: 0.00000 | Running loss: 0.25990
Epoch: 0 | Iteration: 310 | Classification loss: 0.05763 | Regression loss: 0.00000 | Running loss: 0.25925
Epoch: 0 | Iteration: 311 | Classification loss: 0.05763 | Regression loss: 0.00000 | Running loss: 0.25860
Epoch: 0 | Iteration: 312 | Classification loss: 0.05762 | Regression loss: 0.00000 | Running loss: 0.25796
Epoch: 0 | Iteration: 313 | Classification loss: 0.05762 | Regression loss: 0.00000 | Running loss: 0.25732
Epoch: 0 | Iteration: 314 | Classification loss: 0.05761 | Regression loss: 0.00000 | Running loss: 0.25669
Epoch: 0 | Iteration: 315 | Classification loss: 0.05763 | Regression loss: 0.00000 | Running loss: 0.25606
Epoch: 0 | Iteration: 316 | Classification loss: 0.05763 | Regression loss: 0.00000 | Running loss: 0.25543
Epoch: 0 | Iteration: 317 | Classification loss: 0.05762 | Regression loss: 0.00000 | Running loss: 0.25481
Epoch: 0 | Iteration: 318 | Classification loss: 0.05760 | Regression loss: 0.00000 | Running loss: 0.25419
Epoch: 0 | Iteration: 319 | Classification loss: 0.05761 | Regression loss: 0.00000 | Running loss: 0.25358
Epoch: 0 | Iteration: 320 | Classification loss: 0.05763 | Regression loss: 0.00000 | Running loss: 0.25297
Epoch: 0 | Iteration: 321 | Classification loss: 0.05764 | Regression loss: 0.00000 | Running loss: 0.25236
Epoch: 0 | Iteration: 322 | Classification loss: 1.14316 | Regression loss: 0.99270 | Running loss: 0.25819
Epoch: 0 | Iteration: 323 | Classification loss: 0.05762 | Regression loss: 0.00000 | Running loss: 0.25757
Epoch: 0 | Iteration: 324 | Classification loss: 0.05762 | Regression loss: 0.00000 | Running loss: 0.25696
Epoch: 0 | Iteration: 325 | Classification loss: 0.05760 | Regression loss: 0.00000 | Running loss: 0.25635
Epoch: 0 | Iteration: 326 | Classification loss: 0.05760 | Regression loss: 0.00000 | Running loss: 0.25574
Epoch: 0 | Iteration: 327 | Classification loss: 0.05761 | Regression loss: 0.00000 | Running loss: 0.25513
Epoch: 0 | Iteration: 328 | Classification loss: 1.14318 | Regression loss: 1.69289 | Running loss: 0.26298
Epoch: 0 | Iteration: 329 | Classification loss: 0.05758 | Regression loss: 0.00000 | Running loss: 0.26236
Epoch: 0 | Iteration: 330 | Classification loss: 0.05757 | Regression loss: 0.00000 | Running loss: 0.26174
Epoch: 0 | Iteration: 331 | Classification loss: 0.05759 | Regression loss: 0.00000 | Running loss: 0.26112
Epoch: 0 | Iteration: 332 | Classification loss: 0.05760 | Regression loss: 0.00000 | Running loss: 0.26051
Epoch: 0 | Iteration: 333 | Classification loss: 0.05760 | Regression loss: 0.00000 | Running loss: 0.25990
Epoch: 0 | Iteration: 334 | Classification loss: 0.05759 | Regression loss: 0.00000 | Running loss: 0.25930
Epoch: 0 | Iteration: 335 | Classification loss: 0.05761 | Regression loss: 0.00000 | Running loss: 0.25870
Epoch: 0 | Iteration: 336 | Classification loss: 0.05760 | Regression loss: 0.00000 | Running loss: 0.25810
Epoch: 0 | Iteration: 337 | Classification loss: 0.05759 | Regression loss: 0.00000 | Running loss: 0.25751
Epoch: 0 | Iteration: 338 | Classification loss: 0.05757 | Regression loss: 0.00000 | Running loss: 0.25692
Epoch: 0 | Iteration: 339 | Classification loss: 0.05756 | Regression loss: 0.00000 | Running loss: 0.25633
Epoch: 0 | Iteration: 340 | Classification loss: 0.05759 | Regression loss: 0.00000 | Running loss: 0.25575
Epoch: 0 | Iteration: 341 | Classification loss: 0.05759 | Regression loss: 0.00000 | Running loss: 0.25517
Epoch: 0 | Iteration: 342 | Classification loss: 0.05759 | Regression loss: 0.00000 | Running loss: 0.25460
Epoch: 0 | Iteration: 343 | Classification loss: 0.05761 | Regression loss: 0.00000 | Running loss: 0.25402
Epoch: 0 | Iteration: 344 | Classification loss: 1.13282 | Regression loss: 1.40962 | Running loss: 0.26066
Epoch: 0 | Iteration: 345 | Classification loss: 0.05757 | Regression loss: 0.00000 | Running loss: 0.26007
Epoch: 0 | Iteration: 346 | Classification loss: 0.05760 | Regression loss: 0.00000 | Running loss: 0.25949
Epoch: 0 | Iteration: 347 | Classification loss: 0.05759 | Regression loss: 0.00000 | Running loss: 0.25890
Epoch: 0 | Iteration: 348 | Classification loss: 1.13717 | Regression loss: 0.86607 | Running loss: 0.26390
Epoch: 0 | Iteration: 349 | Classification loss: 0.05761 | Regression loss: 0.00000 | Running loss: 0.26331
Epoch: 0 | Iteration: 350 | Classification loss: 0.05758 | Regression loss: 0.00000 | Running loss: 0.26273
Epoch: 0 | Iteration: 351 | Classification loss: 0.05759 | Regression loss: 0.00000 | Running loss: 0.26214
Epoch: 0 | Iteration: 352 | Classification loss: 0.05761 | Regression loss: 0.00000 | Running loss: 0.26157
Epoch: 0 | Iteration: 353 | Classification loss: 0.05759 | Regression loss: 0.00000 | Running loss: 0.26099
Epoch: 0 | Iteration: 354 | Classification loss: 0.05759 | Regression loss: 0.00000 | Running loss: 0.26042
Epoch: 0 | Iteration: 355 | Classification loss: 0.05759 | Regression loss: 0.00000 | Running loss: 0.25985
Epoch: 0 | Iteration: 356 | Classification loss: 0.05757 | Regression loss: 0.00000 | Running loss: 0.25928
Epoch: 0 | Iteration: 357 | Classification loss: 0.05757 | Regression loss: 0.00000 | Running loss: 0.25872
Epoch: 0 | Iteration: 358 | Classification loss: 0.05757 | Regression loss: 0.00000 | Running loss: 0.25816
Epoch: 0 | Iteration: 359 | Classification loss: 0.05758 | Regression loss: 0.00000 | Running loss: 0.25760
Epoch: 0 | Iteration: 360 | Classification loss: 0.05758 | Regression loss: 0.00000 | Running loss: 0.25704
Epoch: 0 | Iteration: 361 | Classification loss: 0.05756 | Regression loss: 0.00000 | Running loss: 0.25649
Epoch: 0 | Iteration: 362 | Classification loss: 0.05758 | Regression loss: 0.00000 | Running loss: 0.25595
Epoch: 0 | Iteration: 363 | Classification loss: 0.05756 | Regression loss: 0.00000 | Running loss: 0.25540
Epoch: 0 | Iteration: 364 | Classification loss: 0.05757 | Regression loss: 0.00000 | Running loss: 0.25486
Epoch: 0 | Iteration: 365 | Classification loss: 0.05758 | Regression loss: 0.00000 | Running loss: 0.25432
Epoch: 0 | Iteration: 366 | Classification loss: 0.05757 | Regression loss: 0.00000 | Running loss: 0.25378
Epoch: 0 | Iteration: 367 | Classification loss: 0.05759 | Regression loss: 0.00000 | Running loss: 0.25325
Epoch: 0 | Iteration: 368 | Classification loss: 0.05759 | Regression loss: 0.00000 | Running loss: 0.25272
Epoch: 0 | Iteration: 369 | Classification loss: 0.05756 | Regression loss: 0.00000 | Running loss: 0.25219
Epoch: 0 | Iteration: 370 | Classification loss: 0.05755 | Regression loss: 0.00000 | Running loss: 0.25167
Epoch: 0 | Iteration: 371 | Classification loss: 0.05758 | Regression loss: 0.00000 | Running loss: 0.25115
Epoch: 0 | Iteration: 372 | Classification loss: 0.05759 | Regression loss: 0.00000 | Running loss: 0.25063
Epoch: 0 | Iteration: 373 | Classification loss: 0.05755 | Regression loss: 0.00000 | Running loss: 0.25011
Epoch: 0 | Iteration: 374 | Classification loss: 1.13177 | Regression loss: 0.90282 | Running loss: 0.25487
Epoch: 0 | Iteration: 375 | Classification loss: 0.05759 | Regression loss: 0.00000 | Running loss: 0.25435
Epoch: 0 | Iteration: 376 | Classification loss: 0.05757 | Regression loss: 0.00000 | Running loss: 0.25382
Epoch: 0 | Iteration: 377 | Classification loss: 0.05759 | Regression loss: 0.00000 | Running loss: 0.25330
Epoch: 0 | Iteration: 378 | Classification loss: 0.05755 | Regression loss: 0.00000 | Running loss: 0.25279
Epoch: 0 | Iteration: 379 | Classification loss: 0.05759 | Regression loss: 0.00000 | Running loss: 0.25227
Epoch: 0 | Iteration: 380 | Classification loss: 0.05757 | Regression loss: 0.00000 | Running loss: 0.25176
Epoch: 0 | Iteration: 381 | Classification loss: 0.05755 | Regression loss: 0.00000 | Running loss: 0.25125
Epoch: 0 | Iteration: 382 | Classification loss: 0.05757 | Regression loss: 0.00000 | Running loss: 0.25075
Epoch: 0 | Iteration: 383 | Classification loss: 0.05758 | Regression loss: 0.00000 | Running loss: 0.25025
Epoch: 0 | Iteration: 384 | Classification loss: 0.05754 | Regression loss: 0.00000 | Running loss: 0.24975
Epoch: 0 | Iteration: 385 | Classification loss: 0.05758 | Regression loss: 0.00000 | Running loss: 0.24925
Epoch: 0 | Iteration: 386 | Classification loss: 0.05757 | Regression loss: 0.00000 | Running loss: 0.24875
Epoch: 0 | Iteration: 387 | Classification loss: 0.05754 | Regression loss: 0.00000 | Running loss: 0.24826
Epoch: 0 | Iteration: 388 | Classification loss: 0.05754 | Regression loss: 0.00000 | Running loss: 0.24777
Epoch: 0 | Iteration: 389 | Classification loss: 0.05753 | Regression loss: 0.00000 | Running loss: 0.24728
Epoch: 0 | Iteration: 390 | Classification loss: 0.05756 | Regression loss: 0.00000 | Running loss: 0.24680
Epoch: 0 | Iteration: 391 | Classification loss: 0.05756 | Regression loss: 0.00000 | Running loss: 0.24631
Epoch: 0 | Iteration: 392 | Classification loss: 0.05754 | Regression loss: 0.00000 | Running loss: 0.24583
Epoch: 0 | Iteration: 393 | Classification loss: 0.05753 | Regression loss: 0.00000 | Running loss: 0.24535
Epoch: 0 | Iteration: 394 | Classification loss: 0.05757 | Regression loss: 0.00000 | Running loss: 0.24488
Epoch: 0 | Iteration: 395 | Classification loss: 0.05756 | Regression loss: 0.00000 | Running loss: 0.24441
Epoch: 0 | Iteration: 396 | Classification loss: 0.05755 | Regression loss: 0.00000 | Running loss: 0.24394
Epoch: 0 | Iteration: 397 | Classification loss: 0.05757 | Regression loss: 0.00000 | Running loss: 0.24347
Epoch: 0 | Iteration: 398 | Classification loss: 0.05753 | Regression loss: 0.00000 | Running loss: 0.24300
Epoch: 0 | Iteration: 399 | Classification loss: 0.05758 | Regression loss: 0.00000 | Running loss: 0.24254
Epoch: 0 | Iteration: 400 | Classification loss: 0.05755 | Regression loss: 0.00000 | Running loss: 0.24208
Epoch: 0 | Iteration: 401 | Classification loss: 0.05757 | Regression loss: 0.00000 | Running loss: 0.24162
Epoch: 0 | Iteration: 402 | Classification loss: 0.05754 | Regression loss: 0.00000 | Running loss: 0.24116
Epoch: 0 | Iteration: 403 | Classification loss: 0.05754 | Regression loss: 0.00000 | Running loss: 0.24071
Epoch: 0 | Iteration: 404 | Classification loss: 0.05754 | Regression loss: 0.00000 | Running loss: 0.24025
Epoch: 0 | Iteration: 405 | Classification loss: 0.05755 | Regression loss: 0.00000 | Running loss: 0.23980
Epoch: 0 | Iteration: 406 | Classification loss: 0.05753 | Regression loss: 0.00000 | Running loss: 0.23936
Epoch: 0 | Iteration: 407 | Classification loss: 0.05755 | Regression loss: 0.00000 | Running loss: 0.23891
Epoch: 0 | Iteration: 408 | Classification loss: 0.05754 | Regression loss: 0.00000 | Running loss: 0.23847
Epoch: 0 | Iteration: 409 | Classification loss: 0.05753 | Regression loss: 0.00000 | Running loss: 0.23803
Epoch: 0 | Iteration: 410 | Classification loss: 0.05757 | Regression loss: 0.00000 | Running loss: 0.23759
Epoch: 0 | Iteration: 411 | Classification loss: 0.05754 | Regression loss: 0.00000 | Running loss: 0.23715
Epoch: 0 | Iteration: 412 | Classification loss: 0.05758 | Regression loss: 0.00000 | Running loss: 0.23672
Epoch: 0 | Iteration: 413 | Classification loss: 0.05754 | Regression loss: 0.00000 | Running loss: 0.23628
Epoch: 0 | Iteration: 414 | Classification loss: 0.05751 | Regression loss: 0.00000 | Running loss: 0.23585
Epoch: 0 | Iteration: 415 | Classification loss: 0.05755 | Regression loss: 0.00000 | Running loss: 0.23542
Epoch: 0 | Iteration: 416 | Classification loss: 0.05758 | Regression loss: 0.00000 | Running loss: 0.23500
Epoch: 0 | Iteration: 417 | Classification loss: 0.05756 | Regression loss: 0.00000 | Running loss: 0.23457
Epoch: 0 | Iteration: 418 | Classification loss: 0.05753 | Regression loss: 0.00000 | Running loss: 0.23415
Epoch: 0 | Iteration: 419 | Classification loss: 0.05750 | Regression loss: 0.00000 | Running loss: 0.23373
Epoch: 0 | Iteration: 420 | Classification loss: 0.05755 | Regression loss: 0.00000 | Running loss: 0.23331
Epoch: 0 | Iteration: 421 | Classification loss: 0.05753 | Regression loss: 0.00000 | Running loss: 0.23289
Epoch: 0 | Iteration: 422 | Classification loss: 0.05753 | Regression loss: 0.00000 | Running loss: 0.23248
Epoch: 0 | Iteration: 423 | Classification loss: 0.05755 | Regression loss: 0.00000 | Running loss: 0.23207
Epoch: 0 | Iteration: 424 | Classification loss: 0.05757 | Regression loss: 0.00000 | Running loss: 0.23166
Epoch: 0 | Iteration: 425 | Classification loss: 0.05757 | Regression loss: 0.00000 | Running loss: 0.23125
Epoch: 0 | Iteration: 426 | Classification loss: 0.05753 | Regression loss: 0.00000 | Running loss: 0.23084
Epoch: 0 | Iteration: 427 | Classification loss: 0.05753 | Regression loss: 0.00000 | Running loss: 0.23044
Epoch: 0 | Iteration: 428 | Classification loss: 0.05755 | Regression loss: 0.00000 | Running loss: 0.23003
Epoch: 0 | Iteration: 429 | Classification loss: 0.05753 | Regression loss: 0.00000 | Running loss: 0.22963
Epoch: 0 | Iteration: 430 | Classification loss: 0.05753 | Regression loss: 0.00000 | Running loss: 0.22923
Epoch: 0 | Iteration: 431 | Classification loss: 0.05752 | Regression loss: 0.00000 | Running loss: 0.22883
Epoch: 0 | Iteration: 432 | Classification loss: 0.05751 | Regression loss: 0.00000 | Running loss: 0.22844
Epoch: 0 | Iteration: 433 | Classification loss: 0.05752 | Regression loss: 0.00000 | Running loss: 0.22805
Epoch: 0 | Iteration: 434 | Classification loss: 0.05755 | Regression loss: 0.00000 | Running loss: 0.22765
Epoch: 0 | Iteration: 435 | Classification loss: 0.05752 | Regression loss: 0.00000 | Running loss: 0.22726
Epoch: 0 | Iteration: 436 | Classification loss: 0.05755 | Regression loss: 0.00000 | Running loss: 0.22687
Epoch: 0 | Iteration: 437 | Classification loss: 0.05755 | Regression loss: 0.00000 | Running loss: 0.22649
Epoch: 0 | Iteration: 438 | Classification loss: 0.05753 | Regression loss: 0.00000 | Running loss: 0.22610
Epoch: 0 | Iteration: 439 | Classification loss: 0.05755 | Regression loss: 0.00000 | Running loss: 0.22572
Epoch: 0 | Iteration: 440 | Classification loss: 0.05753 | Regression loss: 0.00000 | Running loss: 0.22534
Epoch: 0 | Iteration: 441 | Classification loss: 0.05754 | Regression loss: 0.00000 | Running loss: 0.22496
Epoch: 0 | Iteration: 442 | Classification loss: 0.05757 | Regression loss: 0.00000 | Running loss: 0.22458
Epoch: 0 | Iteration: 443 | Classification loss: 0.05747 | Regression loss: 0.00000 | Running loss: 0.22420
Epoch: 0 | Iteration: 444 | Classification loss: 0.05754 | Regression loss: 0.00000 | Running loss: 0.22383
Epoch: 0 | Iteration: 445 | Classification loss: 0.05753 | Regression loss: 0.00000 | Running loss: 0.22346
Epoch: 0 | Iteration: 446 | Classification loss: 0.05747 | Regression loss: 0.00000 | Running loss: 0.22309
Epoch: 0 | Iteration: 447 | Classification loss: 0.05751 | Regression loss: 0.00000 | Running loss: 0.22272
Epoch: 0 | Iteration: 448 | Classification loss: 0.05753 | Regression loss: 0.00000 | Running loss: 0.22235
Epoch: 0 | Iteration: 449 | Classification loss: 0.05755 | Regression loss: 0.00000 | Running loss: 0.22198
Epoch: 0 | Iteration: 450 | Classification loss: 0.05751 | Regression loss: 0.00000 | Running loss: 0.22162
Epoch: 0 | Iteration: 451 | Classification loss: 1.14331 | Regression loss: 1.14499 | Running loss: 0.22619
Epoch: 0 | Iteration: 452 | Classification loss: 0.05755 | Regression loss: 0.00000 | Running loss: 0.22582
Epoch: 0 | Iteration: 453 | Classification loss: 0.05752 | Regression loss: 0.00000 | Running loss: 0.22545
Epoch: 0 | Iteration: 454 | Classification loss: 0.05752 | Regression loss: 0.00000 | Running loss: 0.22508
Epoch: 0 | Iteration: 455 | Classification loss: 0.05751 | Regression loss: 0.00000 | Running loss: 0.22471
Epoch: 0 | Iteration: 456 | Classification loss: 1.14052 | Regression loss: 1.11977 | Running loss: 0.22916
Epoch: 0 | Iteration: 457 | Classification loss: 0.05748 | Regression loss: 0.00000 | Running loss: 0.22879
Epoch: 0 | Iteration: 458 | Classification loss: 0.05749 | Regression loss: 0.00000 | Running loss: 0.22842
Epoch: 0 | Iteration: 459 | Classification loss: 0.05750 | Regression loss: 0.00000 | Running loss: 0.22805
Epoch: 0 | Iteration: 460 | Classification loss: 0.05752 | Regression loss: 0.00000 | Running loss: 0.22768
Epoch: 0 | Iteration: 461 | Classification loss: 0.05748 | Regression loss: 0.00000 | Running loss: 0.22731
Epoch: 0 | Iteration: 462 | Classification loss: 0.05750 | Regression loss: 0.00000 | Running loss: 0.22694
Epoch: 0 | Iteration: 463 | Classification loss: 0.05754 | Regression loss: 0.00000 | Running loss: 0.22658
Epoch: 0 | Iteration: 464 | Classification loss: 0.05751 | Regression loss: 0.00000 | Running loss: 0.22621
Epoch: 0 | Iteration: 465 | Classification loss: 0.05747 | Regression loss: 0.00000 | Running loss: 0.22585
Epoch: 0 | Iteration: 466 | Classification loss: 0.05750 | Regression loss: 0.00000 | Running loss: 0.22549
Epoch: 0 | Iteration: 467 | Classification loss: 0.05746 | Regression loss: 0.00000 | Running loss: 0.22513
Epoch: 0 | Iteration: 468 | Classification loss: 0.05752 | Regression loss: 0.00000 | Running loss: 0.22477
Epoch: 0 | Iteration: 469 | Classification loss: 0.05750 | Regression loss: 0.00000 | Running loss: 0.22442
Epoch: 0 | Iteration: 470 | Classification loss: 0.05753 | Regression loss: 0.00000 | Running loss: 0.22406
Epoch: 0 | Iteration: 471 | Classification loss: 0.05747 | Regression loss: 0.00000 | Running loss: 0.22371
Epoch: 0 | Iteration: 472 | Classification loss: 0.05747 | Regression loss: 0.00000 | Running loss: 0.22336
Epoch: 0 | Iteration: 473 | Classification loss: 0.05748 | Regression loss: 0.00000 | Running loss: 0.22301
Epoch: 0 | Iteration: 474 | Classification loss: 0.05748 | Regression loss: 0.00000 | Running loss: 0.22266
Epoch: 0 | Iteration: 475 | Classification loss: 0.05750 | Regression loss: 0.00000 | Running loss: 0.22231
Epoch: 0 | Iteration: 476 | Classification loss: 0.05752 | Regression loss: 0.00000 | Running loss: 0.22197
Epoch: 0 | Iteration: 477 | Classification loss: 0.05755 | Regression loss: 0.00000 | Running loss: 0.22162
Epoch: 0 | Iteration: 478 | Classification loss: 0.05748 | Regression loss: 0.00000 | Running loss: 0.22128
Epoch: 0 | Iteration: 479 | Classification loss: 0.05749 | Regression loss: 0.00000 | Running loss: 0.22094
Epoch: 0 | Iteration: 480 | Classification loss: 1.18685 | Regression loss: 1.13770 | Running loss: 0.22531
Epoch: 0 | Iteration: 481 | Classification loss: 0.05751 | Regression loss: 0.00000 | Running loss: 0.22496
Epoch: 0 | Iteration: 482 | Classification loss: 0.05746 | Regression loss: 0.00000 | Running loss: 0.22462
Epoch: 0 | Iteration: 483 | Classification loss: 0.05750 | Regression loss: 0.00000 | Running loss: 0.22427
Epoch: 0 | Iteration: 484 | Classification loss: 0.05746 | Regression loss: 0.00000 | Running loss: 0.22393
Epoch: 0 | Iteration: 485 | Classification loss: 0.05749 | Regression loss: 0.00000 | Running loss: 0.22359
Epoch: 0 | Iteration: 486 | Classification loss: 0.05750 | Regression loss: 0.00000 | Running loss: 0.22324
Epoch: 0 | Iteration: 487 | Classification loss: 0.05751 | Regression loss: 0.00000 | Running loss: 0.22291
Epoch: 0 | Iteration: 488 | Classification loss: 0.05746 | Regression loss: 0.00000 | Running loss: 0.22257
Epoch: 0 | Iteration: 489 | Classification loss: 0.05749 | Regression loss: 0.00000 | Running loss: 0.22223
Epoch: 0 | Iteration: 490 | Classification loss: 0.05748 | Regression loss: 0.00000 | Running loss: 0.22189
Epoch: 0 | Iteration: 491 | Classification loss: 0.05752 | Regression loss: 0.00000 | Running loss: 0.22156
Epoch: 0 | Iteration: 492 | Classification loss: 0.05747 | Regression loss: 0.00000 | Running loss: 0.22123
Epoch: 0 | Iteration: 493 | Classification loss: 0.05746 | Regression loss: 0.00000 | Running loss: 0.22090
Epoch: 0 | Iteration: 494 | Classification loss: 0.05749 | Regression loss: 0.00000 | Running loss: 0.22057
Epoch: 0 | Iteration: 495 | Classification loss: 1.13314 | Regression loss: 1.15417 | Running loss: 0.22473
Epoch: 0 | Iteration: 496 | Classification loss: 0.05747 | Regression loss: 0.00000 | Running loss: 0.22440
Epoch: 0 | Iteration: 497 | Classification loss: 0.05751 | Regression loss: 0.00000 | Running loss: 0.22406
Epoch: 0 | Iteration: 498 | Classification loss: 0.05748 | Regression loss: 0.00000 | Running loss: 0.22373
Epoch: 0 | Iteration: 499 | Classification loss: 0.05746 | Regression loss: 0.00000 | Running loss: 0.22339
Epoch: 0 | Iteration: 500 | Classification loss: 0.05745 | Regression loss: 0.00000 | Running loss: 0.22339
Epoch: 0 | Iteration: 501 | Classification loss: 0.05746 | Regression loss: 0.00000 | Running loss: 0.22339
Epoch: 0 | Iteration: 502 | Classification loss: 0.05749 | Regression loss: 0.00000 | Running loss: 0.22339
Epoch: 0 | Iteration: 503 | Classification loss: 0.05747 | Regression loss: 0.00000 | Running loss: 0.22339
Epoch: 0 | Iteration: 504 | Classification loss: 0.05748 | Regression loss: 0.00000 | Running loss: 0.22339
Epoch: 0 | Iteration: 505 | Classification loss: 0.05748 | Regression loss: 0.00000 | Running loss: 0.22339
Epoch: 0 | Iteration: 506 | Classification loss: 0.05750 | Regression loss: 0.00000 | Running loss: 0.21864
Epoch: 0 | Iteration: 507 | Classification loss: 0.05745 | Regression loss: 0.00000 | Running loss: 0.21864
Epoch: 0 | Iteration: 508 | Classification loss: 1.15807 | Regression loss: 1.51496 | Running loss: 0.22387
Epoch: 0 | Iteration: 509 | Classification loss: 0.05744 | Regression loss: 0.00000 | Running loss: 0.22387
Epoch: 0 | Iteration: 510 | Classification loss: 0.05745 | Regression loss: 0.00000 | Running loss: 0.22387
Epoch: 0 | Iteration: 511 | Classification loss: 0.05744 | Regression loss: 0.00000 | Running loss: 0.22387
Epoch: 0 | Iteration: 512 | Classification loss: 0.05748 | Regression loss: 0.00000 | Running loss: 0.22387
Epoch: 0 | Iteration: 513 | Classification loss: 0.05748 | Regression loss: 0.00000 | Running loss: 0.22387
Epoch: 0 | Iteration: 514 | Classification loss: 0.05744 | Regression loss: 0.00000 | Running loss: 0.22387
Epoch: 0 | Iteration: 515 | Classification loss: 0.05746 | Regression loss: 0.00000 | Running loss: 0.22386
Epoch: 0 | Iteration: 516 | Classification loss: 0.05750 | Regression loss: 0.00000 | Running loss: 0.22386
Epoch: 0 | Iteration: 517 | Classification loss: 0.05744 | Regression loss: 0.00000 | Running loss: 0.22386
Epoch: 0 | Iteration: 518 | Classification loss: 0.05744 | Regression loss: 0.00000 | Running loss: 0.22386
Epoch: 0 | Iteration: 519 | Classification loss: 0.05744 | Regression loss: 0.00000 | Running loss: 0.22386
Epoch: 0 | Iteration: 520 | Classification loss: 0.05744 | Regression loss: 0.00000 | Running loss: 0.21984
Epoch: 0 | Iteration: 521 | Classification loss: 0.05749 | Regression loss: 0.00000 | Running loss: 0.21984
Epoch: 0 | Iteration: 522 | Classification loss: 0.05746 | Regression loss: 0.00000 | Running loss: 0.21984
Epoch: 0 | Iteration: 523 | Classification loss: 0.05742 | Regression loss: 0.00000 | Running loss: 0.21984
Epoch: 0 | Iteration: 524 | Classification loss: 0.05748 | Regression loss: 0.00000 | Running loss: 0.21984
Epoch: 0 | Iteration: 525 | Classification loss: 0.05746 | Regression loss: 0.00000 | Running loss: 0.21984
Epoch: 0 | Iteration: 526 | Classification loss: 0.05743 | Regression loss: 0.00000 | Running loss: 0.21984
Epoch: 0 | Iteration: 527 | Classification loss: 0.05750 | Regression loss: 0.00000 | Running loss: 0.21984
Epoch: 0 | Iteration: 528 | Classification loss: 0.05747 | Regression loss: 0.00000 | Running loss: 0.21984
Epoch: 0 | Iteration: 529 | Classification loss: 0.05747 | Regression loss: 0.00000 | Running loss: 0.21984
Epoch: 0 | Iteration: 530 | Classification loss: 0.05747 | Regression loss: 0.00000 | Running loss: 0.21517
Epoch: 0 | Iteration: 531 | Classification loss: 0.05747 | Regression loss: 0.00000 | Running loss: 0.21517
Epoch: 0 | Iteration: 532 | Classification loss: 0.05746 | Regression loss: 0.00000 | Running loss: 0.21517
Epoch: 0 | Iteration: 533 | Classification loss: 0.05739 | Regression loss: 0.00000 | Running loss: 0.21517
Epoch: 0 | Iteration: 534 | Classification loss: 0.05747 | Regression loss: 0.00000 | Running loss: 0.21517
Epoch: 0 | Iteration: 535 | Classification loss: 1.14048 | Regression loss: 1.20675 | Running loss: 0.21975
Epoch: 0 | Iteration: 536 | Classification loss: 0.05749 | Regression loss: 0.00000 | Running loss: 0.21975
Epoch: 0 | Iteration: 537 | Classification loss: 0.05742 | Regression loss: 0.00000 | Running loss: 0.21974
Epoch: 0 | Iteration: 538 | Classification loss: 1.18663 | Regression loss: 0.72234 | Running loss: 0.22345
Epoch: 0 | Iteration: 539 | Classification loss: 0.05748 | Regression loss: 0.00000 | Running loss: 0.22345
Epoch: 0 | Iteration: 540 | Classification loss: 0.05741 | Regression loss: 0.00000 | Running loss: 0.22345
Epoch: 0 | Iteration: 541 | Classification loss: 0.05745 | Regression loss: 0.00000 | Running loss: 0.22344
Epoch: 0 | Iteration: 542 | Classification loss: 0.05746 | Regression loss: 0.00000 | Running loss: 0.22344
Epoch: 0 | Iteration: 543 | Classification loss: 0.05743 | Regression loss: 0.00000 | Running loss: 0.22344
Epoch: 0 | Iteration: 544 | Classification loss: 0.05747 | Regression loss: 0.00000 | Running loss: 0.22344
Epoch: 0 | Iteration: 545 | Classification loss: 0.05741 | Regression loss: 0.00000 | Running loss: 0.21936
Epoch: 0 | Iteration: 546 | Classification loss: 0.05742 | Regression loss: 0.00000 | Running loss: 0.21935
Epoch: 0 | Iteration: 547 | Classification loss: 0.05742 | Regression loss: 0.00000 | Running loss: 0.21935
Epoch: 0 | Iteration: 548 | Classification loss: 0.05745 | Regression loss: 0.00000 | Running loss: 0.21935
Epoch: 0 | Iteration: 549 | Classification loss: 1.13374 | Regression loss: 1.15286 | Running loss: 0.22381
Epoch: 0 | Iteration: 550 | Classification loss: 0.05742 | Regression loss: 0.00000 | Running loss: 0.22381
Epoch: 0 | Iteration: 551 | Classification loss: 0.05742 | Regression loss: 0.00000 | Running loss: 0.22381
Epoch: 0 | Iteration: 552 | Classification loss: 0.05746 | Regression loss: 0.00000 | Running loss: 0.22381
Epoch: 0 | Iteration: 553 | Classification loss: 0.05741 | Regression loss: 0.00000 | Running loss: 0.21881
Epoch: 0 | Iteration: 554 | Classification loss: 0.05745 | Regression loss: 0.00000 | Running loss: 0.21881
Epoch: 0 | Iteration: 555 | Classification loss: 0.05744 | Regression loss: 0.00000 | Running loss: 0.21881
Epoch: 0 | Iteration: 556 | Classification loss: 0.05743 | Regression loss: 0.00000 | Running loss: 0.21881
Epoch: 0 | Iteration: 557 | Classification loss: 0.05743 | Regression loss: 0.00000 | Running loss: 0.21881
Epoch: 0 | Iteration: 558 | Classification loss: 0.05740 | Regression loss: 0.00000 | Running loss: 0.21881
Epoch: 0 | Iteration: 559 | Classification loss: 1.14846 | Regression loss: 1.35676 | Running loss: 0.22370
Epoch: 0 | Iteration: 560 | Classification loss: 0.05740 | Regression loss: 0.00000 | Running loss: 0.22370
Epoch: 0 | Iteration: 561 | Classification loss: 0.05742 | Regression loss: 0.00000 | Running loss: 0.22370
Epoch: 0 | Iteration: 562 | Classification loss: 0.05748 | Regression loss: 0.00000 | Running loss: 0.22370
Epoch: 0 | Iteration: 563 | Classification loss: 0.05741 | Regression loss: 0.00000 | Running loss: 0.22370
Epoch: 0 | Iteration: 564 | Classification loss: 0.05741 | Regression loss: 0.00000 | Running loss: 0.22370
Epoch: 0 | Iteration: 565 | Classification loss: 0.05746 | Regression loss: 0.00000 | Running loss: 0.22370
Epoch: 0 | Iteration: 566 | Classification loss: 0.05746 | Regression loss: 0.00000 | Running loss: 0.22370
Epoch: 0 | Iteration: 567 | Classification loss: 0.05742 | Regression loss: 0.00000 | Running loss: 0.22370
Epoch: 0 | Iteration: 568 | Classification loss: 0.05740 | Regression loss: 0.00000 | Running loss: 0.22370
Epoch: 0 | Iteration: 569 | Classification loss: 0.05744 | Regression loss: 0.00000 | Running loss: 0.22369
Epoch: 0 | Iteration: 570 | Classification loss: 0.05739 | Regression loss: 0.00000 | Running loss: 0.22369
Epoch: 0 | Iteration: 571 | Classification loss: 0.05745 | Regression loss: 0.00000 | Running loss: 0.22369
Epoch: 0 | Iteration: 572 | Classification loss: 0.05739 | Regression loss: 0.00000 | Running loss: 0.22369
Epoch: 0 | Iteration: 573 | Classification loss: 0.05740 | Regression loss: 0.00000 | Running loss: 0.22369
Epoch: 0 | Iteration: 574 | Classification loss: 0.05744 | Regression loss: 0.00000 | Running loss: 0.22369
Epoch: 0 | Iteration: 575 | Classification loss: 0.05740 | Regression loss: 0.00000 | Running loss: 0.22369
Epoch: 0 | Iteration: 576 | Classification loss: 0.05737 | Regression loss: 0.00000 | Running loss: 0.22369
Epoch: 0 | Iteration: 577 | Classification loss: 0.05742 | Regression loss: 0.00000 | Running loss: 0.22369
Epoch: 0 | Iteration: 578 | Classification loss: 0.05739 | Regression loss: 0.00000 | Running loss: 0.22369
Epoch: 0 | Iteration: 579 | Classification loss: 0.05742 | Regression loss: 0.00000 | Running loss: 0.22369
Epoch: 0 | Iteration: 580 | Classification loss: 0.05742 | Regression loss: 0.00000 | Running loss: 0.22369
Epoch: 0 | Iteration: 581 | Classification loss: 0.05746 | Regression loss: 0.00000 | Running loss: 0.21960
Epoch: 0 | Iteration: 582 | Classification loss: 0.05741 | Regression loss: 0.00000 | Running loss: 0.21960
Epoch: 0 | Iteration: 583 | Classification loss: 0.05742 | Regression loss: 0.00000 | Running loss: 0.21960
Epoch: 0 | Iteration: 584 | Classification loss: 0.05744 | Regression loss: 0.00000 | Running loss: 0.21959
Epoch: 0 | Iteration: 585 | Classification loss: 0.05742 | Regression loss: 0.00000 | Running loss: 0.21959
Epoch: 0 | Iteration: 586 | Classification loss: 0.05744 | Regression loss: 0.00000 | Running loss: 0.21959
Epoch: 0 | Iteration: 587 | Classification loss: 0.05739 | Regression loss: 0.00000 | Running loss: 0.21959
Epoch: 0 | Iteration: 588 | Classification loss: 0.05742 | Regression loss: 0.00000 | Running loss: 0.21959
Epoch: 0 | Iteration: 589 | Classification loss: 0.05743 | Regression loss: 0.00000 | Running loss: 0.21959
Epoch: 0 | Iteration: 590 | Classification loss: 0.05739 | Regression loss: 0.00000 | Running loss: 0.21959
Epoch: 0 | Iteration: 591 | Classification loss: 0.05738 | Regression loss: 0.00000 | Running loss: 0.21959
Epoch: 0 | Iteration: 592 | Classification loss: 0.05739 | Regression loss: 0.00000 | Running loss: 0.21959
Epoch: 0 | Iteration: 593 | Classification loss: 0.05741 | Regression loss: 0.00000 | Running loss: 0.21959
Epoch: 0 | Iteration: 594 | Classification loss: 0.05741 | Regression loss: 0.00000 | Running loss: 0.21959
Epoch: 0 | Iteration: 595 | Classification loss: 0.05739 | Regression loss: 0.00000 | Running loss: 0.21959
Epoch: 0 | Iteration: 596 | Classification loss: 0.05745 | Regression loss: 0.00000 | Running loss: 0.21482
Epoch: 0 | Iteration: 597 | Classification loss: 0.05740 | Regression loss: 0.00000 | Running loss: 0.21482
Epoch: 0 | Iteration: 598 | Classification loss: 0.05745 | Regression loss: 0.00000 | Running loss: 0.21482
Epoch: 0 | Iteration: 599 | Classification loss: 0.05736 | Regression loss: 0.00000 | Running loss: 0.21482
Epoch: 0 | Iteration: 600 | Classification loss: 0.05741 | Regression loss: 0.00000 | Running loss: 0.21059
Epoch: 0 | Iteration: 601 | Classification loss: 0.05743 | Regression loss: 0.00000 | Running loss: 0.21059
Epoch: 0 | Iteration: 602 | Classification loss: 0.05740 | Regression loss: 0.00000 | Running loss: 0.21059
Epoch: 0 | Iteration: 603 | Classification loss: 0.05736 | Regression loss: 0.00000 | Running loss: 0.21059
Epoch: 0 | Iteration: 604 | Classification loss: 0.05737 | Regression loss: 0.00000 | Running loss: 0.21059
Epoch: 0 | Iteration: 605 | Classification loss: 0.05741 | Regression loss: 0.00000 | Running loss: 0.21059
Epoch: 0 | Iteration: 606 | Classification loss: 0.05742 | Regression loss: 0.00000 | Running loss: 0.21059
Epoch: 0 | Iteration: 607 | Classification loss: 0.05744 | Regression loss: 0.00000 | Running loss: 0.21059
Epoch: 0 | Iteration: 608 | Classification loss: 0.05742 | Regression loss: 0.00000 | Running loss: 0.20597
Epoch: 0 | Iteration: 609 | Classification loss: 0.05736 | Regression loss: 0.00000 | Running loss: 0.20597
Epoch: 0 | Iteration: 610 | Classification loss: 0.05739 | Regression loss: 0.00000 | Running loss: 0.20597
Epoch: 0 | Iteration: 611 | Classification loss: 0.05740 | Regression loss: 0.00000 | Running loss: 0.20597
Epoch: 0 | Iteration: 612 | Classification loss: 0.05744 | Regression loss: 0.00000 | Running loss: 0.20596
Epoch: 0 | Iteration: 613 | Classification loss: 1.14065 | Regression loss: 1.45713 | Running loss: 0.21105
Epoch: 0 | Iteration: 614 | Classification loss: 0.05740 | Regression loss: 0.00000 | Running loss: 0.21104
Epoch: 0 | Iteration: 615 | Classification loss: 0.05735 | Regression loss: 0.00000 | Running loss: 0.21104
Epoch: 0 | Iteration: 616 | Classification loss: 0.05737 | Regression loss: 0.00000 | Running loss: 0.21104
Epoch: 0 | Iteration: 617 | Classification loss: 1.15855 | Regression loss: 1.10717 | Running loss: 0.21546
Epoch: 0 | Iteration: 618 | Classification loss: 0.05738 | Regression loss: 0.00000 | Running loss: 0.21546
Epoch: 0 | Iteration: 619 | Classification loss: 0.05737 | Regression loss: 0.00000 | Running loss: 0.21546
Epoch: 0 | Iteration: 620 | Classification loss: 0.05742 | Regression loss: 0.00000 | Running loss: 0.21546
Epoch: 0 | Iteration: 621 | Classification loss: 0.05741 | Regression loss: 0.00000 | Running loss: 0.21546
Epoch: 0 | Iteration: 622 | Classification loss: 0.05743 | Regression loss: 0.00000 | Running loss: 0.21546
Epoch: 0 | Iteration: 623 | Classification loss: 0.05734 | Regression loss: 0.00000 | Running loss: 0.21545
Epoch: 0 | Iteration: 624 | Classification loss: 0.05734 | Regression loss: 0.00000 | Running loss: 0.21025
Epoch: 0 | Iteration: 625 | Classification loss: 0.05741 | Regression loss: 0.00000 | Running loss: 0.21025
Epoch: 0 | Iteration: 626 | Classification loss: 0.05737 | Regression loss: 0.00000 | Running loss: 0.21025
Epoch: 0 | Iteration: 627 | Classification loss: 0.05740 | Regression loss: 0.00000 | Running loss: 0.21025
Epoch: 0 | Iteration: 628 | Classification loss: 0.05737 | Regression loss: 0.00000 | Running loss: 0.21025
Epoch: 0 | Iteration: 629 | Classification loss: 0.05736 | Regression loss: 0.00000 | Running loss: 0.21025
Epoch: 0 | Iteration: 630 | Classification loss: 0.05734 | Regression loss: 0.00000 | Running loss: 0.21025
Epoch: 0 | Iteration: 631 | Classification loss: 0.05734 | Regression loss: 0.00000 | Running loss: 0.20537
Epoch: 0 | Iteration: 632 | Classification loss: 0.05737 | Regression loss: 0.00000 | Running loss: 0.20537
Epoch: 0 | Iteration: 633 | Classification loss: 0.05743 | Regression loss: 0.00000 | Running loss: 0.20537
Epoch: 0 | Iteration: 634 | Classification loss: 0.05739 | Regression loss: 0.00000 | Running loss: 0.20105
Epoch: 0 | Iteration: 635 | Classification loss: 0.05738 | Regression loss: 0.00000 | Running loss: 0.20105
Epoch: 0 | Iteration: 636 | Classification loss: 0.05741 | Regression loss: 0.00000 | Running loss: 0.20105
Epoch: 0 | Iteration: 637 | Classification loss: 0.05742 | Regression loss: 0.00000 | Running loss: 0.20104
Epoch: 0 | Iteration: 638 | Classification loss: 0.05738 | Regression loss: 0.00000 | Running loss: 0.20104
Epoch: 0 | Iteration: 639 | Classification loss: 1.18624 | Regression loss: 0.92016 | Running loss: 0.20514
Epoch: 0 | Iteration: 640 | Classification loss: 1.13527 | Regression loss: 1.32771 | Running loss: 0.20995
Epoch: 0 | Iteration: 641 | Classification loss: 0.05741 | Regression loss: 0.00000 | Running loss: 0.20995
Epoch: 0 | Iteration: 642 | Classification loss: 0.05737 | Regression loss: 0.00000 | Running loss: 0.20995
Epoch: 0 | Iteration: 643 | Classification loss: 0.05738 | Regression loss: 0.00000 | Running loss: 0.20995
Epoch: 0 | Iteration: 644 | Classification loss: 0.05737 | Regression loss: 0.00000 | Running loss: 0.20995
Epoch: 0 | Iteration: 645 | Classification loss: 0.05737 | Regression loss: 0.00000 | Running loss: 0.20570
Epoch: 0 | Iteration: 646 | Classification loss: 0.05736 | Regression loss: 0.00000 | Running loss: 0.20570
Epoch: 0 | Iteration: 647 | Classification loss: 0.05735 | Regression loss: 0.00000 | Running loss: 0.20570
Epoch: 0 | Iteration: 648 | Classification loss: 0.05736 | Regression loss: 0.00000 | Running loss: 0.20570
Epoch: 0 | Iteration: 649 | Classification loss: 0.05736 | Regression loss: 0.00000 | Running loss: 0.20570
Epoch: 0 | Iteration: 650 | Classification loss: 0.05737 | Regression loss: 0.00000 | Running loss: 0.20570
Epoch: 0 | Iteration: 651 | Classification loss: 0.05732 | Regression loss: 0.00000 | Running loss: 0.20569
Epoch: 0 | Iteration: 652 | Classification loss: 0.05739 | Regression loss: 0.00000 | Running loss: 0.20569
Epoch: 0 | Iteration: 653 | Classification loss: 0.05738 | Regression loss: 0.00000 | Running loss: 0.20569
Epoch: 0 | Iteration: 654 | Classification loss: 0.05733 | Regression loss: 0.00000 | Running loss: 0.20569
Epoch: 0 | Iteration: 655 | Classification loss: 1.13650 | Regression loss: 1.51990 | Running loss: 0.20591
Epoch: 0 | Iteration: 656 | Classification loss: 0.05740 | Regression loss: 0.00000 | Running loss: 0.20591
Epoch: 0 | Iteration: 657 | Classification loss: 0.05732 | Regression loss: 0.00000 | Running loss: 0.20591
Epoch: 0 | Iteration: 658 | Classification loss: 0.05738 | Regression loss: 0.00000 | Running loss: 0.20591
Epoch: 0 | Iteration: 659 | Classification loss: 0.05739 | Regression loss: 0.00000 | Running loss: 0.20591
Epoch: 0 | Iteration: 660 | Classification loss: 0.05732 | Regression loss: 0.00000 | Running loss: 0.20591
Epoch: 0 | Iteration: 661 | Classification loss: 0.05735 | Regression loss: 0.00000 | Running loss: 0.20591
Epoch: 0 | Iteration: 662 | Classification loss: 1.13313 | Regression loss: 1.18698 | Running loss: 0.21043
Epoch: 0 | Iteration: 663 | Classification loss: 0.05739 | Regression loss: 0.00000 | Running loss: 0.21043
Epoch: 0 | Iteration: 664 | Classification loss: 0.05739 | Regression loss: 0.00000 | Running loss: 0.20684
Epoch: 0 | Iteration: 665 | Classification loss: 0.05732 | Regression loss: 0.00000 | Running loss: 0.20683
Epoch: 0 | Iteration: 666 | Classification loss: 0.05738 | Regression loss: 0.00000 | Running loss: 0.20683
Epoch: 0 | Iteration: 667 | Classification loss: 0.05737 | Regression loss: 0.00000 | Running loss: 0.20683
Epoch: 0 | Iteration: 668 | Classification loss: 0.05742 | Regression loss: 0.00000 | Running loss: 0.20683
Epoch: 0 | Iteration: 669 | Classification loss: 0.05737 | Regression loss: 0.00000 | Running loss: 0.20683
Epoch: 0 | Iteration: 670 | Classification loss: 1.14388 | Regression loss: 1.40486 | Running loss: 0.21181
Epoch: 0 | Iteration: 671 | Classification loss: 0.05734 | Regression loss: 0.00000 | Running loss: 0.21181
Epoch: 0 | Iteration: 672 | Classification loss: 0.05736 | Regression loss: 0.00000 | Running loss: 0.21181
Epoch: 0 | Iteration: 673 | Classification loss: 0.05736 | Regression loss: 0.00000 | Running loss: 0.21181
Epoch: 0 | Iteration: 674 | Classification loss: 0.05736 | Regression loss: 0.00000 | Running loss: 0.20743
Epoch: 0 | Iteration: 675 | Classification loss: 0.05738 | Regression loss: 0.00000 | Running loss: 0.20743
Epoch: 0 | Iteration: 676 | Classification loss: 0.05731 | Regression loss: 0.00000 | Running loss: 0.20743
Epoch: 0 | Iteration: 677 | Classification loss: 0.05737 | Regression loss: 0.00000 | Running loss: 0.20743
Epoch: 0 | Iteration: 678 | Classification loss: 0.05732 | Regression loss: 0.00000 | Running loss: 0.20331
Epoch: 0 | Iteration: 679 | Classification loss: 0.05736 | Regression loss: 0.00000 | Running loss: 0.20331
Epoch: 0 | Iteration: 680 | Classification loss: 0.05732 | Regression loss: 0.00000 | Running loss: 0.20331
Epoch: 0 | Iteration: 681 | Classification loss: 0.05731 | Regression loss: 0.00000 | Running loss: 0.20331
Epoch: 0 | Iteration: 682 | Classification loss: 0.05735 | Regression loss: 0.00000 | Running loss: 0.19878
Epoch: 0 | Iteration: 683 | Classification loss: 0.05733 | Regression loss: 0.00000 | Running loss: 0.19878
Epoch: 0 | Iteration: 684 | Classification loss: 0.05740 | Regression loss: 0.00000 | Running loss: 0.19878
Epoch: 0 | Iteration: 685 | Classification loss: 0.05738 | Regression loss: 0.00000 | Running loss: 0.19878
Epoch: 0 | Iteration: 686 | Classification loss: 0.05728 | Regression loss: 0.00000 | Running loss: 0.19878
Epoch: 0 | Iteration: 687 | Classification loss: 0.05738 | Regression loss: 0.00000 | Running loss: 0.19878
Epoch: 0 | Iteration: 688 | Classification loss: 0.05738 | Regression loss: 0.00000 | Running loss: 0.19878
Epoch: 0 | Iteration: 689 | Classification loss: 0.05735 | Regression loss: 0.00000 | Running loss: 0.19878
Epoch: 0 | Iteration: 690 | Classification loss: 0.05732 | Regression loss: 0.00000 | Running loss: 0.19877
Epoch: 0 | Iteration: 691 | Classification loss: 0.05732 | Regression loss: 0.00000 | Running loss: 0.19877
Epoch: 0 | Iteration: 692 | Classification loss: 0.05735 | Regression loss: 0.00000 | Running loss: 0.19877
Epoch: 0 | Iteration: 693 | Classification loss: 0.05738 | Regression loss: 0.00000 | Running loss: 0.19877
Epoch: 0 | Iteration: 694 | Classification loss: 0.05731 | Regression loss: 0.00000 | Running loss: 0.19877
Epoch: 0 | Iteration: 695 | Classification loss: 0.05734 | Regression loss: 0.00000 | Running loss: 0.19877
Epoch: 0 | Iteration: 696 | Classification loss: 0.05733 | Regression loss: 0.00000 | Running loss: 0.19877
Epoch: 0 | Iteration: 697 | Classification loss: 0.05732 | Regression loss: 0.00000 | Running loss: 0.19877
Epoch: 0 | Iteration: 698 | Classification loss: 0.05735 | Regression loss: 0.00000 | Running loss: 0.19877
Epoch: 0 | Iteration: 699 | Classification loss: 0.05730 | Regression loss: 0.00000 | Running loss: 0.19877
Epoch: 0 | Iteration: 700 | Classification loss: 0.05737 | Regression loss: 0.00000 | Running loss: 0.19877
Epoch: 0 | Iteration: 701 | Classification loss: 0.05726 | Regression loss: 0.00000 | Running loss: 0.19877
Epoch: 0 | Iteration: 702 | Classification loss: 0.05736 | Regression loss: 0.00000 | Running loss: 0.19877
Epoch: 0 | Iteration: 703 | Classification loss: 0.05733 | Regression loss: 0.00000 | Running loss: 0.19876
Epoch: 0 | Iteration: 704 | Classification loss: 0.05730 | Regression loss: 0.00000 | Running loss: 0.19876
Epoch: 0 | Iteration: 705 | Classification loss: 0.05734 | Regression loss: 0.00000 | Running loss: 0.19876
Epoch: 0 | Iteration: 706 | Classification loss: 0.05735 | Regression loss: 0.00000 | Running loss: 0.19876
Epoch: 0 | Iteration: 707 | Classification loss: 0.05738 | Regression loss: 0.00000 | Running loss: 0.19876
Epoch: 0 | Iteration: 708 | Classification loss: 0.05733 | Regression loss: 0.00000 | Running loss: 0.19876
Epoch: 0 | Iteration: 709 | Classification loss: 0.05739 | Regression loss: 0.00000 | Running loss: 0.19876
Epoch: 0 | Iteration: 710 | Classification loss: 0.05734 | Regression loss: 0.00000 | Running loss: 0.19876
Epoch: 0 | Iteration: 711 | Classification loss: 1.13279 | Regression loss: 1.08124 | Running loss: 0.19874
Epoch: 0 | Iteration: 712 | Classification loss: 0.05733 | Regression loss: 0.00000 | Running loss: 0.19873
Epoch: 0 | Iteration: 713 | Classification loss: 0.05725 | Regression loss: 0.00000 | Running loss: 0.19873
Epoch: 0 | Iteration: 714 | Classification loss: 0.05729 | Regression loss: 0.00000 | Running loss: 0.19873
Epoch: 0 | Iteration: 715 | Classification loss: 0.05734 | Regression loss: 0.00000 | Running loss: 0.19873
Epoch: 0 | Iteration: 716 | Classification loss: 0.05733 | Regression loss: 0.00000 | Running loss: 0.19873
Epoch: 0 | Iteration: 717 | Classification loss: 0.05728 | Regression loss: 0.00000 | Running loss: 0.19873
Epoch: 0 | Iteration: 718 | Classification loss: 0.05735 | Regression loss: 0.00000 | Running loss: 0.19873
Epoch: 0 | Iteration: 719 | Classification loss: 0.05727 | Regression loss: 0.00000 | Running loss: 0.19873
Epoch: 0 | Iteration: 720 | Classification loss: 0.05735 | Regression loss: 0.00000 | Running loss: 0.19360
Epoch: 0 | Iteration: 721 | Classification loss: 0.05733 | Regression loss: 0.00000 | Running loss: 0.19360
Epoch: 0 | Iteration: 722 | Classification loss: 0.05729 | Regression loss: 0.00000 | Running loss: 0.19360
Epoch: 0 | Iteration: 723 | Classification loss: 0.05735 | Regression loss: 0.00000 | Running loss: 0.19360
Epoch: 0 | Iteration: 724 | Classification loss: 0.05734 | Regression loss: 0.00000 | Running loss: 0.18908
Epoch: 0 | Iteration: 725 | Classification loss: 0.05733 | Regression loss: 0.00000 | Running loss: 0.18908
Epoch: 0 | Iteration: 726 | Classification loss: 0.05731 | Regression loss: 0.00000 | Running loss: 0.18907
Epoch: 0 | Iteration: 727 | Classification loss: 1.13314 | Regression loss: 1.08960 | Running loss: 0.19341
Epoch: 0 | Iteration: 728 | Classification loss: 0.05729 | Regression loss: 0.00000 | Running loss: 0.19340
Epoch: 0 | Iteration: 729 | Classification loss: 0.05733 | Regression loss: 0.00000 | Running loss: 0.18880
Epoch: 0 | Iteration: 730 | Classification loss: 0.05728 | Regression loss: 0.00000 | Running loss: 0.18880
Epoch: 0 | Iteration: 731 | Classification loss: 0.05727 | Regression loss: 0.00000 | Running loss: 0.18880
Epoch: 0 | Iteration: 732 | Classification loss: 0.05730 | Regression loss: 0.00000 | Running loss: 0.18880
Epoch: 0 | Iteration: 733 | Classification loss: 0.05735 | Regression loss: 0.00000 | Running loss: 0.18880
Epoch: 0 | Iteration: 734 | Classification loss: 0.05729 | Regression loss: 0.00000 | Running loss: 0.18880
Epoch: 0 | Iteration: 735 | Classification loss: 0.05734 | Regression loss: 0.00000 | Running loss: 0.18880
Epoch: 0 | Iteration: 736 | Classification loss: 0.05727 | Regression loss: 0.00000 | Running loss: 0.18880
Epoch: 0 | Iteration: 737 | Classification loss: 0.05729 | Regression loss: 0.00000 | Running loss: 0.18880
Epoch: 0 | Iteration: 738 | Classification loss: 0.05734 | Regression loss: 0.00000 | Running loss: 0.18880
Epoch: 0 | Iteration: 739 | Classification loss: 0.05732 | Regression loss: 0.00000 | Running loss: 0.18880
Epoch: 0 | Iteration: 740 | Classification loss: 0.05732 | Regression loss: 0.00000 | Running loss: 0.18879
Epoch: 0 | Iteration: 741 | Classification loss: 0.05732 | Regression loss: 0.00000 | Running loss: 0.18879
Epoch: 0 | Iteration: 742 | Classification loss: 0.05731 | Regression loss: 0.00000 | Running loss: 0.18879
Epoch: 0 | Iteration: 743 | Classification loss: 0.05724 | Regression loss: 0.00000 | Running loss: 0.18879
Epoch: 0 | Iteration: 744 | Classification loss: 0.05726 | Regression loss: 0.00000 | Running loss: 0.18500
Epoch: 0 | Iteration: 745 | Classification loss: 0.05731 | Regression loss: 0.00000 | Running loss: 0.18500
Epoch: 0 | Iteration: 746 | Classification loss: 0.05732 | Regression loss: 0.00000 | Running loss: 0.18500
Epoch: 0 | Iteration: 747 | Classification loss: 0.05733 | Regression loss: 0.00000 | Running loss: 0.18499
Epoch: 0 | Iteration: 748 | Classification loss: 0.05735 | Regression loss: 0.00000 | Running loss: 0.18499
Epoch: 0 | Iteration: 749 | Classification loss: 0.05728 | Regression loss: 0.00000 | Running loss: 0.18499
Epoch: 0 | Iteration: 750 | Classification loss: 0.05735 | Regression loss: 0.00000 | Running loss: 0.18499
Epoch: 0 | Iteration: 751 | Classification loss: 0.05727 | Regression loss: 0.00000 | Running loss: 0.18499
Epoch: 0 | Iteration: 752 | Classification loss: 0.05725 | Regression loss: 0.00000 | Running loss: 0.18499
Epoch: 0 | Iteration: 753 | Classification loss: 0.05725 | Regression loss: 0.00000 | Running loss: 0.18499
Epoch: 0 | Iteration: 754 | Classification loss: 0.05728 | Regression loss: 0.00000 | Running loss: 0.18499
Epoch: 0 | Iteration: 755 | Classification loss: 0.05722 | Regression loss: 0.00000 | Running loss: 0.18499
Epoch: 0 | Iteration: 756 | Classification loss: 0.05732 | Regression loss: 0.00000 | Running loss: 0.18499
Epoch: 0 | Iteration: 757 | Classification loss: 0.05728 | Regression loss: 0.00000 | Running loss: 0.18499
Epoch: 0 | Iteration: 758 | Classification loss: 0.05729 | Regression loss: 0.00000 | Running loss: 0.18499
Epoch: 0 | Iteration: 759 | Classification loss: 1.13393 | Regression loss: 1.22042 | Running loss: 0.18958
Epoch: 0 | Iteration: 760 | Classification loss: 0.05720 | Regression loss: 0.00000 | Running loss: 0.18958
Epoch: 0 | Iteration: 761 | Classification loss: 0.05724 | Regression loss: 0.00000 | Running loss: 0.18958
Epoch: 0 | Iteration: 762 | Classification loss: 0.05728 | Regression loss: 0.00000 | Running loss: 0.18958
Epoch: 0 | Iteration: 763 | Classification loss: 0.05726 | Regression loss: 0.00000 | Running loss: 0.18958
Epoch: 0 | Iteration: 764 | Classification loss: 0.05733 | Regression loss: 0.00000 | Running loss: 0.18958
Epoch: 0 | Iteration: 765 | Classification loss: 0.05723 | Regression loss: 0.00000 | Running loss: 0.18958
Epoch: 0 | Iteration: 766 | Classification loss: 0.05729 | Regression loss: 0.00000 | Running loss: 0.18957
Epoch: 0 | Iteration: 767 | Classification loss: 0.05725 | Regression loss: 0.00000 | Running loss: 0.18451
Epoch: 0 | Iteration: 768 | Classification loss: 0.05725 | Regression loss: 0.00000 | Running loss: 0.18451
Epoch: 0 | Iteration: 769 | Classification loss: 1.13326 | Regression loss: 1.29488 | Running loss: 0.18925
Epoch: 0 | Iteration: 770 | Classification loss: 0.05727 | Regression loss: 0.00000 | Running loss: 0.18925
Epoch: 0 | Iteration: 771 | Classification loss: 0.05733 | Regression loss: 0.00000 | Running loss: 0.18925
Epoch: 0 | Iteration: 772 | Classification loss: 0.05731 | Regression loss: 0.00000 | Running loss: 0.18925
Epoch: 0 | Iteration: 773 | Classification loss: 0.05729 | Regression loss: 0.00000 | Running loss: 0.18430
Epoch: 0 | Iteration: 774 | Classification loss: 0.05726 | Regression loss: 0.00000 | Running loss: 0.18430
Epoch: 0 | Iteration: 775 | Classification loss: 0.05720 | Regression loss: 0.00000 | Running loss: 0.18429
Epoch: 0 | Iteration: 776 | Classification loss: 0.05729 | Regression loss: 0.00000 | Running loss: 0.18429
Epoch: 0 | Iteration: 777 | Classification loss: 0.05728 | Regression loss: 0.00000 | Running loss: 0.18429
Epoch: 0 | Iteration: 778 | Classification loss: 0.05732 | Regression loss: 0.00000 | Running loss: 0.18429
Epoch: 0 | Iteration: 779 | Classification loss: 0.05732 | Regression loss: 0.00000 | Running loss: 0.18429
Epoch: 0 | Iteration: 780 | Classification loss: 0.05729 | Regression loss: 0.00000 | Running loss: 0.18429
Epoch: 0 | Iteration: 781 | Classification loss: 0.05728 | Regression loss: 0.00000 | Running loss: 0.18429
Epoch: 0 | Iteration: 782 | Classification loss: 0.05726 | Regression loss: 0.00000 | Running loss: 0.18046
Epoch: 0 | Iteration: 783 | Classification loss: 0.05726 | Regression loss: 0.00000 | Running loss: 0.18046
Epoch: 0 | Iteration: 784 | Classification loss: 0.05733 | Regression loss: 0.00000 | Running loss: 0.18046
Epoch: 0 | Iteration: 785 | Classification loss: 0.05731 | Regression loss: 0.00000 | Running loss: 0.18046
Epoch: 0 | Iteration: 786 | Classification loss: 0.05723 | Regression loss: 0.00000 | Running loss: 0.18046
Epoch: 0 | Iteration: 787 | Classification loss: 0.05725 | Regression loss: 0.00000 | Running loss: 0.18046
Epoch: 0 | Iteration: 788 | Classification loss: 0.05729 | Regression loss: 0.00000 | Running loss: 0.18046
Epoch: 0 | Iteration: 789 | Classification loss: 0.05725 | Regression loss: 0.00000 | Running loss: 0.18046
Epoch: 0 | Iteration: 790 | Classification loss: 0.05729 | Regression loss: 0.00000 | Running loss: 0.17647
Epoch: 0 | Iteration: 791 | Classification loss: 0.05725 | Regression loss: 0.00000 | Running loss: 0.17647
Epoch: 0 | Iteration: 792 | Classification loss: 0.05727 | Regression loss: 0.00000 | Running loss: 0.17647
Epoch: 0 | Iteration: 793 | Classification loss: 0.05728 | Regression loss: 0.00000 | Running loss: 0.17647
Epoch: 0 | Iteration: 794 | Classification loss: 0.05732 | Regression loss: 0.00000 | Running loss: 0.17647
Epoch: 0 | Iteration: 795 | Classification loss: 0.05725 | Regression loss: 0.00000 | Running loss: 0.17647
Epoch: 0 | Iteration: 796 | Classification loss: 0.05724 | Regression loss: 0.00000 | Running loss: 0.17647
Epoch: 0 | Iteration: 797 | Classification loss: 0.05728 | Regression loss: 0.00000 | Running loss: 0.17179
Epoch: 0 | Iteration: 798 | Classification loss: 0.05719 | Regression loss: 0.00000 | Running loss: 0.17179
Epoch: 0 | Iteration: 799 | Classification loss: 0.05723 | Regression loss: 0.00000 | Running loss: 0.17179
Epoch: 0 | Iteration: 800 | Classification loss: 0.05730 | Regression loss: 0.00000 | Running loss: 0.17179
Epoch: 0 | Iteration: 801 | Classification loss: 0.05721 | Regression loss: 0.00000 | Running loss: 0.17179
Epoch: 0 | Iteration: 802 | Classification loss: 0.05725 | Regression loss: 0.00000 | Running loss: 0.17179
Epoch: 0 | Iteration: 803 | Classification loss: 0.05730 | Regression loss: 0.00000 | Running loss: 0.17179
Epoch: 0 | Iteration: 804 | Classification loss: 0.05731 | Regression loss: 0.00000 | Running loss: 0.17179
Epoch: 0 | Iteration: 805 | Classification loss: 0.05722 | Regression loss: 0.00000 | Running loss: 0.17179
Epoch: 0 | Iteration: 806 | Classification loss: 0.05722 | Regression loss: 0.00000 | Running loss: 0.17179
Epoch: 0 | Iteration: 807 | Classification loss: 0.05723 | Regression loss: 0.00000 | Running loss: 0.17179
Epoch: 0 | Iteration: 808 | Classification loss: 0.05724 | Regression loss: 0.00000 | Running loss: 0.17178
Epoch: 0 | Iteration: 809 | Classification loss: 0.05725 | Regression loss: 0.00000 | Running loss: 0.17178
Epoch: 0 | Iteration: 810 | Classification loss: 0.05720 | Regression loss: 0.00000 | Running loss: 0.17178
Epoch: 0 | Iteration: 811 | Classification loss: 0.05724 | Regression loss: 0.00000 | Running loss: 0.17178
Epoch: 0 | Iteration: 812 | Classification loss: 0.05729 | Regression loss: 0.00000 | Running loss: 0.17178
Epoch: 0 | Iteration: 813 | Classification loss: 0.05729 | Regression loss: 0.00000 | Running loss: 0.17178
Epoch: 0 | Iteration: 814 | Classification loss: 0.05726 | Regression loss: 0.00000 | Running loss: 0.17178
Epoch: 0 | Iteration: 815 | Classification loss: 1.14346 | Regression loss: 1.14753 | Running loss: 0.17625
Epoch: 0 | Iteration: 816 | Classification loss: 0.05723 | Regression loss: 0.00000 | Running loss: 0.17625
Epoch: 0 | Iteration: 817 | Classification loss: 0.05730 | Regression loss: 0.00000 | Running loss: 0.17625
Epoch: 0 | Iteration: 818 | Classification loss: 0.05729 | Regression loss: 0.00000 | Running loss: 0.17624
Epoch: 0 | Iteration: 819 | Classification loss: 1.15776 | Regression loss: 1.19592 | Running loss: 0.18084
Epoch: 0 | Iteration: 820 | Classification loss: 0.05725 | Regression loss: 0.00000 | Running loss: 0.18084
Epoch: 0 | Iteration: 821 | Classification loss: 0.05722 | Regression loss: 0.00000 | Running loss: 0.18084
Epoch: 0 | Iteration: 822 | Classification loss: 0.05725 | Regression loss: 0.00000 | Running loss: 0.17668
Epoch: 0 | Iteration: 823 | Classification loss: 0.05728 | Regression loss: 0.00000 | Running loss: 0.17668
Epoch: 0 | Iteration: 824 | Classification loss: 1.13491 | Regression loss: 1.31572 | Running loss: 0.18146
Epoch: 0 | Iteration: 825 | Classification loss: 0.05723 | Regression loss: 0.00000 | Running loss: 0.18146
Epoch: 0 | Iteration: 826 | Classification loss: 0.05721 | Regression loss: 0.00000 | Running loss: 0.18146
Epoch: 0 | Iteration: 827 | Classification loss: 0.05727 | Regression loss: 0.00000 | Running loss: 0.18146
Epoch: 0 | Iteration: 828 | Classification loss: 0.05722 | Regression loss: 0.00000 | Running loss: 0.17590
Epoch: 0 | Iteration: 829 | Classification loss: 0.05728 | Regression loss: 0.00000 | Running loss: 0.17590
Epoch: 0 | Iteration: 830 | Classification loss: 0.05722 | Regression loss: 0.00000 | Running loss: 0.17590
Epoch: 0 | Iteration: 831 | Classification loss: 0.05730 | Regression loss: 0.00000 | Running loss: 0.17590
Epoch: 0 | Iteration: 832 | Classification loss: 0.05714 | Regression loss: 0.00000 | Running loss: 0.17590
Epoch: 0 | Iteration: 833 | Classification loss: 0.05725 | Regression loss: 0.00000 | Running loss: 0.17590
Epoch: 0 | Iteration: 834 | Classification loss: 0.05724 | Regression loss: 0.00000 | Running loss: 0.17590
Epoch: 0 | Iteration: 835 | Classification loss: 0.05727 | Regression loss: 0.00000 | Running loss: 0.17590
Epoch: 0 | Iteration: 836 | Classification loss: 0.05722 | Regression loss: 0.00000 | Running loss: 0.17590
Epoch: 0 | Iteration: 837 | Classification loss: 0.05724 | Regression loss: 0.00000 | Running loss: 0.17590
Epoch: 0 | Iteration: 838 | Classification loss: 0.05718 | Regression loss: 0.00000 | Running loss: 0.17590
Epoch: 0 | Iteration: 839 | Classification loss: 0.05723 | Regression loss: 0.00000 | Running loss: 0.17590
Epoch: 0 | Iteration: 840 | Classification loss: 0.05721 | Regression loss: 0.00000 | Running loss: 0.17590
Epoch: 0 | Iteration: 841 | Classification loss: 0.05722 | Regression loss: 0.00000 | Running loss: 0.17589
Epoch: 0 | Iteration: 842 | Classification loss: 0.05726 | Regression loss: 0.00000 | Running loss: 0.17589
Epoch: 0 | Iteration: 843 | Classification loss: 0.05725 | Regression loss: 0.00000 | Running loss: 0.17589
Epoch: 0 | Iteration: 844 | Classification loss: 0.05721 | Regression loss: 0.00000 | Running loss: 0.17092
Epoch: 0 | Iteration: 845 | Classification loss: 0.05726 | Regression loss: 0.00000 | Running loss: 0.17092
Epoch: 0 | Iteration: 846 | Classification loss: 0.05722 | Regression loss: 0.00000 | Running loss: 0.17092
Epoch: 0 | Iteration: 847 | Classification loss: 0.05728 | Regression loss: 0.00000 | Running loss: 0.17092
Epoch: 0 | Iteration: 848 | Classification loss: 0.05728 | Regression loss: 0.00000 | Running loss: 0.16703
Epoch: 0 | Iteration: 849 | Classification loss: 0.05721 | Regression loss: 0.00000 | Running loss: 0.16703
Epoch: 0 | Iteration: 850 | Classification loss: 1.15914 | Regression loss: 0.72591 | Running loss: 0.17068
Epoch: 0 | Iteration: 851 | Classification loss: 0.05723 | Regression loss: 0.00000 | Running loss: 0.17068
Epoch: 0 | Iteration: 852 | Classification loss: 0.05727 | Regression loss: 0.00000 | Running loss: 0.17068
Epoch: 0 | Iteration: 853 | Classification loss: 0.05723 | Regression loss: 0.00000 | Running loss: 0.17068
Epoch: 0 | Iteration: 854 | Classification loss: 0.05720 | Regression loss: 0.00000 | Running loss: 0.17068
Epoch: 0 | Iteration: 855 | Classification loss: 0.05720 | Regression loss: 0.00000 | Running loss: 0.17068
Epoch: 0 | Iteration: 856 | Classification loss: 0.05724 | Regression loss: 0.00000 | Running loss: 0.17068
Epoch: 0 | Iteration: 857 | Classification loss: 0.05718 | Regression loss: 0.00000 | Running loss: 0.17068
Epoch: 0 | Iteration: 858 | Classification loss: 0.05719 | Regression loss: 0.00000 | Running loss: 0.17068
Epoch: 0 | Iteration: 859 | Classification loss: 0.05716 | Regression loss: 0.00000 | Running loss: 0.17068
Epoch: 0 | Iteration: 860 | Classification loss: 0.05721 | Regression loss: 0.00000 | Running loss: 0.17068
Epoch: 0 | Iteration: 861 | Classification loss: 0.05725 | Regression loss: 0.00000 | Running loss: 0.17067
Epoch: 0 | Iteration: 862 | Classification loss: 0.05717 | Regression loss: 0.00000 | Running loss: 0.17067
Epoch: 0 | Iteration: 863 | Classification loss: 0.05730 | Regression loss: 0.00000 | Running loss: 0.17067
Epoch: 0 | Iteration: 864 | Classification loss: 0.05716 | Regression loss: 0.00000 | Running loss: 0.17067
Epoch: 0 | Iteration: 865 | Classification loss: 0.05715 | Regression loss: 0.00000 | Running loss: 0.17067
Epoch: 0 | Iteration: 866 | Classification loss: 1.13578 | Regression loss: 1.56925 | Running loss: 0.17597
Epoch: 0 | Iteration: 867 | Classification loss: 0.05723 | Regression loss: 0.00000 | Running loss: 0.17597
Epoch: 0 | Iteration: 868 | Classification loss: 0.05726 | Regression loss: 0.00000 | Running loss: 0.17597
Epoch: 0 | Iteration: 869 | Classification loss: 0.05725 | Regression loss: 0.00000 | Running loss: 0.17596
Epoch: 0 | Iteration: 870 | Classification loss: 0.05727 | Regression loss: 0.00000 | Running loss: 0.17596
Epoch: 0 | Iteration: 871 | Classification loss: 1.13134 | Regression loss: 1.03874 | Running loss: 0.18019
Epoch: 0 | Iteration: 872 | Classification loss: 0.05716 | Regression loss: 0.00000 | Running loss: 0.18019
Epoch: 0 | Iteration: 873 | Classification loss: 0.05722 | Regression loss: 0.00000 | Running loss: 0.18019
Epoch: 0 | Iteration: 874 | Classification loss: 0.05714 | Regression loss: 0.00000 | Running loss: 0.17623
Epoch: 0 | Iteration: 875 | Classification loss: 0.05723 | Regression loss: 0.00000 | Running loss: 0.17623
Epoch: 0 | Iteration: 876 | Classification loss: 0.05724 | Regression loss: 0.00000 | Running loss: 0.17623
Epoch: 0 | Iteration: 877 | Classification loss: 0.05727 | Regression loss: 0.00000 | Running loss: 0.17623
Epoch: 0 | Iteration: 878 | Classification loss: 0.05714 | Regression loss: 0.00000 | Running loss: 0.17623
Epoch: 0 | Iteration: 879 | Classification loss: 0.05715 | Regression loss: 0.00000 | Running loss: 0.17623
Epoch: 0 | Iteration: 880 | Classification loss: 0.05716 | Regression loss: 0.00000 | Running loss: 0.17623
Epoch: 0 | Iteration: 881 | Classification loss: 0.05721 | Regression loss: 0.00000 | Running loss: 0.17623
Epoch: 0 | Iteration: 882 | Classification loss: 0.05724 | Regression loss: 0.00000 | Running loss: 0.17623
Epoch: 0 | Iteration: 883 | Classification loss: 0.05722 | Regression loss: 0.00000 | Running loss: 0.17623
Epoch: 0 | Iteration: 884 | Classification loss: 0.05723 | Regression loss: 0.00000 | Running loss: 0.17623
Epoch: 0 | Iteration: 885 | Classification loss: 0.05720 | Regression loss: 0.00000 | Running loss: 0.17622
Epoch: 0 | Iteration: 886 | Classification loss: 1.14859 | Regression loss: 0.97547 | Running loss: 0.18036
Epoch: 0 | Iteration: 887 | Classification loss: 0.05721 | Regression loss: 0.00000 | Running loss: 0.18036
Epoch: 0 | Iteration: 888 | Classification loss: 0.05719 | Regression loss: 0.00000 | Running loss: 0.18036
Epoch: 0 | Iteration: 889 | Classification loss: 0.05714 | Regression loss: 0.00000 | Running loss: 0.18036
Epoch: 0 | Iteration: 890 | Classification loss: 0.05728 | Regression loss: 0.00000 | Running loss: 0.18035
Epoch: 0 | Iteration: 891 | Classification loss: 0.05724 | Regression loss: 0.00000 | Running loss: 0.18035
Epoch: 0 | Iteration: 892 | Classification loss: 1.13763 | Regression loss: 1.29814 | Running loss: 0.18511
Epoch: 0 | Iteration: 893 | Classification loss: 0.05719 | Regression loss: 0.00000 | Running loss: 0.18511
Epoch: 0 | Iteration: 894 | Classification loss: 0.05717 | Regression loss: 0.00000 | Running loss: 0.18511
Epoch: 0 | Iteration: 895 | Classification loss: 0.05712 | Regression loss: 0.00000 | Running loss: 0.18511
Epoch: 0 | Iteration: 896 | Classification loss: 0.05717 | Regression loss: 0.00000 | Running loss: 0.18511
Epoch: 0 | Iteration: 897 | Classification loss: 0.05726 | Regression loss: 0.00000 | Running loss: 0.18511
Epoch: 0 | Iteration: 898 | Classification loss: 0.05714 | Regression loss: 0.00000 | Running loss: 0.18511
Epoch: 0 | Iteration: 899 | Classification loss: 1.13429 | Regression loss: 1.16145 | Running loss: 0.18958
Epoch: 0 | Iteration: 900 | Classification loss: 0.05714 | Regression loss: 0.00000 | Running loss: 0.18958
Epoch: 0 | Iteration: 901 | Classification loss: 0.05719 | Regression loss: 0.00000 | Running loss: 0.18958
Epoch: 0 | Iteration: 902 | Classification loss: 0.05717 | Regression loss: 0.00000 | Running loss: 0.18958
Epoch: 0 | Iteration: 903 | Classification loss: 0.05718 | Regression loss: 0.00000 | Running loss: 0.18958
Epoch: 0 | Iteration: 904 | Classification loss: 0.05726 | Regression loss: 0.00000 | Running loss: 0.18958
Epoch: 0 | Iteration: 905 | Classification loss: 0.05714 | Regression loss: 0.00000 | Running loss: 0.18958
Epoch: 0 | Iteration: 906 | Classification loss: 0.05719 | Regression loss: 0.00000 | Running loss: 0.18958
Epoch: 0 | Iteration: 907 | Classification loss: 0.05711 | Regression loss: 0.00000 | Running loss: 0.18958
Epoch: 0 | Iteration: 908 | Classification loss: 0.05712 | Regression loss: 0.00000 | Running loss: 0.18958
Epoch: 0 | Iteration: 909 | Classification loss: 0.05711 | Regression loss: 0.00000 | Running loss: 0.18957
Epoch: 0 | Iteration: 910 | Classification loss: 0.05716 | Regression loss: 0.00000 | Running loss: 0.18957
Epoch: 0 | Iteration: 911 | Classification loss: 0.05716 | Regression loss: 0.00000 | Running loss: 0.18957
Epoch: 0 | Iteration: 912 | Classification loss: 0.05723 | Regression loss: 0.00000 | Running loss: 0.18957
Epoch: 0 | Iteration: 913 | Classification loss: 0.05723 | Regression loss: 0.00000 | Running loss: 0.18957
Epoch: 0 | Iteration: 914 | Classification loss: 0.05710 | Regression loss: 0.00000 | Running loss: 0.18957
Epoch: 0 | Iteration: 915 | Classification loss: 0.05712 | Regression loss: 0.00000 | Running loss: 0.18957
Epoch: 0 | Iteration: 916 | Classification loss: 0.05720 | Regression loss: 0.00000 | Running loss: 0.18957
Epoch: 0 | Iteration: 917 | Classification loss: 0.05723 | Regression loss: 0.00000 | Running loss: 0.18957
Epoch: 0 | Iteration: 918 | Classification loss: 0.05712 | Regression loss: 0.00000 | Running loss: 0.18957
Epoch: 0 | Iteration: 919 | Classification loss: 0.05717 | Regression loss: 0.00000 | Running loss: 0.18957
Epoch: 0 | Iteration: 920 | Classification loss: 0.05706 | Regression loss: 0.00000 | Running loss: 0.18957
Epoch: 0 | Iteration: 921 | Classification loss: 0.05722 | Regression loss: 0.00000 | Running loss: 0.18957
Epoch: 0 | Iteration: 922 | Classification loss: 0.05713 | Regression loss: 0.00000 | Running loss: 0.18956
Epoch: 0 | Iteration: 923 | Classification loss: 0.05722 | Regression loss: 0.00000 | Running loss: 0.18956
Epoch: 0 | Iteration: 924 | Classification loss: 0.05716 | Regression loss: 0.00000 | Running loss: 0.18956
Epoch: 0 | Iteration: 925 | Classification loss: 0.05718 | Regression loss: 0.00000 | Running loss: 0.18956
Epoch: 0 | Iteration: 926 | Classification loss: 1.13581 | Regression loss: 1.22737 | Running loss: 0.19417
Epoch: 0 | Iteration: 927 | Classification loss: 0.05721 | Regression loss: 0.00000 | Running loss: 0.19417
Epoch: 0 | Iteration: 928 | Classification loss: 0.05721 | Regression loss: 0.00000 | Running loss: 0.19417
Epoch: 0 | Iteration: 929 | Classification loss: 0.05711 | Regression loss: 0.00000 | Running loss: 0.19417
Epoch: 0 | Iteration: 930 | Classification loss: 0.05720 | Regression loss: 0.00000 | Running loss: 0.19417
Epoch: 0 | Iteration: 931 | Classification loss: 0.05716 | Regression loss: 0.00000 | Running loss: 0.19417
Epoch: 0 | Iteration: 932 | Classification loss: 0.05713 | Regression loss: 0.00000 | Running loss: 0.19417
Epoch: 0 | Iteration: 933 | Classification loss: 0.05721 | Regression loss: 0.00000 | Running loss: 0.19417
Epoch: 0 | Iteration: 934 | Classification loss: 0.05727 | Regression loss: 0.00000 | Running loss: 0.19417
Epoch: 0 | Iteration: 935 | Classification loss: 0.05715 | Regression loss: 0.00000 | Running loss: 0.19417
Epoch: 0 | Iteration: 936 | Classification loss: 0.05713 | Regression loss: 0.00000 | Running loss: 0.19417
Epoch: 0 | Iteration: 937 | Classification loss: 0.05720 | Regression loss: 0.00000 | Running loss: 0.19417
Epoch: 0 | Iteration: 938 | Classification loss: 0.05718 | Regression loss: 0.00000 | Running loss: 0.19417
Epoch: 0 | Iteration: 939 | Classification loss: 0.05712 | Regression loss: 0.00000 | Running loss: 0.19416
Epoch: 0 | Iteration: 940 | Classification loss: 0.05713 | Regression loss: 0.00000 | Running loss: 0.19416
Epoch: 0 | Iteration: 941 | Classification loss: 0.05714 | Regression loss: 0.00000 | Running loss: 0.19416
Epoch: 0 | Iteration: 942 | Classification loss: 0.05710 | Regression loss: 0.00000 | Running loss: 0.19416
Epoch: 0 | Iteration: 943 | Classification loss: 0.05712 | Regression loss: 0.00000 | Running loss: 0.19416
Epoch: 0 | Iteration: 944 | Classification loss: 0.05718 | Regression loss: 0.00000 | Running loss: 0.19416
Epoch: 0 | Iteration: 945 | Classification loss: 0.05724 | Regression loss: 0.00000 | Running loss: 0.19416
Epoch: 0 | Iteration: 946 | Classification loss: 0.05712 | Regression loss: 0.00000 | Running loss: 0.19416
Epoch: 0 | Iteration: 947 | Classification loss: 0.05718 | Regression loss: 0.00000 | Running loss: 0.19416
Epoch: 0 | Iteration: 948 | Classification loss: 0.05718 | Regression loss: 0.00000 | Running loss: 0.19416
Epoch: 0 | Iteration: 949 | Classification loss: 0.05720 | Regression loss: 0.00000 | Running loss: 0.19416
Epoch: 0 | Iteration: 950 | Classification loss: 0.05713 | Regression loss: 0.00000 | Running loss: 0.19416
Epoch: 0 | Iteration: 951 | Classification loss: 0.05711 | Regression loss: 0.00000 | Running loss: 0.18969
Epoch: 0 | Iteration: 952 | Classification loss: 0.05718 | Regression loss: 0.00000 | Running loss: 0.18969
Epoch: 0 | Iteration: 953 | Classification loss: 0.05713 | Regression loss: 0.00000 | Running loss: 0.18969
Epoch: 0 | Iteration: 954 | Classification loss: 0.05718 | Regression loss: 0.00000 | Running loss: 0.18969
Epoch: 0 | Iteration: 955 | Classification loss: 0.05711 | Regression loss: 0.00000 | Running loss: 0.18969
Epoch: 0 | Iteration: 956 | Classification loss: 0.05717 | Regression loss: 0.00000 | Running loss: 0.18528
Epoch: 0 | Iteration: 957 | Classification loss: 0.05718 | Regression loss: 0.00000 | Running loss: 0.18528
Epoch: 0 | Iteration: 958 | Classification loss: 0.05709 | Regression loss: 0.00000 | Running loss: 0.18528
Epoch: 0 | Iteration: 959 | Classification loss: 0.05714 | Regression loss: 0.00000 | Running loss: 0.18528
Epoch: 0 | Iteration: 960 | Classification loss: 0.05715 | Regression loss: 0.00000 | Running loss: 0.18528
Epoch: 0 | Iteration: 961 | Classification loss: 0.05715 | Regression loss: 0.00000 | Running loss: 0.18528
Epoch: 0 | Iteration: 962 | Classification loss: 0.05711 | Regression loss: 0.00000 | Running loss: 0.18528
Epoch: 0 | Iteration: 963 | Classification loss: 0.05713 | Regression loss: 0.00000 | Running loss: 0.18528
Epoch: 0 | Iteration: 964 | Classification loss: 0.05717 | Regression loss: 0.00000 | Running loss: 0.18528
Epoch: 0 | Iteration: 965 | Classification loss: 0.05707 | Regression loss: 0.00000 | Running loss: 0.18528
Epoch: 0 | Iteration: 966 | Classification loss: 0.05716 | Regression loss: 0.00000 | Running loss: 0.18528
Epoch: 0 | Iteration: 967 | Classification loss: 0.05723 | Regression loss: 0.00000 | Running loss: 0.18528
Epoch: 0 | Iteration: 968 | Classification loss: 0.05710 | Regression loss: 0.00000 | Running loss: 0.18528
Epoch: 0 | Iteration: 969 | Classification loss: 1.14358 | Regression loss: 1.42826 | Running loss: 0.19030
Epoch: 0 | Iteration: 970 | Classification loss: 0.05718 | Regression loss: 0.00000 | Running loss: 0.19030
Epoch: 0 | Iteration: 971 | Classification loss: 0.05708 | Regression loss: 0.00000 | Running loss: 0.19030
Epoch: 0 | Iteration: 972 | Classification loss: 0.05708 | Regression loss: 0.00000 | Running loss: 0.19030
Epoch: 0 | Iteration: 973 | Classification loss: 0.05712 | Regression loss: 0.00000 | Running loss: 0.19030
Epoch: 0 | Iteration: 974 | Classification loss: 0.05718 | Regression loss: 0.00000 | Running loss: 0.19030
Epoch: 0 | Iteration: 975 | Classification loss: 0.05712 | Regression loss: 0.00000 | Running loss: 0.19030
Epoch: 0 | Iteration: 976 | Classification loss: 0.05708 | Regression loss: 0.00000 | Running loss: 0.19030
Epoch: 0 | Iteration: 977 | Classification loss: 0.05708 | Regression loss: 0.00000 | Running loss: 0.19030
Epoch: 0 | Iteration: 978 | Classification loss: 0.05710 | Regression loss: 0.00000 | Running loss: 0.19030
Epoch: 0 | Iteration: 979 | Classification loss: 1.15786 | Regression loss: 1.15628 | Running loss: 0.19481
Epoch: 0 | Iteration: 980 | Classification loss: 0.05719 | Regression loss: 0.00000 | Running loss: 0.19028
Epoch: 0 | Iteration: 981 | Classification loss: 0.05709 | Regression loss: 0.00000 | Running loss: 0.19028
Epoch: 0 | Iteration: 982 | Classification loss: 0.05713 | Regression loss: 0.00000 | Running loss: 0.19028
Epoch: 0 | Iteration: 983 | Classification loss: 0.05719 | Regression loss: 0.00000 | Running loss: 0.19027
Epoch: 0 | Iteration: 984 | Classification loss: 0.05707 | Regression loss: 0.00000 | Running loss: 0.19027
Epoch: 0 | Iteration: 985 | Classification loss: 0.05712 | Regression loss: 0.00000 | Running loss: 0.19027
Epoch: 0 | Iteration: 986 | Classification loss: 0.05722 | Regression loss: 0.00000 | Running loss: 0.19027
Epoch: 0 | Iteration: 987 | Classification loss: 0.05709 | Regression loss: 0.00000 | Running loss: 0.19027
Epoch: 0 | Iteration: 988 | Classification loss: 0.05715 | Regression loss: 0.00000 | Running loss: 0.19027
Epoch: 0 | Iteration: 989 | Classification loss: 0.05707 | Regression loss: 0.00000 | Running loss: 0.19027
Epoch: 0 | Iteration: 990 | Classification loss: 1.13329 | Regression loss: 1.14728 | Running loss: 0.19472
Epoch: 0 | Iteration: 991 | Classification loss: 0.05718 | Regression loss: 0.00000 | Running loss: 0.19472
Epoch: 0 | Iteration: 992 | Classification loss: 0.05706 | Regression loss: 0.00000 | Running loss: 0.19471
Epoch: 0 | Iteration: 993 | Classification loss: 1.13356 | Regression loss: 1.06566 | Running loss: 0.19900
Epoch: 0 | Iteration: 994 | Classification loss: 0.05706 | Regression loss: 0.00000 | Running loss: 0.19900
Epoch: 0 | Iteration: 995 | Classification loss: 0.05716 | Regression loss: 0.00000 | Running loss: 0.19454
Epoch: 0 | Iteration: 996 | Classification loss: 0.05716 | Regression loss: 0.00000 | Running loss: 0.19454
Epoch: 0 | Iteration: 997 | Classification loss: 0.05709 | Regression loss: 0.00000 | Running loss: 0.19454
Epoch: 0 | Iteration: 998 | Classification loss: 0.05705 | Regression loss: 0.00000 | Running loss: 0.19453
Epoch: 0 | Iteration: 999 | Classification loss: 0.05715 | Regression loss: 0.00000 | Running loss: 0.19453
Epoch: 0 | Iteration: 1000 | Classification loss: 0.05706 | Regression loss: 0.00000 | Running loss: 0.19453
Epoch: 0 | Iteration: 1001 | Classification loss: 0.05720 | Regression loss: 0.00000 | Running loss: 0.19453
Epoch: 0 | Iteration: 1002 | Classification loss: 0.05713 | Regression loss: 0.00000 | Running loss: 0.19453
Epoch: 0 | Iteration: 1003 | Classification loss: 0.05720 | Regression loss: 0.00000 | Running loss: 0.19453
Epoch: 0 | Iteration: 1004 | Classification loss: 0.05710 | Regression loss: 0.00000 | Running loss: 0.19453
Epoch: 0 | Iteration: 1005 | Classification loss: 0.05708 | Regression loss: 0.00000 | Running loss: 0.19453
Epoch: 0 | Iteration: 1006 | Classification loss: 0.05714 | Regression loss: 0.00000 | Running loss: 0.19453
Epoch: 0 | Iteration: 1007 | Classification loss: 0.05706 | Regression loss: 0.00000 | Running loss: 0.19453
Epoch: 0 | Iteration: 1008 | Classification loss: 0.05715 | Regression loss: 0.00000 | Running loss: 0.18930
Epoch: 0 | Iteration: 1009 | Classification loss: 0.05707 | Regression loss: 0.00000 | Running loss: 0.18930
Epoch: 0 | Iteration: 1010 | Classification loss: 0.05717 | Regression loss: 0.00000 | Running loss: 0.18930
Epoch: 0 | Iteration: 1011 | Classification loss: 0.05711 | Regression loss: 0.00000 | Running loss: 0.18929
Epoch: 0 | Iteration: 1012 | Classification loss: 0.05703 | Regression loss: 0.00000 | Running loss: 0.18929
Epoch: 0 | Iteration: 1013 | Classification loss: 0.05708 | Regression loss: 0.00000 | Running loss: 0.18929
Epoch: 0 | Iteration: 1014 | Classification loss: 1.14876 | Regression loss: 1.29049 | Running loss: 0.19406
Epoch: 0 | Iteration: 1015 | Classification loss: 0.05707 | Regression loss: 0.00000 | Running loss: 0.19406
Epoch: 0 | Iteration: 1016 | Classification loss: 0.05712 | Regression loss: 0.00000 | Running loss: 0.19406
Epoch: 0 | Iteration: 1017 | Classification loss: 0.05711 | Regression loss: 0.00000 | Running loss: 0.19405
Epoch: 0 | Iteration: 1018 | Classification loss: 0.05718 | Regression loss: 0.00000 | Running loss: 0.19405
Epoch: 0 | Iteration: 1019 | Classification loss: 0.05716 | Regression loss: 0.00000 | Running loss: 0.19405
Epoch: 0 | Iteration: 1020 | Classification loss: 0.05708 | Regression loss: 0.00000 | Running loss: 0.19405
Epoch: 0 | Iteration: 1021 | Classification loss: 1.14092 | Regression loss: 1.31947 | Running loss: 0.19886
Epoch: 0 | Iteration: 1022 | Classification loss: 0.05703 | Regression loss: 0.00000 | Running loss: 0.19886
Epoch: 0 | Iteration: 1023 | Classification loss: 0.05704 | Regression loss: 0.00000 | Running loss: 0.19886
Epoch: 0 | Iteration: 1024 | Classification loss: 0.05715 | Regression loss: 0.00000 | Running loss: 0.19886
Epoch: 0 | Iteration: 1025 | Classification loss: 0.05712 | Regression loss: 0.00000 | Running loss: 0.19886
Epoch: 0 | Iteration: 1026 | Classification loss: 0.05707 | Regression loss: 0.00000 | Running loss: 0.19885
Epoch: 0 | Iteration: 1027 | Classification loss: 0.05698 | Regression loss: 0.00000 | Running loss: 0.19885
Epoch: 0 | Iteration: 1028 | Classification loss: 0.05711 | Regression loss: 0.00000 | Running loss: 0.19885
Epoch: 0 | Iteration: 1029 | Classification loss: 0.05704 | Regression loss: 0.00000 | Running loss: 0.19885
Epoch: 0 | Iteration: 1030 | Classification loss: 0.05719 | Regression loss: 0.00000 | Running loss: 0.19885
Epoch: 0 | Iteration: 1031 | Classification loss: 0.05706 | Regression loss: 0.00000 | Running loss: 0.19885
Epoch: 0 | Iteration: 1032 | Classification loss: 0.05710 | Regression loss: 0.00000 | Running loss: 0.19885
Epoch: 0 | Iteration: 1033 | Classification loss: 0.05707 | Regression loss: 0.00000 | Running loss: 0.19885
Epoch: 0 | Iteration: 1034 | Classification loss: 0.05703 | Regression loss: 0.00000 | Running loss: 0.19885
Epoch: 0 | Iteration: 1035 | Classification loss: 0.05709 | Regression loss: 0.00000 | Running loss: 0.19427
Epoch: 0 | Iteration: 1036 | Classification loss: 0.05709 | Regression loss: 0.00000 | Running loss: 0.19427
Epoch: 0 | Iteration: 1037 | Classification loss: 0.05716 | Regression loss: 0.00000 | Running loss: 0.19427
Epoch: 0 | Iteration: 1038 | Classification loss: 0.05708 | Regression loss: 0.00000 | Running loss: 0.19056
Epoch: 0 | Iteration: 1039 | Classification loss: 0.05714 | Regression loss: 0.00000 | Running loss: 0.19056
Epoch: 0 | Iteration: 1040 | Classification loss: 1.13950 | Regression loss: 0.94412 | Running loss: 0.19462
Epoch: 0 | Iteration: 1041 | Classification loss: 0.05711 | Regression loss: 0.00000 | Running loss: 0.19461
Epoch: 0 | Iteration: 1042 | Classification loss: 0.05708 | Regression loss: 0.00000 | Running loss: 0.19461
Epoch: 0 | Iteration: 1043 | Classification loss: 0.05709 | Regression loss: 0.00000 | Running loss: 0.19461
Epoch: 0 | Iteration: 1044 | Classification loss: 0.05710 | Regression loss: 0.00000 | Running loss: 0.19461
Epoch: 0 | Iteration: 1045 | Classification loss: 0.05710 | Regression loss: 0.00000 | Running loss: 0.19461
Epoch: 0 | Iteration: 1046 | Classification loss: 0.05711 | Regression loss: 0.00000 | Running loss: 0.19461
Epoch: 0 | Iteration: 1047 | Classification loss: 0.05701 | Regression loss: 0.00000 | Running loss: 0.19461
Epoch: 0 | Iteration: 1048 | Classification loss: 0.05708 | Regression loss: 0.00000 | Running loss: 0.19461
Epoch: 0 | Iteration: 1049 | Classification loss: 0.05705 | Regression loss: 0.00000 | Running loss: 0.19015
Epoch: 0 | Iteration: 1050 | Classification loss: 0.05713 | Regression loss: 0.00000 | Running loss: 0.19015
Epoch: 0 | Iteration: 1051 | Classification loss: 0.05710 | Regression loss: 0.00000 | Running loss: 0.19015
Epoch: 0 | Iteration: 1052 | Classification loss: 0.05715 | Regression loss: 0.00000 | Running loss: 0.19015
Epoch: 0 | Iteration: 1053 | Classification loss: 0.05702 | Regression loss: 0.00000 | Running loss: 0.19015
Epoch: 0 | Iteration: 1054 | Classification loss: 0.05719 | Regression loss: 0.00000 | Running loss: 0.19015
Epoch: 0 | Iteration: 1055 | Classification loss: 0.05703 | Regression loss: 0.00000 | Running loss: 0.19015
Epoch: 0 | Iteration: 1056 | Classification loss: 0.05701 | Regression loss: 0.00000 | Running loss: 0.19015
Epoch: 0 | Iteration: 1057 | Classification loss: 0.05710 | Regression loss: 0.00000 | Running loss: 0.19014
Epoch: 0 | Iteration: 1058 | Classification loss: 1.13460 | Regression loss: 1.15488 | Running loss: 0.19461
Epoch: 0 | Iteration: 1059 | Classification loss: 0.05709 | Regression loss: 0.00000 | Running loss: 0.18971
Epoch: 0 | Iteration: 1060 | Classification loss: 0.05709 | Regression loss: 0.00000 | Running loss: 0.18971
Epoch: 0 | Iteration: 1061 | Classification loss: 0.05705 | Regression loss: 0.00000 | Running loss: 0.18971
Epoch: 0 | Iteration: 1062 | Classification loss: 1.13301 | Regression loss: 1.23739 | Running loss: 0.19434
Epoch: 0 | Iteration: 1063 | Classification loss: 0.05712 | Regression loss: 0.00000 | Running loss: 0.19434
Epoch: 0 | Iteration: 1064 | Classification loss: 0.05706 | Regression loss: 0.00000 | Running loss: 0.19434
Epoch: 0 | Iteration: 1065 | Classification loss: 0.05696 | Regression loss: 0.00000 | Running loss: 0.19433
Epoch: 0 | Iteration: 1066 | Classification loss: 0.05701 | Regression loss: 0.00000 | Running loss: 0.19433
Epoch: 0 | Iteration: 1067 | Classification loss: 0.05708 | Regression loss: 0.00000 | Running loss: 0.19433
Epoch: 0 | Iteration: 1068 | Classification loss: 0.05711 | Regression loss: 0.00000 | Running loss: 0.19433
Epoch: 0 | Iteration: 1069 | Classification loss: 1.18739 | Regression loss: 1.12024 | Running loss: 0.19883
Epoch: 0 | Iteration: 1070 | Classification loss: 0.05713 | Regression loss: 0.00000 | Running loss: 0.19883
Epoch: 0 | Iteration: 1071 | Classification loss: 0.05707 | Regression loss: 0.00000 | Running loss: 0.19883
Epoch: 0 | Iteration: 1072 | Classification loss: 1.15821 | Regression loss: 1.35357 | Running loss: 0.20374
Epoch: 0 | Iteration: 1073 | Classification loss: 0.05714 | Regression loss: 0.00000 | Running loss: 0.20374
Epoch: 0 | Iteration: 1074 | Classification loss: 0.05709 | Regression loss: 0.00000 | Running loss: 0.20374
Epoch: 0 | Iteration: 1075 | Classification loss: 0.05711 | Regression loss: 0.00000 | Running loss: 0.20374
Epoch: 0 | Iteration: 1076 | Classification loss: 1.13685 | Regression loss: 1.23902 | Running loss: 0.20838
Epoch: 0 | Iteration: 1077 | Classification loss: 0.05700 | Regression loss: 0.00000 | Running loss: 0.20838
Epoch: 0 | Iteration: 1078 | Classification loss: 0.05713 | Regression loss: 0.00000 | Running loss: 0.20837
Epoch: 0 | Iteration: 1079 | Classification loss: 0.05706 | Regression loss: 0.00000 | Running loss: 0.20837
Epoch: 0 | Iteration: 1080 | Classification loss: 0.05708 | Regression loss: 0.00000 | Running loss: 0.20837
Epoch: 0 | Iteration: 1081 | Classification loss: 0.05697 | Regression loss: 0.00000 | Running loss: 0.20837
Epoch: 0 | Iteration: 1082 | Classification loss: 0.05711 | Regression loss: 0.00000 | Running loss: 0.20837
Epoch: 0 | Iteration: 1083 | Classification loss: 0.05712 | Regression loss: 0.00000 | Running loss: 0.20837
Epoch: 0 | Iteration: 1084 | Classification loss: 0.05701 | Regression loss: 0.00000 | Running loss: 0.20837
Epoch: 0 | Iteration: 1085 | Classification loss: 0.05711 | Regression loss: 0.00000 | Running loss: 0.20837
Epoch: 0 | Iteration: 1086 | Classification loss: 0.05711 | Regression loss: 0.00000 | Running loss: 0.20837
Epoch: 0 | Iteration: 1087 | Classification loss: 0.05704 | Regression loss: 0.00000 | Running loss: 0.20837
Epoch: 0 | Iteration: 1088 | Classification loss: 0.05696 | Regression loss: 0.00000 | Running loss: 0.20837
Epoch: 0 | Iteration: 1089 | Classification loss: 0.05704 | Regression loss: 0.00000 | Running loss: 0.20837
Epoch: 0 | Iteration: 1090 | Classification loss: 0.05705 | Regression loss: 0.00000 | Running loss: 0.20837
Epoch: 0 | Iteration: 1091 | Classification loss: 0.05699 | Regression loss: 0.00000 | Running loss: 0.20836
Epoch: 0 | Iteration: 1092 | Classification loss: 0.05697 | Regression loss: 0.00000 | Running loss: 0.20836
Epoch: 0 | Iteration: 1093 | Classification loss: 1.13379 | Regression loss: 1.28741 | Running loss: 0.21309
Epoch: 0 | Iteration: 1094 | Classification loss: 1.18751 | Regression loss: 1.00362 | Running loss: 0.21736
Epoch: 0 | Iteration: 1095 | Classification loss: 0.05706 | Regression loss: 0.00000 | Running loss: 0.21736
Epoch: 0 | Iteration: 1096 | Classification loss: 1.15915 | Regression loss: 1.47952 | Running loss: 0.22252
Epoch: 0 | Iteration: 1097 | Classification loss: 0.05708 | Regression loss: 0.00000 | Running loss: 0.22252
Epoch: 0 | Iteration: 1098 | Classification loss: 0.05699 | Regression loss: 0.00000 | Running loss: 0.22252
Epoch: 0 | Iteration: 1099 | Classification loss: 0.05706 | Regression loss: 0.00000 | Running loss: 0.22252
Epoch: 0 | Iteration: 1100 | Classification loss: 0.05713 | Regression loss: 0.00000 | Running loss: 0.22252
Epoch: 0 | Iteration: 1101 | Classification loss: 0.05707 | Regression loss: 0.00000 | Running loss: 0.22252
Epoch: 0 | Iteration: 1102 | Classification loss: 0.05710 | Regression loss: 0.00000 | Running loss: 0.22252
Epoch: 0 | Iteration: 1103 | Classification loss: 0.05701 | Regression loss: 0.00000 | Running loss: 0.22252
Epoch: 0 | Iteration: 1104 | Classification loss: 0.05699 | Regression loss: 0.00000 | Running loss: 0.22252
Epoch: 0 | Iteration: 1105 | Classification loss: 0.05700 | Regression loss: 0.00000 | Running loss: 0.22251
Epoch: 0 | Iteration: 1106 | Classification loss: 0.05710 | Regression loss: 0.00000 | Running loss: 0.22251
Epoch: 0 | Iteration: 1107 | Classification loss: 0.05709 | Regression loss: 0.00000 | Running loss: 0.22251
Epoch: 0 | Iteration: 1108 | Classification loss: 0.05706 | Regression loss: 0.00000 | Running loss: 0.22251
Epoch: 0 | Iteration: 1109 | Classification loss: 0.05701 | Regression loss: 0.00000 | Running loss: 0.22251
Epoch: 0 | Iteration: 1110 | Classification loss: 0.05703 | Regression loss: 0.00000 | Running loss: 0.22251
Epoch: 0 | Iteration: 1111 | Classification loss: 0.05700 | Regression loss: 0.00000 | Running loss: 0.22251
Epoch: 0 | Iteration: 1112 | Classification loss: 0.05711 | Regression loss: 0.00000 | Running loss: 0.22251
Epoch: 0 | Iteration: 1113 | Classification loss: 0.05699 | Regression loss: 0.00000 | Running loss: 0.21743
Epoch: 0 | Iteration: 1114 | Classification loss: 0.05712 | Regression loss: 0.00000 | Running loss: 0.21743
Epoch: 0 | Iteration: 1115 | Classification loss: 0.05705 | Regression loss: 0.00000 | Running loss: 0.21743
Epoch: 0 | Iteration: 1116 | Classification loss: 0.05704 | Regression loss: 0.00000 | Running loss: 0.21743
Epoch: 0 | Iteration: 1117 | Classification loss: 0.05699 | Regression loss: 0.00000 | Running loss: 0.21301
Epoch: 0 | Iteration: 1118 | Classification loss: 0.05698 | Regression loss: 0.00000 | Running loss: 0.21301
Epoch: 0 | Iteration: 1119 | Classification loss: 0.05708 | Regression loss: 0.00000 | Running loss: 0.21301
Epoch: 0 | Iteration: 1120 | Classification loss: 0.05698 | Regression loss: 0.00000 | Running loss: 0.21301
Epoch: 0 | Iteration: 1121 | Classification loss: 0.05709 | Regression loss: 0.00000 | Running loss: 0.21301
Epoch: 0 | Iteration: 1122 | Classification loss: 0.05698 | Regression loss: 0.00000 | Running loss: 0.21301
Epoch: 0 | Iteration: 1123 | Classification loss: 1.13987 | Regression loss: 1.27324 | Running loss: 0.21772
Epoch: 0 | Iteration: 1124 | Classification loss: 0.05701 | Regression loss: 0.00000 | Running loss: 0.21772
Epoch: 0 | Iteration: 1125 | Classification loss: 0.05714 | Regression loss: 0.00000 | Running loss: 0.21772
Epoch: 0 | Iteration: 1126 | Classification loss: 0.05708 | Regression loss: 0.00000 | Running loss: 0.21771
Epoch: 0 | Iteration: 1127 | Classification loss: 0.05708 | Regression loss: 0.00000 | Running loss: 0.21771
Epoch: 0 | Iteration: 1128 | Classification loss: 0.05693 | Regression loss: 0.00000 | Running loss: 0.21771
Epoch: 0 | Iteration: 1129 | Classification loss: 0.05700 | Regression loss: 0.00000 | Running loss: 0.21771
Epoch: 0 | Iteration: 1130 | Classification loss: 0.05694 | Regression loss: 0.00000 | Running loss: 0.21771
Epoch: 0 | Iteration: 1131 | Classification loss: 0.05708 | Regression loss: 0.00000 | Running loss: 0.21771
Epoch: 0 | Iteration: 1132 | Classification loss: 0.05699 | Regression loss: 0.00000 | Running loss: 0.21771
Epoch: 0 | Iteration: 1133 | Classification loss: 0.05699 | Regression loss: 0.00000 | Running loss: 0.21771
Epoch: 0 | Iteration: 1134 | Classification loss: 0.05696 | Regression loss: 0.00000 | Running loss: 0.21771
Epoch: 0 | Iteration: 1135 | Classification loss: 0.05702 | Regression loss: 0.00000 | Running loss: 0.21771
Epoch: 0 | Iteration: 1136 | Classification loss: 0.05693 | Regression loss: 0.00000 | Running loss: 0.21771
Epoch: 0 | Iteration: 1137 | Classification loss: 1.15853 | Regression loss: 1.03802 | Running loss: 0.22199
Epoch: 0 | Iteration: 1138 | Classification loss: 0.05695 | Regression loss: 0.00000 | Running loss: 0.22198
Epoch: 0 | Iteration: 1139 | Classification loss: 0.05703 | Regression loss: 0.00000 | Running loss: 0.21789
Epoch: 0 | Iteration: 1140 | Classification loss: 0.05691 | Regression loss: 0.00000 | Running loss: 0.21307
Epoch: 0 | Iteration: 1141 | Classification loss: 0.05696 | Regression loss: 0.00000 | Running loss: 0.21307
Epoch: 0 | Iteration: 1142 | Classification loss: 0.05702 | Regression loss: 0.00000 | Running loss: 0.21307
Epoch: 0 | Iteration: 1143 | Classification loss: 1.13642 | Regression loss: 1.04197 | Running loss: 0.21731
Epoch: 0 | Iteration: 1144 | Classification loss: 0.05702 | Regression loss: 0.00000 | Running loss: 0.21731
Epoch: 0 | Iteration: 1145 | Classification loss: 0.05698 | Regression loss: 0.00000 | Running loss: 0.21731
Epoch: 0 | Iteration: 1146 | Classification loss: 0.05701 | Regression loss: 0.00000 | Running loss: 0.21731
Epoch: 0 | Iteration: 1147 | Classification loss: 0.05708 | Regression loss: 0.00000 | Running loss: 0.21731
Epoch: 0 | Iteration: 1148 | Classification loss: 0.05709 | Regression loss: 0.00000 | Running loss: 0.21731
Epoch: 0 | Iteration: 1149 | Classification loss: 0.05703 | Regression loss: 0.00000 | Running loss: 0.21731
Epoch: 0 | Iteration: 1150 | Classification loss: 0.05695 | Regression loss: 0.00000 | Running loss: 0.21731
Epoch: 0 | Iteration: 1151 | Classification loss: 0.05697 | Regression loss: 0.00000 | Running loss: 0.21731
Epoch: 0 | Iteration: 1152 | Classification loss: 0.05703 | Regression loss: 0.00000 | Running loss: 0.21731
Epoch: 0 | Iteration: 1153 | Classification loss: 0.05694 | Regression loss: 0.00000 | Running loss: 0.21731
Epoch: 0 | Iteration: 1154 | Classification loss: 0.05706 | Regression loss: 0.00000 | Running loss: 0.21731
Epoch: 0 | Iteration: 1155 | Classification loss: 0.05697 | Regression loss: 0.00000 | Running loss: 0.21211
Epoch: 0 | Iteration: 1156 | Classification loss: 1.13333 | Regression loss: 1.26975 | Running loss: 0.21680
Epoch: 0 | Iteration: 1157 | Classification loss: 0.05696 | Regression loss: 0.00000 | Running loss: 0.21680
Epoch: 0 | Iteration: 1158 | Classification loss: 0.05702 | Regression loss: 0.00000 | Running loss: 0.21680
Epoch: 0 | Iteration: 1159 | Classification loss: 0.05703 | Regression loss: 0.00000 | Running loss: 0.21680
Epoch: 0 | Iteration: 1160 | Classification loss: 0.05700 | Regression loss: 0.00000 | Running loss: 0.21680
Epoch: 0 | Iteration: 1161 | Classification loss: 0.05703 | Regression loss: 0.00000 | Running loss: 0.21680
Epoch: 0 | Iteration: 1162 | Classification loss: 0.05705 | Regression loss: 0.00000 | Running loss: 0.21227
Epoch: 0 | Iteration: 1163 | Classification loss: 0.05708 | Regression loss: 0.00000 | Running loss: 0.21227
Epoch: 0 | Iteration: 1164 | Classification loss: 0.05705 | Regression loss: 0.00000 | Running loss: 0.21227
Epoch: 0 | Iteration: 1165 | Classification loss: 0.05691 | Regression loss: 0.00000 | Running loss: 0.21227
Epoch: 0 | Iteration: 1166 | Classification loss: 0.05703 | Regression loss: 0.00000 | Running loss: 0.21227
Epoch: 0 | Iteration: 1167 | Classification loss: 0.05703 | Regression loss: 0.00000 | Running loss: 0.21227
Epoch: 0 | Iteration: 1168 | Classification loss: 0.05693 | Regression loss: 0.00000 | Running loss: 0.21226
Epoch: 0 | Iteration: 1169 | Classification loss: 0.05705 | Regression loss: 0.00000 | Running loss: 0.21226
Epoch: 0 | Iteration: 1170 | Classification loss: 0.05694 | Regression loss: 0.00000 | Running loss: 0.20728
Epoch: 0 | Iteration: 1171 | Classification loss: 0.05703 | Regression loss: 0.00000 | Running loss: 0.20728
Epoch: 0 | Iteration: 1172 | Classification loss: 0.05694 | Regression loss: 0.00000 | Running loss: 0.20728
Epoch: 0 | Iteration: 1173 | Classification loss: 0.05709 | Regression loss: 0.00000 | Running loss: 0.20728
Epoch: 0 | Iteration: 1174 | Classification loss: 0.05704 | Regression loss: 0.00000 | Running loss: 0.20728
Epoch: 0 | Iteration: 1175 | Classification loss: 0.05692 | Regression loss: 0.00000 | Running loss: 0.20728
Epoch: 0 | Iteration: 1176 | Classification loss: 0.05696 | Regression loss: 0.00000 | Running loss: 0.20728
Epoch: 0 | Iteration: 1177 | Classification loss: 0.05703 | Regression loss: 0.00000 | Running loss: 0.20728
Epoch: 0 | Iteration: 1178 | Classification loss: 0.05708 | Regression loss: 0.00000 | Running loss: 0.20728
Epoch: 0 | Iteration: 1179 | Classification loss: 0.05708 | Regression loss: 0.00000 | Running loss: 0.20727
Epoch: 0 | Iteration: 1180 | Classification loss: 0.05699 | Regression loss: 0.00000 | Running loss: 0.20727
Epoch: 0 | Iteration: 1181 | Classification loss: 0.05699 | Regression loss: 0.00000 | Running loss: 0.20727
Epoch: 0 | Iteration: 1182 | Classification loss: 0.05704 | Regression loss: 0.00000 | Running loss: 0.20727
Epoch: 0 | Iteration: 1183 | Classification loss: 0.05697 | Regression loss: 0.00000 | Running loss: 0.20727
Epoch: 0 | Iteration: 1184 | Classification loss: 0.05692 | Regression loss: 0.00000 | Running loss: 0.20727
Epoch: 0 | Iteration: 1185 | Classification loss: 1.13587 | Regression loss: 1.32614 | Running loss: 0.21208
Epoch: 0 | Iteration: 1186 | Classification loss: 0.05691 | Regression loss: 0.00000 | Running loss: 0.21208
Epoch: 0 | Iteration: 1187 | Classification loss: 0.05700 | Regression loss: 0.00000 | Running loss: 0.21208
Epoch: 0 | Iteration: 1188 | Classification loss: 0.05694 | Regression loss: 0.00000 | Running loss: 0.21208
Epoch: 0 | Iteration: 1189 | Classification loss: 0.05690 | Regression loss: 0.00000 | Running loss: 0.21208
Epoch: 0 | Iteration: 1190 | Classification loss: 0.05694 | Regression loss: 0.00000 | Running loss: 0.21208
Epoch: 0 | Iteration: 1191 | Classification loss: 0.05698 | Regression loss: 0.00000 | Running loss: 0.21208
Epoch: 0 | Iteration: 1192 | Classification loss: 0.05694 | Regression loss: 0.00000 | Running loss: 0.21207
Epoch: 0 | Iteration: 1193 | Classification loss: 0.05701 | Regression loss: 0.00000 | Running loss: 0.21207
Epoch: 0 | Iteration: 1194 | Classification loss: 0.05691 | Regression loss: 0.00000 | Running loss: 0.21207
Epoch: 0 | Iteration: 1195 | Classification loss: 0.05693 | Regression loss: 0.00000 | Running loss: 0.21207
Epoch: 0 | Iteration: 1196 | Classification loss: 0.05693 | Regression loss: 0.00000 | Running loss: 0.21207
Epoch: 0 | Iteration: 1197 | Classification loss: 1.13591 | Regression loss: 1.36608 | Running loss: 0.21696
Epoch: 0 | Iteration: 1198 | Classification loss: 0.05699 | Regression loss: 0.00000 | Running loss: 0.21696
Epoch: 0 | Iteration: 1199 | Classification loss: 0.05697 | Regression loss: 0.00000 | Running loss: 0.21696
Epoch: 0 | Iteration: 1200 | Classification loss: 0.05704 | Regression loss: 0.00000 | Running loss: 0.21696
Epoch: 0 | Iteration: 1201 | Classification loss: 0.05700 | Regression loss: 0.00000 | Running loss: 0.21696
Epoch: 0 | Iteration: 1202 | Classification loss: 0.05699 | Regression loss: 0.00000 | Running loss: 0.21696
Epoch: 0 | Iteration: 1203 | Classification loss: 0.05695 | Regression loss: 0.00000 | Running loss: 0.21696
Epoch: 0 | Iteration: 1204 | Classification loss: 0.05692 | Regression loss: 0.00000 | Running loss: 0.21696
Epoch: 0 | Iteration: 1205 | Classification loss: 0.05703 | Regression loss: 0.00000 | Running loss: 0.21696
Epoch: 0 | Iteration: 1206 | Classification loss: 0.05698 | Regression loss: 0.00000 | Running loss: 0.21695
Epoch: 0 | Iteration: 1207 | Classification loss: 0.05699 | Regression loss: 0.00000 | Running loss: 0.21695
Epoch: 0 | Iteration: 1208 | Classification loss: 0.05689 | Regression loss: 0.00000 | Running loss: 0.21695
Epoch: 0 | Iteration: 1209 | Classification loss: 0.05683 | Regression loss: 0.00000 | Running loss: 0.21695
Epoch: 0 | Iteration: 1210 | Classification loss: 0.05698 | Regression loss: 0.00000 | Running loss: 0.21695
Epoch: 0 | Iteration: 1211 | Classification loss: 0.05689 | Regression loss: 0.00000 | Running loss: 0.21264
Epoch: 0 | Iteration: 1212 | Classification loss: 0.05701 | Regression loss: 0.00000 | Running loss: 0.21264
Epoch: 0 | Iteration: 1213 | Classification loss: 0.05703 | Regression loss: 0.00000 | Running loss: 0.21264
Epoch: 0 | Iteration: 1214 | Classification loss: 0.05692 | Regression loss: 0.00000 | Running loss: 0.21264
Epoch: 0 | Iteration: 1215 | Classification loss: 0.05697 | Regression loss: 0.00000 | Running loss: 0.21263
Epoch: 0 | Iteration: 1216 | Classification loss: 0.05694 | Regression loss: 0.00000 | Running loss: 0.21263
Epoch: 0 | Iteration: 1217 | Classification loss: 0.05702 | Regression loss: 0.00000 | Running loss: 0.21263
Epoch: 0 | Iteration: 1218 | Classification loss: 1.15821 | Regression loss: 0.97719 | Running loss: 0.21679
Epoch: 0 | Iteration: 1219 | Classification loss: 0.05702 | Regression loss: 0.00000 | Running loss: 0.21679
Epoch: 0 | Iteration: 1220 | Classification loss: 0.05690 | Regression loss: 0.00000 | Running loss: 0.21679
Epoch: 0 | Iteration: 1221 | Classification loss: 0.05699 | Regression loss: 0.00000 | Running loss: 0.21679
Epoch: 0 | Iteration: 1222 | Classification loss: 0.05691 | Regression loss: 0.00000 | Running loss: 0.21679
Epoch: 0 | Iteration: 1223 | Classification loss: 0.05691 | Regression loss: 0.00000 | Running loss: 0.21679
Epoch: 0 | Iteration: 1224 | Classification loss: 0.05691 | Regression loss: 0.00000 | Running loss: 0.21678
Epoch: 0 | Iteration: 1225 | Classification loss: 0.05692 | Regression loss: 0.00000 | Running loss: 0.21678
Epoch: 0 | Iteration: 1226 | Classification loss: 0.05698 | Regression loss: 0.00000 | Running loss: 0.21678
Epoch: 0 | Iteration: 1227 | Classification loss: 0.05702 | Regression loss: 0.00000 | Running loss: 0.21245
Epoch: 0 | Iteration: 1228 | Classification loss: 0.05684 | Regression loss: 0.00000 | Running loss: 0.21245
Epoch: 0 | Iteration: 1229 | Classification loss: 0.05689 | Regression loss: 0.00000 | Running loss: 0.21245
Epoch: 0 | Iteration: 1230 | Classification loss: 0.05698 | Regression loss: 0.00000 | Running loss: 0.21245
Epoch: 0 | Iteration: 1231 | Classification loss: 0.05687 | Regression loss: 0.00000 | Running loss: 0.21245
Epoch: 0 | Iteration: 1232 | Classification loss: 0.05695 | Regression loss: 0.00000 | Running loss: 0.21245
Epoch: 0 | Iteration: 1233 | Classification loss: 0.05686 | Regression loss: 0.00000 | Running loss: 0.21245
Epoch: 0 | Iteration: 1234 | Classification loss: 0.05699 | Regression loss: 0.00000 | Running loss: 0.21245
Epoch: 0 | Iteration: 1235 | Classification loss: 0.05682 | Regression loss: 0.00000 | Running loss: 0.21245
Epoch: 0 | Iteration: 1236 | Classification loss: 0.05694 | Regression loss: 0.00000 | Running loss: 0.21244
Epoch: 0 | Iteration: 1237 | Classification loss: 0.05700 | Regression loss: 0.00000 | Running loss: 0.21244
Epoch: 0 | Iteration: 1238 | Classification loss: 0.05690 | Regression loss: 0.00000 | Running loss: 0.21244
Epoch: 0 | Iteration: 1239 | Classification loss: 0.05695 | Regression loss: 0.00000 | Running loss: 0.21244
Epoch: 0 | Iteration: 1240 | Classification loss: 0.05693 | Regression loss: 0.00000 | Running loss: 0.21244
Epoch: 0 | Iteration: 1241 | Classification loss: 0.05697 | Regression loss: 0.00000 | Running loss: 0.21244
Epoch: 0 | Iteration: 1242 | Classification loss: 0.05691 | Regression loss: 0.00000 | Running loss: 0.21244
Epoch: 0 | Iteration: 1243 | Classification loss: 0.05684 | Regression loss: 0.00000 | Running loss: 0.21244
Epoch: 0 | Iteration: 1244 | Classification loss: 0.05676 | Regression loss: 0.00000 | Running loss: 0.21244
Epoch: 0 | Iteration: 1245 | Classification loss: 0.05695 | Regression loss: 0.00000 | Running loss: 0.21244
Epoch: 0 | Iteration: 1246 | Classification loss: 0.05681 | Regression loss: 0.00000 | Running loss: 0.21244
Epoch: 0 | Iteration: 1247 | Classification loss: 0.05690 | Regression loss: 0.00000 | Running loss: 0.21244
Epoch: 0 | Iteration: 1248 | Classification loss: 0.05701 | Regression loss: 0.00000 | Running loss: 0.21243
Epoch: 0 | Iteration: 1249 | Classification loss: 0.05691 | Regression loss: 0.00000 | Running loss: 0.21243
Epoch: 0 | Iteration: 1250 | Classification loss: 0.05685 | Regression loss: 0.00000 | Running loss: 0.21243
Epoch: 0 | Iteration: 1251 | Classification loss: 0.05690 | Regression loss: 0.00000 | Running loss: 0.21243
Epoch: 0 | Iteration: 1252 | Classification loss: 0.05688 | Regression loss: 0.00000 | Running loss: 0.21243
Epoch: 0 | Iteration: 1253 | Classification loss: 0.05692 | Regression loss: 0.00000 | Running loss: 0.21243
Epoch: 0 | Iteration: 1254 | Classification loss: 0.05695 | Regression loss: 0.00000 | Running loss: 0.21243
Epoch: 0 | Iteration: 1255 | Classification loss: 0.05697 | Regression loss: 0.00000 | Running loss: 0.21243
Epoch: 0 | Iteration: 1256 | Classification loss: 0.05698 | Regression loss: 0.00000 | Running loss: 0.21243
Epoch: 0 | Iteration: 1257 | Classification loss: 0.05681 | Regression loss: 0.00000 | Running loss: 0.21243
Epoch: 0 | Iteration: 1258 | Classification loss: 0.05697 | Regression loss: 0.00000 | Running loss: 0.21243
Epoch: 0 | Iteration: 1259 | Classification loss: 0.05690 | Regression loss: 0.00000 | Running loss: 0.20783
Epoch: 0 | Iteration: 1260 | Classification loss: 0.05702 | Regression loss: 0.00000 | Running loss: 0.20783
Epoch: 0 | Iteration: 1261 | Classification loss: 0.05693 | Regression loss: 0.00000 | Running loss: 0.20783
Epoch: 0 | Iteration: 1262 | Classification loss: 0.05699 | Regression loss: 0.00000 | Running loss: 0.20783
Epoch: 0 | Iteration: 1263 | Classification loss: 0.05701 | Regression loss: 0.00000 | Running loss: 0.20783
Epoch: 0 | Iteration: 1264 | Classification loss: 0.05702 | Regression loss: 0.00000 | Running loss: 0.20783
Epoch: 0 | Iteration: 1265 | Classification loss: 0.05686 | Regression loss: 0.00000 | Running loss: 0.20783
Epoch: 0 | Iteration: 1266 | Classification loss: 0.05688 | Regression loss: 0.00000 | Running loss: 0.20783
Epoch: 0 | Iteration: 1267 | Classification loss: 0.05687 | Regression loss: 0.00000 | Running loss: 0.20783
Epoch: 0 | Iteration: 1268 | Classification loss: 0.05692 | Regression loss: 0.00000 | Running loss: 0.20783
Epoch: 0 | Iteration: 1269 | Classification loss: 0.05689 | Regression loss: 0.00000 | Running loss: 0.20308
Epoch: 0 | Iteration: 1270 | Classification loss: 0.05697 | Regression loss: 0.00000 | Running loss: 0.20308
Epoch: 0 | Iteration: 1271 | Classification loss: 0.05691 | Regression loss: 0.00000 | Running loss: 0.20308
Epoch: 0 | Iteration: 1272 | Classification loss: 0.05694 | Regression loss: 0.00000 | Running loss: 0.20308
Epoch: 0 | Iteration: 1273 | Classification loss: 0.05688 | Regression loss: 0.00000 | Running loss: 0.20308
Epoch: 0 | Iteration: 1274 | Classification loss: 0.05694 | Regression loss: 0.00000 | Running loss: 0.20308
Epoch: 0 | Iteration: 1275 | Classification loss: 0.05695 | Regression loss: 0.00000 | Running loss: 0.20308
Epoch: 0 | Iteration: 1276 | Classification loss: 0.05677 | Regression loss: 0.00000 | Running loss: 0.20308
Epoch: 0 | Iteration: 1277 | Classification loss: 0.05696 | Regression loss: 0.00000 | Running loss: 0.20308
Epoch: 0 | Iteration: 1278 | Classification loss: 0.05689 | Regression loss: 0.00000 | Running loss: 0.20308
Epoch: 0 | Iteration: 1279 | Classification loss: 0.05697 | Regression loss: 0.00000 | Running loss: 0.20308
Epoch: 0 | Iteration: 1280 | Classification loss: 0.05690 | Regression loss: 0.00000 | Running loss: 0.20308
Epoch: 0 | Iteration: 1281 | Classification loss: 0.05686 | Regression loss: 0.00000 | Running loss: 0.20308
Epoch: 0 | Iteration: 1282 | Classification loss: 0.05693 | Regression loss: 0.00000 | Running loss: 0.20307
Epoch: 0 | Iteration: 1283 | Classification loss: 0.05695 | Regression loss: 0.00000 | Running loss: 0.20307
Epoch: 0 | Iteration: 1284 | Classification loss: 0.05683 | Regression loss: 0.00000 | Running loss: 0.20307
Epoch: 0 | Iteration: 1285 | Classification loss: 0.05685 | Regression loss: 0.00000 | Running loss: 0.20307
Epoch: 0 | Iteration: 1286 | Classification loss: 0.05686 | Regression loss: 0.00000 | Running loss: 0.20307
Epoch: 0 | Iteration: 1287 | Classification loss: 0.05697 | Regression loss: 0.00000 | Running loss: 0.20307
Epoch: 0 | Iteration: 1288 | Classification loss: 0.05688 | Regression loss: 0.00000 | Running loss: 0.20307
Epoch: 0 | Iteration: 1289 | Classification loss: 0.05692 | Regression loss: 0.00000 | Running loss: 0.20307
Epoch: 0 | Iteration: 1290 | Classification loss: 0.05687 | Regression loss: 0.00000 | Running loss: 0.20307
Epoch: 0 | Iteration: 1291 | Classification loss: 0.05684 | Regression loss: 0.00000 | Running loss: 0.20307
Epoch: 0 | Iteration: 1292 | Classification loss: 0.05684 | Regression loss: 0.00000 | Running loss: 0.20307
Epoch: 0 | Iteration: 1293 | Classification loss: 0.05694 | Regression loss: 0.00000 | Running loss: 0.20307
Epoch: 0 | Iteration: 1294 | Classification loss: 0.05693 | Regression loss: 0.00000 | Running loss: 0.20307
Epoch: 0 | Iteration: 1295 | Classification loss: 0.05698 | Regression loss: 0.00000 | Running loss: 0.20307
Epoch: 0 | Iteration: 1296 | Classification loss: 0.05684 | Regression loss: 0.00000 | Running loss: 0.20306
Epoch: 0 | Iteration: 1297 | Classification loss: 0.05698 | Regression loss: 0.00000 | Running loss: 0.20306
Epoch: 0 | Iteration: 1298 | Classification loss: 0.05689 | Regression loss: 0.00000 | Running loss: 0.20306
Epoch: 0 | Iteration: 1299 | Classification loss: 0.05689 | Regression loss: 0.00000 | Running loss: 0.20306
Epoch: 0 | Iteration: 1300 | Classification loss: 0.05683 | Regression loss: 0.00000 | Running loss: 0.20306
Epoch: 0 | Iteration: 1301 | Classification loss: 0.05682 | Regression loss: 0.00000 | Running loss: 0.20306
Epoch: 0 | Iteration: 1302 | Classification loss: 0.05688 | Regression loss: 0.00000 | Running loss: 0.20306
Epoch: 0 | Iteration: 1303 | Classification loss: 0.05697 | Regression loss: 0.00000 | Running loss: 0.20306
Epoch: 0 | Iteration: 1304 | Classification loss: 0.05694 | Regression loss: 0.00000 | Running loss: 0.20306
Epoch: 0 | Iteration: 1305 | Classification loss: 0.05690 | Regression loss: 0.00000 | Running loss: 0.20306
Epoch: 0 | Iteration: 1306 | Classification loss: 0.05687 | Regression loss: 0.00000 | Running loss: 0.20306
Epoch: 0 | Iteration: 1307 | Classification loss: 0.05693 | Regression loss: 0.00000 | Running loss: 0.20306
Epoch: 0 | Iteration: 1308 | Classification loss: 0.05691 | Regression loss: 0.00000 | Running loss: 0.20306
Epoch: 0 | Iteration: 1309 | Classification loss: 0.05687 | Regression loss: 0.00000 | Running loss: 0.20306
Epoch: 0 | Iteration: 1310 | Classification loss: 0.05700 | Regression loss: 0.00000 | Running loss: 0.20305
Epoch: 0 | Iteration: 1311 | Classification loss: 0.05680 | Regression loss: 0.00000 | Running loss: 0.20305
Epoch: 0 | Iteration: 1312 | Classification loss: 0.05685 | Regression loss: 0.00000 | Running loss: 0.20305
Epoch: 0 | Iteration: 1313 | Classification loss: 0.05674 | Regression loss: 0.00000 | Running loss: 0.20305
Epoch: 0 | Iteration: 1314 | Classification loss: 0.05682 | Regression loss: 0.00000 | Running loss: 0.20305
Epoch: 0 | Iteration: 1315 | Classification loss: 0.05688 | Regression loss: 0.00000 | Running loss: 0.19858
Epoch: 0 | Iteration: 1316 | Classification loss: 0.05688 | Regression loss: 0.00000 | Running loss: 0.19858
Epoch: 0 | Iteration: 1317 | Classification loss: 0.05687 | Regression loss: 0.00000 | Running loss: 0.19858
Epoch: 0 | Iteration: 1318 | Classification loss: 0.05689 | Regression loss: 0.00000 | Running loss: 0.19858
Epoch: 0 | Iteration: 1319 | Classification loss: 0.05689 | Regression loss: 0.00000 | Running loss: 0.19399
Epoch: 0 | Iteration: 1320 | Classification loss: 0.05682 | Regression loss: 0.00000 | Running loss: 0.19399
Epoch: 0 | Iteration: 1321 | Classification loss: 0.05698 | Regression loss: 0.00000 | Running loss: 0.19399
Epoch: 0 | Iteration: 1322 | Classification loss: 0.05684 | Regression loss: 0.00000 | Running loss: 0.19398
Epoch: 0 | Iteration: 1323 | Classification loss: 0.05694 | Regression loss: 0.00000 | Running loss: 0.19398
Epoch: 0 | Iteration: 1324 | Classification loss: 0.05692 | Regression loss: 0.00000 | Running loss: 0.18920
Epoch: 0 | Iteration: 1325 | Classification loss: 0.05678 | Regression loss: 0.00000 | Running loss: 0.18920
Epoch: 0 | Iteration: 1326 | Classification loss: 0.05682 | Regression loss: 0.00000 | Running loss: 0.18920
Epoch: 0 | Iteration: 1327 | Classification loss: 0.05689 | Regression loss: 0.00000 | Running loss: 0.18919
Epoch: 0 | Iteration: 1328 | Classification loss: 0.05691 | Regression loss: 0.00000 | Running loss: 0.18919
Epoch: 0 | Iteration: 1329 | Classification loss: 0.05686 | Regression loss: 0.00000 | Running loss: 0.18919
Epoch: 0 | Iteration: 1330 | Classification loss: 0.05685 | Regression loss: 0.00000 | Running loss: 0.18919
Epoch: 0 | Iteration: 1331 | Classification loss: 0.05693 | Regression loss: 0.00000 | Running loss: 0.18919
Epoch: 0 | Iteration: 1332 | Classification loss: 0.05685 | Regression loss: 0.00000 | Running loss: 0.18919
Epoch: 0 | Iteration: 1333 | Classification loss: 0.05674 | Regression loss: 0.00000 | Running loss: 0.18919
Epoch: 0 | Iteration: 1334 | Classification loss: 1.14606 | Regression loss: 1.26124 | Running loss: 0.19389
Epoch: 0 | Iteration: 1335 | Classification loss: 0.05689 | Regression loss: 0.00000 | Running loss: 0.19389
Epoch: 0 | Iteration: 1336 | Classification loss: 0.05694 | Regression loss: 0.00000 | Running loss: 0.19389
Epoch: 0 | Iteration: 1337 | Classification loss: 1.14013 | Regression loss: 1.45422 | Running loss: 0.19896
Epoch: 0 | Iteration: 1338 | Classification loss: 0.05687 | Regression loss: 0.00000 | Running loss: 0.19896
Epoch: 0 | Iteration: 1339 | Classification loss: 0.05681 | Regression loss: 0.00000 | Running loss: 0.19896
Epoch: 0 | Iteration: 1340 | Classification loss: 0.05695 | Regression loss: 0.00000 | Running loss: 0.19896
Epoch: 0 | Iteration: 1341 | Classification loss: 0.05679 | Regression loss: 0.00000 | Running loss: 0.19896
Epoch: 0 | Iteration: 1342 | Classification loss: 0.05695 | Regression loss: 0.00000 | Running loss: 0.19896
Epoch: 0 | Iteration: 1343 | Classification loss: 0.05681 | Regression loss: 0.00000 | Running loss: 0.19896
Epoch: 0 | Iteration: 1344 | Classification loss: 0.05692 | Regression loss: 0.00000 | Running loss: 0.19896
Epoch: 0 | Iteration: 1345 | Classification loss: 0.05689 | Regression loss: 0.00000 | Running loss: 0.19896
Epoch: 0 | Iteration: 1346 | Classification loss: 0.05690 | Regression loss: 0.00000 | Running loss: 0.19896
Epoch: 0 | Iteration: 1347 | Classification loss: 0.05689 | Regression loss: 0.00000 | Running loss: 0.19896
Epoch: 0 | Iteration: 1348 | Classification loss: 0.05676 | Regression loss: 0.00000 | Running loss: 0.19895
Epoch: 0 | Iteration: 1349 | Classification loss: 0.05690 | Regression loss: 0.00000 | Running loss: 0.19895
Epoch: 0 | Iteration: 1350 | Classification loss: 0.05680 | Regression loss: 0.00000 | Running loss: 0.19530
Epoch: 0 | Iteration: 1351 | Classification loss: 0.05679 | Regression loss: 0.00000 | Running loss: 0.19530
Epoch: 0 | Iteration: 1352 | Classification loss: 0.05683 | Regression loss: 0.00000 | Running loss: 0.19530
Epoch: 0 | Iteration: 1353 | Classification loss: 1.18792 | Regression loss: 1.05845 | Running loss: 0.19967
Epoch: 0 | Iteration: 1354 | Classification loss: 0.05685 | Regression loss: 0.00000 | Running loss: 0.19967
Epoch: 0 | Iteration: 1355 | Classification loss: 0.05693 | Regression loss: 0.00000 | Running loss: 0.19967
Epoch: 0 | Iteration: 1356 | Classification loss: 0.05689 | Regression loss: 0.00000 | Running loss: 0.19967
Epoch: 0 | Iteration: 1357 | Classification loss: 0.05691 | Regression loss: 0.00000 | Running loss: 0.19967
Epoch: 0 | Iteration: 1358 | Classification loss: 0.05678 | Regression loss: 0.00000 | Running loss: 0.19967
Epoch: 0 | Iteration: 1359 | Classification loss: 0.05687 | Regression loss: 0.00000 | Running loss: 0.19967
Epoch: 0 | Iteration: 1360 | Classification loss: 0.05679 | Regression loss: 0.00000 | Running loss: 0.19967
Epoch: 0 | Iteration: 1361 | Classification loss: 0.05687 | Regression loss: 0.00000 | Running loss: 0.19967
Epoch: 0 | Iteration: 1362 | Classification loss: 0.05681 | Regression loss: 0.00000 | Running loss: 0.19967
Epoch: 0 | Iteration: 1363 | Classification loss: 0.05687 | Regression loss: 0.00000 | Running loss: 0.19967
Epoch: 0 | Iteration: 1364 | Classification loss: 0.05679 | Regression loss: 0.00000 | Running loss: 0.19967
Epoch: 0 | Iteration: 1365 | Classification loss: 0.05692 | Regression loss: 0.00000 | Running loss: 0.19967
Epoch: 0 | Iteration: 1366 | Classification loss: 0.05673 | Regression loss: 0.00000 | Running loss: 0.19437
Epoch: 0 | Iteration: 1367 | Classification loss: 0.05675 | Regression loss: 0.00000 | Running loss: 0.19437
Epoch: 0 | Iteration: 1368 | Classification loss: 0.05677 | Regression loss: 0.00000 | Running loss: 0.19437
Epoch: 0 | Iteration: 1369 | Classification loss: 0.05680 | Regression loss: 0.00000 | Running loss: 0.19437
Epoch: 0 | Iteration: 1370 | Classification loss: 0.05684 | Regression loss: 0.00000 | Running loss: 0.19437
Epoch: 0 | Iteration: 1371 | Classification loss: 0.05689 | Regression loss: 0.00000 | Running loss: 0.19014
Epoch: 0 | Iteration: 1372 | Classification loss: 0.05680 | Regression loss: 0.00000 | Running loss: 0.19014
Epoch: 0 | Iteration: 1373 | Classification loss: 0.05688 | Regression loss: 0.00000 | Running loss: 0.19014
Epoch: 0 | Iteration: 1374 | Classification loss: 0.05685 | Regression loss: 0.00000 | Running loss: 0.19014
Epoch: 0 | Iteration: 1375 | Classification loss: 0.05686 | Regression loss: 0.00000 | Running loss: 0.19014
Epoch: 0 | Iteration: 1376 | Classification loss: 0.05688 | Regression loss: 0.00000 | Running loss: 0.19014
Epoch: 0 | Iteration: 1377 | Classification loss: 0.05690 | Regression loss: 0.00000 | Running loss: 0.19013
Epoch: 0 | Iteration: 1378 | Classification loss: 0.05695 | Regression loss: 0.00000 | Running loss: 0.19013
Epoch: 0 | Iteration: 1379 | Classification loss: 0.05693 | Regression loss: 0.00000 | Running loss: 0.19013
Epoch: 0 | Iteration: 1380 | Classification loss: 0.05685 | Regression loss: 0.00000 | Running loss: 0.19013
Epoch: 0 | Iteration: 1381 | Classification loss: 0.05676 | Regression loss: 0.00000 | Running loss: 0.19013
Epoch: 0 | Iteration: 1382 | Classification loss: 0.05691 | Regression loss: 0.00000 | Running loss: 0.19013
Epoch: 0 | Iteration: 1383 | Classification loss: 0.05691 | Regression loss: 0.00000 | Running loss: 0.19013
Epoch: 0 | Iteration: 1384 | Classification loss: 0.05688 | Regression loss: 0.00000 | Running loss: 0.19013
Epoch: 0 | Iteration: 1385 | Classification loss: 0.05677 | Regression loss: 0.00000 | Running loss: 0.19013
Epoch: 0 | Iteration: 1386 | Classification loss: 0.05681 | Regression loss: 0.00000 | Running loss: 0.18600
Epoch: 0 | Iteration: 1387 | Classification loss: 0.05680 | Regression loss: 0.00000 | Running loss: 0.18599
Epoch: 0 | Iteration: 1388 | Classification loss: 0.05677 | Regression loss: 0.00000 | Running loss: 0.18599
Epoch: 0 | Iteration: 1389 | Classification loss: 0.05682 | Regression loss: 0.00000 | Running loss: 0.18599
Epoch: 0 | Iteration: 1390 | Classification loss: 0.05685 | Regression loss: 0.00000 | Running loss: 0.18599
Epoch: 0 | Iteration: 1391 | Classification loss: 0.05676 | Regression loss: 0.00000 | Running loss: 0.18599
Epoch: 0 | Iteration: 1392 | Classification loss: 1.14426 | Regression loss: 1.46486 | Running loss: 0.18634
Epoch: 0 | Iteration: 1393 | Classification loss: 0.05687 | Regression loss: 0.00000 | Running loss: 0.18634
Epoch: 0 | Iteration: 1394 | Classification loss: 0.05687 | Regression loss: 0.00000 | Running loss: 0.18634
Epoch: 0 | Iteration: 1395 | Classification loss: 0.05683 | Regression loss: 0.00000 | Running loss: 0.18634
Epoch: 0 | Iteration: 1396 | Classification loss: 0.05672 | Regression loss: 0.00000 | Running loss: 0.18634
Epoch: 0 | Iteration: 1397 | Classification loss: 0.05672 | Regression loss: 0.00000 | Running loss: 0.18633
Epoch: 0 | Iteration: 1398 | Classification loss: 0.05678 | Regression loss: 0.00000 | Running loss: 0.18633
Epoch: 0 | Iteration: 1399 | Classification loss: 0.05685 | Regression loss: 0.00000 | Running loss: 0.18186
Epoch: 0 | Iteration: 1400 | Classification loss: 0.05681 | Regression loss: 0.00000 | Running loss: 0.18185
Epoch: 0 | Iteration: 1401 | Classification loss: 0.05668 | Regression loss: 0.00000 | Running loss: 0.18185
Epoch: 0 | Iteration: 1402 | Classification loss: 0.05684 | Regression loss: 0.00000 | Running loss: 0.18185
Epoch: 0 | Iteration: 1403 | Classification loss: 0.05691 | Regression loss: 0.00000 | Running loss: 0.18185
Epoch: 0 | Iteration: 1404 | Classification loss: 0.05672 | Regression loss: 0.00000 | Running loss: 0.18185
Epoch: 0 | Iteration: 1405 | Classification loss: 0.05679 | Regression loss: 0.00000 | Running loss: 0.18185
Epoch: 0 | Iteration: 1406 | Classification loss: 0.05675 | Regression loss: 0.00000 | Running loss: 0.18185
Epoch: 0 | Iteration: 1407 | Classification loss: 0.05687 | Regression loss: 0.00000 | Running loss: 0.18185
Epoch: 0 | Iteration: 1408 | Classification loss: 0.05687 | Regression loss: 0.00000 | Running loss: 0.18185
Epoch: 0 | Iteration: 1409 | Classification loss: 0.05690 | Regression loss: 0.00000 | Running loss: 0.18185
Epoch: 0 | Iteration: 1410 | Classification loss: 0.05672 | Regression loss: 0.00000 | Running loss: 0.18185
Epoch: 0 | Iteration: 1411 | Classification loss: 0.05680 | Regression loss: 0.00000 | Running loss: 0.18185
Epoch: 0 | Iteration: 1412 | Classification loss: 0.05668 | Regression loss: 0.00000 | Running loss: 0.18185
Epoch: 0 | Iteration: 1413 | Classification loss: 0.05685 | Regression loss: 0.00000 | Running loss: 0.18185
Epoch: 0 | Iteration: 1414 | Classification loss: 0.05673 | Regression loss: 0.00000 | Running loss: 0.18184
Epoch: 0 | Iteration: 1415 | Classification loss: 0.05672 | Regression loss: 0.00000 | Running loss: 0.18184
Epoch: 0 | Iteration: 1416 | Classification loss: 0.05689 | Regression loss: 0.00000 | Running loss: 0.18184
Epoch: 0 | Iteration: 1417 | Classification loss: 0.05671 | Regression loss: 0.00000 | Running loss: 0.18184
Epoch: 0 | Iteration: 1418 | Classification loss: 0.05679 | Regression loss: 0.00000 | Running loss: 0.18184
Epoch: 0 | Iteration: 1419 | Classification loss: 0.05675 | Regression loss: 0.00000 | Running loss: 0.18184
Epoch: 0 | Iteration: 1420 | Classification loss: 1.13622 | Regression loss: 1.37550 | Running loss: 0.18675
Epoch: 0 | Iteration: 1421 | Classification loss: 0.05690 | Regression loss: 0.00000 | Running loss: 0.18675
Epoch: 0 | Iteration: 1422 | Classification loss: 0.05678 | Regression loss: 0.00000 | Running loss: 0.18675
Epoch: 0 | Iteration: 1423 | Classification loss: 0.05677 | Regression loss: 0.00000 | Running loss: 0.18675
Epoch: 0 | Iteration: 1424 | Classification loss: 1.13619 | Regression loss: 1.10725 | Running loss: 0.19112
Epoch: 0 | Iteration: 1425 | Classification loss: 0.05688 | Regression loss: 0.00000 | Running loss: 0.19112
Epoch: 0 | Iteration: 1426 | Classification loss: 0.05690 | Regression loss: 0.00000 | Running loss: 0.18651
Epoch: 0 | Iteration: 1427 | Classification loss: 0.05678 | Regression loss: 0.00000 | Running loss: 0.18651
Epoch: 0 | Iteration: 1428 | Classification loss: 0.05690 | Regression loss: 0.00000 | Running loss: 0.18651
Epoch: 0 | Iteration: 1429 | Classification loss: 0.05686 | Regression loss: 0.00000 | Running loss: 0.18651
Epoch: 0 | Iteration: 1430 | Classification loss: 0.05682 | Regression loss: 0.00000 | Running loss: 0.18650
Epoch: 0 | Iteration: 1431 | Classification loss: 0.05674 | Regression loss: 0.00000 | Running loss: 0.18650
Epoch: 0 | Iteration: 1432 | Classification loss: 0.05685 | Regression loss: 0.00000 | Running loss: 0.18650
Epoch: 0 | Iteration: 1433 | Classification loss: 0.05684 | Regression loss: 0.00000 | Running loss: 0.18650
Epoch: 0 | Iteration: 1434 | Classification loss: 0.05673 | Regression loss: 0.00000 | Running loss: 0.18650
Epoch: 0 | Iteration: 1435 | Classification loss: 0.05677 | Regression loss: 0.00000 | Running loss: 0.18650
Epoch: 0 | Iteration: 1436 | Classification loss: 0.05685 | Regression loss: 0.00000 | Running loss: 0.18650
Epoch: 0 | Iteration: 1437 | Classification loss: 0.05685 | Regression loss: 0.00000 | Running loss: 0.18650
Epoch: 0 | Iteration: 1438 | Classification loss: 0.05685 | Regression loss: 0.00000 | Running loss: 0.18650
Epoch: 0 | Iteration: 1439 | Classification loss: 0.05675 | Regression loss: 0.00000 | Running loss: 0.18650
Epoch: 0 | Iteration: 1440 | Classification loss: 0.05689 | Regression loss: 0.00000 | Running loss: 0.18650
Epoch: 0 | Iteration: 1441 | Classification loss: 0.05679 | Regression loss: 0.00000 | Running loss: 0.18650
Epoch: 0 | Iteration: 1442 | Classification loss: 0.05683 | Regression loss: 0.00000 | Running loss: 0.18650
Epoch: 0 | Iteration: 1443 | Classification loss: 0.05686 | Regression loss: 0.00000 | Running loss: 0.18650
Epoch: 0 | Iteration: 1444 | Classification loss: 0.05680 | Regression loss: 0.00000 | Running loss: 0.18649
Epoch: 0 | Iteration: 1445 | Classification loss: 0.05672 | Regression loss: 0.00000 | Running loss: 0.18649
Epoch: 0 | Iteration: 1446 | Classification loss: 0.05667 | Regression loss: 0.00000 | Running loss: 0.18649
Epoch: 0 | Iteration: 1447 | Classification loss: 0.05662 | Regression loss: 0.00000 | Running loss: 0.18649
Epoch: 0 | Iteration: 1448 | Classification loss: 0.05682 | Regression loss: 0.00000 | Running loss: 0.18649
Epoch: 0 | Iteration: 1449 | Classification loss: 0.05677 | Regression loss: 0.00000 | Running loss: 0.18649
Epoch: 0 | Iteration: 1450 | Classification loss: 0.05688 | Regression loss: 0.00000 | Running loss: 0.18649
Epoch: 0 | Iteration: 1451 | Classification loss: 1.14165 | Regression loss: 1.35616 | Running loss: 0.19137
Epoch: 0 | Iteration: 1452 | Classification loss: 0.05675 | Regression loss: 0.00000 | Running loss: 0.19137
Epoch: 0 | Iteration: 1453 | Classification loss: 0.05669 | Regression loss: 0.00000 | Running loss: 0.19137
Epoch: 0 | Iteration: 1454 | Classification loss: 0.05683 | Regression loss: 0.00000 | Running loss: 0.19137
Epoch: 0 | Iteration: 1455 | Classification loss: 0.05672 | Regression loss: 0.00000 | Running loss: 0.19137
Epoch: 0 | Iteration: 1456 | Classification loss: 0.05665 | Regression loss: 0.00000 | Running loss: 0.19137
Epoch: 0 | Iteration: 1457 | Classification loss: 0.05671 | Regression loss: 0.00000 | Running loss: 0.19137
Epoch: 0 | Iteration: 1458 | Classification loss: 0.05678 | Regression loss: 0.00000 | Running loss: 0.19137
Epoch: 0 | Iteration: 1459 | Classification loss: 0.05692 | Regression loss: 0.00000 | Running loss: 0.19136
Epoch: 0 | Iteration: 1460 | Classification loss: 0.05684 | Regression loss: 0.00000 | Running loss: 0.19136
Epoch: 0 | Iteration: 1461 | Classification loss: 0.05672 | Regression loss: 0.00000 | Running loss: 0.19136
Epoch: 0 | Iteration: 1462 | Classification loss: 0.05672 | Regression loss: 0.00000 | Running loss: 0.19136
Epoch: 0 | Iteration: 1463 | Classification loss: 0.05670 | Regression loss: 0.00000 | Running loss: 0.19136
Epoch: 0 | Iteration: 1464 | Classification loss: 0.05663 | Regression loss: 0.00000 | Running loss: 0.19136
Epoch: 0 | Iteration: 1465 | Classification loss: 0.05684 | Regression loss: 0.00000 | Running loss: 0.19136
Epoch: 0 | Iteration: 1466 | Classification loss: 0.05685 | Regression loss: 0.00000 | Running loss: 0.19136
Epoch: 0 | Iteration: 1467 | Classification loss: 0.05676 | Regression loss: 0.00000 | Running loss: 0.19136
Epoch: 0 | Iteration: 1468 | Classification loss: 0.05672 | Regression loss: 0.00000 | Running loss: 0.19136
Epoch: 0 | Iteration: 1469 | Classification loss: 0.05683 | Regression loss: 0.00000 | Running loss: 0.18633
Epoch: 0 | Iteration: 1470 | Classification loss: 0.05679 | Regression loss: 0.00000 | Running loss: 0.18633
Epoch: 0 | Iteration: 1471 | Classification loss: 0.05666 | Regression loss: 0.00000 | Running loss: 0.18633
Epoch: 0 | Iteration: 1472 | Classification loss: 0.05678 | Regression loss: 0.00000 | Running loss: 0.18633
Epoch: 0 | Iteration: 1473 | Classification loss: 1.18685 | Regression loss: 0.92938 | Running loss: 0.19044
Epoch: 0 | Iteration: 1474 | Classification loss: 0.05670 | Regression loss: 0.00000 | Running loss: 0.19044
Epoch: 0 | Iteration: 1475 | Classification loss: 1.13432 | Regression loss: 1.24273 | Running loss: 0.19508
Epoch: 0 | Iteration: 1476 | Classification loss: 0.05670 | Regression loss: 0.00000 | Running loss: 0.19508
Epoch: 0 | Iteration: 1477 | Classification loss: 0.05686 | Regression loss: 0.00000 | Running loss: 0.19508
Epoch: 0 | Iteration: 1478 | Classification loss: 0.05675 | Regression loss: 0.00000 | Running loss: 0.19508
Epoch: 0 | Iteration: 1479 | Classification loss: 0.05668 | Regression loss: 0.00000 | Running loss: 0.19057
Epoch: 0 | Iteration: 1480 | Classification loss: 0.05678 | Regression loss: 0.00000 | Running loss: 0.19056
Epoch: 0 | Iteration: 1481 | Classification loss: 0.05681 | Regression loss: 0.00000 | Running loss: 0.19056
Epoch: 0 | Iteration: 1482 | Classification loss: 1.14897 | Regression loss: 1.21745 | Running loss: 0.19518
Epoch: 0 | Iteration: 1483 | Classification loss: 0.05660 | Regression loss: 0.00000 | Running loss: 0.19518
Epoch: 0 | Iteration: 1484 | Classification loss: 0.05667 | Regression loss: 0.00000 | Running loss: 0.19518
Epoch: 0 | Iteration: 1485 | Classification loss: 0.05662 | Regression loss: 0.00000 | Running loss: 0.19518
Epoch: 0 | Iteration: 1486 | Classification loss: 0.05674 | Regression loss: 0.00000 | Running loss: 0.19518
Epoch: 0 | Iteration: 1487 | Classification loss: 0.05690 | Regression loss: 0.00000 | Running loss: 0.19518
Epoch: 0 | Iteration: 1488 | Classification loss: 0.05671 | Regression loss: 0.00000 | Running loss: 0.19518
Epoch: 0 | Iteration: 1489 | Classification loss: 0.05690 | Regression loss: 0.00000 | Running loss: 0.19518
Epoch: 0 | Iteration: 1490 | Classification loss: 1.13451 | Regression loss: 1.31548 | Running loss: 0.19552
Epoch: 0 | Iteration: 1491 | Classification loss: 0.05668 | Regression loss: 0.00000 | Running loss: 0.19552
Epoch: 0 | Iteration: 1492 | Classification loss: 0.05677 | Regression loss: 0.00000 | Running loss: 0.19551
Epoch: 0 | Iteration: 1493 | Classification loss: 0.05676 | Regression loss: 0.00000 | Running loss: 0.19123
Epoch: 0 | Iteration: 1494 | Classification loss: 0.05671 | Regression loss: 0.00000 | Running loss: 0.19123
Epoch: 0 | Iteration: 1495 | Classification loss: 0.05681 | Regression loss: 0.00000 | Running loss: 0.19123
Epoch: 0 | Iteration: 1496 | Classification loss: 0.05678 | Regression loss: 0.00000 | Running loss: 0.19123
Epoch: 0 | Iteration: 1497 | Classification loss: 0.05677 | Regression loss: 0.00000 | Running loss: 0.19123
Epoch: 0 | Iteration: 1498 | Classification loss: 0.05668 | Regression loss: 0.00000 | Running loss: 0.19123
Epoch: 0 | Iteration: 1499 | Classification loss: 0.05669 | Regression loss: 0.00000 | Running loss: 0.19123
Epoch: 0 | Iteration: 1500 | Classification loss: 0.05677 | Regression loss: 0.00000 | Running loss: 0.19122
Epoch: 0 | Iteration: 1501 | Classification loss: 0.05682 | Regression loss: 0.00000 | Running loss: 0.19122
Epoch: 0 | Iteration: 1502 | Classification loss: 0.05678 | Regression loss: 0.00000 | Running loss: 0.19122
Epoch: 0 | Iteration: 1503 | Classification loss: 0.05674 | Regression loss: 0.00000 | Running loss: 0.19122
Epoch: 0 | Iteration: 1504 | Classification loss: 0.05671 | Regression loss: 0.00000 | Running loss: 0.19122
Epoch: 0 | Iteration: 1505 | Classification loss: 0.05668 | Regression loss: 0.00000 | Running loss: 0.19122
Epoch: 0 | Iteration: 1506 | Classification loss: 0.05678 | Regression loss: 0.00000 | Running loss: 0.19122
Epoch: 0 | Iteration: 1507 | Classification loss: 0.05668 | Regression loss: 0.00000 | Running loss: 0.19122
Epoch: 0 | Iteration: 1508 | Classification loss: 0.05668 | Regression loss: 0.00000 | Running loss: 0.19122
Epoch: 0 | Iteration: 1509 | Classification loss: 0.05678 | Regression loss: 0.00000 | Running loss: 0.19122
Epoch: 0 | Iteration: 1510 | Classification loss: 0.05672 | Regression loss: 0.00000 | Running loss: 0.19122
Epoch: 0 | Iteration: 1511 | Classification loss: 0.05686 | Regression loss: 0.00000 | Running loss: 0.19122
Epoch: 0 | Iteration: 1512 | Classification loss: 0.05656 | Regression loss: 0.00000 | Running loss: 0.19122
Epoch: 0 | Iteration: 1513 | Classification loss: 0.05658 | Regression loss: 0.00000 | Running loss: 0.19121
Epoch: 0 | Iteration: 1514 | Classification loss: 0.05678 | Regression loss: 0.00000 | Running loss: 0.18645
Epoch: 0 | Iteration: 1515 | Classification loss: 0.05675 | Regression loss: 0.00000 | Running loss: 0.18645
Epoch: 0 | Iteration: 1516 | Classification loss: 0.05674 | Regression loss: 0.00000 | Running loss: 0.18645
Epoch: 0 | Iteration: 1517 | Classification loss: 0.05682 | Regression loss: 0.00000 | Running loss: 0.18645
Epoch: 0 | Iteration: 1518 | Classification loss: 0.05668 | Regression loss: 0.00000 | Running loss: 0.18645
Epoch: 0 | Iteration: 1519 | Classification loss: 0.05678 | Regression loss: 0.00000 | Running loss: 0.18645
Epoch: 0 | Iteration: 1520 | Classification loss: 0.05677 | Regression loss: 0.00000 | Running loss: 0.18644
Epoch: 0 | Iteration: 1521 | Classification loss: 0.05671 | Regression loss: 0.00000 | Running loss: 0.18164
Epoch: 0 | Iteration: 1522 | Classification loss: 0.05675 | Regression loss: 0.00000 | Running loss: 0.18164
Epoch: 0 | Iteration: 1523 | Classification loss: 0.05658 | Regression loss: 0.00000 | Running loss: 0.18164
Epoch: 0 | Iteration: 1524 | Classification loss: 0.05678 | Regression loss: 0.00000 | Running loss: 0.18164
Epoch: 0 | Iteration: 1525 | Classification loss: 0.05673 | Regression loss: 0.00000 | Running loss: 0.18163
Epoch: 0 | Iteration: 1526 | Classification loss: 0.05665 | Regression loss: 0.00000 | Running loss: 0.18163
Epoch: 0 | Iteration: 1527 | Classification loss: 0.05658 | Regression loss: 0.00000 | Running loss: 0.18163
Epoch: 0 | Iteration: 1528 | Classification loss: 0.05663 | Regression loss: 0.00000 | Running loss: 0.18163
Epoch: 0 | Iteration: 1529 | Classification loss: 0.05674 | Regression loss: 0.00000 | Running loss: 0.18163
Epoch: 0 | Iteration: 1530 | Classification loss: 0.05666 | Regression loss: 0.00000 | Running loss: 0.18163
Epoch: 0 | Iteration: 1531 | Classification loss: 0.05678 | Regression loss: 0.00000 | Running loss: 0.18163
Epoch: 0 | Iteration: 1532 | Classification loss: 0.05660 | Regression loss: 0.00000 | Running loss: 0.18163
Epoch: 0 | Iteration: 1533 | Classification loss: 0.05674 | Regression loss: 0.00000 | Running loss: 0.18163
Epoch: 0 | Iteration: 1534 | Classification loss: 0.05677 | Regression loss: 0.00000 | Running loss: 0.18163
Epoch: 0 | Iteration: 1535 | Classification loss: 0.05663 | Regression loss: 0.00000 | Running loss: 0.18163
Epoch: 0 | Iteration: 1536 | Classification loss: 0.05667 | Regression loss: 0.00000 | Running loss: 0.18163
Epoch: 0 | Iteration: 1537 | Classification loss: 0.05671 | Regression loss: 0.00000 | Running loss: 0.18162
Epoch: 0 | Iteration: 1538 | Classification loss: 0.05669 | Regression loss: 0.00000 | Running loss: 0.18162
Epoch: 0 | Iteration: 1539 | Classification loss: 0.05666 | Regression loss: 0.00000 | Running loss: 0.18162
Epoch: 0 | Iteration: 1540 | Classification loss: 0.05660 | Regression loss: 0.00000 | Running loss: 0.17757
Epoch: 0 | Iteration: 1541 | Classification loss: 0.05675 | Regression loss: 0.00000 | Running loss: 0.17757
Epoch: 0 | Iteration: 1542 | Classification loss: 0.05675 | Regression loss: 0.00000 | Running loss: 0.17757
Epoch: 0 | Iteration: 1543 | Classification loss: 1.18687 | Regression loss: 1.03208 | Running loss: 0.18189
Epoch: 0 | Iteration: 1544 | Classification loss: 0.05660 | Regression loss: 0.00000 | Running loss: 0.18189
Epoch: 0 | Iteration: 1545 | Classification loss: 0.05672 | Regression loss: 0.00000 | Running loss: 0.18189
Epoch: 0 | Iteration: 1546 | Classification loss: 0.05665 | Regression loss: 0.00000 | Running loss: 0.18189
Epoch: 0 | Iteration: 1547 | Classification loss: 0.05660 | Regression loss: 0.00000 | Running loss: 0.18189
Epoch: 0 | Iteration: 1548 | Classification loss: 0.05664 | Regression loss: 0.00000 | Running loss: 0.18189
Epoch: 0 | Iteration: 1549 | Classification loss: 0.05668 | Regression loss: 0.00000 | Running loss: 0.18189
Epoch: 0 | Iteration: 1550 | Classification loss: 0.05656 | Regression loss: 0.00000 | Running loss: 0.18189
Epoch: 0 | Iteration: 1551 | Classification loss: 0.05663 | Regression loss: 0.00000 | Running loss: 0.18188
Epoch: 0 | Iteration: 1552 | Classification loss: 0.05678 | Regression loss: 0.00000 | Running loss: 0.18188
Epoch: 0 | Iteration: 1553 | Classification loss: 0.05680 | Regression loss: 0.00000 | Running loss: 0.18188
Epoch: 0 | Iteration: 1554 | Classification loss: 0.05663 | Regression loss: 0.00000 | Running loss: 0.18188
Epoch: 0 | Iteration: 1555 | Classification loss: 0.05664 | Regression loss: 0.00000 | Running loss: 0.18188
Epoch: 0 | Iteration: 1556 | Classification loss: 0.05671 | Regression loss: 0.00000 | Running loss: 0.18188
Epoch: 0 | Iteration: 1557 | Classification loss: 0.05667 | Regression loss: 0.00000 | Running loss: 0.18188
Epoch: 0 | Iteration: 1558 | Classification loss: 0.05665 | Regression loss: 0.00000 | Running loss: 0.17741
Epoch: 0 | Iteration: 1559 | Classification loss: 0.05657 | Regression loss: 0.00000 | Running loss: 0.17741
Epoch: 0 | Iteration: 1560 | Classification loss: 0.05667 | Regression loss: 0.00000 | Running loss: 0.17741
Epoch: 0 | Iteration: 1561 | Classification loss: 0.05663 | Regression loss: 0.00000 | Running loss: 0.17741
Epoch: 0 | Iteration: 1562 | Classification loss: 0.05655 | Regression loss: 0.00000 | Running loss: 0.17278
Epoch: 0 | Iteration: 1563 | Classification loss: 0.05664 | Regression loss: 0.00000 | Running loss: 0.17278
Epoch: 0 | Iteration: 1564 | Classification loss: 0.05674 | Regression loss: 0.00000 | Running loss: 0.17278
Epoch: 0 | Iteration: 1565 | Classification loss: 0.05665 | Regression loss: 0.00000 | Running loss: 0.17278
Epoch: 0 | Iteration: 1566 | Classification loss: 0.05669 | Regression loss: 0.00000 | Running loss: 0.17278
Epoch: 0 | Iteration: 1567 | Classification loss: 0.05687 | Regression loss: 0.00000 | Running loss: 0.17278
Epoch: 0 | Iteration: 1568 | Classification loss: 0.05679 | Regression loss: 0.00000 | Running loss: 0.17278
Epoch: 0 | Iteration: 1569 | Classification loss: 0.05674 | Regression loss: 0.00000 | Running loss: 0.16828
Epoch: 0 | Iteration: 1570 | Classification loss: 0.05669 | Regression loss: 0.00000 | Running loss: 0.16828
Epoch: 0 | Iteration: 1571 | Classification loss: 0.05682 | Regression loss: 0.00000 | Running loss: 0.16828
Epoch: 0 | Iteration: 1572 | Classification loss: 0.05675 | Regression loss: 0.00000 | Running loss: 0.16337
Epoch: 0 | Iteration: 1573 | Classification loss: 0.05672 | Regression loss: 0.00000 | Running loss: 0.16337
Epoch: 0 | Iteration: 1574 | Classification loss: 0.05668 | Regression loss: 0.00000 | Running loss: 0.16336
Epoch: 0 | Iteration: 1575 | Classification loss: 0.05667 | Regression loss: 0.00000 | Running loss: 0.16336
Epoch: 0 | Iteration: 1576 | Classification loss: 0.05659 | Regression loss: 0.00000 | Running loss: 0.15873
Epoch: 0 | Iteration: 1577 | Classification loss: 0.05661 | Regression loss: 0.00000 | Running loss: 0.15872
Epoch: 0 | Iteration: 1578 | Classification loss: 0.05671 | Regression loss: 0.00000 | Running loss: 0.15872
Epoch: 0 | Iteration: 1579 | Classification loss: 0.05662 | Regression loss: 0.00000 | Running loss: 0.15872
Epoch: 0 | Iteration: 1580 | Classification loss: 0.05667 | Regression loss: 0.00000 | Running loss: 0.15872
Epoch: 0 | Iteration: 1581 | Classification loss: 0.05669 | Regression loss: 0.00000 | Running loss: 0.15872
Epoch: 0 | Iteration: 1582 | Classification loss: 0.05657 | Regression loss: 0.00000 | Running loss: 0.15872
Epoch: 0 | Iteration: 1583 | Classification loss: 0.05661 | Regression loss: 0.00000 | Running loss: 0.15872
Epoch: 0 | Iteration: 1584 | Classification loss: 0.05670 | Regression loss: 0.00000 | Running loss: 0.15872
Epoch: 0 | Iteration: 1585 | Classification loss: 0.05657 | Regression loss: 0.00000 | Running loss: 0.15872
Epoch: 0 | Iteration: 1586 | Classification loss: 0.05666 | Regression loss: 0.00000 | Running loss: 0.15872
Epoch: 0 | Iteration: 1587 | Classification loss: 0.05671 | Regression loss: 0.00000 | Running loss: 0.15872
Epoch: 0 | Iteration: 1588 | Classification loss: 0.05667 | Regression loss: 0.00000 | Running loss: 0.15872
Epoch: 0 | Iteration: 1589 | Classification loss: 0.05672 | Regression loss: 0.00000 | Running loss: 0.15871
Epoch: 0 | Iteration: 1590 | Classification loss: 0.05659 | Regression loss: 0.00000 | Running loss: 0.15871
Epoch: 0 | Iteration: 1591 | Classification loss: 0.05676 | Regression loss: 0.00000 | Running loss: 0.15871
Epoch: 0 | Iteration: 1592 | Classification loss: 0.05669 | Regression loss: 0.00000 | Running loss: 0.15871
Epoch: 0 | Iteration: 1593 | Classification loss: 0.05670 | Regression loss: 0.00000 | Running loss: 0.15398
Epoch: 0 | Iteration: 1594 | Classification loss: 1.13817 | Regression loss: 1.26877 | Running loss: 0.15442
Epoch: 0 | Iteration: 1595 | Classification loss: 0.05674 | Regression loss: 0.00000 | Running loss: 0.15441
Epoch: 0 | Iteration: 1596 | Classification loss: 0.05674 | Regression loss: 0.00000 | Running loss: 0.14925
Epoch: 0 | Iteration: 1597 | Classification loss: 0.05667 | Regression loss: 0.00000 | Running loss: 0.14925
Epoch: 0 | Iteration: 1598 | Classification loss: 0.05669 | Regression loss: 0.00000 | Running loss: 0.14925
Epoch: 0 | Iteration: 1599 | Classification loss: 0.05663 | Regression loss: 0.00000 | Running loss: 0.14925
Epoch: 0 | Iteration: 1600 | Classification loss: 0.05651 | Regression loss: 0.00000 | Running loss: 0.14925
Epoch: 0 | Iteration: 1601 | Classification loss: 0.05673 | Regression loss: 0.00000 | Running loss: 0.14925
Epoch: 0 | Iteration: 1602 | Classification loss: 0.05673 | Regression loss: 0.00000 | Running loss: 0.14925
Epoch: 0 | Iteration: 1603 | Classification loss: 0.05669 | Regression loss: 0.00000 | Running loss: 0.14925
Epoch: 0 | Iteration: 1604 | Classification loss: 0.05677 | Regression loss: 0.00000 | Running loss: 0.14925
Epoch: 0 | Iteration: 1605 | Classification loss: 0.05668 | Regression loss: 0.00000 | Running loss: 0.14924
Epoch: 0 | Iteration: 1606 | Classification loss: 1.15916 | Regression loss: 1.07002 | Running loss: 0.15359
Epoch: 0 | Iteration: 1607 | Classification loss: 0.05674 | Regression loss: 0.00000 | Running loss: 0.15359
Epoch: 0 | Iteration: 1608 | Classification loss: 0.05663 | Regression loss: 0.00000 | Running loss: 0.15359
Epoch: 0 | Iteration: 1609 | Classification loss: 0.05676 | Regression loss: 0.00000 | Running loss: 0.15359
Epoch: 0 | Iteration: 1610 | Classification loss: 0.05667 | Regression loss: 0.00000 | Running loss: 0.15359
Epoch: 0 | Iteration: 1611 | Classification loss: 0.05664 | Regression loss: 0.00000 | Running loss: 0.15359
Epoch: 0 | Iteration: 1612 | Classification loss: 0.05665 | Regression loss: 0.00000 | Running loss: 0.15358
Epoch: 0 | Iteration: 1613 | Classification loss: 0.05668 | Regression loss: 0.00000 | Running loss: 0.15358
Epoch: 0 | Iteration: 1614 | Classification loss: 0.05680 | Regression loss: 0.00000 | Running loss: 0.15358
Epoch: 0 | Iteration: 1615 | Classification loss: 0.05669 | Regression loss: 0.00000 | Running loss: 0.15358
Epoch: 0 | Iteration: 1616 | Classification loss: 0.05664 | Regression loss: 0.00000 | Running loss: 0.15358
Epoch: 0 | Iteration: 1617 | Classification loss: 0.05663 | Regression loss: 0.00000 | Running loss: 0.15358
Epoch: 0 | Iteration: 1618 | Classification loss: 0.05662 | Regression loss: 0.00000 | Running loss: 0.15358
Epoch: 0 | Iteration: 1619 | Classification loss: 0.05659 | Regression loss: 0.00000 | Running loss: 0.15358
Epoch: 0 | Iteration: 1620 | Classification loss: 0.05658 | Regression loss: 0.00000 | Running loss: 0.15358
Epoch: 0 | Iteration: 1621 | Classification loss: 0.05659 | Regression loss: 0.00000 | Running loss: 0.15358
Epoch: 0 | Iteration: 1622 | Classification loss: 0.05660 | Regression loss: 0.00000 | Running loss: 0.15358
Epoch: 0 | Iteration: 1623 | Classification loss: 0.05676 | Regression loss: 0.00000 | Running loss: 0.14886
Epoch: 0 | Iteration: 1624 | Classification loss: 0.05665 | Regression loss: 0.00000 | Running loss: 0.14886
Epoch: 0 | Iteration: 1625 | Classification loss: 0.05659 | Regression loss: 0.00000 | Running loss: 0.14886
Epoch: 0 | Iteration: 1626 | Classification loss: 0.05658 | Regression loss: 0.00000 | Running loss: 0.14886
Epoch: 0 | Iteration: 1627 | Classification loss: 0.05680 | Regression loss: 0.00000 | Running loss: 0.14886
Epoch: 0 | Iteration: 1628 | Classification loss: 0.05646 | Regression loss: 0.00000 | Running loss: 0.14886
Epoch: 0 | Iteration: 1629 | Classification loss: 0.05662 | Regression loss: 0.00000 | Running loss: 0.14886
Epoch: 0 | Iteration: 1630 | Classification loss: 0.05669 | Regression loss: 0.00000 | Running loss: 0.14886
Epoch: 0 | Iteration: 1631 | Classification loss: 0.05674 | Regression loss: 0.00000 | Running loss: 0.14886
Epoch: 0 | Iteration: 1632 | Classification loss: 0.05668 | Regression loss: 0.00000 | Running loss: 0.14886
Epoch: 0 | Iteration: 1633 | Classification loss: 0.05663 | Regression loss: 0.00000 | Running loss: 0.14886
Epoch: 0 | Iteration: 1634 | Classification loss: 0.05652 | Regression loss: 0.00000 | Running loss: 0.14886
Epoch: 0 | Iteration: 1635 | Classification loss: 0.05655 | Regression loss: 0.00000 | Running loss: 0.14885
Epoch: 0 | Iteration: 1636 | Classification loss: 0.05661 | Regression loss: 0.00000 | Running loss: 0.14885
Epoch: 0 | Iteration: 1637 | Classification loss: 0.05663 | Regression loss: 0.00000 | Running loss: 0.14457
Epoch: 0 | Iteration: 1638 | Classification loss: 0.05664 | Regression loss: 0.00000 | Running loss: 0.14457
Epoch: 0 | Iteration: 1639 | Classification loss: 0.05671 | Regression loss: 0.00000 | Running loss: 0.14457
Epoch: 0 | Iteration: 1640 | Classification loss: 1.18800 | Regression loss: 1.06924 | Running loss: 0.14897
Epoch: 0 | Iteration: 1641 | Classification loss: 0.05663 | Regression loss: 0.00000 | Running loss: 0.14897
Epoch: 0 | Iteration: 1642 | Classification loss: 0.05657 | Regression loss: 0.00000 | Running loss: 0.14897
Epoch: 0 | Iteration: 1643 | Classification loss: 1.13435 | Regression loss: 1.03885 | Running loss: 0.14896
Epoch: 0 | Iteration: 1644 | Classification loss: 0.05659 | Regression loss: 0.00000 | Running loss: 0.14896
Epoch: 0 | Iteration: 1645 | Classification loss: 0.05657 | Regression loss: 0.00000 | Running loss: 0.14896
Epoch: 0 | Iteration: 1646 | Classification loss: 0.05678 | Regression loss: 0.00000 | Running loss: 0.14896
Epoch: 0 | Iteration: 1647 | Classification loss: 0.05663 | Regression loss: 0.00000 | Running loss: 0.14896
Epoch: 0 | Iteration: 1648 | Classification loss: 0.05667 | Regression loss: 0.00000 | Running loss: 0.14896
Epoch: 0 | Iteration: 1649 | Classification loss: 0.05665 | Regression loss: 0.00000 | Running loss: 0.14896
Epoch: 0 | Iteration: 1650 | Classification loss: 0.05663 | Regression loss: 0.00000 | Running loss: 0.14896
Epoch: 0 | Iteration: 1651 | Classification loss: 0.05659 | Regression loss: 0.00000 | Running loss: 0.14896
Epoch: 0 | Iteration: 1652 | Classification loss: 0.05647 | Regression loss: 0.00000 | Running loss: 0.14895
Epoch: 0 | Iteration: 1653 | Classification loss: 0.05680 | Regression loss: 0.00000 | Running loss: 0.14895
Epoch: 0 | Iteration: 1654 | Classification loss: 0.05667 | Regression loss: 0.00000 | Running loss: 0.14895
Epoch: 0 | Iteration: 1655 | Classification loss: 0.05670 | Regression loss: 0.00000 | Running loss: 0.14895
Epoch: 0 | Iteration: 1656 | Classification loss: 0.05673 | Regression loss: 0.00000 | Running loss: 0.14426
Epoch: 0 | Iteration: 1657 | Classification loss: 0.05654 | Regression loss: 0.00000 | Running loss: 0.14426
Epoch: 0 | Iteration: 1658 | Classification loss: 0.05657 | Regression loss: 0.00000 | Running loss: 0.14426
Epoch: 0 | Iteration: 1659 | Classification loss: 0.05657 | Regression loss: 0.00000 | Running loss: 0.14426
Epoch: 0 | Iteration: 1660 | Classification loss: 0.05661 | Regression loss: 0.00000 | Running loss: 0.14426
Epoch: 0 | Iteration: 1661 | Classification loss: 1.13837 | Regression loss: 0.83254 | Running loss: 0.14808
Epoch: 0 | Iteration: 1662 | Classification loss: 0.05663 | Regression loss: 0.00000 | Running loss: 0.14808
Epoch: 0 | Iteration: 1663 | Classification loss: 0.05664 | Regression loss: 0.00000 | Running loss: 0.14808
Epoch: 0 | Iteration: 1664 | Classification loss: 0.05678 | Regression loss: 0.00000 | Running loss: 0.14808
Epoch: 0 | Iteration: 1665 | Classification loss: 0.05656 | Regression loss: 0.00000 | Running loss: 0.14808
Epoch: 0 | Iteration: 1666 | Classification loss: 0.05657 | Regression loss: 0.00000 | Running loss: 0.14808
Epoch: 0 | Iteration: 1667 | Classification loss: 0.05657 | Regression loss: 0.00000 | Running loss: 0.14808
Epoch: 0 | Iteration: 1668 | Classification loss: 0.05657 | Regression loss: 0.00000 | Running loss: 0.14808
Epoch: 0 | Iteration: 1669 | Classification loss: 0.05653 | Regression loss: 0.00000 | Running loss: 0.14808
Epoch: 0 | Iteration: 1670 | Classification loss: 0.05663 | Regression loss: 0.00000 | Running loss: 0.14808
Epoch: 0 | Iteration: 1671 | Classification loss: 0.05647 | Regression loss: 0.00000 | Running loss: 0.14808
Epoch: 0 | Iteration: 1672 | Classification loss: 0.05646 | Regression loss: 0.00000 | Running loss: 0.14807
Epoch: 0 | Iteration: 1673 | Classification loss: 0.05665 | Regression loss: 0.00000 | Running loss: 0.14807
Epoch: 0 | Iteration: 1674 | Classification loss: 0.05667 | Regression loss: 0.00000 | Running loss: 0.14807
Epoch: 0 | Iteration: 1675 | Classification loss: 0.05664 | Regression loss: 0.00000 | Running loss: 0.14807
Epoch: 0 | Iteration: 1676 | Classification loss: 0.05666 | Regression loss: 0.00000 | Running loss: 0.14807
Epoch: 0 | Iteration: 1677 | Classification loss: 0.05673 | Regression loss: 0.00000 | Running loss: 0.14807
Epoch: 0 | Iteration: 1678 | Classification loss: 0.05660 | Regression loss: 0.00000 | Running loss: 0.14807
Epoch: 0 | Iteration: 1679 | Classification loss: 0.05660 | Regression loss: 0.00000 | Running loss: 0.14807
Epoch: 0 | Iteration: 1680 | Classification loss: 0.05661 | Regression loss: 0.00000 | Running loss: 0.14807
Epoch: 0 | Iteration: 1681 | Classification loss: 0.05648 | Regression loss: 0.00000 | Running loss: 0.14807
Epoch: 0 | Iteration: 1682 | Classification loss: 0.05652 | Regression loss: 0.00000 | Running loss: 0.14807
Epoch: 0 | Iteration: 1683 | Classification loss: 0.05655 | Regression loss: 0.00000 | Running loss: 0.14807
Epoch: 0 | Iteration: 1684 | Classification loss: 0.05648 | Regression loss: 0.00000 | Running loss: 0.14807
Epoch: 0 | Iteration: 1685 | Classification loss: 0.05647 | Regression loss: 0.00000 | Running loss: 0.14325
Epoch: 0 | Iteration: 1686 | Classification loss: 0.05660 | Regression loss: 0.00000 | Running loss: 0.14325
Epoch: 0 | Iteration: 1687 | Classification loss: 0.05652 | Regression loss: 0.00000 | Running loss: 0.14325
Epoch: 0 | Iteration: 1688 | Classification loss: 0.05654 | Regression loss: 0.00000 | Running loss: 0.14325
Epoch: 0 | Iteration: 1689 | Classification loss: 0.05663 | Regression loss: 0.00000 | Running loss: 0.14325
Epoch: 0 | Iteration: 1690 | Classification loss: 0.05665 | Regression loss: 0.00000 | Running loss: 0.14325
Epoch: 0 | Iteration: 1691 | Classification loss: 0.05664 | Regression loss: 0.00000 | Running loss: 0.14325
Epoch: 0 | Iteration: 1692 | Classification loss: 0.05652 | Regression loss: 0.00000 | Running loss: 0.14325
Epoch: 0 | Iteration: 1693 | Classification loss: 0.05664 | Regression loss: 0.00000 | Running loss: 0.14325
Epoch: 0 | Iteration: 1694 | Classification loss: 0.05658 | Regression loss: 0.00000 | Running loss: 0.14325
Epoch: 0 | Iteration: 1695 | Classification loss: 0.05674 | Regression loss: 0.00000 | Running loss: 0.14325
Epoch: 0 | Iteration: 1696 | Classification loss: 0.05662 | Regression loss: 0.00000 | Running loss: 0.14325
Epoch: 0 | Iteration: 1697 | Classification loss: 0.05650 | Regression loss: 0.00000 | Running loss: 0.13836
Epoch: 0 | Iteration: 1698 | Classification loss: 0.05657 | Regression loss: 0.00000 | Running loss: 0.13835
Epoch: 0 | Iteration: 1699 | Classification loss: 0.05660 | Regression loss: 0.00000 | Running loss: 0.13835
Epoch: 0 | Iteration: 1700 | Classification loss: 0.05663 | Regression loss: 0.00000 | Running loss: 0.13835
Epoch: 0 | Iteration: 1701 | Classification loss: 0.05674 | Regression loss: 0.00000 | Running loss: 0.13835
Epoch: 0 | Iteration: 1702 | Classification loss: 0.05663 | Regression loss: 0.00000 | Running loss: 0.13835
Epoch: 0 | Iteration: 1703 | Classification loss: 0.05652 | Regression loss: 0.00000 | Running loss: 0.13835
Epoch: 0 | Iteration: 1704 | Classification loss: 0.05656 | Regression loss: 0.00000 | Running loss: 0.13835
Epoch: 0 | Iteration: 1705 | Classification loss: 0.05668 | Regression loss: 0.00000 | Running loss: 0.13835
Epoch: 0 | Iteration: 1706 | Classification loss: 0.05669 | Regression loss: 0.00000 | Running loss: 0.13835
Epoch: 0 | Iteration: 1707 | Classification loss: 0.05660 | Regression loss: 0.00000 | Running loss: 0.13835
Epoch: 0 | Iteration: 1708 | Classification loss: 0.05645 | Regression loss: 0.00000 | Running loss: 0.13835
Epoch: 0 | Iteration: 1709 | Classification loss: 0.05670 | Regression loss: 0.00000 | Running loss: 0.13835
Epoch: 0 | Iteration: 1710 | Classification loss: 0.05654 | Regression loss: 0.00000 | Running loss: 0.13835
Epoch: 0 | Iteration: 1711 | Classification loss: 0.05661 | Regression loss: 0.00000 | Running loss: 0.13835
Epoch: 0 | Iteration: 1712 | Classification loss: 0.05670 | Regression loss: 0.00000 | Running loss: 0.13835
Epoch: 0 | Iteration: 1713 | Classification loss: 0.05662 | Regression loss: 0.00000 | Running loss: 0.13834
Epoch: 0 | Iteration: 1714 | Classification loss: 0.05654 | Regression loss: 0.00000 | Running loss: 0.13834
Epoch: 0 | Iteration: 1715 | Classification loss: 0.05665 | Regression loss: 0.00000 | Running loss: 0.13834
Epoch: 0 | Iteration: 1716 | Classification loss: 0.05660 | Regression loss: 0.00000 | Running loss: 0.13834
Epoch: 0 | Iteration: 1717 | Classification loss: 0.05664 | Regression loss: 0.00000 | Running loss: 0.13834
Epoch: 0 | Iteration: 1718 | Classification loss: 0.05660 | Regression loss: 0.00000 | Running loss: 0.13418
Epoch: 0 | Iteration: 1719 | Classification loss: 0.05648 | Regression loss: 0.00000 | Running loss: 0.13418
Epoch: 0 | Iteration: 1720 | Classification loss: 1.14087 | Regression loss: 0.95104 | Running loss: 0.13825
Epoch: 0 | Iteration: 1721 | Classification loss: 0.05674 | Regression loss: 0.00000 | Running loss: 0.13825
Epoch: 0 | Iteration: 1722 | Classification loss: 0.05656 | Regression loss: 0.00000 | Running loss: 0.13825
Epoch: 0 | Iteration: 1723 | Classification loss: 0.05663 | Regression loss: 0.00000 | Running loss: 0.13825
Epoch: 0 | Iteration: 1724 | Classification loss: 0.05663 | Regression loss: 0.00000 | Running loss: 0.13825
Epoch: 0 | Iteration: 1725 | Classification loss: 0.05646 | Regression loss: 0.00000 | Running loss: 0.13825
Epoch: 0 | Iteration: 1726 | Classification loss: 0.05672 | Regression loss: 0.00000 | Running loss: 0.13825
Epoch: 0 | Iteration: 1727 | Classification loss: 0.05657 | Regression loss: 0.00000 | Running loss: 0.13825
Epoch: 0 | Iteration: 1728 | Classification loss: 1.15999 | Regression loss: 1.26524 | Running loss: 0.14299
Epoch: 0 | Iteration: 1729 | Classification loss: 0.05665 | Regression loss: 0.00000 | Running loss: 0.14298
Epoch: 0 | Iteration: 1730 | Classification loss: 1.15930 | Regression loss: 0.86302 | Running loss: 0.14692
Epoch: 0 | Iteration: 1731 | Classification loss: 0.05659 | Regression loss: 0.00000 | Running loss: 0.14691
Epoch: 0 | Iteration: 1732 | Classification loss: 0.05672 | Regression loss: 0.00000 | Running loss: 0.14691
Epoch: 0 | Iteration: 1733 | Classification loss: 0.05655 | Regression loss: 0.00000 | Running loss: 0.14691
Epoch: 0 | Iteration: 1734 | Classification loss: 0.05663 | Regression loss: 0.00000 | Running loss: 0.14691
Epoch: 0 | Iteration: 1735 | Classification loss: 0.05650 | Regression loss: 0.00000 | Running loss: 0.14691
Epoch: 0 | Iteration: 1736 | Classification loss: 0.05663 | Regression loss: 0.00000 | Running loss: 0.14691
Epoch: 0 | Iteration: 1737 | Classification loss: 0.05659 | Regression loss: 0.00000 | Running loss: 0.14691
Epoch: 0 | Iteration: 1738 | Classification loss: 0.05659 | Regression loss: 0.00000 | Running loss: 0.14691
Epoch: 0 | Iteration: 1739 | Classification loss: 0.05648 | Regression loss: 0.00000 | Running loss: 0.14691
Epoch: 0 | Iteration: 1740 | Classification loss: 0.05660 | Regression loss: 0.00000 | Running loss: 0.14691
Epoch: 0 | Iteration: 1741 | Classification loss: 0.05652 | Regression loss: 0.00000 | Running loss: 0.14691
Epoch: 0 | Iteration: 1742 | Classification loss: 0.05650 | Regression loss: 0.00000 | Running loss: 0.14691
Epoch: 0 | Iteration: 1743 | Classification loss: 0.05658 | Regression loss: 0.00000 | Running loss: 0.14691
Epoch: 0 | Iteration: 1744 | Classification loss: 0.05662 | Regression loss: 0.00000 | Running loss: 0.14691
Epoch: 0 | Iteration: 1745 | Classification loss: 1.15828 | Regression loss: 1.02253 | Running loss: 0.15115
Epoch: 0 | Iteration: 1746 | Classification loss: 0.05641 | Regression loss: 0.00000 | Running loss: 0.15115
Epoch: 0 | Iteration: 1747 | Classification loss: 0.05662 | Regression loss: 0.00000 | Running loss: 0.15115
Epoch: 0 | Iteration: 1748 | Classification loss: 0.05661 | Regression loss: 0.00000 | Running loss: 0.15115
Epoch: 0 | Iteration: 1749 | Classification loss: 0.05653 | Regression loss: 0.00000 | Running loss: 0.15115
Epoch: 0 | Iteration: 1750 | Classification loss: 0.05664 | Regression loss: 0.00000 | Running loss: 0.15115
Epoch: 0 | Iteration: 1751 | Classification loss: 0.05661 | Regression loss: 0.00000 | Running loss: 0.15115
Epoch: 0 | Iteration: 1752 | Classification loss: 0.05635 | Regression loss: 0.00000 | Running loss: 0.15115
Epoch: 0 | Iteration: 1753 | Classification loss: 0.05644 | Regression loss: 0.00000 | Running loss: 0.15115
Epoch: 0 | Iteration: 1754 | Classification loss: 0.05645 | Regression loss: 0.00000 | Running loss: 0.15115
Epoch: 0 | Iteration: 1755 | Classification loss: 0.05641 | Regression loss: 0.00000 | Running loss: 0.15115
Epoch: 0 | Iteration: 1756 | Classification loss: 0.05668 | Regression loss: 0.00000 | Running loss: 0.15115
Epoch: 0 | Iteration: 1757 | Classification loss: 0.05661 | Regression loss: 0.00000 | Running loss: 0.15114
Epoch: 0 | Iteration: 1758 | Classification loss: 0.05662 | Regression loss: 0.00000 | Running loss: 0.15114
Epoch: 0 | Iteration: 1759 | Classification loss: 0.05645 | Regression loss: 0.00000 | Running loss: 0.15114
Epoch: 0 | Iteration: 1760 | Classification loss: 0.05660 | Regression loss: 0.00000 | Running loss: 0.15114
Epoch: 0 | Iteration: 1761 | Classification loss: 0.05654 | Regression loss: 0.00000 | Running loss: 0.15114
Epoch: 0 | Iteration: 1762 | Classification loss: 0.05662 | Regression loss: 0.00000 | Running loss: 0.15114
Epoch: 0 | Iteration: 1763 | Classification loss: 0.05658 | Regression loss: 0.00000 | Running loss: 0.15114
Epoch: 0 | Iteration: 1764 | Classification loss: 0.05672 | Regression loss: 0.00000 | Running loss: 0.15114
Epoch: 0 | Iteration: 1765 | Classification loss: 0.05656 | Regression loss: 0.00000 | Running loss: 0.15114
Epoch: 0 | Iteration: 1766 | Classification loss: 0.05651 | Regression loss: 0.00000 | Running loss: 0.15114
Epoch: 0 | Iteration: 1767 | Classification loss: 0.05659 | Regression loss: 0.00000 | Running loss: 0.15114
Epoch: 0 | Iteration: 1768 | Classification loss: 0.05663 | Regression loss: 0.00000 | Running loss: 0.15114
Epoch: 0 | Iteration: 1769 | Classification loss: 0.05654 | Regression loss: 0.00000 | Running loss: 0.15114
Epoch: 0 | Iteration: 1770 | Classification loss: 0.05662 | Regression loss: 0.00000 | Running loss: 0.15114
Epoch: 0 | Iteration: 1771 | Classification loss: 0.05631 | Regression loss: 0.00000 | Running loss: 0.15113
Epoch: 0 | Iteration: 1772 | Classification loss: 0.05645 | Regression loss: 0.00000 | Running loss: 0.15113
Epoch: 0 | Iteration: 1773 | Classification loss: 0.05664 | Regression loss: 0.00000 | Running loss: 0.15113
Epoch: 0 | Iteration: 1774 | Classification loss: 0.05663 | Regression loss: 0.00000 | Running loss: 0.15113
Epoch: 0 | Iteration: 1775 | Classification loss: 0.05647 | Regression loss: 0.00000 | Running loss: 0.15113
Epoch: 0 | Iteration: 1776 | Classification loss: 0.05653 | Regression loss: 0.00000 | Running loss: 0.15113
Epoch: 0 | Iteration: 1777 | Classification loss: 0.05647 | Regression loss: 0.00000 | Running loss: 0.15113
Epoch: 0 | Iteration: 1778 | Classification loss: 0.05653 | Regression loss: 0.00000 | Running loss: 0.15113
Epoch: 0 | Iteration: 1779 | Classification loss: 0.05650 | Regression loss: 0.00000 | Running loss: 0.15113
Epoch: 0 | Iteration: 1780 | Classification loss: 0.05664 | Regression loss: 0.00000 | Running loss: 0.15113
Epoch: 0 | Iteration: 1781 | Classification loss: 0.05663 | Regression loss: 0.00000 | Running loss: 0.15113
Epoch: 0 | Iteration: 1782 | Classification loss: 0.05639 | Regression loss: 0.00000 | Running loss: 0.15113
Epoch: 0 | Iteration: 1783 | Classification loss: 0.05651 | Regression loss: 0.00000 | Running loss: 0.15113
Epoch: 0 | Iteration: 1784 | Classification loss: 0.05659 | Regression loss: 0.00000 | Running loss: 0.15112
Epoch: 0 | Iteration: 1785 | Classification loss: 0.05651 | Regression loss: 0.00000 | Running loss: 0.15112
Epoch: 0 | Iteration: 1786 | Classification loss: 0.05649 | Regression loss: 0.00000 | Running loss: 0.15112
Epoch: 0 | Iteration: 1787 | Classification loss: 0.05651 | Regression loss: 0.00000 | Running loss: 0.15112
Epoch: 0 | Iteration: 1788 | Classification loss: 0.05643 | Regression loss: 0.00000 | Running loss: 0.15112
Epoch: 0 | Iteration: 1789 | Classification loss: 1.13398 | Regression loss: 0.99424 | Running loss: 0.15526
Epoch: 0 | Iteration: 1790 | Classification loss: 0.05667 | Regression loss: 0.00000 | Running loss: 0.15526
Epoch: 0 | Iteration: 1791 | Classification loss: 0.05661 | Regression loss: 0.00000 | Running loss: 0.15526
Epoch: 0 | Iteration: 1792 | Classification loss: 0.05653 | Regression loss: 0.00000 | Running loss: 0.15526
Epoch: 0 | Iteration: 1793 | Classification loss: 1.13795 | Regression loss: 1.58071 | Running loss: 0.16059
Epoch: 0 | Iteration: 1794 | Classification loss: 0.05655 | Regression loss: 0.00000 | Running loss: 0.16059
Epoch: 0 | Iteration: 1795 | Classification loss: 0.05641 | Regression loss: 0.00000 | Running loss: 0.16058
Epoch: 0 | Iteration: 1796 | Classification loss: 0.05647 | Regression loss: 0.00000 | Running loss: 0.16058
Epoch: 0 | Iteration: 1797 | Classification loss: 0.05658 | Regression loss: 0.00000 | Running loss: 0.16058
Epoch: 0 | Iteration: 1798 | Classification loss: 0.05661 | Regression loss: 0.00000 | Running loss: 0.16058
Epoch: 0 | Iteration: 1799 | Classification loss: 0.05655 | Regression loss: 0.00000 | Running loss: 0.16058
Epoch: 0 | Iteration: 1800 | Classification loss: 0.05658 | Regression loss: 0.00000 | Running loss: 0.16058
Epoch: 0 | Iteration: 1801 | Classification loss: 0.05642 | Regression loss: 0.00000 | Running loss: 0.16058
Epoch: 0 | Iteration: 1802 | Classification loss: 0.05653 | Regression loss: 0.00000 | Running loss: 0.16058
Epoch: 0 | Iteration: 1803 | Classification loss: 0.05649 | Regression loss: 0.00000 | Running loss: 0.16058
Epoch: 0 | Iteration: 1804 | Classification loss: 0.05649 | Regression loss: 0.00000 | Running loss: 0.16058
Epoch: 0 | Iteration: 1805 | Classification loss: 0.05666 | Regression loss: 0.00000 | Running loss: 0.16058
Epoch: 0 | Iteration: 1806 | Classification loss: 0.05652 | Regression loss: 0.00000 | Running loss: 0.16058
Epoch: 0 | Iteration: 1807 | Classification loss: 0.05649 | Regression loss: 0.00000 | Running loss: 0.16058
Epoch: 0 | Iteration: 1808 | Classification loss: 1.13447 | Regression loss: 1.32437 | Running loss: 0.16538
Epoch: 0 | Iteration: 1809 | Classification loss: 0.05653 | Regression loss: 0.00000 | Running loss: 0.16538
Epoch: 0 | Iteration: 1810 | Classification loss: 0.05633 | Regression loss: 0.00000 | Running loss: 0.16538
Epoch: 0 | Iteration: 1811 | Classification loss: 0.05641 | Regression loss: 0.00000 | Running loss: 0.16538
Epoch: 0 | Iteration: 1812 | Classification loss: 0.05650 | Regression loss: 0.00000 | Running loss: 0.16538
Epoch: 0 | Iteration: 1813 | Classification loss: 0.05668 | Regression loss: 0.00000 | Running loss: 0.16538
Epoch: 0 | Iteration: 1814 | Classification loss: 0.05648 | Regression loss: 0.00000 | Running loss: 0.16537
Epoch: 0 | Iteration: 1815 | Classification loss: 0.05663 | Regression loss: 0.00000 | Running loss: 0.16537
Epoch: 0 | Iteration: 1816 | Classification loss: 0.05643 | Regression loss: 0.00000 | Running loss: 0.16537
Epoch: 0 | Iteration: 1817 | Classification loss: 0.05648 | Regression loss: 0.00000 | Running loss: 0.16537
Epoch: 0 | Iteration: 1818 | Classification loss: 0.05629 | Regression loss: 0.00000 | Running loss: 0.16537
Epoch: 0 | Iteration: 1819 | Classification loss: 0.05635 | Regression loss: 0.00000 | Running loss: 0.16537
Epoch: 0 | Iteration: 1820 | Classification loss: 0.05655 | Regression loss: 0.00000 | Running loss: 0.16537
Epoch: 0 | Iteration: 1821 | Classification loss: 1.15948 | Regression loss: 0.90033 | Running loss: 0.16938
Epoch: 0 | Iteration: 1822 | Classification loss: 0.05649 | Regression loss: 0.00000 | Running loss: 0.16937
Epoch: 0 | Iteration: 1823 | Classification loss: 0.05649 | Regression loss: 0.00000 | Running loss: 0.16937
Epoch: 0 | Iteration: 1824 | Classification loss: 0.05650 | Regression loss: 0.00000 | Running loss: 0.16937
Epoch: 0 | Iteration: 1825 | Classification loss: 0.05632 | Regression loss: 0.00000 | Running loss: 0.16937
Epoch: 0 | Iteration: 1826 | Classification loss: 0.05660 | Regression loss: 0.00000 | Running loss: 0.16937
Epoch: 0 | Iteration: 1827 | Classification loss: 0.05653 | Regression loss: 0.00000 | Running loss: 0.16937
Epoch: 0 | Iteration: 1828 | Classification loss: 0.05643 | Regression loss: 0.00000 | Running loss: 0.16937
Epoch: 0 | Iteration: 1829 | Classification loss: 0.05643 | Regression loss: 0.00000 | Running loss: 0.16937
Epoch: 0 | Iteration: 1830 | Classification loss: 0.05655 | Regression loss: 0.00000 | Running loss: 0.16937
Epoch: 0 | Iteration: 1831 | Classification loss: 0.05655 | Regression loss: 0.00000 | Running loss: 0.16937
Epoch: 0 | Iteration: 1832 | Classification loss: 0.05649 | Regression loss: 0.00000 | Running loss: 0.16937
Epoch: 0 | Iteration: 1833 | Classification loss: 0.05653 | Regression loss: 0.00000 | Running loss: 0.16937
Epoch: 0 | Iteration: 1834 | Classification loss: 0.05646 | Regression loss: 0.00000 | Running loss: 0.16466
Epoch: 0 | Iteration: 1835 | Classification loss: 0.05667 | Regression loss: 0.00000 | Running loss: 0.16466
Epoch: 0 | Iteration: 1836 | Classification loss: 0.05652 | Regression loss: 0.00000 | Running loss: 0.16466
Epoch: 0 | Iteration: 1837 | Classification loss: 0.05638 | Regression loss: 0.00000 | Running loss: 0.15959
Epoch: 0 | Iteration: 1838 | Classification loss: 0.05641 | Regression loss: 0.00000 | Running loss: 0.15959
Epoch: 0 | Iteration: 1839 | Classification loss: 0.05655 | Regression loss: 0.00000 | Running loss: 0.15959
Epoch: 0 | Iteration: 1840 | Classification loss: 0.05646 | Regression loss: 0.00000 | Running loss: 0.15959
Epoch: 0 | Iteration: 1841 | Classification loss: 0.05633 | Regression loss: 0.00000 | Running loss: 0.15958
Epoch: 0 | Iteration: 1842 | Classification loss: 0.05654 | Regression loss: 0.00000 | Running loss: 0.15958
Epoch: 0 | Iteration: 1843 | Classification loss: 0.05647 | Regression loss: 0.00000 | Running loss: 0.15958
Epoch: 0 | Iteration: 1844 | Classification loss: 0.05641 | Regression loss: 0.00000 | Running loss: 0.15958
Epoch: 0 | Iteration: 1845 | Classification loss: 0.05651 | Regression loss: 0.00000 | Running loss: 0.15958
Epoch: 0 | Iteration: 1846 | Classification loss: 0.05641 | Regression loss: 0.00000 | Running loss: 0.15958
Epoch: 0 | Iteration: 1847 | Classification loss: 0.05650 | Regression loss: 0.00000 | Running loss: 0.15958
Epoch: 0 | Iteration: 1848 | Classification loss: 0.05646 | Regression loss: 0.00000 | Running loss: 0.15958
Epoch: 0 | Iteration: 1849 | Classification loss: 1.13989 | Regression loss: 0.74195 | Running loss: 0.16323
Epoch: 0 | Iteration: 1850 | Classification loss: 0.05653 | Regression loss: 0.00000 | Running loss: 0.16323
Epoch: 0 | Iteration: 1851 | Classification loss: 0.05660 | Regression loss: 0.00000 | Running loss: 0.16323
Epoch: 0 | Iteration: 1852 | Classification loss: 0.05631 | Regression loss: 0.00000 | Running loss: 0.16323
Epoch: 0 | Iteration: 1853 | Classification loss: 0.05641 | Regression loss: 0.00000 | Running loss: 0.15885
Epoch: 0 | Iteration: 1854 | Classification loss: 0.05641 | Regression loss: 0.00000 | Running loss: 0.15885
Epoch: 0 | Iteration: 1855 | Classification loss: 0.05643 | Regression loss: 0.00000 | Running loss: 0.15884
Epoch: 0 | Iteration: 1856 | Classification loss: 0.05657 | Regression loss: 0.00000 | Running loss: 0.15884
Epoch: 0 | Iteration: 1857 | Classification loss: 0.05642 | Regression loss: 0.00000 | Running loss: 0.15884
Epoch: 0 | Iteration: 1858 | Classification loss: 0.05639 | Regression loss: 0.00000 | Running loss: 0.15884
Epoch: 0 | Iteration: 1859 | Classification loss: 1.18836 | Regression loss: 1.05316 | Running loss: 0.16321
Epoch: 0 | Iteration: 1860 | Classification loss: 0.05664 | Regression loss: 0.00000 | Running loss: 0.16321
Epoch: 0 | Iteration: 1861 | Classification loss: 0.05638 | Regression loss: 0.00000 | Running loss: 0.16321
Epoch: 0 | Iteration: 1862 | Classification loss: 0.05659 | Regression loss: 0.00000 | Running loss: 0.16321
Epoch: 0 | Iteration: 1863 | Classification loss: 0.05659 | Regression loss: 0.00000 | Running loss: 0.16321
Epoch: 0 | Iteration: 1864 | Classification loss: 0.05642 | Regression loss: 0.00000 | Running loss: 0.16321
Epoch: 0 | Iteration: 1865 | Classification loss: 0.05649 | Regression loss: 0.00000 | Running loss: 0.16321
Epoch: 0 | Iteration: 1866 | Classification loss: 0.05643 | Regression loss: 0.00000 | Running loss: 0.16321
Epoch: 0 | Iteration: 1867 | Classification loss: 0.05646 | Regression loss: 0.00000 | Running loss: 0.16321
Epoch: 0 | Iteration: 1868 | Classification loss: 0.05649 | Regression loss: 0.00000 | Running loss: 0.16321
Epoch: 0 | Iteration: 1869 | Classification loss: 0.05643 | Regression loss: 0.00000 | Running loss: 0.16321
Epoch: 0 | Iteration: 1870 | Classification loss: 0.05656 | Regression loss: 0.00000 | Running loss: 0.16320
Epoch: 0 | Iteration: 1871 | Classification loss: 0.05649 | Regression loss: 0.00000 | Running loss: 0.16320
Epoch: 0 | Iteration: 1872 | Classification loss: 1.13378 | Regression loss: 1.45222 | Running loss: 0.16826
Epoch: 0 | Iteration: 1873 | Classification loss: 0.05646 | Regression loss: 0.00000 | Running loss: 0.16826
Epoch: 0 | Iteration: 1874 | Classification loss: 0.05658 | Regression loss: 0.00000 | Running loss: 0.16826
Epoch: 0 | Iteration: 1875 | Classification loss: 0.05648 | Regression loss: 0.00000 | Running loss: 0.16826
Epoch: 0 | Iteration: 1876 | Classification loss: 0.05643 | Regression loss: 0.00000 | Running loss: 0.16826
Epoch: 0 | Iteration: 1877 | Classification loss: 0.05656 | Regression loss: 0.00000 | Running loss: 0.16826
Epoch: 0 | Iteration: 1878 | Classification loss: 0.05644 | Regression loss: 0.00000 | Running loss: 0.16826
Epoch: 0 | Iteration: 1879 | Classification loss: 0.05650 | Regression loss: 0.00000 | Running loss: 0.16826
Epoch: 0 | Iteration: 1880 | Classification loss: 0.05656 | Regression loss: 0.00000 | Running loss: 0.16826
Epoch: 0 | Iteration: 1881 | Classification loss: 0.05659 | Regression loss: 0.00000 | Running loss: 0.16826
Epoch: 0 | Iteration: 1882 | Classification loss: 0.05626 | Regression loss: 0.00000 | Running loss: 0.16825
Epoch: 0 | Iteration: 1883 | Classification loss: 1.14467 | Regression loss: 1.27568 | Running loss: 0.17298
Epoch: 0 | Iteration: 1884 | Classification loss: 0.05626 | Regression loss: 0.00000 | Running loss: 0.17298
Epoch: 0 | Iteration: 1885 | Classification loss: 0.05639 | Regression loss: 0.00000 | Running loss: 0.17298
Epoch: 0 | Iteration: 1886 | Classification loss: 0.05638 | Regression loss: 0.00000 | Running loss: 0.17298
Epoch: 0 | Iteration: 1887 | Classification loss: 0.05645 | Regression loss: 0.00000 | Running loss: 0.17298
Epoch: 0 | Iteration: 1888 | Classification loss: 0.05648 | Regression loss: 0.00000 | Running loss: 0.17298
Epoch: 0 | Iteration: 1889 | Classification loss: 1.13774 | Regression loss: 1.03093 | Running loss: 0.17720
Epoch: 0 | Iteration: 1890 | Classification loss: 0.05626 | Regression loss: 0.00000 | Running loss: 0.17720
Epoch: 0 | Iteration: 1891 | Classification loss: 0.05651 | Regression loss: 0.00000 | Running loss: 0.17720
Epoch: 0 | Iteration: 1892 | Classification loss: 0.05650 | Regression loss: 0.00000 | Running loss: 0.17209
Epoch: 0 | Iteration: 1893 | Classification loss: 0.05626 | Regression loss: 0.00000 | Running loss: 0.17209
Epoch: 0 | Iteration: 1894 | Classification loss: 0.05638 | Regression loss: 0.00000 | Running loss: 0.17209
Epoch: 0 | Iteration: 1895 | Classification loss: 0.05662 | Regression loss: 0.00000 | Running loss: 0.17209
Epoch: 0 | Iteration: 1896 | Classification loss: 0.05644 | Regression loss: 0.00000 | Running loss: 0.17209
Epoch: 0 | Iteration: 1897 | Classification loss: 0.05651 | Regression loss: 0.00000 | Running loss: 0.17209
Epoch: 0 | Iteration: 1898 | Classification loss: 0.05646 | Regression loss: 0.00000 | Running loss: 0.17209
Epoch: 0 | Iteration: 1899 | Classification loss: 0.05639 | Regression loss: 0.00000 | Running loss: 0.17209
Epoch: 0 | Iteration: 1900 | Classification loss: 1.13502 | Regression loss: 1.31895 | Running loss: 0.17688
Epoch: 0 | Iteration: 1901 | Classification loss: 0.05640 | Regression loss: 0.00000 | Running loss: 0.17688
Epoch: 0 | Iteration: 1902 | Classification loss: 0.05629 | Regression loss: 0.00000 | Running loss: 0.17688
Epoch: 0 | Iteration: 1903 | Classification loss: 0.05633 | Regression loss: 0.00000 | Running loss: 0.17688
Epoch: 0 | Iteration: 1904 | Classification loss: 0.05651 | Regression loss: 0.00000 | Running loss: 0.17688
Epoch: 0 | Iteration: 1905 | Classification loss: 0.05645 | Regression loss: 0.00000 | Running loss: 0.17688
Epoch: 0 | Iteration: 1906 | Classification loss: 0.05644 | Regression loss: 0.00000 | Running loss: 0.17688
Epoch: 0 | Iteration: 1907 | Classification loss: 0.05634 | Regression loss: 0.00000 | Running loss: 0.17688
Epoch: 0 | Iteration: 1908 | Classification loss: 0.05627 | Regression loss: 0.00000 | Running loss: 0.17688
Epoch: 0 | Iteration: 1909 | Classification loss: 0.05637 | Regression loss: 0.00000 | Running loss: 0.17688
Epoch: 0 | Iteration: 1910 | Classification loss: 0.05651 | Regression loss: 0.00000 | Running loss: 0.17687
Epoch: 0 | Iteration: 1911 | Classification loss: 0.05642 | Regression loss: 0.00000 | Running loss: 0.17687
Epoch: 0 | Iteration: 1912 | Classification loss: 0.05625 | Regression loss: 0.00000 | Running loss: 0.17687
Epoch: 0 | Iteration: 1913 | Classification loss: 0.05646 | Regression loss: 0.00000 | Running loss: 0.17687
Epoch: 0 | Iteration: 1914 | Classification loss: 1.13514 | Regression loss: 0.99812 | Running loss: 0.18103
Epoch: 0 | Iteration: 1915 | Classification loss: 0.05638 | Regression loss: 0.00000 | Running loss: 0.18102
Epoch: 0 | Iteration: 1916 | Classification loss: 0.05648 | Regression loss: 0.00000 | Running loss: 0.18102
Epoch: 0 | Iteration: 1917 | Classification loss: 0.05636 | Regression loss: 0.00000 | Running loss: 0.18102
Epoch: 0 | Iteration: 1918 | Classification loss: 0.05626 | Regression loss: 0.00000 | Running loss: 0.18102
Epoch: 0 | Iteration: 1919 | Classification loss: 0.05648 | Regression loss: 0.00000 | Running loss: 0.18102
Epoch: 0 | Iteration: 1920 | Classification loss: 0.05636 | Regression loss: 0.00000 | Running loss: 0.17611
Epoch: 0 | Iteration: 1921 | Classification loss: 0.05638 | Regression loss: 0.00000 | Running loss: 0.17611
Epoch: 0 | Iteration: 1922 | Classification loss: 0.05628 | Regression loss: 0.00000 | Running loss: 0.17611
Epoch: 0 | Iteration: 1923 | Classification loss: 0.05636 | Regression loss: 0.00000 | Running loss: 0.17611
Epoch: 0 | Iteration: 1924 | Classification loss: 0.05653 | Regression loss: 0.00000 | Running loss: 0.17173
Epoch: 0 | Iteration: 1925 | Classification loss: 0.05626 | Regression loss: 0.00000 | Running loss: 0.17173
Epoch: 0 | Iteration: 1926 | Classification loss: 0.05620 | Regression loss: 0.00000 | Running loss: 0.17173
Epoch: 0 | Iteration: 1927 | Classification loss: 0.05648 | Regression loss: 0.00000 | Running loss: 0.17173
Epoch: 0 | Iteration: 1928 | Classification loss: 0.05643 | Regression loss: 0.00000 | Running loss: 0.17173
Epoch: 0 | Iteration: 1929 | Classification loss: 0.05650 | Regression loss: 0.00000 | Running loss: 0.17173
Epoch: 0 | Iteration: 1930 | Classification loss: 0.05629 | Regression loss: 0.00000 | Running loss: 0.17173
Epoch: 0 | Iteration: 1931 | Classification loss: 0.05635 | Regression loss: 0.00000 | Running loss: 0.17173
Epoch: 0 | Iteration: 1932 | Classification loss: 0.05643 | Regression loss: 0.00000 | Running loss: 0.17173
Epoch: 0 | Iteration: 1933 | Classification loss: 1.13922 | Regression loss: 1.61224 | Running loss: 0.17712
Epoch: 0 | Iteration: 1934 | Classification loss: 0.05635 | Regression loss: 0.00000 | Running loss: 0.17712
Epoch: 0 | Iteration: 1935 | Classification loss: 0.05653 | Regression loss: 0.00000 | Running loss: 0.17711
Epoch: 0 | Iteration: 1936 | Classification loss: 0.05657 | Regression loss: 0.00000 | Running loss: 0.17711
Epoch: 0 | Iteration: 1937 | Classification loss: 0.05636 | Regression loss: 0.00000 | Running loss: 0.17711
Epoch: 0 | Iteration: 1938 | Classification loss: 0.05626 | Regression loss: 0.00000 | Running loss: 0.17711
Epoch: 0 | Iteration: 1939 | Classification loss: 1.15063 | Regression loss: 1.25294 | Running loss: 0.18181
Epoch: 0 | Iteration: 1940 | Classification loss: 0.05648 | Regression loss: 0.00000 | Running loss: 0.18180
Epoch: 0 | Iteration: 1941 | Classification loss: 0.05643 | Regression loss: 0.00000 | Running loss: 0.18180
Epoch: 0 | Iteration: 1942 | Classification loss: 0.05645 | Regression loss: 0.00000 | Running loss: 0.18180
Epoch: 0 | Iteration: 1943 | Classification loss: 0.05655 | Regression loss: 0.00000 | Running loss: 0.18180
Epoch: 0 | Iteration: 1944 | Classification loss: 0.05653 | Regression loss: 0.00000 | Running loss: 0.18180
Epoch: 0 | Iteration: 1945 | Classification loss: 0.05629 | Regression loss: 0.00000 | Running loss: 0.18180
Epoch: 0 | Iteration: 1946 | Classification loss: 0.05657 | Regression loss: 0.00000 | Running loss: 0.18180
Epoch: 0 | Iteration: 1947 | Classification loss: 0.05634 | Regression loss: 0.00000 | Running loss: 0.18180
Epoch: 0 | Iteration: 1948 | Classification loss: 0.05644 | Regression loss: 0.00000 | Running loss: 0.18180
Epoch: 0 | Iteration: 1949 | Classification loss: 0.05656 | Regression loss: 0.00000 | Running loss: 0.18180
Epoch: 0 | Iteration: 1950 | Classification loss: 0.05650 | Regression loss: 0.00000 | Running loss: 0.18180
Epoch: 0 | Iteration: 1951 | Classification loss: 0.05642 | Regression loss: 0.00000 | Running loss: 0.17692
Epoch: 0 | Iteration: 1952 | Classification loss: 0.05622 | Regression loss: 0.00000 | Running loss: 0.17691
Epoch: 0 | Iteration: 1953 | Classification loss: 0.05635 | Regression loss: 0.00000 | Running loss: 0.17691
Epoch: 0 | Iteration: 1954 | Classification loss: 0.05625 | Regression loss: 0.00000 | Running loss: 0.17691
Epoch: 0 | Iteration: 1955 | Classification loss: 0.05636 | Regression loss: 0.00000 | Running loss: 0.17691
Epoch: 0 | Iteration: 1956 | Classification loss: 0.05653 | Regression loss: 0.00000 | Running loss: 0.17691
Epoch: 0 | Iteration: 1957 | Classification loss: 0.05626 | Regression loss: 0.00000 | Running loss: 0.17691
Epoch: 0 | Iteration: 1958 | Classification loss: 0.05619 | Regression loss: 0.00000 | Running loss: 0.17691
Epoch: 0 | Iteration: 1959 | Classification loss: 1.15971 | Regression loss: 1.26130 | Running loss: 0.18164
Epoch: 0 | Iteration: 1960 | Classification loss: 0.05627 | Regression loss: 0.00000 | Running loss: 0.18164
Epoch: 0 | Iteration: 1961 | Classification loss: 0.05653 | Regression loss: 0.00000 | Running loss: 0.18164
Epoch: 0 | Iteration: 1962 | Classification loss: 0.05625 | Regression loss: 0.00000 | Running loss: 0.18164
Epoch: 0 | Iteration: 1963 | Classification loss: 0.05645 | Regression loss: 0.00000 | Running loss: 0.18164
Epoch: 0 | Iteration: 1964 | Classification loss: 0.05642 | Regression loss: 0.00000 | Running loss: 0.18163
Epoch: 0 | Iteration: 1965 | Classification loss: 0.05622 | Regression loss: 0.00000 | Running loss: 0.18163
Epoch: 0 | Iteration: 1966 | Classification loss: 1.15917 | Regression loss: 1.39336 | Running loss: 0.18663
Epoch: 0 | Iteration: 1967 | Classification loss: 0.05636 | Regression loss: 0.00000 | Running loss: 0.18662
Epoch: 0 | Iteration: 1968 | Classification loss: 0.05635 | Regression loss: 0.00000 | Running loss: 0.18662
Epoch: 0 | Iteration: 1969 | Classification loss: 0.05631 | Regression loss: 0.00000 | Running loss: 0.18662
Epoch: 0 | Iteration: 1970 | Classification loss: 0.05639 | Regression loss: 0.00000 | Running loss: 0.18662
Epoch: 0 | Iteration: 1971 | Classification loss: 0.05630 | Regression loss: 0.00000 | Running loss: 0.18662
Epoch: 0 | Iteration: 1972 | Classification loss: 0.05632 | Regression loss: 0.00000 | Running loss: 0.18662
Epoch: 0 | Iteration: 1973 | Classification loss: 0.05647 | Regression loss: 0.00000 | Running loss: 0.18250
Epoch: 0 | Iteration: 1974 | Classification loss: 0.05645 | Regression loss: 0.00000 | Running loss: 0.18250
Epoch: 0 | Iteration: 1975 | Classification loss: 0.05643 | Regression loss: 0.00000 | Running loss: 0.17786
Epoch: 0 | Iteration: 1976 | Classification loss: 0.05610 | Regression loss: 0.00000 | Running loss: 0.17786
Epoch: 0 | Iteration: 1977 | Classification loss: 0.05643 | Regression loss: 0.00000 | Running loss: 0.17786
Epoch: 0 | Iteration: 1978 | Classification loss: 0.05631 | Regression loss: 0.00000 | Running loss: 0.17786
Epoch: 0 | Iteration: 1979 | Classification loss: 0.05635 | Regression loss: 0.00000 | Running loss: 0.17786
Epoch: 0 | Iteration: 1980 | Classification loss: 0.05640 | Regression loss: 0.00000 | Running loss: 0.17785
Epoch: 0 | Iteration: 1981 | Classification loss: 0.05627 | Regression loss: 0.00000 | Running loss: 0.17785
Epoch: 0 | Iteration: 1982 | Classification loss: 0.05630 | Regression loss: 0.00000 | Running loss: 0.17323
Epoch: 0 | Iteration: 1983 | Classification loss: 0.05629 | Regression loss: 0.00000 | Running loss: 0.17323
Epoch: 0 | Iteration: 1984 | Classification loss: 0.05632 | Regression loss: 0.00000 | Running loss: 0.17323
Epoch: 0 | Iteration: 1985 | Classification loss: 0.05625 | Regression loss: 0.00000 | Running loss: 0.17323
Epoch: 0 | Iteration: 1986 | Classification loss: 0.05627 | Regression loss: 0.00000 | Running loss: 0.17323
Epoch: 0 | Iteration: 1987 | Classification loss: 0.05647 | Regression loss: 0.00000 | Running loss: 0.17323
Epoch: 0 | Iteration: 1988 | Classification loss: 0.05605 | Regression loss: 0.00000 | Running loss: 0.17323
Epoch: 0 | Iteration: 1989 | Classification loss: 0.05636 | Regression loss: 0.00000 | Running loss: 0.17323
Epoch: 0 | Iteration: 1990 | Classification loss: 0.05632 | Regression loss: 0.00000 | Running loss: 0.16844
Epoch: 0 | Iteration: 1991 | Classification loss: 0.05634 | Regression loss: 0.00000 | Running loss: 0.16844
Epoch: 0 | Iteration: 1992 | Classification loss: 0.05636 | Regression loss: 0.00000 | Running loss: 0.16844
Epoch: 0 | Iteration: 1993 | Classification loss: 0.05649 | Regression loss: 0.00000 | Running loss: 0.16844
Epoch: 0 | Iteration: 1994 | Classification loss: 0.05620 | Regression loss: 0.00000 | Running loss: 0.16844
Epoch: 0 | Iteration: 1995 | Classification loss: 0.05645 | Regression loss: 0.00000 | Running loss: 0.16844
Epoch: 0 | Iteration: 1996 | Classification loss: 0.05623 | Regression loss: 0.00000 | Running loss: 0.16843
Epoch: 0 | Iteration: 1997 | Classification loss: 0.05631 | Regression loss: 0.00000 | Running loss: 0.16843
Epoch: 0 | Iteration: 1998 | Classification loss: 0.05623 | Regression loss: 0.00000 | Running loss: 0.16843
Epoch: 0 | Iteration: 1999 | Classification loss: 1.15942 | Regression loss: 1.17309 | Running loss: 0.17298
Epoch: 0 | Iteration: 2000 | Classification loss: 0.05640 | Regression loss: 0.00000 | Running loss: 0.17298
Epoch: 0 | Iteration: 2001 | Classification loss: 0.05641 | Regression loss: 0.00000 | Running loss: 0.17298
Epoch: 0 | Iteration: 2002 | Classification loss: 0.05641 | Regression loss: 0.00000 | Running loss: 0.17298
Epoch: 0 | Iteration: 2003 | Classification loss: 0.05636 | Regression loss: 0.00000 | Running loss: 0.17298
Epoch: 0 | Iteration: 2004 | Classification loss: 0.05652 | Regression loss: 0.00000 | Running loss: 0.17298
Epoch: 0 | Iteration: 2005 | Classification loss: 0.05629 | Regression loss: 0.00000 | Running loss: 0.17298
Epoch: 0 | Iteration: 2006 | Classification loss: 0.05641 | Regression loss: 0.00000 | Running loss: 0.17298
Epoch: 0 | Iteration: 2007 | Classification loss: 0.05649 | Regression loss: 0.00000 | Running loss: 0.17298
Epoch: 0 | Iteration: 2008 | Classification loss: 1.13488 | Regression loss: 1.25179 | Running loss: 0.17764
Epoch: 0 | Iteration: 2009 | Classification loss: 0.05636 | Regression loss: 0.00000 | Running loss: 0.17764
Epoch: 0 | Iteration: 2010 | Classification loss: 0.05625 | Regression loss: 0.00000 | Running loss: 0.17764
Epoch: 0 | Iteration: 2011 | Classification loss: 0.05641 | Regression loss: 0.00000 | Running loss: 0.17764
Epoch: 0 | Iteration: 2012 | Classification loss: 0.05629 | Regression loss: 0.00000 | Running loss: 0.17764
Epoch: 0 | Iteration: 2013 | Classification loss: 0.05637 | Regression loss: 0.00000 | Running loss: 0.17764
Epoch: 0 | Iteration: 2014 | Classification loss: 0.05644 | Regression loss: 0.00000 | Running loss: 0.17763
Epoch: 0 | Iteration: 2015 | Classification loss: 1.13389 | Regression loss: 1.36344 | Running loss: 0.18252
Epoch: 0 | Iteration: 2016 | Classification loss: 0.05632 | Regression loss: 0.00000 | Running loss: 0.18252
Epoch: 0 | Iteration: 2017 | Classification loss: 0.05632 | Regression loss: 0.00000 | Running loss: 0.18251
Epoch: 0 | Iteration: 2018 | Classification loss: 0.05638 | Regression loss: 0.00000 | Running loss: 0.18251
Epoch: 0 | Iteration: 2019 | Classification loss: 0.05641 | Regression loss: 0.00000 | Running loss: 0.18251
Epoch: 0 | Iteration: 2020 | Classification loss: 0.05630 | Regression loss: 0.00000 | Running loss: 0.18251
Epoch: 0 | Iteration: 2021 | Classification loss: 0.05638 | Regression loss: 0.00000 | Running loss: 0.18251
Epoch: 0 | Iteration: 2022 | Classification loss: 0.05627 | Regression loss: 0.00000 | Running loss: 0.18251
Epoch: 0 | Iteration: 2023 | Classification loss: 1.18832 | Regression loss: 1.05401 | Running loss: 0.18688
Epoch: 0 | Iteration: 2024 | Classification loss: 0.05623 | Regression loss: 0.00000 | Running loss: 0.18688
Epoch: 0 | Iteration: 2025 | Classification loss: 1.15965 | Regression loss: 1.29042 | Running loss: 0.19167
Epoch: 0 | Iteration: 2026 | Classification loss: 0.05634 | Regression loss: 0.00000 | Running loss: 0.19167
Epoch: 0 | Iteration: 2027 | Classification loss: 0.05649 | Regression loss: 0.00000 | Running loss: 0.19167
Epoch: 0 | Iteration: 2028 | Classification loss: 0.05632 | Regression loss: 0.00000 | Running loss: 0.19167
Epoch: 0 | Iteration: 2029 | Classification loss: 0.05640 | Regression loss: 0.00000 | Running loss: 0.19167
Epoch: 0 | Iteration: 2030 | Classification loss: 0.05642 | Regression loss: 0.00000 | Running loss: 0.19166
Epoch: 0 | Iteration: 2031 | Classification loss: 0.05630 | Regression loss: 0.00000 | Running loss: 0.19166
Epoch: 0 | Iteration: 2032 | Classification loss: 0.05626 | Regression loss: 0.00000 | Running loss: 0.19166
Epoch: 0 | Iteration: 2033 | Classification loss: 0.05633 | Regression loss: 0.00000 | Running loss: 0.19166
Epoch: 0 | Iteration: 2034 | Classification loss: 0.05640 | Regression loss: 0.00000 | Running loss: 0.19166
Epoch: 0 | Iteration: 2035 | Classification loss: 0.05634 | Regression loss: 0.00000 | Running loss: 0.19166
Epoch: 0 | Iteration: 2036 | Classification loss: 0.05643 | Regression loss: 0.00000 | Running loss: 0.19166
Epoch: 0 | Iteration: 2037 | Classification loss: 0.05622 | Regression loss: 0.00000 | Running loss: 0.19166
Epoch: 0 | Iteration: 2038 | Classification loss: 1.13867 | Regression loss: 1.00611 | Running loss: 0.19584
Epoch: 0 | Iteration: 2039 | Classification loss: 0.05608 | Regression loss: 0.00000 | Running loss: 0.19583
Epoch: 0 | Iteration: 2040 | Classification loss: 0.05636 | Regression loss: 0.00000 | Running loss: 0.19583
Epoch: 0 | Iteration: 2041 | Classification loss: 0.05627 | Regression loss: 0.00000 | Running loss: 0.19583
Epoch: 0 | Iteration: 2042 | Classification loss: 0.05625 | Regression loss: 0.00000 | Running loss: 0.19583
Epoch: 0 | Iteration: 2043 | Classification loss: 0.05639 | Regression loss: 0.00000 | Running loss: 0.19151
Epoch: 0 | Iteration: 2044 | Classification loss: 0.05624 | Regression loss: 0.00000 | Running loss: 0.19151
Epoch: 0 | Iteration: 2045 | Classification loss: 0.05620 | Regression loss: 0.00000 | Running loss: 0.19151
Epoch: 0 | Iteration: 2046 | Classification loss: 0.05632 | Regression loss: 0.00000 | Running loss: 0.19150
Epoch: 0 | Iteration: 2047 | Classification loss: 0.05630 | Regression loss: 0.00000 | Running loss: 0.19150
Epoch: 0 | Iteration: 2048 | Classification loss: 0.05631 | Regression loss: 0.00000 | Running loss: 0.19150
Epoch: 0 | Iteration: 2049 | Classification loss: 0.05638 | Regression loss: 0.00000 | Running loss: 0.19150
Epoch: 0 | Iteration: 2050 | Classification loss: 0.05617 | Regression loss: 0.00000 | Running loss: 0.19150
Epoch: 0 | Iteration: 2051 | Classification loss: 1.13604 | Regression loss: 1.38758 | Running loss: 0.19644
Epoch: 0 | Iteration: 2052 | Classification loss: 1.13714 | Regression loss: 1.25494 | Running loss: 0.20111
Epoch: 0 | Iteration: 2053 | Classification loss: 0.05628 | Regression loss: 0.00000 | Running loss: 0.20111
Epoch: 0 | Iteration: 2054 | Classification loss: 1.13516 | Regression loss: 1.17574 | Running loss: 0.20561
Epoch: 0 | Iteration: 2055 | Classification loss: 0.05642 | Regression loss: 0.00000 | Running loss: 0.20561
Epoch: 0 | Iteration: 2056 | Classification loss: 0.05635 | Regression loss: 0.00000 | Running loss: 0.20561
Epoch: 0 | Iteration: 2057 | Classification loss: 0.05632 | Regression loss: 0.00000 | Running loss: 0.20561
Epoch: 0 | Iteration: 2058 | Classification loss: 0.05649 | Regression loss: 0.00000 | Running loss: 0.20561
Epoch: 0 | Iteration: 2059 | Classification loss: 0.05627 | Regression loss: 0.00000 | Running loss: 0.20561
Epoch: 0 | Iteration: 2060 | Classification loss: 0.05642 | Regression loss: 0.00000 | Running loss: 0.20561
Epoch: 0 | Iteration: 2061 | Classification loss: 0.05645 | Regression loss: 0.00000 | Running loss: 0.20561
Epoch: 0 | Iteration: 2062 | Classification loss: 1.16055 | Regression loss: 1.08384 | Running loss: 0.20999
Epoch: 0 | Iteration: 2063 | Classification loss: 0.05643 | Regression loss: 0.00000 | Running loss: 0.20999
Epoch: 0 | Iteration: 2064 | Classification loss: 0.05636 | Regression loss: 0.00000 | Running loss: 0.20998
Epoch: 0 | Iteration: 2065 | Classification loss: 0.05629 | Regression loss: 0.00000 | Running loss: 0.20998
Epoch: 0 | Iteration: 2066 | Classification loss: 0.05652 | Regression loss: 0.00000 | Running loss: 0.20998
Epoch: 0 | Iteration: 2067 | Classification loss: 0.05616 | Regression loss: 0.00000 | Running loss: 0.20998
Epoch: 0 | Iteration: 2068 | Classification loss: 0.05630 | Regression loss: 0.00000 | Running loss: 0.20998
Epoch: 0 | Iteration: 2069 | Classification loss: 0.05626 | Regression loss: 0.00000 | Running loss: 0.20998
Epoch: 0 | Iteration: 2070 | Classification loss: 0.05642 | Regression loss: 0.00000 | Running loss: 0.20998
Epoch: 0 | Iteration: 2071 | Classification loss: 0.05628 | Regression loss: 0.00000 | Running loss: 0.20998
Epoch: 0 | Iteration: 2072 | Classification loss: 0.05635 | Regression loss: 0.00000 | Running loss: 0.20998
Epoch: 0 | Iteration: 2073 | Classification loss: 0.05638 | Regression loss: 0.00000 | Running loss: 0.20998
Epoch: 0 | Iteration: 2074 | Classification loss: 0.05631 | Regression loss: 0.00000 | Running loss: 0.20998
Epoch: 0 | Iteration: 2075 | Classification loss: 0.05648 | Regression loss: 0.00000 | Running loss: 0.20998
Epoch: 0 | Iteration: 2076 | Classification loss: 0.05628 | Regression loss: 0.00000 | Running loss: 0.20998
Epoch: 0 | Iteration: 2077 | Classification loss: 0.05652 | Regression loss: 0.00000 | Running loss: 0.20998
Epoch: 0 | Iteration: 2078 | Classification loss: 0.05617 | Regression loss: 0.00000 | Running loss: 0.20997
Epoch: 0 | Iteration: 2079 | Classification loss: 0.05632 | Regression loss: 0.00000 | Running loss: 0.20997
Epoch: 0 | Iteration: 2080 | Classification loss: 0.05632 | Regression loss: 0.00000 | Running loss: 0.20997
Epoch: 0 | Iteration: 2081 | Classification loss: 0.05639 | Regression loss: 0.00000 | Running loss: 0.20997
Epoch: 0 | Iteration: 2082 | Classification loss: 0.05648 | Regression loss: 0.00000 | Running loss: 0.20997
Epoch: 0 | Iteration: 2083 | Classification loss: 0.05615 | Regression loss: 0.00000 | Running loss: 0.20997
Epoch: 0 | Iteration: 2084 | Classification loss: 0.05641 | Regression loss: 0.00000 | Running loss: 0.20997
Epoch: 0 | Iteration: 2085 | Classification loss: 0.05646 | Regression loss: 0.00000 | Running loss: 0.20997
Epoch: 0 | Iteration: 2086 | Classification loss: 0.05624 | Regression loss: 0.00000 | Running loss: 0.20997
Epoch: 0 | Iteration: 2087 | Classification loss: 0.05643 | Regression loss: 0.00000 | Running loss: 0.20997
Epoch: 0 | Iteration: 2088 | Classification loss: 0.05624 | Regression loss: 0.00000 | Running loss: 0.20997
Epoch: 0 | Iteration: 2089 | Classification loss: 1.14045 | Regression loss: 1.36745 | Running loss: 0.21487
Epoch: 0 | Iteration: 2090 | Classification loss: 0.05628 | Regression loss: 0.00000 | Running loss: 0.21487
Epoch: 0 | Iteration: 2091 | Classification loss: 0.05644 | Regression loss: 0.00000 | Running loss: 0.21487
Epoch: 0 | Iteration: 2092 | Classification loss: 0.05640 | Regression loss: 0.00000 | Running loss: 0.21487
Epoch: 0 | Iteration: 2093 | Classification loss: 0.05624 | Regression loss: 0.00000 | Running loss: 0.21487
Epoch: 0 | Iteration: 2094 | Classification loss: 0.05639 | Regression loss: 0.00000 | Running loss: 0.21017
Epoch: 0 | Iteration: 2095 | Classification loss: 0.05630 | Regression loss: 0.00000 | Running loss: 0.21017
Epoch: 0 | Iteration: 2096 | Classification loss: 0.05638 | Regression loss: 0.00000 | Running loss: 0.21017
Epoch: 0 | Iteration: 2097 | Classification loss: 0.05631 | Regression loss: 0.00000 | Running loss: 0.21016
Epoch: 0 | Iteration: 2098 | Classification loss: 0.05626 | Regression loss: 0.00000 | Running loss: 0.21016
Epoch: 0 | Iteration: 2099 | Classification loss: 0.05634 | Regression loss: 0.00000 | Running loss: 0.21016
Epoch: 0 | Iteration: 2100 | Classification loss: 0.05619 | Regression loss: 0.00000 | Running loss: 0.21016
Epoch: 0 | Iteration: 2101 | Classification loss: 0.05633 | Regression loss: 0.00000 | Running loss: 0.21016
Epoch: 0 | Iteration: 2102 | Classification loss: 0.05623 | Regression loss: 0.00000 | Running loss: 0.21016
Epoch: 0 | Iteration: 2103 | Classification loss: 0.05636 | Regression loss: 0.00000 | Running loss: 0.21016
Epoch: 0 | Iteration: 2104 | Classification loss: 0.05618 | Regression loss: 0.00000 | Running loss: 0.21016
Epoch: 0 | Iteration: 2105 | Classification loss: 0.05637 | Regression loss: 0.00000 | Running loss: 0.21016
Epoch: 0 | Iteration: 2106 | Classification loss: 0.05620 | Regression loss: 0.00000 | Running loss: 0.20581
Epoch: 0 | Iteration: 2107 | Classification loss: 0.05639 | Regression loss: 0.00000 | Running loss: 0.20581
Epoch: 0 | Iteration: 2108 | Classification loss: 0.05611 | Regression loss: 0.00000 | Running loss: 0.20581
Epoch: 0 | Iteration: 2109 | Classification loss: 0.05645 | Regression loss: 0.00000 | Running loss: 0.20581
Epoch: 0 | Iteration: 2110 | Classification loss: 0.05639 | Regression loss: 0.00000 | Running loss: 0.20581
Epoch: 0 | Iteration: 2111 | Classification loss: 0.05622 | Regression loss: 0.00000 | Running loss: 0.20581
Epoch: 0 | Iteration: 2112 | Classification loss: 1.14078 | Regression loss: 1.19674 | Running loss: 0.21037
Epoch: 0 | Iteration: 2113 | Classification loss: 0.05625 | Regression loss: 0.00000 | Running loss: 0.21037
Epoch: 0 | Iteration: 2114 | Classification loss: 0.05636 | Regression loss: 0.00000 | Running loss: 0.21037
Epoch: 0 | Iteration: 2115 | Classification loss: 0.05622 | Regression loss: 0.00000 | Running loss: 0.21037
Epoch: 0 | Iteration: 2116 | Classification loss: 0.05636 | Regression loss: 0.00000 | Running loss: 0.21037
Epoch: 0 | Iteration: 2117 | Classification loss: 0.05641 | Regression loss: 0.00000 | Running loss: 0.21037
Epoch: 0 | Iteration: 2118 | Classification loss: 0.05617 | Regression loss: 0.00000 | Running loss: 0.21037
Epoch: 0 | Iteration: 2119 | Classification loss: 0.05617 | Regression loss: 0.00000 | Running loss: 0.21036
Epoch: 0 | Iteration: 2120 | Classification loss: 0.05619 | Regression loss: 0.00000 | Running loss: 0.21036
Epoch: 0 | Iteration: 2121 | Classification loss: 1.15185 | Regression loss: 1.27848 | Running loss: 0.21511
Epoch: 0 | Iteration: 2122 | Classification loss: 0.05646 | Regression loss: 0.00000 | Running loss: 0.21511
Epoch: 0 | Iteration: 2123 | Classification loss: 0.05641 | Regression loss: 0.00000 | Running loss: 0.21511
Epoch: 0 | Iteration: 2124 | Classification loss: 0.05603 | Regression loss: 0.00000 | Running loss: 0.21511
Epoch: 0 | Iteration: 2125 | Classification loss: 0.05624 | Regression loss: 0.00000 | Running loss: 0.21511
Epoch: 0 | Iteration: 2126 | Classification loss: 0.05640 | Regression loss: 0.00000 | Running loss: 0.21511
Epoch: 0 | Iteration: 2127 | Classification loss: 0.05648 | Regression loss: 0.00000 | Running loss: 0.21511
Epoch: 0 | Iteration: 2128 | Classification loss: 0.05633 | Regression loss: 0.00000 | Running loss: 0.21511
Epoch: 0 | Iteration: 2129 | Classification loss: 0.05620 | Regression loss: 0.00000 | Running loss: 0.21511
Epoch: 0 | Iteration: 2130 | Classification loss: 0.05626 | Regression loss: 0.00000 | Running loss: 0.21511
Epoch: 0 | Iteration: 2131 | Classification loss: 0.05636 | Regression loss: 0.00000 | Running loss: 0.21510
Epoch: 0 | Iteration: 2132 | Classification loss: 1.13534 | Regression loss: 1.24382 | Running loss: 0.21975
Epoch: 0 | Iteration: 2133 | Classification loss: 0.05645 | Regression loss: 0.00000 | Running loss: 0.21975
Epoch: 0 | Iteration: 2134 | Classification loss: 0.05620 | Regression loss: 0.00000 | Running loss: 0.21975
Epoch: 0 | Iteration: 2135 | Classification loss: 0.05638 | Regression loss: 0.00000 | Running loss: 0.21975
Epoch: 0 | Iteration: 2136 | Classification loss: 0.05635 | Regression loss: 0.00000 | Running loss: 0.21975
Epoch: 0 | Iteration: 2137 | Classification loss: 0.05620 | Regression loss: 0.00000 | Running loss: 0.21975
Epoch: 0 | Iteration: 2138 | Classification loss: 0.05608 | Regression loss: 0.00000 | Running loss: 0.21975
Epoch: 0 | Iteration: 2139 | Classification loss: 0.05641 | Regression loss: 0.00000 | Running loss: 0.21975
Epoch: 0 | Iteration: 2140 | Classification loss: 0.05609 | Regression loss: 0.00000 | Running loss: 0.21534
Epoch: 0 | Iteration: 2141 | Classification loss: 0.05636 | Regression loss: 0.00000 | Running loss: 0.21534
Epoch: 0 | Iteration: 2142 | Classification loss: 0.05623 | Regression loss: 0.00000 | Running loss: 0.21534
Epoch: 0 | Iteration: 2143 | Classification loss: 0.05633 | Regression loss: 0.00000 | Running loss: 0.21111
Epoch: 0 | Iteration: 2144 | Classification loss: 0.05619 | Regression loss: 0.00000 | Running loss: 0.21111
Epoch: 0 | Iteration: 2145 | Classification loss: 0.05627 | Regression loss: 0.00000 | Running loss: 0.21111
Epoch: 0 | Iteration: 2146 | Classification loss: 0.05614 | Regression loss: 0.00000 | Running loss: 0.21111
Epoch: 0 | Iteration: 2147 | Classification loss: 0.05641 | Regression loss: 0.00000 | Running loss: 0.21110
Epoch: 0 | Iteration: 2148 | Classification loss: 0.05639 | Regression loss: 0.00000 | Running loss: 0.21110
Epoch: 0 | Iteration: 2149 | Classification loss: 0.05619 | Regression loss: 0.00000 | Running loss: 0.21110
Epoch: 0 | Iteration: 2150 | Classification loss: 0.05609 | Regression loss: 0.00000 | Running loss: 0.21110
Epoch: 0 | Iteration: 2151 | Classification loss: 0.05628 | Regression loss: 0.00000 | Running loss: 0.21110
Epoch: 0 | Iteration: 2152 | Classification loss: 0.05625 | Regression loss: 0.00000 | Running loss: 0.21110
Epoch: 0 | Iteration: 2153 | Classification loss: 0.05614 | Regression loss: 0.00000 | Running loss: 0.21110
Epoch: 0 | Iteration: 2154 | Classification loss: 0.05639 | Regression loss: 0.00000 | Running loss: 0.21110
Epoch: 0 | Iteration: 2155 | Classification loss: 0.05622 | Regression loss: 0.00000 | Running loss: 0.21110
Epoch: 0 | Iteration: 2156 | Classification loss: 0.05632 | Regression loss: 0.00000 | Running loss: 0.21110
Epoch: 0 | Iteration: 2157 | Classification loss: 0.05614 | Regression loss: 0.00000 | Running loss: 0.21110
Epoch: 0 | Iteration: 2158 | Classification loss: 0.05610 | Regression loss: 0.00000 | Running loss: 0.21110
Epoch: 0 | Iteration: 2159 | Classification loss: 0.05629 | Regression loss: 0.00000 | Running loss: 0.21110
Epoch: 0 | Iteration: 2160 | Classification loss: 0.05618 | Regression loss: 0.00000 | Running loss: 0.21109
Epoch: 0 | Iteration: 2161 | Classification loss: 0.05615 | Regression loss: 0.00000 | Running loss: 0.20726
Epoch: 0 | Iteration: 2162 | Classification loss: 0.05610 | Regression loss: 0.00000 | Running loss: 0.20726
Epoch: 0 | Iteration: 2163 | Classification loss: 0.05634 | Regression loss: 0.00000 | Running loss: 0.20726
Epoch: 0 | Iteration: 2164 | Classification loss: 0.05643 | Regression loss: 0.00000 | Running loss: 0.20726
Epoch: 0 | Iteration: 2165 | Classification loss: 0.05623 | Regression loss: 0.00000 | Running loss: 0.20726
Epoch: 0 | Iteration: 2166 | Classification loss: 0.05617 | Regression loss: 0.00000 | Running loss: 0.20726
Epoch: 0 | Iteration: 2167 | Classification loss: 0.05644 | Regression loss: 0.00000 | Running loss: 0.20726
Epoch: 0 | Iteration: 2168 | Classification loss: 0.05602 | Regression loss: 0.00000 | Running loss: 0.20726
Epoch: 0 | Iteration: 2169 | Classification loss: 0.05618 | Regression loss: 0.00000 | Running loss: 0.20726
Epoch: 0 | Iteration: 2170 | Classification loss: 0.05617 | Regression loss: 0.00000 | Running loss: 0.20726
Epoch: 0 | Iteration: 2171 | Classification loss: 0.05613 | Regression loss: 0.00000 | Running loss: 0.20726
Epoch: 0 | Iteration: 2172 | Classification loss: 0.05624 | Regression loss: 0.00000 | Running loss: 0.20726
Epoch: 0 | Iteration: 2173 | Classification loss: 0.05607 | Regression loss: 0.00000 | Running loss: 0.20726
Epoch: 0 | Iteration: 2174 | Classification loss: 0.05644 | Regression loss: 0.00000 | Running loss: 0.20726
Epoch: 0 | Iteration: 2175 | Classification loss: 1.14002 | Regression loss: 0.67191 | Running loss: 0.21077
Epoch: 0 | Iteration: 2176 | Classification loss: 0.05609 | Regression loss: 0.00000 | Running loss: 0.21076
Epoch: 0 | Iteration: 2177 | Classification loss: 1.14172 | Regression loss: 1.22220 | Running loss: 0.21538
Epoch: 0 | Iteration: 2178 | Classification loss: 0.05616 | Regression loss: 0.00000 | Running loss: 0.21538
Epoch: 0 | Iteration: 2179 | Classification loss: 0.05627 | Regression loss: 0.00000 | Running loss: 0.21538
Epoch: 0 | Iteration: 2180 | Classification loss: 0.05624 | Regression loss: 0.00000 | Running loss: 0.21538
Epoch: 0 | Iteration: 2181 | Classification loss: 1.13621 | Regression loss: 1.12769 | Running loss: 0.21979
Epoch: 0 | Iteration: 2182 | Classification loss: 0.05623 | Regression loss: 0.00000 | Running loss: 0.21979
Epoch: 0 | Iteration: 2183 | Classification loss: 0.05626 | Regression loss: 0.00000 | Running loss: 0.21979
Epoch: 0 | Iteration: 2184 | Classification loss: 0.05635 | Regression loss: 0.00000 | Running loss: 0.21979
Epoch: 0 | Iteration: 2185 | Classification loss: 0.05642 | Regression loss: 0.00000 | Running loss: 0.21979
Epoch: 0 | Iteration: 2186 | Classification loss: 0.05632 | Regression loss: 0.00000 | Running loss: 0.21979
Epoch: 0 | Iteration: 2187 | Classification loss: 0.05625 | Regression loss: 0.00000 | Running loss: 0.21979
Epoch: 0 | Iteration: 2188 | Classification loss: 1.15979 | Regression loss: 1.27657 | Running loss: 0.22455
Epoch: 0 | Iteration: 2189 | Classification loss: 0.05631 | Regression loss: 0.00000 | Running loss: 0.22455
Epoch: 0 | Iteration: 2190 | Classification loss: 0.05609 | Regression loss: 0.00000 | Running loss: 0.22455
Epoch: 0 | Iteration: 2191 | Classification loss: 0.05643 | Regression loss: 0.00000 | Running loss: 0.22455
Epoch: 0 | Iteration: 2192 | Classification loss: 0.05636 | Regression loss: 0.00000 | Running loss: 0.22455
Epoch: 0 | Iteration: 2193 | Classification loss: 0.05636 | Regression loss: 0.00000 | Running loss: 0.22455
Epoch: 0 | Iteration: 2194 | Classification loss: 0.05639 | Regression loss: 0.00000 | Running loss: 0.22455
Epoch: 0 | Iteration: 2195 | Classification loss: 0.05619 | Regression loss: 0.00000 | Running loss: 0.22454
Epoch: 0 | Iteration: 2196 | Classification loss: 0.05623 | Regression loss: 0.00000 | Running loss: 0.22454
Epoch: 0 | Iteration: 2197 | Classification loss: 0.05619 | Regression loss: 0.00000 | Running loss: 0.22454
Epoch: 0 | Iteration: 2198 | Classification loss: 0.05611 | Regression loss: 0.00000 | Running loss: 0.22454
Epoch: 0 | Iteration: 2199 | Classification loss: 0.05639 | Regression loss: 0.00000 | Running loss: 0.22454
Epoch: 0 | Iteration: 2200 | Classification loss: 0.05607 | Regression loss: 0.00000 | Running loss: 0.22454
Epoch: 0 | Iteration: 2201 | Classification loss: 0.05617 | Regression loss: 0.00000 | Running loss: 0.22454
Epoch: 0 | Iteration: 2202 | Classification loss: 0.05610 | Regression loss: 0.00000 | Running loss: 0.22454
Epoch: 0 | Iteration: 2203 | Classification loss: 0.05598 | Regression loss: 0.00000 | Running loss: 0.22454
Epoch: 0 | Iteration: 2204 | Classification loss: 0.05632 | Regression loss: 0.00000 | Running loss: 0.22454
Epoch: 0 | Iteration: 2205 | Classification loss: 0.05611 | Regression loss: 0.00000 | Running loss: 0.22454
Epoch: 0 | Iteration: 2206 | Classification loss: 0.05622 | Regression loss: 0.00000 | Running loss: 0.22453
Epoch: 0 | Iteration: 2207 | Classification loss: 0.05616 | Regression loss: 0.00000 | Running loss: 0.22453
Epoch: 0 | Iteration: 2208 | Classification loss: 0.05628 | Regression loss: 0.00000 | Running loss: 0.22453
Epoch: 0 | Iteration: 2209 | Classification loss: 0.05629 | Regression loss: 0.00000 | Running loss: 0.22453
Epoch: 0 | Iteration: 2210 | Classification loss: 0.05628 | Regression loss: 0.00000 | Running loss: 0.22453
Epoch: 0 | Iteration: 2211 | Classification loss: 0.05605 | Regression loss: 0.00000 | Running loss: 0.22453
Epoch: 0 | Iteration: 2212 | Classification loss: 0.05612 | Regression loss: 0.00000 | Running loss: 0.22453
Epoch: 0 | Iteration: 2213 | Classification loss: 0.05598 | Regression loss: 0.00000 | Running loss: 0.22453
Epoch: 0 | Iteration: 2214 | Classification loss: 0.05642 | Regression loss: 0.00000 | Running loss: 0.22453
Epoch: 0 | Iteration: 2215 | Classification loss: 0.05607 | Regression loss: 0.00000 | Running loss: 0.22453
Epoch: 0 | Iteration: 2216 | Classification loss: 0.05640 | Regression loss: 0.00000 | Running loss: 0.22453
Epoch: 0 | Iteration: 2217 | Classification loss: 0.05611 | Regression loss: 0.00000 | Running loss: 0.22453
Epoch: 0 | Iteration: 2218 | Classification loss: 0.05631 | Regression loss: 0.00000 | Running loss: 0.22452
Epoch: 0 | Iteration: 2219 | Classification loss: 0.05627 | Regression loss: 0.00000 | Running loss: 0.22452
Epoch: 0 | Iteration: 2220 | Classification loss: 0.05609 | Regression loss: 0.00000 | Running loss: 0.22045
Epoch: 0 | Iteration: 2221 | Classification loss: 0.05614 | Regression loss: 0.00000 | Running loss: 0.22045
Epoch: 0 | Iteration: 2222 | Classification loss: 0.05623 | Regression loss: 0.00000 | Running loss: 0.22045
Epoch: 0 | Iteration: 2223 | Classification loss: 0.05613 | Regression loss: 0.00000 | Running loss: 0.22045
Epoch: 0 | Iteration: 2224 | Classification loss: 0.05614 | Regression loss: 0.00000 | Running loss: 0.22045
Epoch: 0 | Iteration: 2225 | Classification loss: 0.05606 | Regression loss: 0.00000 | Running loss: 0.22045
Epoch: 0 | Iteration: 2226 | Classification loss: 0.05632 | Regression loss: 0.00000 | Running loss: 0.22045
Epoch: 0 | Iteration: 2227 | Classification loss: 0.05643 | Regression loss: 0.00000 | Running loss: 0.22045
Epoch: 0 | Iteration: 2228 | Classification loss: 0.05635 | Regression loss: 0.00000 | Running loss: 0.21571
Epoch: 0 | Iteration: 2229 | Classification loss: 0.05623 | Regression loss: 0.00000 | Running loss: 0.21571
Epoch: 0 | Iteration: 2230 | Classification loss: 0.05634 | Regression loss: 0.00000 | Running loss: 0.21178
Epoch: 0 | Iteration: 2231 | Classification loss: 0.05604 | Regression loss: 0.00000 | Running loss: 0.21178
Epoch: 0 | Iteration: 2232 | Classification loss: 0.05613 | Regression loss: 0.00000 | Running loss: 0.21177
Epoch: 0 | Iteration: 2233 | Classification loss: 0.05627 | Regression loss: 0.00000 | Running loss: 0.21177
Epoch: 0 | Iteration: 2234 | Classification loss: 1.13346 | Regression loss: 1.05145 | Running loss: 0.21603
Epoch: 0 | Iteration: 2235 | Classification loss: 0.05611 | Regression loss: 0.00000 | Running loss: 0.21603
Epoch: 0 | Iteration: 2236 | Classification loss: 0.05602 | Regression loss: 0.00000 | Running loss: 0.21603
Epoch: 0 | Iteration: 2237 | Classification loss: 0.05597 | Regression loss: 0.00000 | Running loss: 0.21603
Epoch: 0 | Iteration: 2238 | Classification loss: 0.05622 | Regression loss: 0.00000 | Running loss: 0.21603
Epoch: 0 | Iteration: 2239 | Classification loss: 0.05610 | Regression loss: 0.00000 | Running loss: 0.21603
Epoch: 0 | Iteration: 2240 | Classification loss: 0.05626 | Regression loss: 0.00000 | Running loss: 0.21602
Epoch: 0 | Iteration: 2241 | Classification loss: 0.05610 | Regression loss: 0.00000 | Running loss: 0.21602
Epoch: 0 | Iteration: 2242 | Classification loss: 0.05608 | Regression loss: 0.00000 | Running loss: 0.21602
Epoch: 0 | Iteration: 2243 | Classification loss: 0.05618 | Regression loss: 0.00000 | Running loss: 0.21602
Epoch: 0 | Iteration: 2244 | Classification loss: 0.05605 | Regression loss: 0.00000 | Running loss: 0.21602
Epoch: 0 | Iteration: 2245 | Classification loss: 0.05628 | Regression loss: 0.00000 | Running loss: 0.21177
Epoch: 0 | Iteration: 2246 | Classification loss: 0.05611 | Regression loss: 0.00000 | Running loss: 0.21177
Epoch: 0 | Iteration: 2247 | Classification loss: 0.05622 | Regression loss: 0.00000 | Running loss: 0.21177
Epoch: 0 | Iteration: 2248 | Classification loss: 0.05604 | Regression loss: 0.00000 | Running loss: 0.21177
Epoch: 0 | Iteration: 2249 | Classification loss: 0.05613 | Regression loss: 0.00000 | Running loss: 0.21177
Epoch: 0 | Iteration: 2250 | Classification loss: 0.05599 | Regression loss: 0.00000 | Running loss: 0.21177
Epoch: 0 | Iteration: 2251 | Classification loss: 0.05613 | Regression loss: 0.00000 | Running loss: 0.21177
Epoch: 0 | Iteration: 2252 | Classification loss: 0.05612 | Regression loss: 0.00000 | Running loss: 0.21177
Epoch: 0 | Iteration: 2253 | Classification loss: 0.05628 | Regression loss: 0.00000 | Running loss: 0.21177
Epoch: 0 | Iteration: 2254 | Classification loss: 0.05613 | Regression loss: 0.00000 | Running loss: 0.21177
Epoch: 0 | Iteration: 2255 | Classification loss: 0.05625 | Regression loss: 0.00000 | Running loss: 0.21176
Epoch: 0 | Iteration: 2256 | Classification loss: 0.05618 | Regression loss: 0.00000 | Running loss: 0.21176
Epoch: 0 | Iteration: 2257 | Classification loss: 0.05596 | Regression loss: 0.00000 | Running loss: 0.21176
Epoch: 0 | Iteration: 2258 | Classification loss: 0.05601 | Regression loss: 0.00000 | Running loss: 0.21176
Epoch: 0 | Iteration: 2259 | Classification loss: 0.05611 | Regression loss: 0.00000 | Running loss: 0.21176
Epoch: 0 | Iteration: 2260 | Classification loss: 0.05601 | Regression loss: 0.00000 | Running loss: 0.21176
Epoch: 0 | Iteration: 2261 | Classification loss: 0.05617 | Regression loss: 0.00000 | Running loss: 0.21176
Epoch: 0 | Iteration: 2262 | Classification loss: 0.05640 | Regression loss: 0.00000 | Running loss: 0.21176
Epoch: 0 | Iteration: 2263 | Classification loss: 0.05609 | Regression loss: 0.00000 | Running loss: 0.21176
Epoch: 0 | Iteration: 2264 | Classification loss: 0.05616 | Regression loss: 0.00000 | Running loss: 0.21176
Epoch: 0 | Iteration: 2265 | Classification loss: 0.05625 | Regression loss: 0.00000 | Running loss: 0.21176
Epoch: 0 | Iteration: 2266 | Classification loss: 0.05613 | Regression loss: 0.00000 | Running loss: 0.21175
Epoch: 0 | Iteration: 2267 | Classification loss: 0.05627 | Regression loss: 0.00000 | Running loss: 0.21175
Epoch: 0 | Iteration: 2268 | Classification loss: 0.05616 | Regression loss: 0.00000 | Running loss: 0.21175
Epoch: 0 | Iteration: 2269 | Classification loss: 0.05613 | Regression loss: 0.00000 | Running loss: 0.21175
Epoch: 0 | Iteration: 2270 | Classification loss: 0.05623 | Regression loss: 0.00000 | Running loss: 0.21175
Epoch: 0 | Iteration: 2271 | Classification loss: 0.05615 | Regression loss: 0.00000 | Running loss: 0.21175
Epoch: 0 | Iteration: 2272 | Classification loss: 0.05643 | Regression loss: 0.00000 | Running loss: 0.21175
Epoch: 0 | Iteration: 2273 | Classification loss: 0.05608 | Regression loss: 0.00000 | Running loss: 0.21175
Epoch: 0 | Iteration: 2274 | Classification loss: 0.05633 | Regression loss: 0.00000 | Running loss: 0.21175
Epoch: 0 | Iteration: 2275 | Classification loss: 0.05609 | Regression loss: 0.00000 | Running loss: 0.21175
Epoch: 0 | Iteration: 2276 | Classification loss: 1.13812 | Regression loss: 1.20834 | Running loss: 0.21633
Epoch: 0 | Iteration: 2277 | Classification loss: 0.05593 | Regression loss: 0.00000 | Running loss: 0.21633
Epoch: 0 | Iteration: 2278 | Classification loss: 0.05620 | Regression loss: 0.00000 | Running loss: 0.21633
Epoch: 0 | Iteration: 2279 | Classification loss: 0.05616 | Regression loss: 0.00000 | Running loss: 0.21633
Epoch: 0 | Iteration: 2280 | Classification loss: 0.05618 | Regression loss: 0.00000 | Running loss: 0.21633
Epoch: 0 | Iteration: 2281 | Classification loss: 0.05616 | Regression loss: 0.00000 | Running loss: 0.21632
Epoch: 0 | Iteration: 2282 | Classification loss: 0.05613 | Regression loss: 0.00000 | Running loss: 0.21632
Epoch: 0 | Iteration: 2283 | Classification loss: 0.05606 | Regression loss: 0.00000 | Running loss: 0.21632
Epoch: 0 | Iteration: 2284 | Classification loss: 1.13600 | Regression loss: 1.23647 | Running loss: 0.22095
Epoch: 0 | Iteration: 2285 | Classification loss: 0.05600 | Regression loss: 0.00000 | Running loss: 0.22095
Epoch: 0 | Iteration: 2286 | Classification loss: 0.05614 | Regression loss: 0.00000 | Running loss: 0.22095
Epoch: 0 | Iteration: 2287 | Classification loss: 0.05626 | Regression loss: 0.00000 | Running loss: 0.22095
Epoch: 0 | Iteration: 2288 | Classification loss: 0.05628 | Regression loss: 0.00000 | Running loss: 0.22095
Epoch: 0 | Iteration: 2289 | Classification loss: 0.05625 | Regression loss: 0.00000 | Running loss: 0.21681
Epoch: 0 | Iteration: 2290 | Classification loss: 0.05619 | Regression loss: 0.00000 | Running loss: 0.21681
Epoch: 0 | Iteration: 2291 | Classification loss: 0.05625 | Regression loss: 0.00000 | Running loss: 0.21681
Epoch: 0 | Iteration: 2292 | Classification loss: 0.05618 | Regression loss: 0.00000 | Running loss: 0.21681
Epoch: 0 | Iteration: 2293 | Classification loss: 0.05618 | Regression loss: 0.00000 | Running loss: 0.21148
Epoch: 0 | Iteration: 2294 | Classification loss: 0.05627 | Regression loss: 0.00000 | Running loss: 0.21148
Epoch: 0 | Iteration: 2295 | Classification loss: 0.05636 | Regression loss: 0.00000 | Running loss: 0.21148
Epoch: 0 | Iteration: 2296 | Classification loss: 0.05615 | Regression loss: 0.00000 | Running loss: 0.21148
Epoch: 0 | Iteration: 2297 | Classification loss: 0.05628 | Regression loss: 0.00000 | Running loss: 0.21148
Epoch: 0 | Iteration: 2298 | Classification loss: 1.15170 | Regression loss: 0.97852 | Running loss: 0.21563
Epoch: 0 | Iteration: 2299 | Classification loss: 0.05616 | Regression loss: 0.00000 | Running loss: 0.21563
Epoch: 0 | Iteration: 2300 | Classification loss: 0.05618 | Regression loss: 0.00000 | Running loss: 0.21562
Epoch: 0 | Iteration: 2301 | Classification loss: 0.05611 | Regression loss: 0.00000 | Running loss: 0.21562
Epoch: 0 | Iteration: 2302 | Classification loss: 0.05616 | Regression loss: 0.00000 | Running loss: 0.21562
Epoch: 0 | Iteration: 2303 | Classification loss: 0.05607 | Regression loss: 0.00000 | Running loss: 0.21562
Epoch: 0 | Iteration: 2304 | Classification loss: 0.05612 | Regression loss: 0.00000 | Running loss: 0.21562
Epoch: 0 | Iteration: 2305 | Classification loss: 0.05602 | Regression loss: 0.00000 | Running loss: 0.21562
Epoch: 0 | Iteration: 2306 | Classification loss: 0.05607 | Regression loss: 0.00000 | Running loss: 0.21562
Epoch: 0 | Iteration: 2307 | Classification loss: 1.13484 | Regression loss: 1.27756 | Running loss: 0.22033
Epoch: 0 | Iteration: 2308 | Classification loss: 0.05597 | Regression loss: 0.00000 | Running loss: 0.21553
Epoch: 0 | Iteration: 2309 | Classification loss: 0.05619 | Regression loss: 0.00000 | Running loss: 0.21552
Epoch: 0 | Iteration: 2310 | Classification loss: 0.05594 | Regression loss: 0.00000 | Running loss: 0.21552
Epoch: 0 | Iteration: 2311 | Classification loss: 0.05609 | Regression loss: 0.00000 | Running loss: 0.21552
Epoch: 0 | Iteration: 2312 | Classification loss: 0.05598 | Regression loss: 0.00000 | Running loss: 0.21552
Epoch: 0 | Iteration: 2313 | Classification loss: 0.05624 | Regression loss: 0.00000 | Running loss: 0.21552
Epoch: 0 | Iteration: 2314 | Classification loss: 0.05591 | Regression loss: 0.00000 | Running loss: 0.21552
Epoch: 0 | Iteration: 2315 | Classification loss: 0.05622 | Regression loss: 0.00000 | Running loss: 0.21552
Epoch: 0 | Iteration: 2316 | Classification loss: 0.05612 | Regression loss: 0.00000 | Running loss: 0.21552
Epoch: 0 | Iteration: 2317 | Classification loss: 0.05616 | Regression loss: 0.00000 | Running loss: 0.21552
Epoch: 0 | Iteration: 2318 | Classification loss: 0.05600 | Regression loss: 0.00000 | Running loss: 0.21552
Epoch: 0 | Iteration: 2319 | Classification loss: 0.05616 | Regression loss: 0.00000 | Running loss: 0.21552
Epoch: 0 | Iteration: 2320 | Classification loss: 0.05619 | Regression loss: 0.00000 | Running loss: 0.21552
Epoch: 0 | Iteration: 2321 | Classification loss: 1.13636 | Regression loss: 1.07411 | Running loss: 0.21582
Epoch: 0 | Iteration: 2322 | Classification loss: 0.05618 | Regression loss: 0.00000 | Running loss: 0.21582
Epoch: 0 | Iteration: 2323 | Classification loss: 0.05601 | Regression loss: 0.00000 | Running loss: 0.21582
Epoch: 0 | Iteration: 2324 | Classification loss: 0.05597 | Regression loss: 0.00000 | Running loss: 0.21582
Epoch: 0 | Iteration: 2325 | Classification loss: 0.05615 | Regression loss: 0.00000 | Running loss: 0.21581
Epoch: 0 | Iteration: 2326 | Classification loss: 0.05615 | Regression loss: 0.00000 | Running loss: 0.21581
Epoch: 0 | Iteration: 2327 | Classification loss: 0.05624 | Regression loss: 0.00000 | Running loss: 0.21581
Epoch: 0 | Iteration: 2328 | Classification loss: 0.05612 | Regression loss: 0.00000 | Running loss: 0.21581
Epoch: 0 | Iteration: 2329 | Classification loss: 0.05618 | Regression loss: 0.00000 | Running loss: 0.21581
Epoch: 0 | Iteration: 2330 | Classification loss: 0.05600 | Regression loss: 0.00000 | Running loss: 0.21581
Epoch: 0 | Iteration: 2331 | Classification loss: 0.05622 | Regression loss: 0.00000 | Running loss: 0.21581
Epoch: 0 | Iteration: 2332 | Classification loss: 0.05615 | Regression loss: 0.00000 | Running loss: 0.21581
Epoch: 0 | Iteration: 2333 | Classification loss: 0.05638 | Regression loss: 0.00000 | Running loss: 0.21581
Epoch: 0 | Iteration: 2334 | Classification loss: 0.05624 | Regression loss: 0.00000 | Running loss: 0.21581
Epoch: 0 | Iteration: 2335 | Classification loss: 0.05625 | Regression loss: 0.00000 | Running loss: 0.21581
Epoch: 0 | Iteration: 2336 | Classification loss: 0.05620 | Regression loss: 0.00000 | Running loss: 0.21581
Epoch: 0 | Iteration: 2337 | Classification loss: 0.05604 | Regression loss: 0.00000 | Running loss: 0.21581
Epoch: 0 | Iteration: 2338 | Classification loss: 0.05610 | Regression loss: 0.00000 | Running loss: 0.21581
Epoch: 0 | Iteration: 2339 | Classification loss: 0.05612 | Regression loss: 0.00000 | Running loss: 0.21581
Epoch: 0 | Iteration: 2340 | Classification loss: 0.05608 | Regression loss: 0.00000 | Running loss: 0.21580
Epoch: 0 | Iteration: 2341 | Classification loss: 0.05614 | Regression loss: 0.00000 | Running loss: 0.21580
Epoch: 0 | Iteration: 2342 | Classification loss: 0.05608 | Regression loss: 0.00000 | Running loss: 0.21580
Epoch: 0 | Iteration: 2343 | Classification loss: 0.05598 | Regression loss: 0.00000 | Running loss: 0.21580
Epoch: 0 | Iteration: 2344 | Classification loss: 0.05614 | Regression loss: 0.00000 | Running loss: 0.21580
Epoch: 0 | Iteration: 2345 | Classification loss: 0.05609 | Regression loss: 0.00000 | Running loss: 0.21580
Epoch: 0 | Iteration: 2346 | Classification loss: 0.05585 | Regression loss: 0.00000 | Running loss: 0.21580
Epoch: 0 | Iteration: 2347 | Classification loss: 0.05619 | Regression loss: 0.00000 | Running loss: 0.21580
Epoch: 0 | Iteration: 2348 | Classification loss: 0.05604 | Regression loss: 0.00000 | Running loss: 0.21580
Epoch: 0 | Iteration: 2349 | Classification loss: 1.13634 | Regression loss: 1.26198 | Running loss: 0.21683
Epoch: 0 | Iteration: 2350 | Classification loss: 0.05631 | Regression loss: 0.00000 | Running loss: 0.21683
Epoch: 0 | Iteration: 2351 | Classification loss: 0.05633 | Regression loss: 0.00000 | Running loss: 0.21683
Epoch: 0 | Iteration: 2352 | Classification loss: 0.05612 | Regression loss: 0.00000 | Running loss: 0.21683
Epoch: 0 | Iteration: 2353 | Classification loss: 0.05604 | Regression loss: 0.00000 | Running loss: 0.21683
Epoch: 0 | Iteration: 2354 | Classification loss: 0.05615 | Regression loss: 0.00000 | Running loss: 0.21683
Epoch: 0 | Iteration: 2355 | Classification loss: 0.05619 | Regression loss: 0.00000 | Running loss: 0.21683
Epoch: 0 | Iteration: 2356 | Classification loss: 1.13283 | Regression loss: 1.06911 | Running loss: 0.22112
Epoch: 0 | Iteration: 2357 | Classification loss: 0.05615 | Regression loss: 0.00000 | Running loss: 0.22112
Epoch: 0 | Iteration: 2358 | Classification loss: 0.05627 | Regression loss: 0.00000 | Running loss: 0.22112
Epoch: 0 | Iteration: 2359 | Classification loss: 0.05617 | Regression loss: 0.00000 | Running loss: 0.21675
Epoch: 0 | Iteration: 2360 | Classification loss: 0.05624 | Regression loss: 0.00000 | Running loss: 0.21675
Epoch: 0 | Iteration: 2361 | Classification loss: 0.05596 | Regression loss: 0.00000 | Running loss: 0.21675
Epoch: 0 | Iteration: 2362 | Classification loss: 0.05629 | Regression loss: 0.00000 | Running loss: 0.21675
Epoch: 0 | Iteration: 2363 | Classification loss: 0.05603 | Regression loss: 0.00000 | Running loss: 0.21674
Epoch: 0 | Iteration: 2364 | Classification loss: 0.05609 | Regression loss: 0.00000 | Running loss: 0.21674
Epoch: 0 | Iteration: 2365 | Classification loss: 0.05607 | Regression loss: 0.00000 | Running loss: 0.21674
Epoch: 0 | Iteration: 2366 | Classification loss: 0.05602 | Regression loss: 0.00000 | Running loss: 0.21674
Epoch: 0 | Iteration: 2367 | Classification loss: 0.05620 | Regression loss: 0.00000 | Running loss: 0.21674
Epoch: 0 | Iteration: 2368 | Classification loss: 0.05612 | Regression loss: 0.00000 | Running loss: 0.21674
Epoch: 0 | Iteration: 2369 | Classification loss: 0.05637 | Regression loss: 0.00000 | Running loss: 0.21674
Epoch: 0 | Iteration: 2370 | Classification loss: 0.05587 | Regression loss: 0.00000 | Running loss: 0.21674
Epoch: 0 | Iteration: 2371 | Classification loss: 0.05608 | Regression loss: 0.00000 | Running loss: 0.21674
Epoch: 0 | Iteration: 2372 | Classification loss: 0.05620 | Regression loss: 0.00000 | Running loss: 0.21168
Epoch: 0 | Iteration: 2373 | Classification loss: 1.14262 | Regression loss: 0.90804 | Running loss: 0.21567
Epoch: 0 | Iteration: 2374 | Classification loss: 0.05621 | Regression loss: 0.00000 | Running loss: 0.21567
Epoch: 0 | Iteration: 2375 | Classification loss: 0.05587 | Regression loss: 0.00000 | Running loss: 0.21567
Epoch: 0 | Iteration: 2376 | Classification loss: 0.05625 | Regression loss: 0.00000 | Running loss: 0.21566
Epoch: 0 | Iteration: 2377 | Classification loss: 0.05596 | Regression loss: 0.00000 | Running loss: 0.21566
Epoch: 0 | Iteration: 2378 | Classification loss: 0.05594 | Regression loss: 0.00000 | Running loss: 0.21566
Epoch: 0 | Iteration: 2379 | Classification loss: 0.05588 | Regression loss: 0.00000 | Running loss: 0.21566
Epoch: 0 | Iteration: 2380 | Classification loss: 0.05601 | Regression loss: 0.00000 | Running loss: 0.21566
Epoch: 0 | Iteration: 2381 | Classification loss: 0.05597 | Regression loss: 0.00000 | Running loss: 0.21566
Epoch: 0 | Iteration: 2382 | Classification loss: 0.05624 | Regression loss: 0.00000 | Running loss: 0.21566
Epoch: 0 | Iteration: 2383 | Classification loss: 0.05617 | Regression loss: 0.00000 | Running loss: 0.21093
Epoch: 0 | Iteration: 2384 | Classification loss: 0.05599 | Regression loss: 0.00000 | Running loss: 0.21093
Epoch: 0 | Iteration: 2385 | Classification loss: 0.05578 | Regression loss: 0.00000 | Running loss: 0.21093
Epoch: 0 | Iteration: 2386 | Classification loss: 1.13558 | Regression loss: 1.05467 | Running loss: 0.21520
Epoch: 0 | Iteration: 2387 | Classification loss: 0.05589 | Regression loss: 0.00000 | Running loss: 0.21520
Epoch: 0 | Iteration: 2388 | Classification loss: 0.05618 | Regression loss: 0.00000 | Running loss: 0.21520
Epoch: 0 | Iteration: 2389 | Classification loss: 0.05603 | Regression loss: 0.00000 | Running loss: 0.21097
Epoch: 0 | Iteration: 2390 | Classification loss: 0.05590 | Regression loss: 0.00000 | Running loss: 0.21097
Epoch: 0 | Iteration: 2391 | Classification loss: 0.05596 | Regression loss: 0.00000 | Running loss: 0.21097
Epoch: 0 | Iteration: 2392 | Classification loss: 0.05591 | Regression loss: 0.00000 | Running loss: 0.21097
Epoch: 0 | Iteration: 2393 | Classification loss: 0.05616 | Regression loss: 0.00000 | Running loss: 0.21097
Epoch: 0 | Iteration: 2394 | Classification loss: 1.15088 | Regression loss: 1.31183 | Running loss: 0.21578
Epoch: 0 | Iteration: 2395 | Classification loss: 0.05626 | Regression loss: 0.00000 | Running loss: 0.21578
Epoch: 0 | Iteration: 2396 | Classification loss: 0.05594 | Regression loss: 0.00000 | Running loss: 0.21578
Epoch: 0 | Iteration: 2397 | Classification loss: 0.05594 | Regression loss: 0.00000 | Running loss: 0.21578
Epoch: 0 | Iteration: 2398 | Classification loss: 0.05610 | Regression loss: 0.00000 | Running loss: 0.21578
Epoch: 0 | Iteration: 2399 | Classification loss: 0.05606 | Regression loss: 0.00000 | Running loss: 0.21577
Epoch: 0 | Iteration: 2400 | Classification loss: 0.05633 | Regression loss: 0.00000 | Running loss: 0.21098
Epoch: 0 | Iteration: 2401 | Classification loss: 0.05595 | Regression loss: 0.00000 | Running loss: 0.21098
Epoch: 0 | Iteration: 2402 | Classification loss: 1.15985 | Regression loss: 1.44061 | Running loss: 0.21607
Epoch: 0 | Iteration: 2403 | Classification loss: 0.05618 | Regression loss: 0.00000 | Running loss: 0.21607
Epoch: 0 | Iteration: 2404 | Classification loss: 0.05602 | Regression loss: 0.00000 | Running loss: 0.21607
Epoch: 0 | Iteration: 2405 | Classification loss: 0.05613 | Regression loss: 0.00000 | Running loss: 0.21607
Epoch: 0 | Iteration: 2406 | Classification loss: 0.05613 | Regression loss: 0.00000 | Running loss: 0.21606
Epoch: 0 | Iteration: 2407 | Classification loss: 0.05618 | Regression loss: 0.00000 | Running loss: 0.21606
Epoch: 0 | Iteration: 2408 | Classification loss: 0.05615 | Regression loss: 0.00000 | Running loss: 0.21606
Epoch: 0 | Iteration: 2409 | Classification loss: 0.05623 | Regression loss: 0.00000 | Running loss: 0.21606
Epoch: 0 | Iteration: 2410 | Classification loss: 0.05612 | Regression loss: 0.00000 | Running loss: 0.21606
Epoch: 0 | Iteration: 2411 | Classification loss: 0.05616 | Regression loss: 0.00000 | Running loss: 0.21606
Epoch: 0 | Iteration: 2412 | Classification loss: 0.05592 | Regression loss: 0.00000 | Running loss: 0.21606
Epoch: 0 | Iteration: 2413 | Classification loss: 0.05625 | Regression loss: 0.00000 | Running loss: 0.21606
Epoch: 0 | Iteration: 2414 | Classification loss: 0.05585 | Regression loss: 0.00000 | Running loss: 0.21191
Epoch: 0 | Iteration: 2415 | Classification loss: 0.05587 | Regression loss: 0.00000 | Running loss: 0.21191
Epoch: 0 | Iteration: 2416 | Classification loss: 0.05613 | Regression loss: 0.00000 | Running loss: 0.21190
Epoch: 0 | Iteration: 2417 | Classification loss: 0.05615 | Regression loss: 0.00000 | Running loss: 0.21190
Epoch: 0 | Iteration: 2418 | Classification loss: 0.05616 | Regression loss: 0.00000 | Running loss: 0.21190
Epoch: 0 | Iteration: 2419 | Classification loss: 0.05614 | Regression loss: 0.00000 | Running loss: 0.21190
Epoch: 0 | Iteration: 2420 | Classification loss: 0.05594 | Regression loss: 0.00000 | Running loss: 0.21190
Epoch: 0 | Iteration: 2421 | Classification loss: 0.05602 | Regression loss: 0.00000 | Running loss: 0.21190
Epoch: 0 | Iteration: 2422 | Classification loss: 0.05601 | Regression loss: 0.00000 | Running loss: 0.21190
Epoch: 0 | Iteration: 2423 | Classification loss: 1.16068 | Regression loss: 0.97245 | Running loss: 0.21605
Epoch: 0 | Iteration: 2424 | Classification loss: 0.05619 | Regression loss: 0.00000 | Running loss: 0.21605
Epoch: 0 | Iteration: 2425 | Classification loss: 0.05600 | Regression loss: 0.00000 | Running loss: 0.21605
Epoch: 0 | Iteration: 2426 | Classification loss: 0.05601 | Regression loss: 0.00000 | Running loss: 0.21605
Epoch: 0 | Iteration: 2427 | Classification loss: 0.05612 | Regression loss: 0.00000 | Running loss: 0.21605
Epoch: 0 | Iteration: 2428 | Classification loss: 0.05612 | Regression loss: 0.00000 | Running loss: 0.21605
Epoch: 0 | Iteration: 2429 | Classification loss: 0.05606 | Regression loss: 0.00000 | Running loss: 0.21605
Epoch: 0 | Iteration: 2430 | Classification loss: 0.05600 | Regression loss: 0.00000 | Running loss: 0.21605
Epoch: 0 | Iteration: 2431 | Classification loss: 0.05616 | Regression loss: 0.00000 | Running loss: 0.21605
Epoch: 0 | Iteration: 2432 | Classification loss: 0.05603 | Regression loss: 0.00000 | Running loss: 0.21605
Epoch: 0 | Iteration: 2433 | Classification loss: 0.05607 | Regression loss: 0.00000 | Running loss: 0.21066
Epoch: 0 | Iteration: 2434 | Classification loss: 0.05610 | Regression loss: 0.00000 | Running loss: 0.21066
Epoch: 0 | Iteration: 2435 | Classification loss: 0.05583 | Regression loss: 0.00000 | Running loss: 0.21066
Epoch: 0 | Iteration: 2436 | Classification loss: 1.14330 | Regression loss: 1.48262 | Running loss: 0.21580
Epoch: 0 | Iteration: 2437 | Classification loss: 0.05606 | Regression loss: 0.00000 | Running loss: 0.21579
Epoch: 0 | Iteration: 2438 | Classification loss: 0.05610 | Regression loss: 0.00000 | Running loss: 0.21579
Epoch: 0 | Iteration: 2439 | Classification loss: 0.05622 | Regression loss: 0.00000 | Running loss: 0.21110
Epoch: 0 | Iteration: 2440 | Classification loss: 0.05621 | Regression loss: 0.00000 | Running loss: 0.21110
Epoch: 0 | Iteration: 2441 | Classification loss: 0.05604 | Regression loss: 0.00000 | Running loss: 0.21110
Epoch: 0 | Iteration: 2442 | Classification loss: 0.05591 | Regression loss: 0.00000 | Running loss: 0.21110
Epoch: 0 | Iteration: 2443 | Classification loss: 1.13588 | Regression loss: 1.13230 | Running loss: 0.21552
Epoch: 0 | Iteration: 2444 | Classification loss: 0.05603 | Regression loss: 0.00000 | Running loss: 0.21552
Epoch: 0 | Iteration: 2445 | Classification loss: 0.05590 | Regression loss: 0.00000 | Running loss: 0.21552
Epoch: 0 | Iteration: 2446 | Classification loss: 0.05620 | Regression loss: 0.00000 | Running loss: 0.21552
Epoch: 0 | Iteration: 2447 | Classification loss: 0.05598 | Regression loss: 0.00000 | Running loss: 0.21552
Epoch: 0 | Iteration: 2448 | Classification loss: 0.05591 | Regression loss: 0.00000 | Running loss: 0.21552
Epoch: 0 | Iteration: 2449 | Classification loss: 0.05605 | Regression loss: 0.00000 | Running loss: 0.21552
Epoch: 0 | Iteration: 2450 | Classification loss: 0.05614 | Regression loss: 0.00000 | Running loss: 0.21551
Epoch: 0 | Iteration: 2451 | Classification loss: 0.05590 | Regression loss: 0.00000 | Running loss: 0.21551
Epoch: 0 | Iteration: 2452 | Classification loss: 0.05605 | Regression loss: 0.00000 | Running loss: 0.21551
Epoch: 0 | Iteration: 2453 | Classification loss: 0.05592 | Regression loss: 0.00000 | Running loss: 0.21551
Epoch: 0 | Iteration: 2454 | Classification loss: 0.05611 | Regression loss: 0.00000 | Running loss: 0.21551
Epoch: 0 | Iteration: 2455 | Classification loss: 1.13946 | Regression loss: 1.34688 | Running loss: 0.22037
Epoch: 0 | Iteration: 2456 | Classification loss: 0.05593 | Regression loss: 0.00000 | Running loss: 0.22037
Epoch: 0 | Iteration: 2457 | Classification loss: 0.05611 | Regression loss: 0.00000 | Running loss: 0.22037
Epoch: 0 | Iteration: 2458 | Classification loss: 0.05605 | Regression loss: 0.00000 | Running loss: 0.22037
Epoch: 0 | Iteration: 2459 | Classification loss: 0.05598 | Regression loss: 0.00000 | Running loss: 0.21564
Epoch: 0 | Iteration: 2460 | Classification loss: 0.05609 | Regression loss: 0.00000 | Running loss: 0.21564
Epoch: 0 | Iteration: 2461 | Classification loss: 0.05609 | Regression loss: 0.00000 | Running loss: 0.21564
Epoch: 0 | Iteration: 2462 | Classification loss: 0.05581 | Regression loss: 0.00000 | Running loss: 0.21564
Epoch: 0 | Iteration: 2463 | Classification loss: 0.05618 | Regression loss: 0.00000 | Running loss: 0.21564
Epoch: 0 | Iteration: 2464 | Classification loss: 0.05588 | Regression loss: 0.00000 | Running loss: 0.21564
Epoch: 0 | Iteration: 2465 | Classification loss: 1.13734 | Regression loss: 1.40315 | Running loss: 0.22060
Epoch: 0 | Iteration: 2466 | Classification loss: 0.05594 | Regression loss: 0.00000 | Running loss: 0.21561
Epoch: 0 | Iteration: 2467 | Classification loss: 0.05618 | Regression loss: 0.00000 | Running loss: 0.21561
Epoch: 0 | Iteration: 2468 | Classification loss: 0.05622 | Regression loss: 0.00000 | Running loss: 0.21561
Epoch: 0 | Iteration: 2469 | Classification loss: 0.05581 | Regression loss: 0.00000 | Running loss: 0.21561
Epoch: 0 | Iteration: 2470 | Classification loss: 0.05591 | Regression loss: 0.00000 | Running loss: 0.21561
Epoch: 0 | Iteration: 2471 | Classification loss: 0.05606 | Regression loss: 0.00000 | Running loss: 0.21561
Epoch: 0 | Iteration: 2472 | Classification loss: 0.05586 | Regression loss: 0.00000 | Running loss: 0.21561
Epoch: 0 | Iteration: 2473 | Classification loss: 0.05571 | Regression loss: 0.00000 | Running loss: 0.21561
Epoch: 0 | Iteration: 2474 | Classification loss: 0.05600 | Regression loss: 0.00000 | Running loss: 0.21561
Epoch: 0 | Iteration: 2475 | Classification loss: 0.05602 | Regression loss: 0.00000 | Running loss: 0.21560
Epoch: 0 | Iteration: 2476 | Classification loss: 0.05590 | Regression loss: 0.00000 | Running loss: 0.21560
Epoch: 0 | Iteration: 2477 | Classification loss: 0.05609 | Regression loss: 0.00000 | Running loss: 0.21560
Epoch: 0 | Iteration: 2478 | Classification loss: 0.05583 | Regression loss: 0.00000 | Running loss: 0.21560
Epoch: 0 | Iteration: 2479 | Classification loss: 0.05585 | Regression loss: 0.00000 | Running loss: 0.21560
Epoch: 0 | Iteration: 2480 | Classification loss: 0.05618 | Regression loss: 0.00000 | Running loss: 0.21560
Epoch: 0 | Iteration: 2481 | Classification loss: 0.05586 | Regression loss: 0.00000 | Running loss: 0.21560
Epoch: 0 | Iteration: 2482 | Classification loss: 0.05612 | Regression loss: 0.00000 | Running loss: 0.21560
Epoch: 0 | Iteration: 2483 | Classification loss: 0.05607 | Regression loss: 0.00000 | Running loss: 0.21560
Epoch: 0 | Iteration: 2484 | Classification loss: 0.05588 | Regression loss: 0.00000 | Running loss: 0.21560
Epoch: 0 | Iteration: 2485 | Classification loss: 0.05596 | Regression loss: 0.00000 | Running loss: 0.21560
Epoch: 0 | Iteration: 2486 | Classification loss: 0.05583 | Regression loss: 0.00000 | Running loss: 0.21560
Epoch: 0 | Iteration: 2487 | Classification loss: 0.05586 | Regression loss: 0.00000 | Running loss: 0.21560
Epoch: 0 | Iteration: 2488 | Classification loss: 0.05615 | Regression loss: 0.00000 | Running loss: 0.21560
Epoch: 0 | Iteration: 2489 | Classification loss: 0.05600 | Regression loss: 0.00000 | Running loss: 0.21560
Epoch: 0 | Iteration: 2490 | Classification loss: 0.05607 | Regression loss: 0.00000 | Running loss: 0.21559
Epoch: 0 | Iteration: 2491 | Classification loss: 0.05611 | Regression loss: 0.00000 | Running loss: 0.21559
Epoch: 0 | Iteration: 2492 | Classification loss: 0.05575 | Regression loss: 0.00000 | Running loss: 0.21559
Epoch: 0 | Iteration: 2493 | Classification loss: 0.05590 | Regression loss: 0.00000 | Running loss: 0.21559
Epoch: 0 | Iteration: 2494 | Classification loss: 0.05595 | Regression loss: 0.00000 | Running loss: 0.21559
Epoch: 0 | Iteration: 2495 | Classification loss: 0.05616 | Regression loss: 0.00000 | Running loss: 0.21559
Epoch: 0 | Iteration: 2496 | Classification loss: 0.05595 | Regression loss: 0.00000 | Running loss: 0.21559
Epoch: 0 | Iteration: 2497 | Classification loss: 0.05586 | Regression loss: 0.00000 | Running loss: 0.21559
Epoch: 0 | Iteration: 2498 | Classification loss: 0.05613 | Regression loss: 0.00000 | Running loss: 0.21559
Epoch: 0 | Iteration: 2499 | Classification loss: 0.05598 | Regression loss: 0.00000 | Running loss: 0.21104
Epoch: 0 | Iteration: 2500 | Classification loss: 0.05606 | Regression loss: 0.00000 | Running loss: 0.21104
Epoch: 0 | Iteration: 2501 | Classification loss: 1.16140 | Regression loss: 1.18024 | Running loss: 0.21561
Epoch: 0 | Iteration: 2502 | Classification loss: 0.05590 | Regression loss: 0.00000 | Running loss: 0.21560
Epoch: 0 | Iteration: 2503 | Classification loss: 0.05611 | Regression loss: 0.00000 | Running loss: 0.21560
Epoch: 0 | Iteration: 2504 | Classification loss: 0.05599 | Regression loss: 0.00000 | Running loss: 0.21560
Epoch: 0 | Iteration: 2505 | Classification loss: 0.05608 | Regression loss: 0.00000 | Running loss: 0.21560
Epoch: 0 | Iteration: 2506 | Classification loss: 0.05612 | Regression loss: 0.00000 | Running loss: 0.21560
Epoch: 0 | Iteration: 2507 | Classification loss: 0.05587 | Regression loss: 0.00000 | Running loss: 0.21560
Epoch: 0 | Iteration: 2508 | Classification loss: 0.05614 | Regression loss: 0.00000 | Running loss: 0.21094
Epoch: 0 | Iteration: 2509 | Classification loss: 0.05595 | Regression loss: 0.00000 | Running loss: 0.21094
Epoch: 0 | Iteration: 2510 | Classification loss: 0.05611 | Regression loss: 0.00000 | Running loss: 0.21094
Epoch: 0 | Iteration: 2511 | Classification loss: 0.05578 | Regression loss: 0.00000 | Running loss: 0.21094
Epoch: 0 | Iteration: 2512 | Classification loss: 0.05588 | Regression loss: 0.00000 | Running loss: 0.21094
Epoch: 0 | Iteration: 2513 | Classification loss: 0.05616 | Regression loss: 0.00000 | Running loss: 0.21094
Epoch: 0 | Iteration: 2514 | Classification loss: 0.05605 | Regression loss: 0.00000 | Running loss: 0.21094
Epoch: 0 | Iteration: 2515 | Classification loss: 0.05610 | Regression loss: 0.00000 | Running loss: 0.20605
Epoch: 0 | Iteration: 2516 | Classification loss: 0.05609 | Regression loss: 0.00000 | Running loss: 0.20605
Epoch: 0 | Iteration: 2517 | Classification loss: 0.05577 | Regression loss: 0.00000 | Running loss: 0.20605
Epoch: 0 | Iteration: 2518 | Classification loss: 0.05606 | Regression loss: 0.00000 | Running loss: 0.20605
Epoch: 0 | Iteration: 2519 | Classification loss: 0.05603 | Regression loss: 0.00000 | Running loss: 0.20605
Epoch: 0 | Iteration: 2520 | Classification loss: 0.05589 | Regression loss: 0.00000 | Running loss: 0.20605
Epoch: 0 | Iteration: 2521 | Classification loss: 0.05607 | Regression loss: 0.00000 | Running loss: 0.20605
Epoch: 0 | Iteration: 2522 | Classification loss: 0.05600 | Regression loss: 0.00000 | Running loss: 0.20605
Epoch: 0 | Iteration: 2523 | Classification loss: 1.13689 | Regression loss: 0.91996 | Running loss: 0.20568
Epoch: 0 | Iteration: 2524 | Classification loss: 1.18707 | Regression loss: 1.11963 | Running loss: 0.21018
Epoch: 0 | Iteration: 2525 | Classification loss: 0.05608 | Regression loss: 0.00000 | Running loss: 0.20539
Epoch: 0 | Iteration: 2526 | Classification loss: 0.05584 | Regression loss: 0.00000 | Running loss: 0.20539
Epoch: 0 | Iteration: 2527 | Classification loss: 0.05601 | Regression loss: 0.00000 | Running loss: 0.20539
Epoch: 0 | Iteration: 2528 | Classification loss: 0.05619 | Regression loss: 0.00000 | Running loss: 0.20539
Epoch: 0 | Iteration: 2529 | Classification loss: 0.05582 | Regression loss: 0.00000 | Running loss: 0.20539
Epoch: 0 | Iteration: 2530 | Classification loss: 0.05594 | Regression loss: 0.00000 | Running loss: 0.20539
Epoch: 0 | Iteration: 2531 | Classification loss: 0.05593 | Regression loss: 0.00000 | Running loss: 0.20539
Epoch: 0 | Iteration: 2532 | Classification loss: 0.05609 | Regression loss: 0.00000 | Running loss: 0.20538
Epoch: 0 | Iteration: 2533 | Classification loss: 0.05619 | Regression loss: 0.00000 | Running loss: 0.20538
Epoch: 0 | Iteration: 2534 | Classification loss: 0.05585 | Regression loss: 0.00000 | Running loss: 0.20538
Epoch: 0 | Iteration: 2535 | Classification loss: 0.05600 | Regression loss: 0.00000 | Running loss: 0.20538
Epoch: 0 | Iteration: 2536 | Classification loss: 0.05606 | Regression loss: 0.00000 | Running loss: 0.20538
Epoch: 0 | Iteration: 2537 | Classification loss: 0.05612 | Regression loss: 0.00000 | Running loss: 0.20538
Epoch: 0 | Iteration: 2538 | Classification loss: 0.05597 | Regression loss: 0.00000 | Running loss: 0.20120
Epoch: 0 | Iteration: 2539 | Classification loss: 0.05606 | Regression loss: 0.00000 | Running loss: 0.20120
Epoch: 0 | Iteration: 2540 | Classification loss: 0.05605 | Regression loss: 0.00000 | Running loss: 0.20120
Epoch: 0 | Iteration: 2541 | Classification loss: 0.05607 | Regression loss: 0.00000 | Running loss: 0.20120
Epoch: 0 | Iteration: 2542 | Classification loss: 1.14097 | Regression loss: 1.32158 | Running loss: 0.20602
Epoch: 0 | Iteration: 2543 | Classification loss: 0.05593 | Regression loss: 0.00000 | Running loss: 0.20601
Epoch: 0 | Iteration: 2544 | Classification loss: 0.05585 | Regression loss: 0.00000 | Running loss: 0.20601
Epoch: 0 | Iteration: 2545 | Classification loss: 1.13346 | Regression loss: 1.07608 | Running loss: 0.21032
Epoch: 0 | Iteration: 2546 | Classification loss: 0.05590 | Regression loss: 0.00000 | Running loss: 0.21032
Epoch: 0 | Iteration: 2547 | Classification loss: 0.05589 | Regression loss: 0.00000 | Running loss: 0.21032
Epoch: 0 | Iteration: 2548 | Classification loss: 0.05590 | Regression loss: 0.00000 | Running loss: 0.21032
Epoch: 0 | Iteration: 2549 | Classification loss: 0.05601 | Regression loss: 0.00000 | Running loss: 0.21032
Epoch: 0 | Iteration: 2550 | Classification loss: 0.05607 | Regression loss: 0.00000 | Running loss: 0.21032
Epoch: 0 | Iteration: 2551 | Classification loss: 0.05598 | Regression loss: 0.00000 | Running loss: 0.20538
Epoch: 0 | Iteration: 2552 | Classification loss: 0.05588 | Regression loss: 0.00000 | Running loss: 0.20071
Epoch: 0 | Iteration: 2553 | Classification loss: 0.05620 | Regression loss: 0.00000 | Running loss: 0.20071
Epoch: 0 | Iteration: 2554 | Classification loss: 0.05574 | Regression loss: 0.00000 | Running loss: 0.19620
Epoch: 0 | Iteration: 2555 | Classification loss: 0.05605 | Regression loss: 0.00000 | Running loss: 0.19620
Epoch: 0 | Iteration: 2556 | Classification loss: 0.05583 | Regression loss: 0.00000 | Running loss: 0.19620
Epoch: 0 | Iteration: 2557 | Classification loss: 0.05600 | Regression loss: 0.00000 | Running loss: 0.19620
Epoch: 0 | Iteration: 2558 | Classification loss: 0.05588 | Regression loss: 0.00000 | Running loss: 0.19620
Epoch: 0 | Iteration: 2559 | Classification loss: 0.05608 | Regression loss: 0.00000 | Running loss: 0.19620
Epoch: 0 | Iteration: 2560 | Classification loss: 0.05607 | Regression loss: 0.00000 | Running loss: 0.19619
Epoch: 0 | Iteration: 2561 | Classification loss: 1.15920 | Regression loss: 1.29327 | Running loss: 0.20099
Epoch: 0 | Iteration: 2562 | Classification loss: 1.16000 | Regression loss: 0.89464 | Running loss: 0.20061
Epoch: 0 | Iteration: 2563 | Classification loss: 0.05592 | Regression loss: 0.00000 | Running loss: 0.20061
Epoch: 0 | Iteration: 2564 | Classification loss: 0.05601 | Regression loss: 0.00000 | Running loss: 0.20061
Epoch: 0 | Iteration: 2565 | Classification loss: 0.05572 | Regression loss: 0.00000 | Running loss: 0.20060
Epoch: 0 | Iteration: 2566 | Classification loss: 0.05583 | Regression loss: 0.00000 | Running loss: 0.20060
Epoch: 0 | Iteration: 2567 | Classification loss: 0.05603 | Regression loss: 0.00000 | Running loss: 0.20060
Epoch: 0 | Iteration: 2568 | Classification loss: 0.05607 | Regression loss: 0.00000 | Running loss: 0.20060
Epoch: 0 | Iteration: 2569 | Classification loss: 0.05605 | Regression loss: 0.00000 | Running loss: 0.20060
Epoch: 0 | Iteration: 2570 | Classification loss: 0.05582 | Regression loss: 0.00000 | Running loss: 0.20060
Epoch: 0 | Iteration: 2571 | Classification loss: 0.05600 | Regression loss: 0.00000 | Running loss: 0.20060
Epoch: 0 | Iteration: 2572 | Classification loss: 0.05609 | Regression loss: 0.00000 | Running loss: 0.20060
Epoch: 0 | Iteration: 2573 | Classification loss: 0.05585 | Regression loss: 0.00000 | Running loss: 0.20060
Epoch: 0 | Iteration: 2574 | Classification loss: 0.05588 | Regression loss: 0.00000 | Running loss: 0.20060
Epoch: 0 | Iteration: 2575 | Classification loss: 0.05623 | Regression loss: 0.00000 | Running loss: 0.20060
Epoch: 0 | Iteration: 2576 | Classification loss: 0.05584 | Regression loss: 0.00000 | Running loss: 0.20060
Epoch: 0 | Iteration: 2577 | Classification loss: 0.05589 | Regression loss: 0.00000 | Running loss: 0.20059
Epoch: 0 | Iteration: 2578 | Classification loss: 0.05598 | Regression loss: 0.00000 | Running loss: 0.20059
Epoch: 0 | Iteration: 2579 | Classification loss: 0.05605 | Regression loss: 0.00000 | Running loss: 0.20059
Epoch: 0 | Iteration: 2580 | Classification loss: 0.05593 | Regression loss: 0.00000 | Running loss: 0.20059
Epoch: 0 | Iteration: 2581 | Classification loss: 0.05583 | Regression loss: 0.00000 | Running loss: 0.20059
Epoch: 0 | Iteration: 2582 | Classification loss: 0.05582 | Regression loss: 0.00000 | Running loss: 0.20059
Epoch: 0 | Iteration: 2583 | Classification loss: 0.05593 | Regression loss: 0.00000 | Running loss: 0.20059
Epoch: 0 | Iteration: 2584 | Classification loss: 0.05589 | Regression loss: 0.00000 | Running loss: 0.20059
Epoch: 0 | Iteration: 2585 | Classification loss: 0.05585 | Regression loss: 0.00000 | Running loss: 0.20059
Epoch: 0 | Iteration: 2586 | Classification loss: 0.05598 | Regression loss: 0.00000 | Running loss: 0.20059
Epoch: 0 | Iteration: 2587 | Classification loss: 0.05603 | Regression loss: 0.00000 | Running loss: 0.20059
Epoch: 0 | Iteration: 2588 | Classification loss: 0.05602 | Regression loss: 0.00000 | Running loss: 0.20059
Epoch: 0 | Iteration: 2589 | Classification loss: 0.05616 | Regression loss: 0.00000 | Running loss: 0.19568
Epoch: 0 | Iteration: 2590 | Classification loss: 0.05596 | Regression loss: 0.00000 | Running loss: 0.19568
Epoch: 0 | Iteration: 2591 | Classification loss: 0.05612 | Regression loss: 0.00000 | Running loss: 0.19568
Epoch: 0 | Iteration: 2592 | Classification loss: 1.14808 | Regression loss: 0.94093 | Running loss: 0.19975
Epoch: 0 | Iteration: 2593 | Classification loss: 0.05582 | Regression loss: 0.00000 | Running loss: 0.19975
Epoch: 0 | Iteration: 2594 | Classification loss: 0.05577 | Regression loss: 0.00000 | Running loss: 0.19974
Epoch: 0 | Iteration: 2595 | Classification loss: 0.05576 | Regression loss: 0.00000 | Running loss: 0.19974
Epoch: 0 | Iteration: 2596 | Classification loss: 0.05607 | Regression loss: 0.00000 | Running loss: 0.19974
Epoch: 0 | Iteration: 2597 | Classification loss: 0.05599 | Regression loss: 0.00000 | Running loss: 0.19974
Epoch: 0 | Iteration: 2598 | Classification loss: 0.05593 | Regression loss: 0.00000 | Running loss: 0.19974
Epoch: 0 | Iteration: 2599 | Classification loss: 0.05603 | Regression loss: 0.00000 | Running loss: 0.19974
Epoch: 0 | Iteration: 2600 | Classification loss: 0.05616 | Regression loss: 0.00000 | Running loss: 0.19974
Epoch: 0 | Iteration: 2601 | Classification loss: 0.05569 | Regression loss: 0.00000 | Running loss: 0.19974
Epoch: 0 | Iteration: 2602 | Classification loss: 0.05565 | Regression loss: 0.00000 | Running loss: 0.19974
Epoch: 0 | Iteration: 2603 | Classification loss: 0.05580 | Regression loss: 0.00000 | Running loss: 0.19974
Epoch: 0 | Iteration: 2604 | Classification loss: 0.05566 | Regression loss: 0.00000 | Running loss: 0.19974
Epoch: 0 | Iteration: 2605 | Classification loss: 0.05606 | Regression loss: 0.00000 | Running loss: 0.19974
Epoch: 0 | Iteration: 2606 | Classification loss: 0.05596 | Regression loss: 0.00000 | Running loss: 0.19974
Epoch: 0 | Iteration: 2607 | Classification loss: 1.13626 | Regression loss: 1.03852 | Running loss: 0.20397
Epoch: 0 | Iteration: 2608 | Classification loss: 0.05586 | Regression loss: 0.00000 | Running loss: 0.20397
Epoch: 0 | Iteration: 2609 | Classification loss: 0.05588 | Regression loss: 0.00000 | Running loss: 0.20397
Epoch: 0 | Iteration: 2610 | Classification loss: 0.05596 | Regression loss: 0.00000 | Running loss: 0.20397
Epoch: 0 | Iteration: 2611 | Classification loss: 0.05597 | Regression loss: 0.00000 | Running loss: 0.20397
Epoch: 0 | Iteration: 2612 | Classification loss: 0.05599 | Regression loss: 0.00000 | Running loss: 0.19941
Epoch: 0 | Iteration: 2613 | Classification loss: 0.05581 | Regression loss: 0.00000 | Running loss: 0.19940
Epoch: 0 | Iteration: 2614 | Classification loss: 0.05576 | Regression loss: 0.00000 | Running loss: 0.19940
Epoch: 0 | Iteration: 2615 | Classification loss: 0.05608 | Regression loss: 0.00000 | Running loss: 0.19940
Epoch: 0 | Iteration: 2616 | Classification loss: 0.05582 | Regression loss: 0.00000 | Running loss: 0.19940
Epoch: 0 | Iteration: 2617 | Classification loss: 0.05607 | Regression loss: 0.00000 | Running loss: 0.19940
Epoch: 0 | Iteration: 2618 | Classification loss: 0.05592 | Regression loss: 0.00000 | Running loss: 0.19940
Epoch: 0 | Iteration: 2619 | Classification loss: 0.05603 | Regression loss: 0.00000 | Running loss: 0.19940
Epoch: 0 | Iteration: 2620 | Classification loss: 0.05576 | Regression loss: 0.00000 | Running loss: 0.19940
Epoch: 0 | Iteration: 2621 | Classification loss: 0.05613 | Regression loss: 0.00000 | Running loss: 0.19465
Epoch: 0 | Iteration: 2622 | Classification loss: 0.05586 | Regression loss: 0.00000 | Running loss: 0.19465
Epoch: 0 | Iteration: 2623 | Classification loss: 1.14433 | Regression loss: 1.25081 | Running loss: 0.19933
Epoch: 0 | Iteration: 2624 | Classification loss: 0.05580 | Regression loss: 0.00000 | Running loss: 0.19933
Epoch: 0 | Iteration: 2625 | Classification loss: 0.05600 | Regression loss: 0.00000 | Running loss: 0.19933
Epoch: 0 | Iteration: 2626 | Classification loss: 0.05603 | Regression loss: 0.00000 | Running loss: 0.19933
Epoch: 0 | Iteration: 2627 | Classification loss: 0.05586 | Regression loss: 0.00000 | Running loss: 0.19932
Epoch: 0 | Iteration: 2628 | Classification loss: 0.05601 | Regression loss: 0.00000 | Running loss: 0.19932
Epoch: 0 | Iteration: 2629 | Classification loss: 0.05577 | Regression loss: 0.00000 | Running loss: 0.19932
Epoch: 0 | Iteration: 2630 | Classification loss: 0.05574 | Regression loss: 0.00000 | Running loss: 0.19932
Epoch: 0 | Iteration: 2631 | Classification loss: 0.05598 | Regression loss: 0.00000 | Running loss: 0.19932
Epoch: 0 | Iteration: 2632 | Classification loss: 0.05612 | Regression loss: 0.00000 | Running loss: 0.19468
Epoch: 0 | Iteration: 2633 | Classification loss: 0.05600 | Regression loss: 0.00000 | Running loss: 0.19467
Epoch: 0 | Iteration: 2634 | Classification loss: 0.05574 | Regression loss: 0.00000 | Running loss: 0.19467
Epoch: 0 | Iteration: 2635 | Classification loss: 0.05599 | Regression loss: 0.00000 | Running loss: 0.19467
Epoch: 0 | Iteration: 2636 | Classification loss: 0.05602 | Regression loss: 0.00000 | Running loss: 0.19467
Epoch: 0 | Iteration: 2637 | Classification loss: 0.05599 | Regression loss: 0.00000 | Running loss: 0.19467
Epoch: 0 | Iteration: 2638 | Classification loss: 0.05604 | Regression loss: 0.00000 | Running loss: 0.19467
Epoch: 0 | Iteration: 2639 | Classification loss: 1.13735 | Regression loss: 1.06682 | Running loss: 0.19897
Epoch: 0 | Iteration: 2640 | Classification loss: 0.05588 | Regression loss: 0.00000 | Running loss: 0.19897
Epoch: 0 | Iteration: 2641 | Classification loss: 0.05614 | Regression loss: 0.00000 | Running loss: 0.19897
Epoch: 0 | Iteration: 2642 | Classification loss: 0.05580 | Regression loss: 0.00000 | Running loss: 0.19897
Epoch: 0 | Iteration: 2643 | Classification loss: 0.05588 | Regression loss: 0.00000 | Running loss: 0.19896
Epoch: 0 | Iteration: 2644 | Classification loss: 1.16164 | Regression loss: 0.99817 | Running loss: 0.20317
Epoch: 0 | Iteration: 2645 | Classification loss: 0.05577 | Regression loss: 0.00000 | Running loss: 0.20317
Epoch: 0 | Iteration: 2646 | Classification loss: 0.05595 | Regression loss: 0.00000 | Running loss: 0.20317
Epoch: 0 | Iteration: 2647 | Classification loss: 0.05575 | Regression loss: 0.00000 | Running loss: 0.20317
Epoch: 0 | Iteration: 2648 | Classification loss: 0.05581 | Regression loss: 0.00000 | Running loss: 0.20317
Epoch: 0 | Iteration: 2649 | Classification loss: 0.05598 | Regression loss: 0.00000 | Running loss: 0.20317
Epoch: 0 | Iteration: 2650 | Classification loss: 0.05553 | Regression loss: 0.00000 | Running loss: 0.20317
Epoch: 0 | Iteration: 2651 | Classification loss: 1.14343 | Regression loss: 1.01115 | Running loss: 0.20736
Epoch: 0 | Iteration: 2652 | Classification loss: 0.05599 | Regression loss: 0.00000 | Running loss: 0.20736
Epoch: 0 | Iteration: 2653 | Classification loss: 0.05605 | Regression loss: 0.00000 | Running loss: 0.20736
Epoch: 0 | Iteration: 2654 | Classification loss: 0.05582 | Regression loss: 0.00000 | Running loss: 0.20736
Epoch: 0 | Iteration: 2655 | Classification loss: 0.05575 | Regression loss: 0.00000 | Running loss: 0.20736
Epoch: 0 | Iteration: 2656 | Classification loss: 0.05579 | Regression loss: 0.00000 | Running loss: 0.20736
Epoch: 0 | Iteration: 2657 | Classification loss: 0.05597 | Regression loss: 0.00000 | Running loss: 0.20736
Epoch: 0 | Iteration: 2658 | Classification loss: 0.05577 | Regression loss: 0.00000 | Running loss: 0.20736
Epoch: 0 | Iteration: 2659 | Classification loss: 0.05564 | Regression loss: 0.00000 | Running loss: 0.20736
Epoch: 0 | Iteration: 2660 | Classification loss: 0.05602 | Regression loss: 0.00000 | Running loss: 0.20736
Epoch: 0 | Iteration: 2661 | Classification loss: 0.05594 | Regression loss: 0.00000 | Running loss: 0.20736
Epoch: 0 | Iteration: 2662 | Classification loss: 0.05562 | Regression loss: 0.00000 | Running loss: 0.20736
Epoch: 0 | Iteration: 2663 | Classification loss: 0.05571 | Regression loss: 0.00000 | Running loss: 0.20735
Epoch: 0 | Iteration: 2664 | Classification loss: 0.05580 | Regression loss: 0.00000 | Running loss: 0.20735
Epoch: 0 | Iteration: 2665 | Classification loss: 0.05581 | Regression loss: 0.00000 | Running loss: 0.20735
Epoch: 0 | Iteration: 2666 | Classification loss: 0.05601 | Regression loss: 0.00000 | Running loss: 0.20735
Epoch: 0 | Iteration: 2667 | Classification loss: 0.05586 | Regression loss: 0.00000 | Running loss: 0.20735
Epoch: 0 | Iteration: 2668 | Classification loss: 1.14924 | Regression loss: 1.35344 | Running loss: 0.21224
Epoch: 0 | Iteration: 2669 | Classification loss: 0.05569 | Regression loss: 0.00000 | Running loss: 0.21224
Epoch: 0 | Iteration: 2670 | Classification loss: 1.16066 | Regression loss: 1.03302 | Running loss: 0.21652
Epoch: 0 | Iteration: 2671 | Classification loss: 0.05613 | Regression loss: 0.00000 | Running loss: 0.21652
Epoch: 0 | Iteration: 2672 | Classification loss: 0.05592 | Regression loss: 0.00000 | Running loss: 0.21652
Epoch: 0 | Iteration: 2673 | Classification loss: 0.05607 | Regression loss: 0.00000 | Running loss: 0.21652
Epoch: 0 | Iteration: 2674 | Classification loss: 0.05593 | Regression loss: 0.00000 | Running loss: 0.21652
Epoch: 0 | Iteration: 2675 | Classification loss: 0.05595 | Regression loss: 0.00000 | Running loss: 0.21300
Epoch: 0 | Iteration: 2676 | Classification loss: 0.05595 | Regression loss: 0.00000 | Running loss: 0.21300
Epoch: 0 | Iteration: 2677 | Classification loss: 1.14498 | Regression loss: 0.87690 | Running loss: 0.21232
Epoch: 0 | Iteration: 2678 | Classification loss: 0.05560 | Regression loss: 0.00000 | Running loss: 0.21232
Epoch: 0 | Iteration: 2679 | Classification loss: 0.05580 | Regression loss: 0.00000 | Running loss: 0.21232
Epoch: 0 | Iteration: 2680 | Classification loss: 0.05565 | Regression loss: 0.00000 | Running loss: 0.21232
Epoch: 0 | Iteration: 2681 | Classification loss: 1.13425 | Regression loss: 1.05632 | Running loss: 0.21217
Epoch: 0 | Iteration: 2682 | Classification loss: 0.05567 | Regression loss: 0.00000 | Running loss: 0.21217
Epoch: 0 | Iteration: 2683 | Classification loss: 0.05576 | Regression loss: 0.00000 | Running loss: 0.21217
Epoch: 0 | Iteration: 2684 | Classification loss: 0.05567 | Regression loss: 0.00000 | Running loss: 0.21217
Epoch: 0 | Iteration: 2685 | Classification loss: 0.05562 | Regression loss: 0.00000 | Running loss: 0.21216
Epoch: 0 | Iteration: 2686 | Classification loss: 0.05555 | Regression loss: 0.00000 | Running loss: 0.21216
Epoch: 0 | Iteration: 2687 | Classification loss: 0.05596 | Regression loss: 0.00000 | Running loss: 0.21216
Epoch: 0 | Iteration: 2688 | Classification loss: 0.05583 | Regression loss: 0.00000 | Running loss: 0.20740
Epoch: 0 | Iteration: 2689 | Classification loss: 0.05602 | Regression loss: 0.00000 | Running loss: 0.20740
Epoch: 0 | Iteration: 2690 | Classification loss: 0.05577 | Regression loss: 0.00000 | Running loss: 0.20740
Epoch: 0 | Iteration: 2691 | Classification loss: 0.05576 | Regression loss: 0.00000 | Running loss: 0.20740
Epoch: 0 | Iteration: 2692 | Classification loss: 0.05605 | Regression loss: 0.00000 | Running loss: 0.20740
Epoch: 0 | Iteration: 2693 | Classification loss: 0.05577 | Regression loss: 0.00000 | Running loss: 0.20740
Epoch: 0 | Iteration: 2694 | Classification loss: 0.05576 | Regression loss: 0.00000 | Running loss: 0.20740
Epoch: 0 | Iteration: 2695 | Classification loss: 0.05597 | Regression loss: 0.00000 | Running loss: 0.20740
Epoch: 0 | Iteration: 2696 | Classification loss: 0.05568 | Regression loss: 0.00000 | Running loss: 0.20739
Epoch: 0 | Iteration: 2697 | Classification loss: 0.05571 | Regression loss: 0.00000 | Running loss: 0.20739
Epoch: 0 | Iteration: 2698 | Classification loss: 0.05589 | Regression loss: 0.00000 | Running loss: 0.20739
Epoch: 0 | Iteration: 2699 | Classification loss: 0.05600 | Regression loss: 0.00000 | Running loss: 0.20739
Epoch: 0 | Iteration: 2700 | Classification loss: 0.05594 | Regression loss: 0.00000 | Running loss: 0.20739
Epoch: 0 | Iteration: 2701 | Classification loss: 0.05565 | Regression loss: 0.00000 | Running loss: 0.20739
Epoch: 0 | Iteration: 2702 | Classification loss: 0.05581 | Regression loss: 0.00000 | Running loss: 0.20739
Epoch: 0 | Iteration: 2703 | Classification loss: 0.05573 | Regression loss: 0.00000 | Running loss: 0.20739
Epoch: 0 | Iteration: 2704 | Classification loss: 0.05582 | Regression loss: 0.00000 | Running loss: 0.20739
Epoch: 0 | Iteration: 2705 | Classification loss: 0.05581 | Regression loss: 0.00000 | Running loss: 0.20739
Epoch: 0 | Iteration: 2706 | Classification loss: 0.05601 | Regression loss: 0.00000 | Running loss: 0.20739
Epoch: 0 | Iteration: 2707 | Classification loss: 0.05571 | Regression loss: 0.00000 | Running loss: 0.20739
Epoch: 0 | Iteration: 2708 | Classification loss: 0.05607 | Regression loss: 0.00000 | Running loss: 0.20739
Epoch: 0 | Iteration: 2709 | Classification loss: 0.05585 | Regression loss: 0.00000 | Running loss: 0.20739
Epoch: 0 | Iteration: 2710 | Classification loss: 0.05613 | Regression loss: 0.00000 | Running loss: 0.20739
Epoch: 0 | Iteration: 2711 | Classification loss: 0.05592 | Regression loss: 0.00000 | Running loss: 0.20739
Epoch: 0 | Iteration: 2712 | Classification loss: 0.05579 | Regression loss: 0.00000 | Running loss: 0.20738
Epoch: 0 | Iteration: 2713 | Classification loss: 0.05593 | Regression loss: 0.00000 | Running loss: 0.20738
Epoch: 0 | Iteration: 2714 | Classification loss: 0.05557 | Regression loss: 0.00000 | Running loss: 0.20738
Epoch: 0 | Iteration: 2715 | Classification loss: 0.05593 | Regression loss: 0.00000 | Running loss: 0.20738
Epoch: 0 | Iteration: 2716 | Classification loss: 0.05560 | Regression loss: 0.00000 | Running loss: 0.20738
Epoch: 0 | Iteration: 2717 | Classification loss: 0.05575 | Regression loss: 0.00000 | Running loss: 0.20738
Epoch: 0 | Iteration: 2718 | Classification loss: 0.05563 | Regression loss: 0.00000 | Running loss: 0.20738
Epoch: 0 | Iteration: 2719 | Classification loss: 0.05572 | Regression loss: 0.00000 | Running loss: 0.20738
Epoch: 0 | Iteration: 2720 | Classification loss: 0.05585 | Regression loss: 0.00000 | Running loss: 0.20738
Epoch: 0 | Iteration: 2721 | Classification loss: 0.05550 | Regression loss: 0.00000 | Running loss: 0.20738
Epoch: 0 | Iteration: 2722 | Classification loss: 0.05575 | Regression loss: 0.00000 | Running loss: 0.20738
Epoch: 0 | Iteration: 2723 | Classification loss: 0.05573 | Regression loss: 0.00000 | Running loss: 0.20737
Epoch: 0 | Iteration: 2724 | Classification loss: 0.05566 | Regression loss: 0.00000 | Running loss: 0.20737
Epoch: 0 | Iteration: 2725 | Classification loss: 0.05559 | Regression loss: 0.00000 | Running loss: 0.20737
Epoch: 0 | Iteration: 2726 | Classification loss: 0.05572 | Regression loss: 0.00000 | Running loss: 0.20737
Epoch: 0 | Iteration: 2727 | Classification loss: 0.05589 | Regression loss: 0.00000 | Running loss: 0.20737
Epoch: 0 | Iteration: 2728 | Classification loss: 0.05560 | Regression loss: 0.00000 | Running loss: 0.20737
Epoch: 0 | Iteration: 2729 | Classification loss: 0.05593 | Regression loss: 0.00000 | Running loss: 0.20737
Epoch: 0 | Iteration: 2730 | Classification loss: 0.05579 | Regression loss: 0.00000 | Running loss: 0.20737
Epoch: 0 | Iteration: 2731 | Classification loss: 0.05568 | Regression loss: 0.00000 | Running loss: 0.20737
Epoch: 0 | Iteration: 2732 | Classification loss: 0.05591 | Regression loss: 0.00000 | Running loss: 0.20737
Epoch: 0 | Iteration: 2733 | Classification loss: 0.05592 | Regression loss: 0.00000 | Running loss: 0.20736
Epoch: 0 | Iteration: 2734 | Classification loss: 0.05593 | Regression loss: 0.00000 | Running loss: 0.20311
Epoch: 0 | Iteration: 2735 | Classification loss: 0.05573 | Regression loss: 0.00000 | Running loss: 0.20311
Epoch: 0 | Iteration: 2736 | Classification loss: 1.15941 | Regression loss: 1.12306 | Running loss: 0.20756
Epoch: 0 | Iteration: 2737 | Classification loss: 0.05581 | Regression loss: 0.00000 | Running loss: 0.20756
Epoch: 0 | Iteration: 2738 | Classification loss: 0.05607 | Regression loss: 0.00000 | Running loss: 0.20756
Epoch: 0 | Iteration: 2739 | Classification loss: 0.05556 | Regression loss: 0.00000 | Running loss: 0.20756
Epoch: 0 | Iteration: 2740 | Classification loss: 1.13302 | Regression loss: 1.09622 | Running loss: 0.21190
Epoch: 0 | Iteration: 2741 | Classification loss: 0.05584 | Regression loss: 0.00000 | Running loss: 0.21190
Epoch: 0 | Iteration: 2742 | Classification loss: 0.05593 | Regression loss: 0.00000 | Running loss: 0.21190
Epoch: 0 | Iteration: 2743 | Classification loss: 0.05565 | Regression loss: 0.00000 | Running loss: 0.21190
Epoch: 0 | Iteration: 2744 | Classification loss: 0.05585 | Regression loss: 0.00000 | Running loss: 0.21190
Epoch: 0 | Iteration: 2745 | Classification loss: 0.05570 | Regression loss: 0.00000 | Running loss: 0.21190
Epoch: 0 | Iteration: 2746 | Classification loss: 1.13646 | Regression loss: 1.39216 | Running loss: 0.21684
Epoch: 0 | Iteration: 2747 | Classification loss: 0.05586 | Regression loss: 0.00000 | Running loss: 0.21684
Epoch: 0 | Iteration: 2748 | Classification loss: 0.05565 | Regression loss: 0.00000 | Running loss: 0.21684
Epoch: 0 | Iteration: 2749 | Classification loss: 0.05560 | Regression loss: 0.00000 | Running loss: 0.21684
Epoch: 0 | Iteration: 2750 | Classification loss: 1.16220 | Regression loss: 0.98468 | Running loss: 0.22102
Epoch: 0 | Iteration: 2751 | Classification loss: 0.05567 | Regression loss: 0.00000 | Running loss: 0.22102
Epoch: 0 | Iteration: 2752 | Classification loss: 0.05565 | Regression loss: 0.00000 | Running loss: 0.22102
Epoch: 0 | Iteration: 2753 | Classification loss: 0.05568 | Regression loss: 0.00000 | Running loss: 0.22102
Epoch: 0 | Iteration: 2754 | Classification loss: 0.05555 | Regression loss: 0.00000 | Running loss: 0.22102
Epoch: 0 | Iteration: 2755 | Classification loss: 0.05596 | Regression loss: 0.00000 | Running loss: 0.22102
Epoch: 0 | Iteration: 2756 | Classification loss: 0.05566 | Regression loss: 0.00000 | Running loss: 0.22102
Epoch: 0 | Iteration: 2757 | Classification loss: 1.13727 | Regression loss: 0.96478 | Running loss: 0.22511
Epoch: 0 | Iteration: 2758 | Classification loss: 0.05557 | Regression loss: 0.00000 | Running loss: 0.22511
Epoch: 0 | Iteration: 2759 | Classification loss: 0.05554 | Regression loss: 0.00000 | Running loss: 0.22511
Epoch: 0 | Iteration: 2760 | Classification loss: 0.05571 | Regression loss: 0.00000 | Running loss: 0.22511
Epoch: 0 | Iteration: 2761 | Classification loss: 0.05562 | Regression loss: 0.00000 | Running loss: 0.22511
Epoch: 0 | Iteration: 2762 | Classification loss: 0.05591 | Regression loss: 0.00000 | Running loss: 0.22511
Epoch: 0 | Iteration: 2763 | Classification loss: 0.05590 | Regression loss: 0.00000 | Running loss: 0.22511
Epoch: 0 | Iteration: 2764 | Classification loss: 0.05610 | Regression loss: 0.00000 | Running loss: 0.22511
Epoch: 0 | Iteration: 2765 | Classification loss: 0.05589 | Regression loss: 0.00000 | Running loss: 0.22510
Epoch: 0 | Iteration: 2766 | Classification loss: 0.05554 | Regression loss: 0.00000 | Running loss: 0.22510
Epoch: 0 | Iteration: 2767 | Classification loss: 0.05580 | Regression loss: 0.00000 | Running loss: 0.22510
Epoch: 0 | Iteration: 2768 | Classification loss: 0.05595 | Regression loss: 0.00000 | Running loss: 0.22510
Epoch: 0 | Iteration: 2769 | Classification loss: 0.05577 | Regression loss: 0.00000 | Running loss: 0.22510
Epoch: 0 | Iteration: 2770 | Classification loss: 0.05579 | Regression loss: 0.00000 | Running loss: 0.22510
Epoch: 0 | Iteration: 2771 | Classification loss: 0.05553 | Regression loss: 0.00000 | Running loss: 0.22510
Epoch: 0 | Iteration: 2772 | Classification loss: 0.05575 | Regression loss: 0.00000 | Running loss: 0.22510
Epoch: 0 | Iteration: 2773 | Classification loss: 0.05603 | Regression loss: 0.00000 | Running loss: 0.22510
Epoch: 0 | Iteration: 2774 | Classification loss: 0.05586 | Regression loss: 0.00000 | Running loss: 0.22510
Epoch: 0 | Iteration: 2775 | Classification loss: 0.05594 | Regression loss: 0.00000 | Running loss: 0.22510
Epoch: 0 | Iteration: 2776 | Classification loss: 0.05546 | Regression loss: 0.00000 | Running loss: 0.22051
Epoch: 0 | Iteration: 2777 | Classification loss: 0.05557 | Regression loss: 0.00000 | Running loss: 0.22051
Epoch: 0 | Iteration: 2778 | Classification loss: 0.05554 | Regression loss: 0.00000 | Running loss: 0.22051
Epoch: 0 | Iteration: 2779 | Classification loss: 0.05550 | Regression loss: 0.00000 | Running loss: 0.22051
Epoch: 0 | Iteration: 2780 | Classification loss: 0.05588 | Regression loss: 0.00000 | Running loss: 0.22051
Epoch: 0 | Iteration: 2781 | Classification loss: 0.05575 | Regression loss: 0.00000 | Running loss: 0.22051
Epoch: 0 | Iteration: 2782 | Classification loss: 0.05560 | Regression loss: 0.00000 | Running loss: 0.22051
Epoch: 0 | Iteration: 2783 | Classification loss: 0.05562 | Regression loss: 0.00000 | Running loss: 0.22051
Epoch: 0 | Iteration: 2784 | Classification loss: 0.05566 | Regression loss: 0.00000 | Running loss: 0.21587
Epoch: 0 | Iteration: 2785 | Classification loss: 0.05564 | Regression loss: 0.00000 | Running loss: 0.21587
Epoch: 0 | Iteration: 2786 | Classification loss: 0.05552 | Regression loss: 0.00000 | Running loss: 0.21587
Epoch: 0 | Iteration: 2787 | Classification loss: 0.05591 | Regression loss: 0.00000 | Running loss: 0.21587
Epoch: 0 | Iteration: 2788 | Classification loss: 0.05576 | Regression loss: 0.00000 | Running loss: 0.21587
Epoch: 0 | Iteration: 2789 | Classification loss: 0.05555 | Regression loss: 0.00000 | Running loss: 0.21587
Epoch: 0 | Iteration: 2790 | Classification loss: 0.05575 | Regression loss: 0.00000 | Running loss: 0.21587
Epoch: 0 | Iteration: 2791 | Classification loss: 0.05561 | Regression loss: 0.00000 | Running loss: 0.21587
Epoch: 0 | Iteration: 2792 | Classification loss: 0.05578 | Regression loss: 0.00000 | Running loss: 0.21587
Epoch: 0 | Iteration: 2793 | Classification loss: 0.05595 | Regression loss: 0.00000 | Running loss: 0.21587
Epoch: 0 | Iteration: 2794 | Classification loss: 0.05584 | Regression loss: 0.00000 | Running loss: 0.21586
Epoch: 0 | Iteration: 2795 | Classification loss: 0.05590 | Regression loss: 0.00000 | Running loss: 0.21586
Epoch: 0 | Iteration: 2796 | Classification loss: 0.05582 | Regression loss: 0.00000 | Running loss: 0.21586
Epoch: 0 | Iteration: 2797 | Classification loss: 0.05572 | Regression loss: 0.00000 | Running loss: 0.21586
Epoch: 0 | Iteration: 2798 | Classification loss: 0.05574 | Regression loss: 0.00000 | Running loss: 0.21171
Epoch: 0 | Iteration: 2799 | Classification loss: 0.05584 | Regression loss: 0.00000 | Running loss: 0.21171
Epoch: 0 | Iteration: 2800 | Classification loss: 0.05596 | Regression loss: 0.00000 | Running loss: 0.21171
Epoch: 0 | Iteration: 2801 | Classification loss: 0.05567 | Regression loss: 0.00000 | Running loss: 0.21171
Epoch: 0 | Iteration: 2802 | Classification loss: 0.05589 | Regression loss: 0.00000 | Running loss: 0.21171
Epoch: 0 | Iteration: 2803 | Classification loss: 0.05591 | Regression loss: 0.00000 | Running loss: 0.21171
Epoch: 0 | Iteration: 2804 | Classification loss: 0.05607 | Regression loss: 0.00000 | Running loss: 0.21171
Epoch: 0 | Iteration: 2805 | Classification loss: 0.05586 | Regression loss: 0.00000 | Running loss: 0.21171
Epoch: 0 | Iteration: 2806 | Classification loss: 0.05558 | Regression loss: 0.00000 | Running loss: 0.21171
Epoch: 0 | Iteration: 2807 | Classification loss: 1.13794 | Regression loss: 1.26845 | Running loss: 0.21170
Epoch: 0 | Iteration: 2808 | Classification loss: 0.05546 | Regression loss: 0.00000 | Running loss: 0.21170
Epoch: 0 | Iteration: 2809 | Classification loss: 0.05561 | Regression loss: 0.00000 | Running loss: 0.21169
Epoch: 0 | Iteration: 2810 | Classification loss: 0.05563 | Regression loss: 0.00000 | Running loss: 0.21169
Epoch: 0 | Iteration: 2811 | Classification loss: 0.05590 | Regression loss: 0.00000 | Running loss: 0.21169
Epoch: 0 | Iteration: 2812 | Classification loss: 0.05548 | Regression loss: 0.00000 | Running loss: 0.21169
Epoch: 0 | Iteration: 2813 | Classification loss: 0.05600 | Regression loss: 0.00000 | Running loss: 0.21169
Epoch: 0 | Iteration: 2814 | Classification loss: 0.05572 | Regression loss: 0.00000 | Running loss: 0.21169
Epoch: 0 | Iteration: 2815 | Classification loss: 0.05545 | Regression loss: 0.00000 | Running loss: 0.21169
Epoch: 0 | Iteration: 2816 | Classification loss: 0.05570 | Regression loss: 0.00000 | Running loss: 0.21169
Epoch: 0 | Iteration: 2817 | Classification loss: 0.05552 | Regression loss: 0.00000 | Running loss: 0.21169
Epoch: 0 | Iteration: 2818 | Classification loss: 0.05585 | Regression loss: 0.00000 | Running loss: 0.21169
Epoch: 0 | Iteration: 2819 | Classification loss: 0.05584 | Regression loss: 0.00000 | Running loss: 0.21169
Epoch: 0 | Iteration: 2820 | Classification loss: 0.05581 | Regression loss: 0.00000 | Running loss: 0.21169
Epoch: 0 | Iteration: 2821 | Classification loss: 0.05597 | Regression loss: 0.00000 | Running loss: 0.20738
Epoch: 0 | Iteration: 2822 | Classification loss: 0.05570 | Regression loss: 0.00000 | Running loss: 0.20738
Epoch: 0 | Iteration: 2823 | Classification loss: 0.05593 | Regression loss: 0.00000 | Running loss: 0.20738
Epoch: 0 | Iteration: 2824 | Classification loss: 0.05553 | Regression loss: 0.00000 | Running loss: 0.20738
Epoch: 0 | Iteration: 2825 | Classification loss: 0.05569 | Regression loss: 0.00000 | Running loss: 0.20737
Epoch: 0 | Iteration: 2826 | Classification loss: 0.05554 | Regression loss: 0.00000 | Running loss: 0.20737
Epoch: 0 | Iteration: 2827 | Classification loss: 0.05578 | Regression loss: 0.00000 | Running loss: 0.20737
Epoch: 0 | Iteration: 2828 | Classification loss: 0.05566 | Regression loss: 0.00000 | Running loss: 0.20737
Epoch: 0 | Iteration: 2829 | Classification loss: 0.05578 | Regression loss: 0.00000 | Running loss: 0.20737
Epoch: 0 | Iteration: 2830 | Classification loss: 0.05594 | Regression loss: 0.00000 | Running loss: 0.20737
Epoch: 0 | Iteration: 2831 | Classification loss: 0.05564 | Regression loss: 0.00000 | Running loss: 0.20737
Epoch: 0 | Iteration: 2832 | Classification loss: 0.05540 | Regression loss: 0.00000 | Running loss: 0.20737
Epoch: 0 | Iteration: 2833 | Classification loss: 0.05579 | Regression loss: 0.00000 | Running loss: 0.20737
Epoch: 0 | Iteration: 2834 | Classification loss: 0.05558 | Regression loss: 0.00000 | Running loss: 0.20737
Epoch: 0 | Iteration: 2835 | Classification loss: 0.05574 | Regression loss: 0.00000 | Running loss: 0.20736
Epoch: 0 | Iteration: 2836 | Classification loss: 0.05590 | Regression loss: 0.00000 | Running loss: 0.20736
Epoch: 0 | Iteration: 2837 | Classification loss: 0.05588 | Regression loss: 0.00000 | Running loss: 0.20736
Epoch: 0 | Iteration: 2838 | Classification loss: 0.05583 | Regression loss: 0.00000 | Running loss: 0.20736
Epoch: 0 | Iteration: 2839 | Classification loss: 0.05561 | Regression loss: 0.00000 | Running loss: 0.20736
Epoch: 0 | Iteration: 2840 | Classification loss: 0.05581 | Regression loss: 0.00000 | Running loss: 0.20736
Epoch: 0 | Iteration: 2841 | Classification loss: 0.05569 | Regression loss: 0.00000 | Running loss: 0.20736
Epoch: 0 | Iteration: 2842 | Classification loss: 0.05554 | Regression loss: 0.00000 | Running loss: 0.20736
Epoch: 0 | Iteration: 2843 | Classification loss: 0.05550 | Regression loss: 0.00000 | Running loss: 0.20736
Epoch: 0 | Iteration: 2844 | Classification loss: 0.05551 | Regression loss: 0.00000 | Running loss: 0.20736
Epoch: 0 | Iteration: 2845 | Classification loss: 1.18874 | Regression loss: 0.82509 | Running loss: 0.21127
Epoch: 0 | Iteration: 2846 | Classification loss: 0.05579 | Regression loss: 0.00000 | Running loss: 0.21127
Epoch: 0 | Iteration: 2847 | Classification loss: 0.05567 | Regression loss: 0.00000 | Running loss: 0.21127
Epoch: 0 | Iteration: 2848 | Classification loss: 0.05558 | Regression loss: 0.00000 | Running loss: 0.21127
Epoch: 0 | Iteration: 2849 | Classification loss: 0.05556 | Regression loss: 0.00000 | Running loss: 0.20659
Epoch: 0 | Iteration: 2850 | Classification loss: 0.05574 | Regression loss: 0.00000 | Running loss: 0.20658
Epoch: 0 | Iteration: 2851 | Classification loss: 1.14487 | Regression loss: 1.14754 | Running loss: 0.21106
Epoch: 0 | Iteration: 2852 | Classification loss: 0.05589 | Regression loss: 0.00000 | Running loss: 0.21106
Epoch: 0 | Iteration: 2853 | Classification loss: 0.05596 | Regression loss: 0.00000 | Running loss: 0.21106
Epoch: 0 | Iteration: 2854 | Classification loss: 0.05585 | Regression loss: 0.00000 | Running loss: 0.21105
Epoch: 0 | Iteration: 2855 | Classification loss: 0.05570 | Regression loss: 0.00000 | Running loss: 0.21105
Epoch: 0 | Iteration: 2856 | Classification loss: 0.05580 | Regression loss: 0.00000 | Running loss: 0.20676
Epoch: 0 | Iteration: 2857 | Classification loss: 0.05574 | Regression loss: 0.00000 | Running loss: 0.20676
Epoch: 0 | Iteration: 2858 | Classification loss: 0.05562 | Regression loss: 0.00000 | Running loss: 0.20676
Epoch: 0 | Iteration: 2859 | Classification loss: 0.05553 | Regression loss: 0.00000 | Running loss: 0.20676
Epoch: 0 | Iteration: 2860 | Classification loss: 0.05558 | Regression loss: 0.00000 | Running loss: 0.20676
Epoch: 0 | Iteration: 2861 | Classification loss: 0.05576 | Regression loss: 0.00000 | Running loss: 0.20676
Epoch: 0 | Iteration: 2862 | Classification loss: 0.05547 | Regression loss: 0.00000 | Running loss: 0.20675
Epoch: 0 | Iteration: 2863 | Classification loss: 0.05581 | Regression loss: 0.00000 | Running loss: 0.20675
Epoch: 0 | Iteration: 2864 | Classification loss: 0.05596 | Regression loss: 0.00000 | Running loss: 0.20675
Epoch: 0 | Iteration: 2865 | Classification loss: 0.05548 | Regression loss: 0.00000 | Running loss: 0.20675
Epoch: 0 | Iteration: 2866 | Classification loss: 0.05556 | Regression loss: 0.00000 | Running loss: 0.20675
Epoch: 0 | Iteration: 2867 | Classification loss: 1.14047 | Regression loss: 1.09027 | Running loss: 0.21110
Epoch: 0 | Iteration: 2868 | Classification loss: 0.05582 | Regression loss: 0.00000 | Running loss: 0.21110
Epoch: 0 | Iteration: 2869 | Classification loss: 0.05558 | Regression loss: 0.00000 | Running loss: 0.21110
Epoch: 0 | Iteration: 2870 | Classification loss: 0.05570 | Regression loss: 0.00000 | Running loss: 0.21110
Epoch: 0 | Iteration: 2871 | Classification loss: 0.05554 | Regression loss: 0.00000 | Running loss: 0.21110
Epoch: 0 | Iteration: 2872 | Classification loss: 0.05554 | Regression loss: 0.00000 | Running loss: 0.21110
Epoch: 0 | Iteration: 2873 | Classification loss: 0.05583 | Regression loss: 0.00000 | Running loss: 0.20711
Epoch: 0 | Iteration: 2874 | Classification loss: 0.05565 | Regression loss: 0.00000 | Running loss: 0.20711
Epoch: 0 | Iteration: 2875 | Classification loss: 0.05572 | Regression loss: 0.00000 | Running loss: 0.20711
Epoch: 0 | Iteration: 2876 | Classification loss: 0.05587 | Regression loss: 0.00000 | Running loss: 0.20710
Epoch: 0 | Iteration: 2877 | Classification loss: 0.05551 | Regression loss: 0.00000 | Running loss: 0.20710
Epoch: 0 | Iteration: 2878 | Classification loss: 0.05557 | Regression loss: 0.00000 | Running loss: 0.20710
Epoch: 0 | Iteration: 2879 | Classification loss: 0.05578 | Regression loss: 0.00000 | Running loss: 0.20710
Epoch: 0 | Iteration: 2880 | Classification loss: 0.05565 | Regression loss: 0.00000 | Running loss: 0.20710
Epoch: 0 | Iteration: 2881 | Classification loss: 0.05557 | Regression loss: 0.00000 | Running loss: 0.20710
Epoch: 0 | Iteration: 2882 | Classification loss: 0.05584 | Regression loss: 0.00000 | Running loss: 0.20710
Epoch: 0 | Iteration: 2883 | Classification loss: 0.05560 | Regression loss: 0.00000 | Running loss: 0.20710
Epoch: 0 | Iteration: 2884 | Classification loss: 0.05572 | Regression loss: 0.00000 | Running loss: 0.20710
Epoch: 0 | Iteration: 2885 | Classification loss: 0.05574 | Regression loss: 0.00000 | Running loss: 0.20710
Epoch: 0 | Iteration: 2886 | Classification loss: 0.05554 | Regression loss: 0.00000 | Running loss: 0.20283
Epoch: 0 | Iteration: 2887 | Classification loss: 0.05593 | Regression loss: 0.00000 | Running loss: 0.20283
Epoch: 0 | Iteration: 2888 | Classification loss: 0.05577 | Regression loss: 0.00000 | Running loss: 0.20283
Epoch: 0 | Iteration: 2889 | Classification loss: 0.05584 | Regression loss: 0.00000 | Running loss: 0.20283
Epoch: 0 | Iteration: 2890 | Classification loss: 0.05570 | Regression loss: 0.00000 | Running loss: 0.20283
Epoch: 0 | Iteration: 2891 | Classification loss: 0.05566 | Regression loss: 0.00000 | Running loss: 0.20283
Epoch: 0 | Iteration: 2892 | Classification loss: 0.05574 | Regression loss: 0.00000 | Running loss: 0.20283
Epoch: 0 | Iteration: 2893 | Classification loss: 0.05554 | Regression loss: 0.00000 | Running loss: 0.20283
Epoch: 0 | Iteration: 2894 | Classification loss: 0.05596 | Regression loss: 0.00000 | Running loss: 0.19801
Epoch: 0 | Iteration: 2895 | Classification loss: 0.05585 | Regression loss: 0.00000 | Running loss: 0.19801
Epoch: 0 | Iteration: 2896 | Classification loss: 1.16670 | Regression loss: 1.17440 | Running loss: 0.20258
Epoch: 0 | Iteration: 2897 | Classification loss: 0.05582 | Regression loss: 0.00000 | Running loss: 0.20258
Epoch: 0 | Iteration: 2898 | Classification loss: 0.05558 | Regression loss: 0.00000 | Running loss: 0.20258
Epoch: 0 | Iteration: 2899 | Classification loss: 0.05559 | Regression loss: 0.00000 | Running loss: 0.20258
Epoch: 0 | Iteration: 2900 | Classification loss: 0.05535 | Regression loss: 0.00000 | Running loss: 0.20258
Epoch: 0 | Iteration: 2901 | Classification loss: 0.05585 | Regression loss: 0.00000 | Running loss: 0.20258
Epoch: 0 | Iteration: 2902 | Classification loss: 0.05568 | Regression loss: 0.00000 | Running loss: 0.19749
Epoch: 0 | Iteration: 2903 | Classification loss: 0.05550 | Regression loss: 0.00000 | Running loss: 0.19749
Epoch: 0 | Iteration: 2904 | Classification loss: 0.05561 | Regression loss: 0.00000 | Running loss: 0.19749
Epoch: 0 | Iteration: 2905 | Classification loss: 0.05568 | Regression loss: 0.00000 | Running loss: 0.19748
Epoch: 0 | Iteration: 2906 | Classification loss: 0.05550 | Regression loss: 0.00000 | Running loss: 0.19748
Epoch: 0 | Iteration: 2907 | Classification loss: 0.05600 | Regression loss: 0.00000 | Running loss: 0.19748
Epoch: 0 | Iteration: 2908 | Classification loss: 0.05586 | Regression loss: 0.00000 | Running loss: 0.19748
Epoch: 0 | Iteration: 2909 | Classification loss: 0.05587 | Regression loss: 0.00000 | Running loss: 0.19748
Epoch: 0 | Iteration: 2910 | Classification loss: 0.05554 | Regression loss: 0.00000 | Running loss: 0.19748
Epoch: 0 | Iteration: 2911 | Classification loss: 0.05560 | Regression loss: 0.00000 | Running loss: 0.19748
Epoch: 0 | Iteration: 2912 | Classification loss: 0.05549 | Regression loss: 0.00000 | Running loss: 0.19748
Epoch: 0 | Iteration: 2913 | Classification loss: 0.05572 | Regression loss: 0.00000 | Running loss: 0.19748
Epoch: 0 | Iteration: 2914 | Classification loss: 0.05582 | Regression loss: 0.00000 | Running loss: 0.19748
Epoch: 0 | Iteration: 2915 | Classification loss: 0.05553 | Regression loss: 0.00000 | Running loss: 0.19748
Epoch: 0 | Iteration: 2916 | Classification loss: 0.05552 | Regression loss: 0.00000 | Running loss: 0.19748
Epoch: 0 | Iteration: 2917 | Classification loss: 1.13567 | Regression loss: 0.99214 | Running loss: 0.20162
Epoch: 0 | Iteration: 2918 | Classification loss: 1.13807 | Regression loss: 1.31281 | Running loss: 0.20641
Epoch: 0 | Iteration: 2919 | Classification loss: 0.05571 | Regression loss: 0.00000 | Running loss: 0.20641
Evaluating dataset
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.0665296676312472, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.0665296676312472, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.0322801579424388, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
After normalization, Min: -1.946656385753873, Max: 2.6399999999999997
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.0665296676312472, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.0357142857142856, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -1.8081232462344425, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6225708071390788
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.083654420442196, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -1.9980306523205411, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.083654420442196, Max: 2.6051416142781574
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.0357142857142856, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6225708071390788
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.083654420442196, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.0494049107533874, Max: 2.6399999999999997
After normalization, Min: -1.843907852620537, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.0665296676312472, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.083654420442196, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.0494049107533874, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.0494049107533874, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -1.9809058913757707, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.0665296676312472, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.083654420442196, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.0665296676312472, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.1990,  0.2761,  0.9329],
         [-0.1824,  0.2932,  0.9498],
         [-0.1802,  0.2954,  0.9521],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1797,  0.2959,  0.9525],
         [-0.1643,  0.3116,  0.9682],
         [-0.1643,  0.3116,  0.9682],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1463,  0.3300,  0.9865],
         [-0.1463,  0.3300,  0.9865],
         [-0.1466,  0.3297,  0.9862],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[384.7500, 197.6000, 399.0000, 351.5000,   0.0000],
        [342.0000, 224.2000, 352.4500, 276.4500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.1990,  0.2761,  0.9329],
         [-0.1824,  0.2932,  0.9498],
         [-0.1802,  0.2954,  0.9521],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1797,  0.2959,  0.9525],
         [-0.1643,  0.3116,  0.9682],
         [-0.1643,  0.3116,  0.9682],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1463,  0.3300,  0.9865],
         [-0.1463,  0.3300,  0.9865],
         [-0.1466,  0.3297,  0.9862],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
1/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.6838, 1.9209, 2.1520],
         [1.6838, 1.9209, 2.1520],
         [1.6860, 1.9232, 2.1543],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.6838, 1.9209, 2.1520],
         [1.6839, 1.9210, 2.1521],
         [1.6872, 1.9244, 2.1555],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.6860, 1.9232, 2.1543],
         [1.6872, 1.9244, 2.1555],
         [1.7009, 1.9384, 2.1694],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[438.9000, 263.1500, 448.4000, 335.3500,   0.0000],
        [373.3500, 270.7500, 383.8000, 324.9000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.6838, 1.9209, 2.1520],
         [1.6838, 1.9209, 2.1520],
         [1.6860, 1.9232, 2.1543],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.6838, 1.9209, 2.1520],
         [1.6839, 1.9210, 2.1521],
         [1.6872, 1.9244, 2.1555],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.6860, 1.9232, 2.1543],
         [1.6872, 1.9244, 2.1555],
         [1.7009, 1.9384, 2.1694],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
2/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-1.6217, -1.4584, -1.4911],
         [-1.6729, -1.5108, -1.5442],
         [-1.7184, -1.5573, -1.5950],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.5869, -1.4214, -1.4620],
         [-1.5272, -1.3604, -1.4326],
         [-1.5013, -1.3340, -1.4066],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.5873, -1.4057, -1.5327],
         [-1.4561, -1.2716, -1.3992],
         [-1.3919, -1.2060, -1.3379],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[471.2000, 150.1000, 485.4500, 361.0000,   0.0000],
        [197.6000, 234.6500, 207.1000, 258.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-1.6217, -1.4584, -1.4911],
         [-1.6729, -1.5108, -1.5442],
         [-1.7184, -1.5573, -1.5950],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.5869, -1.4214, -1.4620],
         [-1.5272, -1.3604, -1.4326],
         [-1.5013, -1.3340, -1.4066],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.5873, -1.4057, -1.5327],
         [-1.4561, -1.2716, -1.3992],
         [-1.3919, -1.2060, -1.3379],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
3/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.6276,  0.5208,  1.8910],
         [-0.5933,  0.5544,  1.9219],
         [-0.5742,  0.5459,  1.8869],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.6408,  0.5073,  1.8776],
         [-0.6242,  0.5215,  1.8931],
         [-0.5702,  0.5352,  1.9209],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5835,  0.5657,  1.9404],
         [-0.6186,  0.5230,  1.9013],
         [-0.6028,  0.5019,  1.8959],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[508.2500, 228.9500, 516.8000, 266.0000,   0.0000],
        [429.4000, 274.5500, 437.0000, 311.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.6276,  0.5208,  1.8910],
         [-0.5933,  0.5544,  1.9219],
         [-0.5742,  0.5459,  1.8869],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.6408,  0.5073,  1.8776],
         [-0.6242,  0.5215,  1.8931],
         [-0.5702,  0.5352,  1.9209],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5835,  0.5657,  1.9404],
         [-0.6186,  0.5230,  1.9013],
         [-0.6028,  0.5019,  1.8959],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
4/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.1143,  0.3627,  1.0191],
         [-0.1143,  0.3627,  1.0191],
         [-0.1143,  0.3627,  1.0191],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1143,  0.3627,  1.0191],
         [-0.1143,  0.3627,  1.0191],
         [-0.1143,  0.3627,  1.0191],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1143,  0.3627,  1.0191],
         [-0.1143,  0.3627,  1.0191],
         [-0.1143,  0.3627,  1.0191],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[189.0500,  86.4500, 199.5000, 121.6000,   0.0000],
        [400.9000, 188.1000, 412.3000, 356.2500,   0.0000],
        [364.8000, 251.7500, 372.4000, 330.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.1143,  0.3627,  1.0191],
         [-0.1143,  0.3627,  1.0191],
         [-0.1143,  0.3627,  1.0191],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1143,  0.3627,  1.0191],
         [-0.1143,  0.3627,  1.0191],
         [-0.1143,  0.3627,  1.0191],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1143,  0.3627,  1.0191],
         [-0.1143,  0.3627,  1.0191],
         [-0.1143,  0.3627,  1.0191],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
5/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.5292, 1.6403, 1.9772],
         [1.5310, 1.6421, 1.9790],
         [1.5464, 1.6579, 1.9947],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5130, 1.6237, 1.9607],
         [1.5284, 1.6395, 1.9764],
         [1.5319, 1.6431, 1.9800],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5103, 1.6210, 1.9580],
         [1.5139, 1.6246, 1.9616],
         [1.5319, 1.6431, 1.9800],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[367.6500, 151.0500, 381.9000, 383.8000,   0.0000],
        [503.5000, 171.9500, 514.9000, 307.8000,   0.0000],
        [286.9000, 256.5000, 293.5500, 303.0500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.5292, 1.6403, 1.9772],
         [1.5310, 1.6421, 1.9790],
         [1.5464, 1.6579, 1.9947],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5130, 1.6237, 1.9607],
         [1.5284, 1.6395, 1.9764],
         [1.5319, 1.6431, 1.9800],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5103, 1.6210, 1.9580],
         [1.5139, 1.6246, 1.9616],
         [1.5319, 1.6431, 1.9800],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
6/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.1310,  0.3632,  1.1241],
         [-0.1143,  0.3803,  1.1411],
         [-0.1121,  0.3826,  1.1434],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1297,  0.3646,  1.1255],
         [-0.1142,  0.3804,  1.1412],
         [-0.1109,  0.3838,  1.1446],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1143,  0.3803,  1.1411],
         [-0.1130,  0.3816,  1.1425],
         [-0.0969,  0.3981,  1.1588],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[ 55.1000,   2.8500,  95.9500, 172.9000,   0.0000],
        [396.1500, 236.5500, 407.5500, 315.4000,   0.0000],
        [325.8500, 268.8500, 332.5000, 321.1000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.1310,  0.3632,  1.1241],
         [-0.1143,  0.3803,  1.1411],
         [-0.1121,  0.3826,  1.1434],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1297,  0.3646,  1.1255],
         [-0.1142,  0.3804,  1.1412],
         [-0.1109,  0.3838,  1.1446],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1143,  0.3803,  1.1411],
         [-0.1130,  0.3816,  1.1425],
         [-0.0969,  0.3981,  1.1588],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
7/730
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.2351,  0.2218,  1.1402],
         [-0.2527,  0.2038,  1.1223],
         [-0.2684,  0.1854,  1.1039],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2527,  0.2038,  1.1223],
         [-0.2540,  0.2024,  1.1209],
         [-0.2696,  0.1842,  1.1027],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2707,  0.1853,  1.1039],
         [-0.2741,  0.1819,  1.1004],
         [-0.2856,  0.1679,  1.0865],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[455.0500, 225.1500, 464.5500, 328.7000,   0.0000],
        [550.0500, 268.8500, 559.5500, 315.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.2351,  0.2218,  1.1402],
         [-0.2527,  0.2038,  1.1223],
         [-0.2684,  0.1854,  1.1039],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2527,  0.2038,  1.1223],
         [-0.2540,  0.2024,  1.1209],
         [-0.2696,  0.1842,  1.1027],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2707,  0.1853,  1.1039],
         [-0.2741,  0.1819,  1.1004],
         [-0.2856,  0.1679,  1.0865],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
8/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.0056, 0.5378, 1.0365],
         [0.0056, 0.5378, 1.0365],
         [0.0056, 0.5378, 1.0365],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0056, 0.5378, 1.0365],
         [0.0056, 0.5378, 1.0365],
         [0.0056, 0.5378, 1.0365],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0056, 0.5378, 1.0365],
         [0.0056, 0.5378, 1.0365],
         [0.0056, 0.5378, 1.0365],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[540.5500, 118.7500, 562.4000, 391.4000,   0.0000],
        [381.9000, 251.7500, 391.4000, 311.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.0056, 0.5378, 1.0365],
         [0.0056, 0.5378, 1.0365],
         [0.0056, 0.5378, 1.0365],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0056, 0.5378, 1.0365],
         [0.0056, 0.5378, 1.0365],
         [0.0056, 0.5378, 1.0365],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0056, 0.5378, 1.0365],
         [0.0056, 0.5378, 1.0365],
         [0.0056, 0.5378, 1.0365],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
9/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.0844, 1.3606, 1.7163],
         [1.0844, 1.3606, 1.7163],
         [1.0867, 1.3629, 1.7185],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0844, 1.3606, 1.7163],
         [1.0844, 1.3606, 1.7163],
         [1.0867, 1.3629, 1.7185],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0844, 1.3606, 1.7163],
         [1.0844, 1.3606, 1.7163],
         [1.0867, 1.3629, 1.7185],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[319.2000, 120.6500, 332.5000, 168.1500,   0.0000],
        [304.0000, 126.3500, 315.4000, 174.8000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.0844, 1.3606, 1.7163],
         [1.0844, 1.3606, 1.7163],
         [1.0867, 1.3629, 1.7185],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0844, 1.3606, 1.7163],
         [1.0844, 1.3606, 1.7163],
         [1.0867, 1.3629, 1.7185],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0844, 1.3606, 1.7163],
         [1.0844, 1.3606, 1.7163],
         [1.0867, 1.3629, 1.7185],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
10/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.4675, 0.7825, 1.4369],
         [0.4508, 0.7654, 1.4200],
         [0.4531, 0.7677, 1.4222],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4675, 0.7825, 1.4369],
         [0.4508, 0.7654, 1.4200],
         [0.4531, 0.7677, 1.4222],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4675, 0.7825, 1.4369],
         [0.4506, 0.7652, 1.4198],
         [0.4508, 0.7654, 1.4200],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 40.8500, 259.3500,  49.4000, 312.5500,   0.0000],
        [ 96.9000, 284.0500, 101.6500, 304.0000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.4675, 0.7825, 1.4369],
         [0.4508, 0.7654, 1.4200],
         [0.4531, 0.7677, 1.4222],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4675, 0.7825, 1.4369],
         [0.4508, 0.7654, 1.4200],
         [0.4531, 0.7677, 1.4222],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4675, 0.7825, 1.4369],
         [0.4506, 0.7652, 1.4198],
         [0.4508, 0.7654, 1.4200],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
11/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.2219, 1.4136, 1.6121],
         [1.2385, 1.4307, 1.6291],
         [1.2408, 1.4330, 1.6314],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2219, 1.4136, 1.6121],
         [1.2385, 1.4307, 1.6291],
         [1.2408, 1.4330, 1.6314],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2219, 1.4136, 1.6121],
         [1.2385, 1.4307, 1.6291],
         [1.2408, 1.4330, 1.6314],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[551.9500, 171.9500, 564.3000, 364.8000,   0.0000],
        [542.4500, 268.8500, 548.1500, 323.0000,   0.0000],
        [429.4000, 249.8500, 436.0500, 332.5000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.2219, 1.4136, 1.6121],
         [1.2385, 1.4307, 1.6291],
         [1.2408, 1.4330, 1.6314],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2219, 1.4136, 1.6121],
         [1.2385, 1.4307, 1.6291],
         [1.2408, 1.4330, 1.6314],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2219, 1.4136, 1.6121],
         [1.2385, 1.4307, 1.6291],
         [1.2408, 1.4330, 1.6314],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
12/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.6036, 0.8165, 1.6800],
         [0.6036, 0.8165, 1.6800],
         [0.6081, 0.8212, 1.6846],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5481, 0.7598, 1.6236],
         [0.5468, 0.7585, 1.6222],
         [0.5515, 0.7633, 1.6270],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4757, 0.6858, 1.5498],
         [0.4612, 0.6710, 1.5351],
         [0.4673, 0.6773, 1.5414],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[265.0500, 113.0500, 281.2000, 157.7000,   0.0000],
        [574.7500, 252.7000, 581.4000, 278.3500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.6036, 0.8165, 1.6800],
         [0.6036, 0.8165, 1.6800],
         [0.6081, 0.8212, 1.6846],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5481, 0.7598, 1.6236],
         [0.5468, 0.7585, 1.6222],
         [0.5515, 0.7633, 1.6270],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4757, 0.6858, 1.5498],
         [0.4612, 0.6710, 1.5351],
         [0.4673, 0.6773, 1.5414],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
13/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.2381, 1.3952, 1.7855],
         [1.2201, 1.3768, 1.7672],
         [1.2043, 1.3606, 1.7511],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2381, 1.3952, 1.7855],
         [1.2201, 1.3768, 1.7672],
         [1.2043, 1.3606, 1.7511],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2381, 1.3952, 1.7901],
         [1.2201, 1.3768, 1.7718],
         [1.2043, 1.3606, 1.7557],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[408.5000, 243.2000, 416.1000, 262.2000,   0.0000],
        [473.1000, 252.7000, 482.6000, 309.7000,   0.0000],
        [519.6500, 256.5000, 528.2000, 317.3000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.2381, 1.3952, 1.7855],
         [1.2201, 1.3768, 1.7672],
         [1.2043, 1.3606, 1.7511],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2381, 1.3952, 1.7855],
         [1.2201, 1.3768, 1.7672],
         [1.2043, 1.3606, 1.7511],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2381, 1.3952, 1.7901],
         [1.2201, 1.3768, 1.7718],
         [1.2043, 1.3606, 1.7557],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
14/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.2557, 1.4307, 1.9603],
         [1.2557, 1.4307, 1.9603],
         [1.2557, 1.4307, 1.9603],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2557, 1.4307, 1.9603],
         [1.2557, 1.4307, 1.9603],
         [1.2557, 1.4307, 1.9603],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2579, 1.4330, 1.9626],
         [1.2579, 1.4330, 1.9626],
         [1.2579, 1.4330, 1.9626],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[350.5500, 276.4500, 359.1000, 345.8000,   0.0000],
        [382.8500, 282.1500, 392.3500, 344.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.2557, 1.4307, 1.9603],
         [1.2557, 1.4307, 1.9603],
         [1.2557, 1.4307, 1.9603],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2557, 1.4307, 1.9603],
         [1.2557, 1.4307, 1.9603],
         [1.2557, 1.4307, 1.9603],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2579, 1.4330, 1.9626],
         [1.2579, 1.4330, 1.9626],
         [1.2579, 1.4330, 1.9626],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
15/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.7248, 0.9230, 1.2282],
         [0.7248, 0.9230, 1.2282],
         [0.7248, 0.9230, 1.2282],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7248, 0.9230, 1.2282],
         [0.7248, 0.9230, 1.2282],
         [0.7248, 0.9230, 1.2282],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7226, 0.9207, 1.2259],
         [0.7227, 0.9208, 1.2261],
         [0.7248, 0.9230, 1.2282],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[296.4000, 220.4000, 306.8500, 333.4500,   0.0000],
        [447.4500, 227.0500, 457.9000, 304.0000,   0.0000],
        [357.2000, 271.7000, 365.7500, 299.2500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.7248, 0.9230, 1.2282],
         [0.7248, 0.9230, 1.2282],
         [0.7248, 0.9230, 1.2282],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7248, 0.9230, 1.2282],
         [0.7248, 0.9230, 1.2282],
         [0.7248, 0.9230, 1.2282],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7226, 0.9207, 1.2259],
         [0.7227, 0.9208, 1.2261],
         [0.7248, 0.9230, 1.2282],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
16/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.8447, 1.1155, 2.2391],
         [0.8447, 1.1155, 2.2391],
         [0.8447, 1.1155, 2.2391],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8447, 1.1155, 2.2391],
         [0.8447, 1.1155, 2.2391],
         [0.8447, 1.1155, 2.2391],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8469, 1.1178, 2.2414],
         [0.8469, 1.1178, 2.2414],
         [0.8469, 1.1178, 2.2414],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[508.2500,  61.7500, 533.9000, 267.9000,   0.0000],
        [482.6000,  30.4000, 498.7500,  86.4500,   0.0000],
        [214.7000, 271.7000, 221.3500, 326.8000,   0.0000],
        [156.7500, 264.1000, 163.4000, 308.7500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.8447, 1.1155, 2.2391],
         [0.8447, 1.1155, 2.2391],
         [0.8447, 1.1155, 2.2391],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8447, 1.1155, 2.2391],
         [0.8447, 1.1155, 2.2391],
         [0.8447, 1.1155, 2.2391],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8469, 1.1178, 2.2414],
         [0.8469, 1.1178, 2.2414],
         [0.8469, 1.1178, 2.2414],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
17/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[ 0.8193,  1.1251,  0.9749],
         [ 0.3205,  0.6147,  0.4682],
         [ 0.1407,  0.4286,  0.2829],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.2667,  0.5768,  0.3794],
         [ 0.2124,  0.5055,  0.3556],
         [-0.1980,  0.0823, -0.0618],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.1312, -0.8519, -1.0442],
         [-0.7150, -0.4278, -0.6179],
         [-1.0890, -0.8285, -0.9687],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[103.5500,  83.6000, 125.4000, 339.1500,   0.0000],
        [131.1000,  74.1000, 154.8500, 336.3000,   0.0000],
        [474.0500, 253.6500, 487.3500, 332.5000,   0.0000],
        [516.8000, 269.8000, 525.3500, 318.2500,   0.0000],
        [412.3000, 282.1500, 418.9500, 315.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[ 0.8193,  1.1251,  0.9749],
         [ 0.3205,  0.6147,  0.4682],
         [ 0.1407,  0.4286,  0.2829],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.2667,  0.5768,  0.3794],
         [ 0.2124,  0.5055,  0.3556],
         [-0.1980,  0.0823, -0.0618],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.1312, -0.8519, -1.0442],
         [-0.7150, -0.4278, -0.6179],
         [-1.0890, -0.8285, -0.9687],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
18/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.3656, 0.6608, 1.0021],
         [0.3837, 0.6793, 1.0205],
         [0.4016, 0.6976, 1.0387],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3656, 0.6608, 1.0021],
         [0.3823, 0.6779, 1.0191],
         [0.3983, 0.6942, 1.0353],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3630, 0.6581, 0.9994],
         [0.3665, 0.6617, 1.0030],
         [0.3846, 0.6802, 1.0214],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[384.7500, 240.3500, 395.2000, 304.9500,   0.0000],
        [310.6500, 257.4500, 321.1000, 315.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.3656, 0.6608, 1.0021],
         [0.3837, 0.6793, 1.0205],
         [0.4016, 0.6976, 1.0387],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3656, 0.6608, 1.0021],
         [0.3823, 0.6779, 1.0191],
         [0.3983, 0.6942, 1.0353],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3630, 0.6581, 0.9994],
         [0.3665, 0.6617, 1.0030],
         [0.3846, 0.6802, 1.0214],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
19/730
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.2342,  0.1877,  1.3502],
         [-0.2342,  0.1877,  1.3502],
         [-0.2319,  0.1854,  1.3502],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2342,  0.1877,  1.3502],
         [-0.2342,  0.1877,  1.3502],
         [-0.2319,  0.1854,  1.3502],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2342,  0.1877,  1.3502],
         [-0.2342,  0.1877,  1.3502],
         [-0.2319,  0.1854,  1.3502],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[390.4500, 274.5500, 398.0500, 346.7500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.2342,  0.1877,  1.3502],
         [-0.2342,  0.1877,  1.3502],
         [-0.2319,  0.1854,  1.3502],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2342,  0.1877,  1.3502],
         [-0.2342,  0.1877,  1.3502],
         [-0.2319,  0.1854,  1.3502],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2342,  0.1877,  1.3502],
         [-0.2342,  0.1877,  1.3502],
         [-0.2319,  0.1854,  1.3502],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
20/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.9127, 1.1321, 1.5598],
         [0.8754, 1.0773, 1.5549],
         [0.8239, 1.0243, 1.5034],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9335, 1.1538, 1.5800],
         [0.8974, 1.1157, 1.5459],
         [0.8614, 1.0639, 1.5388],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9853, 1.2068, 1.6305],
         [0.9515, 1.1722, 1.5963],
         [0.9157, 1.1357, 1.5620],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 68.4000, 231.8000,  77.9000, 275.5000,   0.0000],
        [215.6500, 274.5500, 222.3000, 303.0500,   0.0000],
        [195.7000, 282.1500, 201.4000, 307.8000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.9127, 1.1321, 1.5598],
         [0.8754, 1.0773, 1.5549],
         [0.8239, 1.0243, 1.5034],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9335, 1.1538, 1.5800],
         [0.8974, 1.1157, 1.5459],
         [0.8614, 1.0639, 1.5388],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9853, 1.2068, 1.6305],
         [0.9515, 1.1722, 1.5963],
         [0.9157, 1.1357, 1.5620],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
21/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.0159, 1.2381, 1.9254],
         [1.0159, 1.2381, 1.9254],
         [1.0182, 1.2404, 1.9278],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0146, 1.2381, 1.9282],
         [1.0146, 1.2381, 1.9282],
         [1.0166, 1.2402, 1.9345],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9965, 1.2358, 1.9580],
         [0.9967, 1.2360, 1.9581],
         [0.9988, 1.2381, 1.9603],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[333.4500, 228.0000, 342.0000, 319.2000,   0.0000],
        [395.2000, 260.3000, 403.7500, 316.3500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.0159, 1.2381, 1.9254],
         [1.0159, 1.2381, 1.9254],
         [1.0182, 1.2404, 1.9278],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0146, 1.2381, 1.9282],
         [1.0146, 1.2381, 1.9282],
         [1.0166, 1.2402, 1.9345],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9965, 1.2358, 1.9580],
         [0.9967, 1.2360, 1.9581],
         [0.9988, 1.2381, 1.9603],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
22/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.0801,  0.1352,  0.2522],
         [-0.0801,  0.1352,  0.2522],
         [-0.0823,  0.1329,  0.2499],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0801,  0.1352,  0.2522],
         [-0.0801,  0.1352,  0.2522],
         [-0.0821,  0.1330,  0.2501],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0778,  0.1375,  0.2545],
         [-0.0780,  0.1373,  0.2543],
         [-0.0801,  0.1352,  0.2522],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[325.8500, 200.4500, 342.0000, 304.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.0801,  0.1352,  0.2522],
         [-0.0801,  0.1352,  0.2522],
         [-0.0823,  0.1329,  0.2499],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0801,  0.1352,  0.2522],
         [-0.0801,  0.1352,  0.2522],
         [-0.0821,  0.1330,  0.2501],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0778,  0.1375,  0.2545],
         [-0.0780,  0.1373,  0.2543],
         [-0.0801,  0.1352,  0.2522],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
23/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.0227, 0.5028, 1.1411],
         [0.0227, 0.5028, 1.1411],
         [0.0204, 0.5005, 1.1388],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0227, 0.5028, 1.1411],
         [0.0226, 0.5027, 1.1410],
         [0.0193, 0.4993, 1.1376],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0204, 0.5005, 1.1388],
         [0.0193, 0.4993, 1.1376],
         [0.0056, 0.4853, 1.1237],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 23.7500,  90.2500,  56.0500, 399.9500,   0.0000],
        [436.0500, 136.8000, 452.2000, 196.6500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.0227, 0.5028, 1.1411],
         [0.0227, 0.5028, 1.1411],
         [0.0204, 0.5005, 1.1388],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0227, 0.5028, 1.1411],
         [0.0226, 0.5027, 1.1410],
         [0.0193, 0.4993, 1.1376],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0204, 0.5005, 1.1388],
         [0.0193, 0.4993, 1.1376],
         [0.0056, 0.4853, 1.1237],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
24/730
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.9474, 1.0980, 1.3154],
         [0.9487, 1.0994, 1.3167],
         [0.9642, 1.1151, 1.3324],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9461, 1.0967, 1.3140],
         [0.9462, 1.0968, 1.3141],
         [0.9495, 1.1002, 1.3175],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9281, 1.0783, 1.2957],
         [0.9315, 1.0817, 1.2991],
         [0.9452, 1.0957, 1.3131],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[193.8000, 233.7000, 203.3000, 338.2000,   0.0000],
        [211.8500, 230.8500, 220.4000, 338.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.9474, 1.0980, 1.3154],
         [0.9487, 1.0994, 1.3167],
         [0.9642, 1.1151, 1.3324],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9461, 1.0967, 1.3140],
         [0.9462, 1.0968, 1.3141],
         [0.9495, 1.1002, 1.3175],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9281, 1.0783, 1.2957],
         [0.9315, 1.0817, 1.2991],
         [0.9452, 1.0957, 1.3131],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
25/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.0801,  0.5728,  1.4200],
         [-0.0801,  0.5728,  1.4200],
         [-0.0801,  0.5728,  1.4200],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0801,  0.5728,  1.4200],
         [-0.0801,  0.5728,  1.4200],
         [-0.0801,  0.5728,  1.4200],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0801,  0.5728,  1.4200],
         [-0.0801,  0.5728,  1.4200],
         [-0.0801,  0.5728,  1.4200],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[347.7000, 233.7000, 357.2000, 315.4000,   0.0000],
        [596.6000, 240.3500, 605.1500, 304.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.0801,  0.5728,  1.4200],
         [-0.0801,  0.5728,  1.4200],
         [-0.0801,  0.5728,  1.4200],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0801,  0.5728,  1.4200],
         [-0.0801,  0.5728,  1.4200],
         [-0.0801,  0.5728,  1.4200],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0801,  0.5728,  1.4200],
         [-0.0801,  0.5728,  1.4200],
         [-0.0801,  0.5728,  1.4200],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
26/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.7248, 0.9755, 1.1585],
         [0.7248, 0.9755, 1.1585],
         [0.7248, 0.9755, 1.1585],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7248, 0.9755, 1.1585],
         [0.7248, 0.9755, 1.1585],
         [0.7248, 0.9755, 1.1585],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7248, 0.9755, 1.1585],
         [0.7248, 0.9755, 1.1585],
         [0.7248, 0.9755, 1.1585],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[365.7500, 258.4000, 377.1500, 312.5500,   0.0000],
        [397.1000, 275.5000, 405.6500, 314.4500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.7248, 0.9755, 1.1585],
         [0.7248, 0.9755, 1.1585],
         [0.7248, 0.9755, 1.1585],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7248, 0.9755, 1.1585],
         [0.7248, 0.9755, 1.1585],
         [0.7248, 0.9755, 1.1585],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7248, 0.9755, 1.1585],
         [0.7248, 0.9755, 1.1585],
         [0.7248, 0.9755, 1.1585],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
27/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.6149, 1.6753, 1.9598],
         [1.6153, 1.6758, 1.9603],
         [1.6153, 1.6758, 1.9603],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5986, 1.6587, 1.9433],
         [1.6140, 1.6745, 1.9590],
         [1.6153, 1.6758, 1.9603],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5959, 1.6560, 1.9405],
         [1.5973, 1.6573, 1.9419],
         [1.6133, 1.6738, 1.9583],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[323.0000, 257.4500, 333.4500, 344.8500,   0.0000],
        [407.5500, 272.6500, 418.0000, 339.1500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.6149, 1.6753, 1.9598],
         [1.6153, 1.6758, 1.9603],
         [1.6153, 1.6758, 1.9603],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5986, 1.6587, 1.9433],
         [1.6140, 1.6745, 1.9590],
         [1.6153, 1.6758, 1.9603],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5959, 1.6560, 1.9405],
         [1.5973, 1.6573, 1.9419],
         [1.6133, 1.6738, 1.9583],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
28/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.5702, 0.8875, 1.2626],
         [0.5703, 0.8875, 1.2627],
         [0.5729, 0.8902, 1.2653],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5522, 0.8691, 1.2443],
         [0.5536, 0.8704, 1.2457],
         [0.5693, 0.8866, 1.2617],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5364, 0.8529, 1.2282],
         [0.5376, 0.8541, 1.2294],
         [0.5513, 0.8681, 1.2434],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[159.6000,  17.1000, 194.7500, 333.4500,   0.0000],
        [470.2500,  32.3000, 494.0000, 365.7500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.5702, 0.8875, 1.2626],
         [0.5703, 0.8875, 1.2627],
         [0.5729, 0.8902, 1.2653],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5522, 0.8691, 1.2443],
         [0.5536, 0.8704, 1.2457],
         [0.5693, 0.8866, 1.2617],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5364, 0.8529, 1.2282],
         [0.5376, 0.8541, 1.2294],
         [0.5513, 0.8681, 1.2434],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
29/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.7690, 1.9379, 2.1515],
         [1.7707, 1.9397, 2.1533],
         [1.7860, 1.9554, 2.1689],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7474, 1.9159, 2.1296],
         [1.7669, 1.9358, 2.1494],
         [1.7672, 1.9361, 2.1497],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.6695, 1.8362, 2.0503],
         [1.7271, 1.8952, 2.1090],
         [1.7632, 1.9321, 2.1457],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[346.7500, 100.7000, 368.6000, 380.9500,   0.0000],
        [ 38.9500, 218.5000,  61.7500, 349.6000,   0.0000],
        [ 10.4500, 230.8500,  32.3000, 313.5000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.7690, 1.9379, 2.1515],
         [1.7707, 1.9397, 2.1533],
         [1.7860, 1.9554, 2.1689],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7474, 1.9159, 2.1296],
         [1.7669, 1.9358, 2.1494],
         [1.7672, 1.9361, 2.1497],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.6695, 1.8362, 2.0503],
         [1.7271, 1.8952, 2.1090],
         [1.7632, 1.9321, 2.1457],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
30/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.6734, 0.8354, 1.1411],
         [0.6734, 0.8354, 1.1411],
         [0.6734, 0.8354, 1.1411],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6734, 0.8354, 1.1411],
         [0.6734, 0.8354, 1.1411],
         [0.6734, 0.8354, 1.1411],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6712, 0.8331, 1.1388],
         [0.6712, 0.8331, 1.1388],
         [0.6712, 0.8331, 1.1388],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[315.4000, 199.5000, 326.8000, 351.5000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.6734, 0.8354, 1.1411],
         [0.6734, 0.8354, 1.1411],
         [0.6734, 0.8354, 1.1411],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6734, 0.8354, 1.1411],
         [0.6734, 0.8354, 1.1411],
         [0.6734, 0.8354, 1.1411],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6712, 0.8331, 1.1388],
         [0.6712, 0.8331, 1.1388],
         [0.6712, 0.8331, 1.1388],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
31/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.7484,  0.0472,  1.2626],
         [-0.7623,  0.0287,  1.2457],
         [-0.7331,  0.0103,  1.2434],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.7484,  0.0472,  1.2626],
         [-0.7626,  0.0288,  1.2457],
         [-0.7354,  0.0115,  1.2434],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.7484,  0.0472,  1.2626],
         [-0.7650,  0.0301,  1.2457],
         [-0.7634,  0.0258,  1.2434],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[ 16.1500,   2.8500,  76.9500, 418.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.7484,  0.0472,  1.2626],
         [-0.7623,  0.0287,  1.2457],
         [-0.7331,  0.0103,  1.2434],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.7484,  0.0472,  1.2626],
         [-0.7626,  0.0288,  1.2457],
         [-0.7354,  0.0115,  1.2434],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.7484,  0.0472,  1.2626],
         [-0.7650,  0.0301,  1.2457],
         [-0.7634,  0.0258,  1.2434],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
32/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.9745, -0.7967, -1.1461],
         [-1.0194, -0.8427, -1.1919],
         [-1.3858, -1.2172, -1.5691],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5212, -0.3321, -0.6821],
         [-1.0077, -0.8320, -1.1787],
         [-1.4603, -1.2934, -1.6364],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.9744, -0.7799, -1.1116],
         [-1.1733, -1.0120, -1.3301],
         [-1.0830, -0.9097, -1.2546],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[179.5500, 247.0000, 189.0500, 316.3500,   0.0000],
        [345.8000, 254.6000, 358.1500, 324.9000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.9745, -0.7967, -1.1461],
         [-1.0194, -0.8427, -1.1919],
         [-1.3858, -1.2172, -1.5691],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5212, -0.3321, -0.6821],
         [-1.0077, -0.8320, -1.1787],
         [-1.4603, -1.2934, -1.6364],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.9744, -0.7799, -1.1116],
         [-1.1733, -1.0120, -1.3301],
         [-1.0830, -0.9097, -1.2546],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
33/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.4440, 1.6057, 1.9951],
         [1.4440, 1.6057, 1.9951],
         [1.4440, 1.6057, 1.9951],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4440, 1.6057, 1.9951],
         [1.4440, 1.6057, 1.9951],
         [1.4440, 1.6057, 1.9951],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4418, 1.6034, 1.9928],
         [1.4418, 1.6034, 1.9928],
         [1.4418, 1.6034, 1.9928],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 72.2000, 213.7500,  87.4000, 299.2500,   0.0000],
        [207.1000, 244.1500, 219.4500, 299.2500,   0.0000],
        [387.6000,   3.8000, 415.1500, 119.7000,   0.0000],
        [415.1500, 130.1500, 453.1500, 473.1000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.4440, 1.6057, 1.9951],
         [1.4440, 1.6057, 1.9951],
         [1.4440, 1.6057, 1.9951],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4440, 1.6057, 1.9951],
         [1.4440, 1.6057, 1.9951],
         [1.4440, 1.6057, 1.9951],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4418, 1.6034, 1.9928],
         [1.4418, 1.6034, 1.9928],
         [1.4418, 1.6034, 1.9928],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
34/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.2115, 0.8884, 1.4727],
         [0.2331, 0.9050, 1.4910],
         [0.2818, 0.9078, 1.5094],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2150, 0.8866, 1.4727],
         [0.2638, 0.8893, 1.4910],
         [0.2820, 0.9076, 1.5094],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2458, 0.8709, 1.4727],
         [0.2638, 0.8893, 1.4910],
         [0.2841, 0.9055, 1.5094],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[362.9000,  34.2000, 380.0000, 299.2500,   0.0000],
        [382.8500,   1.9000, 413.2500, 365.7500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.2115, 0.8884, 1.4727],
         [0.2331, 0.9050, 1.4910],
         [0.2818, 0.9078, 1.5094],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2150, 0.8866, 1.4727],
         [0.2638, 0.8893, 1.4910],
         [0.2820, 0.9076, 1.5094],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2458, 0.8709, 1.4727],
         [0.2638, 0.8893, 1.4910],
         [0.2841, 0.9055, 1.5094],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
35/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.9988, 1.1155, 1.3851],
         [0.9988, 1.1155, 1.3851],
         [0.9965, 1.1132, 1.3828],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9974, 1.1142, 1.3837],
         [0.9974, 1.1142, 1.3837],
         [0.9954, 1.1120, 1.3816],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9816, 1.0980, 1.3676],
         [0.9794, 1.0957, 1.3654],
         [0.9794, 1.0957, 1.3654],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[203.3000, 144.4000, 212.8000, 372.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.9988, 1.1155, 1.3851],
         [0.9988, 1.1155, 1.3851],
         [0.9965, 1.1132, 1.3828],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9974, 1.1142, 1.3837],
         [0.9974, 1.1142, 1.3837],
         [0.9954, 1.1120, 1.3816],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9816, 1.0980, 1.3676],
         [0.9794, 1.0957, 1.3654],
         [0.9794, 1.0957, 1.3654],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
36/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.6495, 1.7808, 2.0125],
         [1.6495, 1.7808, 2.0125],
         [1.6495, 1.7808, 2.0125],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.6495, 1.7808, 2.0125],
         [1.6495, 1.7808, 2.0125],
         [1.6495, 1.7808, 2.0125],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.6518, 1.7831, 2.0148],
         [1.6518, 1.7831, 2.0148],
         [1.6518, 1.7831, 2.0148],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[373.3500, 257.4500, 385.7000, 311.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.6495, 1.7808, 2.0125],
         [1.6495, 1.7808, 2.0125],
         [1.6495, 1.7808, 2.0125],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.6495, 1.7808, 2.0125],
         [1.6495, 1.7808, 2.0125],
         [1.6495, 1.7808, 2.0125],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.6518, 1.7831, 2.0148],
         [1.6518, 1.7831, 2.0148],
         [1.6518, 1.7831, 2.0148],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
37/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.0120,  0.0997,  0.2857],
         [-0.1629, -0.0546,  0.0990],
         [-0.7545, -0.6594, -0.5062],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.1653, -1.0793, -0.8872],
         [-0.6162, -0.5180, -0.3311],
         [-0.4209, -0.3183, -0.1665],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.9506, -0.8621, -0.6642],
         [-0.8765, -0.7841, -0.5957],
         [-0.6830, -0.5863, -0.4272],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[563.3500, 268.8500, 576.6500, 344.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.0120,  0.0997,  0.2857],
         [-0.1629, -0.0546,  0.0990],
         [-0.7545, -0.6594, -0.5062],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.1653, -1.0793, -0.8872],
         [-0.6162, -0.5180, -0.3311],
         [-0.4209, -0.3183, -0.1665],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.9506, -0.8621, -0.6642],
         [-0.8765, -0.7841, -0.5957],
         [-0.6830, -0.5863, -0.4272],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
38/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.3318, 0.6613, 0.9843],
         [0.3499, 0.6798, 1.0035],
         [0.3683, 0.6986, 1.0223],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3512, 0.6811, 0.9709],
         [0.3705, 0.7008, 1.0219],
         [0.4030, 0.7341, 1.0576],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3850, 0.7156, 1.0044],
         [0.4030, 0.7341, 1.0251],
         [0.4211, 0.7525, 1.0714],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[137.7500,  93.1000, 164.3500, 412.3000,   0.0000],
        [439.8500, 262.2000, 453.1500, 323.0000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.3318, 0.6613, 0.9843],
         [0.3499, 0.6798, 1.0035],
         [0.3683, 0.6986, 1.0223],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3512, 0.6811, 0.9709],
         [0.3705, 0.7008, 1.0219],
         [0.4030, 0.7341, 1.0576],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3850, 0.7156, 1.0044],
         [0.4030, 0.7341, 1.0251],
         [0.4211, 0.7525, 1.0714],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
39/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.6667, 1.8158, 1.9603],
         [1.6667, 1.8158, 1.9603],
         [1.6667, 1.8158, 1.9603],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.6667, 1.8158, 1.9603],
         [1.6667, 1.8158, 1.9603],
         [1.6667, 1.8158, 1.9603],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.6667, 1.8158, 1.9603],
         [1.6667, 1.8158, 1.9603],
         [1.6667, 1.8158, 1.9603],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[414.2000, 270.7500, 421.8000, 323.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.6667, 1.8158, 1.9603],
         [1.6667, 1.8158, 1.9603],
         [1.6667, 1.8158, 1.9603],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.6667, 1.8158, 1.9603],
         [1.6667, 1.8158, 1.9603],
         [1.6667, 1.8158, 1.9603],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.6667, 1.8158, 1.9603],
         [1.6667, 1.8158, 1.9603],
         [1.6667, 1.8158, 1.9603],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
40/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.1592, 0.3816, 1.1241],
         [0.1596, 0.4180, 1.1438],
         [0.1586, 0.4540, 1.1773],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1416, 0.3995, 1.1254],
         [0.1529, 0.4139, 1.1396],
         [0.1146, 0.4181, 1.1382],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1227, 0.4194, 1.1383],
         [0.1007, 0.3997, 1.1175],
         [0.0586, 0.3955, 1.0971],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[551.0000,   1.9000, 576.6500, 378.1000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.1592, 0.3816, 1.1241],
         [0.1596, 0.4180, 1.1438],
         [0.1586, 0.4540, 1.1773],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1416, 0.3995, 1.1254],
         [0.1529, 0.4139, 1.1396],
         [0.1146, 0.4181, 1.1382],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1227, 0.4194, 1.1383],
         [0.1007, 0.3997, 1.1175],
         [0.0586, 0.3955, 1.0971],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
41/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.1999,  0.2052,  1.0539],
         [-0.1999,  0.2052,  1.0539],
         [-0.1999,  0.2052,  1.0539],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1999,  0.2052,  1.0539],
         [-0.1999,  0.2052,  1.0539],
         [-0.1999,  0.2052,  1.0539],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1999,  0.2052,  1.0539],
         [-0.1999,  0.2052,  1.0539],
         [-0.1999,  0.2052,  1.0539],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[ 50.3500, 112.1000,  73.1500, 347.7000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.1999,  0.2052,  1.0539],
         [-0.1999,  0.2052,  1.0539],
         [-0.1999,  0.2052,  1.0539],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1999,  0.2052,  1.0539],
         [-0.1999,  0.2052,  1.0539],
         [-0.1999,  0.2052,  1.0539],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1999,  0.2052,  1.0539],
         [-0.1999,  0.2052,  1.0539],
         [-0.1999,  0.2052,  1.0539],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
42/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.9474, 1.1506, 1.2457],
         [0.9655, 1.1690, 1.2640],
         [0.9857, 1.1897, 1.2847],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9308, 1.1335, 1.2287],
         [0.9487, 1.1518, 1.2469],
         [0.9675, 1.1711, 1.2661],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9329, 1.1335, 1.2332],
         [0.9474, 1.1483, 1.2480],
         [0.9497, 1.1506, 1.2503],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[528.2000, 223.2500, 539.6000, 356.2500,   0.0000],
        [398.0500, 275.5000, 411.3500, 297.3500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.9474, 1.1506, 1.2457],
         [0.9655, 1.1690, 1.2640],
         [0.9857, 1.1897, 1.2847],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9308, 1.1335, 1.2287],
         [0.9487, 1.1518, 1.2469],
         [0.9675, 1.1711, 1.2661],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9329, 1.1335, 1.2332],
         [0.9474, 1.1483, 1.2480],
         [0.9497, 1.1506, 1.2503],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
43/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.3413, 2.0084, 2.1346],
         [1.3413, 2.0084, 2.1346],
         [1.3413, 2.0084, 2.1346],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3413, 2.0084, 2.1346],
         [1.3413, 2.0084, 2.1346],
         [1.3413, 2.0084, 2.1346],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3413, 2.0084, 2.1346],
         [1.3413, 2.0084, 2.1346],
         [1.3413, 2.0084, 2.1346],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[271.7000, 150.1000, 288.8000, 321.1000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.3413, 2.0084, 2.1346],
         [1.3413, 2.0084, 2.1346],
         [1.3413, 2.0084, 2.1346],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3413, 2.0084, 2.1346],
         [1.3413, 2.0084, 2.1346],
         [1.3413, 2.0084, 2.1346],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3413, 2.0084, 2.1346],
         [1.3413, 2.0084, 2.1346],
         [1.3413, 2.0084, 2.1346],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
44/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.7415, 1.0275, 1.2975],
         [0.7217, 1.0073, 1.2773],
         [0.6905, 0.9754, 1.2456],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7397, 1.0257, 1.2957],
         [0.7062, 0.9915, 1.2616],
         [0.6871, 0.9720, 1.2422],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7243, 1.0100, 1.2800],
         [0.7027, 0.9879, 1.2580],
         [0.6712, 0.9557, 1.2259],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[147.2500,   2.8500, 174.8000, 306.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.7415, 1.0275, 1.2975],
         [0.7217, 1.0073, 1.2773],
         [0.6905, 0.9754, 1.2456],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7397, 1.0257, 1.2957],
         [0.7062, 0.9915, 1.2616],
         [0.6871, 0.9720, 1.2422],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7243, 1.0100, 1.2800],
         [0.7027, 0.9879, 1.2580],
         [0.6712, 0.9557, 1.2259],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
45/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.1597, 0.2402, 0.9668],
         [0.1597, 0.2402, 0.9668],
         [0.1570, 0.2375, 0.9641],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1597, 0.2402, 0.9668],
         [0.1571, 0.2375, 0.9642],
         [0.1426, 0.2227, 0.9494],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1570, 0.2375, 0.9641],
         [0.1426, 0.2227, 0.9494],
         [0.1423, 0.2224, 0.9491],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 64.6000, 276.4500,  78.8500, 300.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.1597, 0.2402, 0.9668],
         [0.1597, 0.2402, 0.9668],
         [0.1570, 0.2375, 0.9641],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1597, 0.2402, 0.9668],
         [0.1571, 0.2375, 0.9642],
         [0.1426, 0.2227, 0.9494],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1570, 0.2375, 0.9641],
         [0.1426, 0.2227, 0.9494],
         [0.1423, 0.2224, 0.9491],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
46/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.2337,  0.2056,  0.8453],
         [-0.2171,  0.2227,  0.8622],
         [-0.2148,  0.2250,  0.8645],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2337,  0.2056,  0.8453],
         [-0.2171,  0.2227,  0.8622],
         [-0.2148,  0.2250,  0.8645],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2337,  0.2056,  0.8453],
         [-0.2171,  0.2227,  0.8622],
         [-0.2148,  0.2250,  0.8645],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[419.9000, 145.3500, 434.1500, 342.0000,   0.0000],
        [221.3500, 254.6000, 232.7500, 283.1000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.2337,  0.2056,  0.8453],
         [-0.2171,  0.2227,  0.8622],
         [-0.2148,  0.2250,  0.8645],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2337,  0.2056,  0.8453],
         [-0.2171,  0.2227,  0.8622],
         [-0.2148,  0.2250,  0.8645],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2337,  0.2056,  0.8453],
         [-0.2171,  0.2227,  0.8622],
         [-0.2148,  0.2250,  0.8645],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
47/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.9975, 1.2542, 1.4709],
         [0.9786, 1.2349, 1.4517],
         [0.9457, 1.1968, 1.4159],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9646, 1.2206, 1.4374],
         [0.9647, 1.2207, 1.4375],
         [0.9685, 1.2200, 1.4391],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9735, 1.2297, 1.4465],
         [0.9721, 1.2283, 1.4447],
         [0.9875, 1.2395, 1.4539],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[160.5500, 247.9500, 171.9500, 304.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.9975, 1.2542, 1.4709],
         [0.9786, 1.2349, 1.4517],
         [0.9457, 1.1968, 1.4159],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9646, 1.2206, 1.4374],
         [0.9647, 1.2207, 1.4375],
         [0.9685, 1.2200, 1.4391],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9735, 1.2297, 1.4465],
         [0.9721, 1.2283, 1.4447],
         [0.9875, 1.2395, 1.4539],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
48/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.7248, 0.9930, 1.3502],
         [0.7248, 0.9930, 1.3502],
         [0.7248, 0.9930, 1.3502],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7248, 0.9930, 1.3502],
         [0.7248, 0.9930, 1.3502],
         [0.7248, 0.9930, 1.3502],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7271, 0.9953, 1.3525],
         [0.7271, 0.9953, 1.3525],
         [0.7271, 0.9953, 1.3525],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[300.2000,  11.4000, 342.0000, 433.2000,   0.0000],
        [ 84.5500, 217.5500,  98.8000, 273.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.7248, 0.9930, 1.3502],
         [0.7248, 0.9930, 1.3502],
         [0.7248, 0.9930, 1.3502],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7248, 0.9930, 1.3502],
         [0.7248, 0.9930, 1.3502],
         [0.7248, 0.9930, 1.3502],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7271, 0.9953, 1.3525],
         [0.7271, 0.9953, 1.3525],
         [0.7271, 0.9953, 1.3525],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
49/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.3138, 0.8529, 1.6117],
         [0.3138, 0.8529, 1.6117],
         [0.3138, 0.8529, 1.6117],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3138, 0.8529, 1.6117],
         [0.3138, 0.8529, 1.6117],
         [0.3138, 0.8529, 1.6117],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3116, 0.8506, 1.6094],
         [0.3116, 0.8506, 1.6094],
         [0.3116, 0.8506, 1.6094],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[159.6000, 266.9500, 170.0500, 324.9000,   0.0000],
        [  4.7500, 255.5500,  23.7500, 343.9000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.3138, 0.8529, 1.6117],
         [0.3138, 0.8529, 1.6117],
         [0.3138, 0.8529, 1.6117],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3138, 0.8529, 1.6117],
         [0.3138, 0.8529, 1.6117],
         [0.3138, 0.8529, 1.6117],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3116, 0.8506, 1.6094],
         [0.3116, 0.8506, 1.6094],
         [0.3116, 0.8506, 1.6094],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
50/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.4950, 1.7628, 2.2194],
         [1.3481, 1.6168, 2.0369],
         [1.1840, 1.4966, 1.8647],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.6292, 1.8974, 2.3190],
         [1.4824, 1.7526, 2.1707],
         [1.3312, 1.6172, 1.9928],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8543, 2.0964, 2.4960],
         [1.6987, 1.9819, 2.3643],
         [1.5457, 1.8276, 2.1720],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[577.6000, 145.3500, 600.4000, 403.7500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.4950, 1.7628, 2.2194],
         [1.3481, 1.6168, 2.0369],
         [1.1840, 1.4966, 1.8647],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.6292, 1.8974, 2.3190],
         [1.4824, 1.7526, 2.1707],
         [1.3312, 1.6172, 1.9928],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8543, 2.0964, 2.4960],
         [1.6987, 1.9819, 2.3643],
         [1.5457, 1.8276, 2.1720],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
51/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.3066, 1.5003, 1.9772],
         [1.3432, 1.5376, 2.0145],
         [1.3823, 1.5709, 2.0498],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2503, 1.4413, 1.9227],
         [1.3086, 1.5009, 1.9820],
         [1.3811, 1.5751, 2.0558],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1632, 1.3362, 1.8708],
         [1.2523, 1.4273, 1.9615],
         [1.3536, 1.5308, 2.0645],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[164.3500, 152.9500, 197.6000, 376.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.3066, 1.5003, 1.9772],
         [1.3432, 1.5376, 2.0145],
         [1.3823, 1.5709, 2.0498],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2503, 1.4413, 1.9227],
         [1.3086, 1.5009, 1.9820],
         [1.3811, 1.5751, 2.0558],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1632, 1.3362, 1.8708],
         [1.2523, 1.4273, 1.9615],
         [1.3536, 1.5308, 2.0645],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
52/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.2291, 1.0893, 1.4108],
         [1.2313, 1.0915, 1.4130],
         [1.2709, 1.1321, 1.4534],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8555, 0.7456, 1.0475],
         [0.8371, 0.7268, 1.0288],
         [0.8396, 0.7294, 1.0314],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6048, 0.5422, 0.7900],
         [0.5602, 0.4967, 0.7447],
         [0.5052, 0.4405, 0.6887],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[269.8000, 289.7500, 285.9500, 499.7000,   0.0000],
        [260.3000, 118.7500, 283.1000, 257.4500,   0.0000],
        [307.8000,  36.1000, 326.8000, 127.3000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.2291, 1.0893, 1.4108],
         [1.2313, 1.0915, 1.4130],
         [1.2709, 1.1321, 1.4534],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8555, 0.7456, 1.0475],
         [0.8371, 0.7268, 1.0288],
         [0.8396, 0.7294, 1.0314],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6048, 0.5422, 0.7900],
         [0.5602, 0.4967, 0.7447],
         [0.5052, 0.4405, 0.6887],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
53/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.8451, 1.0460, 1.3855],
         [0.8434, 1.0442, 1.3838],
         [0.8279, 1.0284, 1.3681],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8614, 1.0626, 1.4021],
         [0.8459, 1.0468, 1.3864],
         [0.8426, 1.0434, 1.3830],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8641, 1.0653, 1.4002],
         [0.8627, 1.0639, 1.3989],
         [0.8466, 1.0475, 1.3825],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[286.9000,  73.1500, 307.8000, 413.2500,   0.0000],
        [374.3000, 152.9500, 396.1500, 402.8000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.8451, 1.0460, 1.3855],
         [0.8434, 1.0442, 1.3838],
         [0.8279, 1.0284, 1.3681],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8614, 1.0626, 1.4021],
         [0.8459, 1.0468, 1.3864],
         [0.8426, 1.0434, 1.3830],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8641, 1.0653, 1.4002],
         [0.8627, 1.0639, 1.3989],
         [0.8466, 1.0475, 1.3825],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
54/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.7424, 0.9409, 1.2461],
         [0.7591, 0.9580, 1.2631],
         [0.7613, 0.9603, 1.2654],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7437, 0.9423, 1.2475],
         [0.7592, 0.9581, 1.2632],
         [0.7625, 0.9615, 1.2666],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7591, 0.9580, 1.2631],
         [0.7604, 0.9594, 1.2645],
         [0.7765, 0.9758, 1.2808],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 98.8000, 168.1500, 114.9500, 344.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.7424, 0.9409, 1.2461],
         [0.7591, 0.9580, 1.2631],
         [0.7613, 0.9603, 1.2654],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7437, 0.9423, 1.2475],
         [0.7592, 0.9581, 1.2632],
         [0.7625, 0.9615, 1.2666],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7591, 0.9580, 1.2631],
         [0.7604, 0.9594, 1.2645],
         [0.7765, 0.9758, 1.2808],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
55/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.0849, 1.2386, 1.6287],
         [0.9925, 1.1441, 1.5347],
         [0.8713, 1.0202, 1.4113],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1935, 1.3496, 1.7053],
         [1.1201, 1.2746, 1.6306],
         [1.0181, 1.1703, 1.5267],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2931, 1.4537, 1.8020],
         [1.2367, 1.3960, 1.7446],
         [1.1580, 1.3156, 1.6646],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[183.3500, 231.8000, 193.8000, 300.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.0849, 1.2386, 1.6287],
         [0.9925, 1.1441, 1.5347],
         [0.8713, 1.0202, 1.4113],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1935, 1.3496, 1.7053],
         [1.1201, 1.2746, 1.6306],
         [1.0181, 1.1703, 1.5267],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2931, 1.4537, 1.8020],
         [1.2367, 1.3960, 1.7446],
         [1.1580, 1.3156, 1.6646],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
56/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-1.0746, -0.9166, -1.0215],
         [-1.1103, -0.9531, -1.0238],
         [-1.1446, -0.9904, -1.0510],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.0909, -0.9319, -1.0734],
         [-1.1115, -0.9530, -1.0605],
         [-1.1621, -1.0081, -1.0765],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.0886, -0.9134, -1.0972],
         [-1.1080, -0.9344, -1.1154],
         [-1.1437, -0.9850, -1.1290],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[230.8500,  78.8500, 254.6000, 141.5500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-1.0746, -0.9166, -1.0215],
         [-1.1103, -0.9531, -1.0238],
         [-1.1446, -0.9904, -1.0510],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.0909, -0.9319, -1.0734],
         [-1.1115, -0.9530, -1.0605],
         [-1.1621, -1.0081, -1.0765],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.0886, -0.9134, -1.0972],
         [-1.1080, -0.9344, -1.1154],
         [-1.1437, -0.9850, -1.1290],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
57/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.2171,  0.1527,  1.2282],
         [-0.2171,  0.1527,  1.2282],
         [-0.2193,  0.1504,  1.2259],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2171,  0.1527,  1.2282],
         [-0.2171,  0.1527,  1.2282],
         [-0.2191,  0.1505,  1.2261],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2171,  0.1527,  1.2282],
         [-0.2171,  0.1527,  1.2282],
         [-0.2171,  0.1527,  1.2282],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[324.9000, 160.5500, 349.6000, 358.1500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.2171,  0.1527,  1.2282],
         [-0.2171,  0.1527,  1.2282],
         [-0.2193,  0.1504,  1.2259],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2171,  0.1527,  1.2282],
         [-0.2171,  0.1527,  1.2282],
         [-0.2191,  0.1505,  1.2261],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2171,  0.1527,  1.2282],
         [-0.2171,  0.1527,  1.2282],
         [-0.2171,  0.1527,  1.2282],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
58/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.0398, 0.3277, 0.8448],
         [0.0398, 0.3277, 0.8448],
         [0.0398, 0.3277, 0.8448],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0398, 0.3277, 0.8448],
         [0.0398, 0.3277, 0.8448],
         [0.0398, 0.3277, 0.8448],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0398, 0.3277, 0.8448],
         [0.0398, 0.3277, 0.8448],
         [0.0398, 0.3277, 0.8448],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[176.7000, 201.4000, 190.0000, 342.0000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.0398, 0.3277, 0.8448],
         [0.0398, 0.3277, 0.8448],
         [0.0398, 0.3277, 0.8448],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0398, 0.3277, 0.8448],
         [0.0398, 0.3277, 0.8448],
         [0.0398, 0.3277, 0.8448],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0398, 0.3277, 0.8448],
         [0.0398, 0.3277, 0.8448],
         [0.0398, 0.3277, 0.8448],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
59/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[2.0601, 2.2180, 2.3607],
         [2.0421, 2.1996, 2.3423],
         [2.0240, 2.1812, 2.3240],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0588, 2.2167, 2.3593],
         [2.0421, 2.1996, 2.3423],
         [2.0240, 2.1812, 2.3240],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0434, 2.2009, 2.3436],
         [2.0398, 2.1973, 2.3400],
         [2.0221, 2.1792, 2.3220],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[523.4500, 171.0000, 553.8500, 386.6500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[2.0601, 2.2180, 2.3607],
         [2.0421, 2.1996, 2.3423],
         [2.0240, 2.1812, 2.3240],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0588, 2.2167, 2.3593],
         [2.0421, 2.1996, 2.3423],
         [2.0240, 2.1812, 2.3240],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0434, 2.2009, 2.3436],
         [2.0398, 2.1973, 2.3400],
         [2.0221, 2.1792, 2.3220],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
60/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.5301, 1.7638, 2.0304],
         [1.5301, 1.7637, 2.0304],
         [1.5275, 1.7611, 2.0277],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5468, 1.7808, 2.0474],
         [1.5455, 1.7795, 2.0461],
         [1.5308, 1.7645, 2.0312],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5490, 1.7831, 2.0497],
         [1.5490, 1.7831, 2.0497],
         [1.5468, 1.7808, 2.0474],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[229.9000, 129.2000, 245.1000, 278.3500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.5301, 1.7638, 2.0304],
         [1.5301, 1.7637, 2.0304],
         [1.5275, 1.7611, 2.0277],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5468, 1.7808, 2.0474],
         [1.5455, 1.7795, 2.0461],
         [1.5308, 1.7645, 2.0312],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5490, 1.7831, 2.0497],
         [1.5490, 1.7831, 2.0497],
         [1.5468, 1.7808, 2.0474],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
61/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.0809,  0.3618,  0.9659],
         [-0.0972,  0.3452,  0.9493],
         [-0.0998,  0.3425,  0.9467],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0985,  0.3439,  0.9480],
         [-0.0998,  0.3426,  0.9467],
         [-0.1143,  0.3277,  0.9319],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1166,  0.3254,  0.9296],
         [-0.1164,  0.3256,  0.9298],
         [-0.1143,  0.3277,  0.9319],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[  0.9500,  71.2500,  13.3000, 332.5000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.0809,  0.3618,  0.9659],
         [-0.0972,  0.3452,  0.9493],
         [-0.0998,  0.3425,  0.9467],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0985,  0.3439,  0.9480],
         [-0.0998,  0.3426,  0.9467],
         [-0.1143,  0.3277,  0.9319],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1166,  0.3254,  0.9296],
         [-0.1164,  0.3256,  0.9298],
         [-0.1143,  0.3277,  0.9319],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
62/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.0060, 0.4157, 0.9150],
         [0.0060, 0.4157, 0.9150],
         [0.0060, 0.4134, 0.9196],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0240, 0.4342, 0.9333],
         [0.0240, 0.4342, 0.9333],
         [0.0240, 0.4320, 0.9375],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0443, 0.4549, 0.9540],
         [0.0443, 0.4549, 0.9540],
         [0.0443, 0.4549, 0.9540],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[235.6000, 157.7000, 267.9000, 353.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.0060, 0.4157, 0.9150],
         [0.0060, 0.4157, 0.9150],
         [0.0060, 0.4134, 0.9196],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0240, 0.4342, 0.9333],
         [0.0240, 0.4342, 0.9333],
         [0.0240, 0.4320, 0.9375],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0443, 0.4549, 0.9540],
         [0.0443, 0.4549, 0.9540],
         [0.0443, 0.4549, 0.9540],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
63/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.8618, 1.0630, 1.3677],
         [0.8632, 1.0644, 1.3690],
         [0.8812, 1.0828, 1.3874],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8618, 1.0630, 1.3677],
         [0.8632, 1.0644, 1.3690],
         [0.8812, 1.0828, 1.3874],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8641, 1.0653, 1.3700],
         [0.8652, 1.0665, 1.3712],
         [0.8812, 1.0828, 1.3874],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 87.4000,   1.9000, 135.8500, 455.0500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.8618, 1.0630, 1.3677],
         [0.8632, 1.0644, 1.3690],
         [0.8812, 1.0828, 1.3874],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8618, 1.0630, 1.3677],
         [0.8632, 1.0644, 1.3690],
         [0.8812, 1.0828, 1.3874],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8641, 1.0653, 1.3700],
         [0.8652, 1.0665, 1.3712],
         [0.8812, 1.0828, 1.3874],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
64/730
After normalization, Min: -2.0665296676312472, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[2.0367, 2.2112, 2.6336],
         [1.9868, 2.1606, 2.5797],
         [1.9774, 2.1510, 2.5343],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8097, 1.9624, 2.4218],
         [1.8194, 1.9881, 2.4134],
         [1.8861, 2.0565, 2.4769],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4284, 1.5722, 2.0701],
         [1.5093, 1.6549, 2.1226],
         [1.6489, 1.7997, 2.2579],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[576.6500, 221.3500, 588.0500, 276.4500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[2.0367, 2.2112, 2.6336],
         [1.9868, 2.1606, 2.5797],
         [1.9774, 2.1510, 2.5343],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8097, 1.9624, 2.4218],
         [1.8194, 1.9881, 2.4134],
         [1.8861, 2.0565, 2.4769],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4284, 1.5722, 2.0701],
         [1.5093, 1.6549, 2.1226],
         [1.6489, 1.7997, 2.2579],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
65/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.0912, 0.5903, 1.2805],
         [0.0912, 0.5903, 1.2805],
         [0.0912, 0.5903, 1.2805],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0912, 0.5903, 1.2805],
         [0.0912, 0.5903, 1.2805],
         [0.0912, 0.5903, 1.2805],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0912, 0.5903, 1.2805],
         [0.0912, 0.5903, 1.2805],
         [0.0912, 0.5903, 1.2805],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[497.8000,   0.9500, 517.7500, 420.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.0912, 0.5903, 1.2805],
         [0.0912, 0.5903, 1.2805],
         [0.0912, 0.5903, 1.2805],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0912, 0.5903, 1.2805],
         [0.0912, 0.5903, 1.2805],
         [0.0912, 0.5903, 1.2805],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0912, 0.5903, 1.2805],
         [0.0912, 0.5903, 1.2805],
         [0.0912, 0.5903, 1.2805],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
66/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.6153, 1.8333, 2.1345],
         [1.6509, 1.8698, 2.1708],
         [1.6874, 1.9070, 2.2079],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5748, 1.7919, 2.0933],
         [1.5968, 1.8144, 2.1157],
         [1.6488, 1.8676, 2.1687],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4851, 1.7002, 2.0020],
         [1.5225, 1.7384, 2.0401],
         [1.5768, 1.7940, 2.0954],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[551.9500, 263.1500, 564.3000, 334.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.6153, 1.8333, 2.1345],
         [1.6509, 1.8698, 2.1708],
         [1.6874, 1.9070, 2.2079],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5748, 1.7919, 2.0933],
         [1.5968, 1.8144, 2.1157],
         [1.6488, 1.8676, 2.1687],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4851, 1.7002, 2.0020],
         [1.5225, 1.7384, 2.0401],
         [1.5768, 1.7940, 2.0954],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
67/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.9299, 1.4302, 2.0644],
         [0.9317, 1.4321, 2.0662],
         [0.9497, 1.4505, 2.0846],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9123, 1.4150, 2.0492],
         [0.9315, 1.4319, 2.0674],
         [0.9485, 1.4493, 2.0834],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8968, 1.4307, 2.0652],
         [0.9260, 1.4309, 2.0790],
         [0.9326, 1.4370, 2.0714],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[256.5000, 112.1000, 279.3000, 459.8000,   0.0000],
        [235.6000,  16.1500, 254.6000, 129.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.9299, 1.4302, 2.0644],
         [0.9317, 1.4321, 2.0662],
         [0.9497, 1.4505, 2.0846],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9123, 1.4150, 2.0492],
         [0.9315, 1.4319, 2.0674],
         [0.9485, 1.4493, 2.0834],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8968, 1.4307, 2.0652],
         [0.9260, 1.4309, 2.0790],
         [0.9326, 1.4370, 2.0714],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
68/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.5810, 1.7108, 2.0125],
         [1.5810, 1.7108, 2.0125],
         [1.5788, 1.7085, 2.0103],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5810, 1.7108, 2.0125],
         [1.5810, 1.7108, 2.0125],
         [1.5790, 1.7087, 2.0104],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5833, 1.7131, 2.0148],
         [1.5831, 1.7129, 2.0147],
         [1.5810, 1.7108, 2.0125],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[362.9000, 281.2000, 370.5000, 318.2500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.5810, 1.7108, 2.0125],
         [1.5810, 1.7108, 2.0125],
         [1.5788, 1.7085, 2.0103],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5810, 1.7108, 2.0125],
         [1.5810, 1.7108, 2.0125],
         [1.5790, 1.7087, 2.0104],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5833, 1.7131, 2.0148],
         [1.5831, 1.7129, 2.0147],
         [1.5810, 1.7108, 2.0125],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
69/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.0967,  0.5908,  1.8039],
         [-0.0801,  0.6078,  1.8208],
         [-0.0756,  0.6101,  1.8231],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0954,  0.5921,  1.8052],
         [-0.0800,  0.6080,  1.8209],
         [-0.0744,  0.6113,  1.8243],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0801,  0.6078,  1.8208],
         [-0.0787,  0.6092,  1.8222],
         [-0.0604,  0.6257,  1.8386],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[107.3500, 228.0000, 118.7500, 323.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.0967,  0.5908,  1.8039],
         [-0.0801,  0.6078,  1.8208],
         [-0.0756,  0.6101,  1.8231],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0954,  0.5921,  1.8052],
         [-0.0800,  0.6080,  1.8209],
         [-0.0744,  0.6113,  1.8243],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0801,  0.6078,  1.8208],
         [-0.0787,  0.6092,  1.8222],
         [-0.0604,  0.6257,  1.8386],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
70/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.0502, 1.2731, 1.5420],
         [1.0502, 1.2731, 1.5420],
         [1.0502, 1.2731, 1.5420],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0502, 1.2731, 1.5420],
         [1.0502, 1.2731, 1.5420],
         [1.0502, 1.2731, 1.5420],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0502, 1.2731, 1.5420],
         [1.0502, 1.2731, 1.5420],
         [1.0502, 1.2731, 1.5420],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[342.0000, 228.9500, 352.4500, 318.2500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.0502, 1.2731, 1.5420],
         [1.0502, 1.2731, 1.5420],
         [1.0502, 1.2731, 1.5420],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0502, 1.2731, 1.5420],
         [1.0502, 1.2731, 1.5420],
         [1.0502, 1.2731, 1.5420],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0502, 1.2731, 1.5420],
         [1.0502, 1.2731, 1.5420],
         [1.0502, 1.2731, 1.5420],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
71/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[2.0092, 2.1485, 2.4483],
         [2.0092, 2.1485, 2.4483],
         [2.0069, 2.1462, 2.4460],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0092, 2.1485, 2.4483],
         [2.0092, 2.1485, 2.4483],
         [2.0069, 2.1462, 2.4460],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0092, 2.1485, 2.4483],
         [2.0092, 2.1485, 2.4483],
         [2.0069, 2.1462, 2.4460],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[551.0000, 278.3500, 560.5000, 316.3500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[2.0092, 2.1485, 2.4483],
         [2.0092, 2.1485, 2.4483],
         [2.0069, 2.1462, 2.4460],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0092, 2.1485, 2.4483],
         [2.0092, 2.1485, 2.4483],
         [2.0069, 2.1462, 2.4460],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0092, 2.1485, 2.4483],
         [2.0092, 2.1485, 2.4483],
         [2.0069, 2.1462, 2.4460],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
72/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.0089,  0.2614,  0.6737],
         [-0.0239,  0.2487,  0.6625],
         [ 0.0192,  0.3241,  0.7541],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.1070,  0.4139,  0.8113],
         [ 0.0544,  0.3602,  0.7604],
         [ 0.0256,  0.3307,  0.7606],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.1048,  0.4116,  0.8412],
         [ 0.0575,  0.3633,  0.7930],
         [ 0.0671,  0.3729,  0.8035],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[504.4500, 217.5500, 519.6500, 275.5000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.0089,  0.2614,  0.6737],
         [-0.0239,  0.2487,  0.6625],
         [ 0.0192,  0.3241,  0.7541],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.1070,  0.4139,  0.8113],
         [ 0.0544,  0.3602,  0.7604],
         [ 0.0256,  0.3307,  0.7606],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.1048,  0.4116,  0.8412],
         [ 0.0575,  0.3633,  0.7930],
         [ 0.0671,  0.3729,  0.8035],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
73/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.3070, 1.8158, 2.1868],
         [1.3084, 1.8144, 2.1868],
         [1.3219, 1.7960, 2.1845],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3070, 1.8158, 2.1868],
         [1.3084, 1.8144, 2.1868],
         [1.3221, 1.7962, 2.1847],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3093, 1.8181, 2.1891],
         [1.3105, 1.8166, 2.1890],
         [1.3242, 1.7983, 2.1868],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[427.5000, 179.5500, 451.2500, 297.3500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.3070, 1.8158, 2.1868],
         [1.3084, 1.8144, 2.1868],
         [1.3219, 1.7960, 2.1845],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3070, 1.8158, 2.1868],
         [1.3084, 1.8144, 2.1868],
         [1.3221, 1.7962, 2.1847],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3093, 1.8181, 2.1891],
         [1.3105, 1.8166, 2.1890],
         [1.3242, 1.7983, 2.1868],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
74/730
After normalization, Min: -2.0665296676312472, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.8622, 1.2358, 1.6103],
         [0.8327, 1.1558, 1.5472],
         [0.6976, 1.0177, 1.4097],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9000, 1.2246, 1.6157],
         [0.8409, 1.1642, 1.5556],
         [0.7948, 1.1170, 1.5086],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9546, 1.2805, 1.6713],
         [0.8383, 1.1615, 1.5529],
         [0.8360, 1.1592, 1.5505],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[533.9000, 214.7000, 566.2000, 598.5000,   0.0000],
        [534.8500,   3.8000, 604.2000, 210.9000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.8622, 1.2358, 1.6103],
         [0.8327, 1.1558, 1.5472],
         [0.6976, 1.0177, 1.4097],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9000, 1.2246, 1.6157],
         [0.8409, 1.1642, 1.5556],
         [0.7948, 1.1170, 1.5086],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9546, 1.2805, 1.6713],
         [0.8383, 1.1615, 1.5529],
         [0.8360, 1.1592, 1.5505],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
75/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.1310,  0.3107,  1.3681],
         [-0.1327,  0.3089,  1.3663],
         [-0.1504,  0.2909,  1.3484],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1148,  0.3273,  1.3846],
         [-0.1314,  0.3102,  1.3677],
         [-0.1337,  0.3079,  1.3654],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1147,  0.3273,  1.3847],
         [-0.1294,  0.3123,  1.3698],
         [-0.1334,  0.3082,  1.3657],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[419.9000,   0.9500, 458.8500, 503.5000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.1310,  0.3107,  1.3681],
         [-0.1327,  0.3089,  1.3663],
         [-0.1504,  0.2909,  1.3484],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1148,  0.3273,  1.3846],
         [-0.1314,  0.3102,  1.3677],
         [-0.1337,  0.3079,  1.3654],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1147,  0.3273,  1.3847],
         [-0.1294,  0.3123,  1.3698],
         [-0.1334,  0.3082,  1.3657],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
76/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.5297, 1.6758, 1.9951],
         [1.5297, 1.6758, 1.9951],
         [1.5297, 1.6758, 1.9951],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5297, 1.6758, 1.9951],
         [1.5297, 1.6758, 1.9951],
         [1.5297, 1.6758, 1.9951],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5297, 1.6758, 1.9951],
         [1.5297, 1.6758, 1.9951],
         [1.5297, 1.6758, 1.9951],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 68.4000, 198.5500,  78.8500, 344.8500,   0.0000],
        [311.6000, 217.5500, 325.8500, 301.1500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.5297, 1.6758, 1.9951],
         [1.5297, 1.6758, 1.9951],
         [1.5297, 1.6758, 1.9951],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5297, 1.6758, 1.9951],
         [1.5297, 1.6758, 1.9951],
         [1.5297, 1.6758, 1.9951],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5297, 1.6758, 1.9951],
         [1.5297, 1.6758, 1.9951],
         [1.5297, 1.6758, 1.9951],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
77/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.8893, 1.6583, 2.0474],
         [1.8893, 1.6583, 2.0474],
         [1.8893, 1.6583, 2.0474],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8879, 1.6596, 2.0474],
         [1.8879, 1.6596, 2.0474],
         [1.8879, 1.6596, 2.0474],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8699, 1.6735, 2.0451],
         [1.8699, 1.6735, 2.0451],
         [1.8699, 1.6735, 2.0451],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[357.2000, 270.7500, 372.4000, 296.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.8893, 1.6583, 2.0474],
         [1.8893, 1.6583, 2.0474],
         [1.8893, 1.6583, 2.0474],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8879, 1.6596, 2.0474],
         [1.8879, 1.6596, 2.0474],
         [1.8879, 1.6596, 2.0474],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8699, 1.6735, 2.0451],
         [1.8699, 1.6735, 2.0451],
         [1.8699, 1.6735, 2.0451],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
78/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.1426, 0.6429, 1.2282],
         [0.1426, 0.6429, 1.2282],
         [0.1426, 0.6429, 1.2282],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1426, 0.6429, 1.2282],
         [0.1426, 0.6429, 1.2282],
         [0.1426, 0.6429, 1.2282],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1426, 0.6429, 1.2282],
         [0.1426, 0.6429, 1.2282],
         [0.1426, 0.6429, 1.2282],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[177.6500, 246.0500, 186.2000, 304.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.1426, 0.6429, 1.2282],
         [0.1426, 0.6429, 1.2282],
         [0.1426, 0.6429, 1.2282],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1426, 0.6429, 1.2282],
         [0.1426, 0.6429, 1.2282],
         [0.1426, 0.6429, 1.2282],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1426, 0.6429, 1.2282],
         [0.1426, 0.6429, 1.2282],
         [0.1426, 0.6429, 1.2282],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
79/730
After normalization, Min: -2.0322801579424388, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.2453, 0.4503, 0.6879],
         [0.2453, 0.4503, 0.6879],
         [0.2453, 0.4503, 0.6879],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2453, 0.4503, 0.6879],
         [0.2453, 0.4503, 0.6879],
         [0.2453, 0.4503, 0.6879],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2453, 0.4503, 0.6879],
         [0.2453, 0.4503, 0.6879],
         [0.2453, 0.4503, 0.6879],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[391.4000,  95.9500, 410.4000, 373.3500,   0.0000],
        [141.5500, 210.9000, 153.9000, 318.2500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.2453, 0.4503, 0.6879],
         [0.2453, 0.4503, 0.6879],
         [0.2453, 0.4503, 0.6879],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2453, 0.4503, 0.6879],
         [0.2453, 0.4503, 0.6879],
         [0.2453, 0.4503, 0.6879],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2453, 0.4503, 0.6879],
         [0.2453, 0.4503, 0.6879],
         [0.2453, 0.4503, 0.6879],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
80/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.9303, 1.1506, 1.3851],
         [0.9303, 1.1506, 1.3851],
         [0.9303, 1.1506, 1.3851],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9303, 1.1506, 1.3851],
         [0.9303, 1.1506, 1.3851],
         [0.9303, 1.1506, 1.3851],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9280, 1.1483, 1.3828],
         [0.9280, 1.1483, 1.3828],
         [0.9280, 1.1483, 1.3828],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[229.9000, 235.6000, 243.2000, 328.7000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.9303, 1.1506, 1.3851],
         [0.9303, 1.1506, 1.3851],
         [0.9303, 1.1506, 1.3851],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9303, 1.1506, 1.3851],
         [0.9303, 1.1506, 1.3851],
         [0.9303, 1.1506, 1.3851],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9280, 1.1483, 1.3828],
         [0.9280, 1.1483, 1.3828],
         [0.9280, 1.1483, 1.3828],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
81/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[ 0.1408, -0.1293,  0.4055],
         [ 0.1035, -0.1632,  0.3317],
         [ 0.0354, -0.1822,  0.2211],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.1076, -0.1632,  0.3385],
         [ 0.1300, -0.1348,  0.3562],
         [ 0.1344, -0.0807,  0.3222],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0981, -0.1724,  0.3281],
         [ 0.1935, -0.0509,  0.3933],
         [ 0.2862,  0.0788,  0.4809],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[405.6500,   1.9000, 441.7500, 499.7000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[ 0.1408, -0.1293,  0.4055],
         [ 0.1035, -0.1632,  0.3317],
         [ 0.0354, -0.1822,  0.2211],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.1076, -0.1632,  0.3385],
         [ 0.1300, -0.1348,  0.3562],
         [ 0.1344, -0.0807,  0.3222],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0981, -0.1724,  0.3281],
         [ 0.1935, -0.0509,  0.3933],
         [ 0.2862,  0.0788,  0.4809],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
82/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[2.1975, 2.3761, 2.6226],
         [2.1975, 2.3760, 2.6225],
         [2.1949, 2.3733, 2.6199],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.1975, 2.3760, 2.6225],
         [2.1949, 2.3734, 2.6199],
         [2.1804, 2.3585, 2.6051],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.1949, 2.3733, 2.6199],
         [2.1804, 2.3585, 2.6051],
         [2.1801, 2.3582, 2.6048],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[548.1500, 146.3000, 569.0500, 257.4500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[2.1975, 2.3761, 2.6226],
         [2.1975, 2.3760, 2.6225],
         [2.1949, 2.3733, 2.6199],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.1975, 2.3760, 2.6225],
         [2.1949, 2.3734, 2.6199],
         [2.1804, 2.3585, 2.6051],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.1949, 2.3733, 2.6199],
         [2.1804, 2.3585, 2.6051],
         [2.1801, 2.3582, 2.6048],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
83/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-1.4843, -1.4230, -1.5604],
         [-1.4983, -1.4414, -1.5774],
         [-1.4622, -1.4575, -1.5751],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.4675, -1.4073, -1.5421],
         [-1.4791, -1.4256, -1.5591],
         [-1.4455, -1.4405, -1.5568],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.4667, -1.4234, -1.5260],
         [-1.4476, -1.4384, -1.5407],
         [-1.4410, -1.4405, -1.5384],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[380.9500, 266.0000, 390.4500, 309.7000,   0.0000],
        [448.4000, 274.5500, 456.9500, 303.0500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-1.4843, -1.4230, -1.5604],
         [-1.4983, -1.4414, -1.5774],
         [-1.4622, -1.4575, -1.5751],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.4675, -1.4073, -1.5421],
         [-1.4791, -1.4256, -1.5591],
         [-1.4455, -1.4405, -1.5568],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.4667, -1.4234, -1.5260],
         [-1.4476, -1.4384, -1.5407],
         [-1.4410, -1.4405, -1.5384],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
84/730
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.1079, 0.4673, 0.9663],
         [0.1079, 0.4673, 0.9663],
         [0.1079, 0.4673, 0.9663],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0912, 0.4503, 0.9494],
         [0.0912, 0.4503, 0.9494],
         [0.0912, 0.4503, 0.9494],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0889, 0.4480, 0.9471],
         [0.0889, 0.4480, 0.9471],
         [0.0889, 0.4480, 0.9471],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[267.9000, 268.8500, 281.2000, 317.3000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.1079, 0.4673, 0.9663],
         [0.1079, 0.4673, 0.9663],
         [0.1079, 0.4673, 0.9663],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0912, 0.4503, 0.9494],
         [0.0912, 0.4503, 0.9494],
         [0.0912, 0.4503, 0.9494],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0889, 0.4480, 0.9471],
         [0.0889, 0.4480, 0.9471],
         [0.0889, 0.4480, 0.9471],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
85/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.1083, 0.4153, 1.8383],
         [0.1083, 0.4153, 1.8383],
         [0.1106, 0.4176, 1.8406],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1083, 0.4153, 1.8383],
         [0.1083, 0.4153, 1.8383],
         [0.1106, 0.4176, 1.8406],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1083, 0.4153, 1.8383],
         [0.1083, 0.4153, 1.8383],
         [0.1106, 0.4176, 1.8406],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[492.1000, 237.5000, 501.6000, 338.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.1083, 0.4153, 1.8383],
         [0.1083, 0.4153, 1.8383],
         [0.1106, 0.4176, 1.8406],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1083, 0.4153, 1.8383],
         [0.1083, 0.4153, 1.8383],
         [0.1106, 0.4176, 1.8406],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1083, 0.4153, 1.8383],
         [0.1083, 0.4153, 1.8383],
         [0.1106, 0.4176, 1.8406],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
86/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.3422, 1.4666, 1.7694],
         [1.3584, 1.4832, 1.7860],
         [1.3584, 1.4832, 1.7860],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3598, 1.4846, 1.7873],
         [1.3598, 1.4846, 1.7873],
         [1.3596, 1.4844, 1.7872],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3777, 1.5029, 1.8056],
         [1.3755, 1.5007, 1.8034],
         [1.3733, 1.4984, 1.8011],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[191.9000, 263.1500, 201.4000, 323.9500,   0.0000],
        [ 47.5000, 271.7000,  57.9500, 301.1500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.3422, 1.4666, 1.7694],
         [1.3584, 1.4832, 1.7860],
         [1.3584, 1.4832, 1.7860],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3598, 1.4846, 1.7873],
         [1.3598, 1.4846, 1.7873],
         [1.3596, 1.4844, 1.7872],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3777, 1.5029, 1.8056],
         [1.3755, 1.5007, 1.8034],
         [1.3733, 1.4984, 1.8011],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
87/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.2684,  0.2927,  1.0539],
         [-0.2684,  0.2927,  1.0539],
         [-0.2684,  0.2927,  1.0539],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2684,  0.2927,  1.0526],
         [-0.2684,  0.2927,  1.0526],
         [-0.2684,  0.2927,  1.0526],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2662,  0.2950,  1.0388],
         [-0.2662,  0.2950,  1.0388],
         [-0.2662,  0.2950,  1.0388],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[  1.9000, 137.7500,  19.9500, 409.4500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.2684,  0.2927,  1.0539],
         [-0.2684,  0.2927,  1.0539],
         [-0.2684,  0.2927,  1.0539],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2684,  0.2927,  1.0526],
         [-0.2684,  0.2927,  1.0526],
         [-0.2684,  0.2927,  1.0526],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2662,  0.2950,  1.0388],
         [-0.2662,  0.2950,  1.0388],
         [-0.2662,  0.2950,  1.0388],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
88/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.6488, 0.7738, 0.4729],
         [0.5595, 0.6309, 0.4229],
         [0.3542, 0.4025, 0.3079],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4594, 0.5798, 0.3169],
         [0.5005, 0.6047, 0.4023],
         [0.1920, 0.2646, 0.1800],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4499, 0.5590, 0.3471],
         [0.4634, 0.5691, 0.4335],
         [0.0604, 0.1386, 0.1178],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 91.2000,   1.9000, 130.1500, 494.9500,   0.0000],
        [488.3000, 259.3500, 497.8000, 323.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.6488, 0.7738, 0.4729],
         [0.5595, 0.6309, 0.4229],
         [0.3542, 0.4025, 0.3079],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4594, 0.5798, 0.3169],
         [0.5005, 0.6047, 0.4023],
         [0.1920, 0.2646, 0.1800],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4499, 0.5590, 0.3471],
         [0.4634, 0.5691, 0.4335],
         [0.0604, 0.1386, 0.1178],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
89/730
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
Checking data:  {'img': tensor([[[0.0227, 0.1352, 1.0539],
         [0.0227, 0.1352, 1.0539],
         [0.0249, 0.1375, 1.0562],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0227, 0.1352, 1.0539],
         [0.0227, 0.1352, 1.0539],
         [0.0249, 0.1375, 1.0562],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0227, 0.1352, 1.0539],
         [0.0227, 0.1352, 1.0539],
         [0.0249, 0.1375, 1.0562],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[334.4000, 275.5000, 342.9500, 320.1500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.0227, 0.1352, 1.0539],
         [0.0227, 0.1352, 1.0539],
         [0.0249, 0.1375, 1.0562],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0227, 0.1352, 1.0539],
         [0.0227, 0.1352, 1.0539],
         [0.0249, 0.1375, 1.0562],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0227, 0.1352, 1.0539],
         [0.0227, 0.1352, 1.0539],
         [0.0249, 0.1375, 1.0562],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
90/730
After normalization, Min: -1.946656385753873, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.0801,  0.2927,  1.1576],
         [-0.0801,  0.2927,  1.1237],
         [-0.0801,  0.2950,  1.1214],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0801,  0.2927,  1.1576],
         [-0.0801,  0.2927,  1.1237],
         [-0.0801,  0.2950,  1.1214],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0823,  0.2904,  1.1553],
         [-0.0823,  0.2904,  1.1214],
         [-0.0823,  0.2927,  1.1191],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[269.8000, 256.5000, 278.3500, 295.4500,   0.0000],
        [540.5500, 254.6000, 550.0500, 285.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.0801,  0.2927,  1.1576],
         [-0.0801,  0.2927,  1.1237],
         [-0.0801,  0.2950,  1.1214],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0801,  0.2927,  1.1576],
         [-0.0801,  0.2927,  1.1237],
         [-0.0801,  0.2950,  1.1214],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0823,  0.2904,  1.1553],
         [-0.0823,  0.2904,  1.1214],
         [-0.0823,  0.2927,  1.1191],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
91/730
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.8037, 2.1660, 2.4134],
         [1.8037, 2.1660, 2.4134],
         [1.8037, 2.1660, 2.4134],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8023, 2.1646, 2.4120],
         [1.8023, 2.1646, 2.4120],
         [1.8023, 2.1646, 2.4120],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7798, 2.1485, 2.3937],
         [1.7798, 2.1485, 2.3937],
         [1.7798, 2.1485, 2.3937],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[539.6000, 250.8000, 547.2000, 319.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.8037, 2.1660, 2.4134],
         [1.8037, 2.1660, 2.4134],
         [1.8037, 2.1660, 2.4134],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8023, 2.1646, 2.4120],
         [1.8023, 2.1646, 2.4120],
         [1.8023, 2.1646, 2.4120],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7798, 2.1485, 2.3937],
         [1.7798, 2.1485, 2.3937],
         [1.7798, 2.1485, 2.3937],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
92/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.9988, 1.1681, 1.4548],
         [0.9974, 1.1667, 1.4534],
         [0.9795, 1.1483, 1.4352],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0002, 1.1694, 1.4562],
         [0.9988, 1.1681, 1.4548],
         [0.9829, 1.1518, 1.4386],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0181, 1.1878, 1.4745],
         [1.0148, 1.1844, 1.4710],
         [0.9988, 1.1681, 1.4548],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[139.6500,  42.7500, 154.8500, 432.2500,   0.0000],
        [456.9500, 226.1000, 475.0000, 358.1500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.9988, 1.1681, 1.4548],
         [0.9974, 1.1667, 1.4534],
         [0.9795, 1.1483, 1.4352],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0002, 1.1694, 1.4562],
         [0.9988, 1.1681, 1.4548],
         [0.9829, 1.1518, 1.4386],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0181, 1.1878, 1.4745],
         [1.0148, 1.1844, 1.4710],
         [0.9988, 1.1681, 1.4548],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
93/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.2728, 1.5007, 1.7337],
         [1.2728, 1.5007, 1.7337],
         [1.2705, 1.4984, 1.7314],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2728, 1.5007, 1.7337],
         [1.2728, 1.5007, 1.7337],
         [1.2705, 1.4984, 1.7314],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2728, 1.5007, 1.7337],
         [1.2728, 1.5007, 1.7337],
         [1.2705, 1.4984, 1.7314],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[383.8000,   1.9000, 415.1500, 591.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.2728, 1.5007, 1.7337],
         [1.2728, 1.5007, 1.7337],
         [1.2705, 1.4984, 1.7314],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2728, 1.5007, 1.7337],
         [1.2728, 1.5007, 1.7337],
         [1.2705, 1.4984, 1.7314],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2728, 1.5007, 1.7337],
         [1.2728, 1.5007, 1.7337],
         [1.2705, 1.4984, 1.7314],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
94/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.6252, 0.9612, 1.2140],
         [0.5872, 0.9224, 1.1753],
         [0.5604, 0.8949, 1.1480],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7993, 1.1392, 1.3912],
         [0.7435, 1.0822, 1.3344],
         [0.6361, 0.9724, 1.2251],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0286, 1.3736, 1.6246],
         [1.0382, 1.3834, 1.6343],
         [0.9118, 1.2542, 1.5057],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[473.1000, 221.3500, 482.6000, 351.5000,   0.0000],
        [331.5500, 233.7000, 344.8500, 328.7000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.6252, 0.9612, 1.2140],
         [0.5872, 0.9224, 1.1753],
         [0.5604, 0.8949, 1.1480],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7993, 1.1392, 1.3912],
         [0.7435, 1.0822, 1.3344],
         [0.6361, 0.9724, 1.2251],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0286, 1.3736, 1.6246],
         [1.0382, 1.3834, 1.6343],
         [0.9118, 1.2542, 1.5057],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
95/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[ 0.0222,  0.4848,  1.4369],
         [ 0.0042,  0.4664,  1.4186],
         [-0.0093,  0.4526,  1.4048],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0236,  0.4862,  1.4383],
         [ 0.0042,  0.4664,  1.4186],
         [-0.0093,  0.4526,  1.4048],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0390,  0.5019,  1.4540],
         [ 0.0065,  0.4687,  1.4209],
         [-0.0071,  0.4549,  1.4071],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[ 99.7500,   7.6000, 116.8500, 394.2500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[ 0.0222,  0.4848,  1.4369],
         [ 0.0042,  0.4664,  1.4186],
         [-0.0093,  0.4526,  1.4048],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0236,  0.4862,  1.4383],
         [ 0.0042,  0.4664,  1.4186],
         [-0.0093,  0.4526,  1.4048],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0390,  0.5019,  1.4540],
         [ 0.0065,  0.4687,  1.4209],
         [-0.0071,  0.4549,  1.4071],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
96/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[ 0.0916,  0.3282, -0.2868],
         [ 0.1722,  0.4064, -0.2076],
         [ 0.3714,  0.5594, -0.0446],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0487,  0.2829, -0.2911],
         [ 0.0869,  0.3192, -0.2603],
         [ 0.2296,  0.4144, -0.1863],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.1797,  0.3988, -0.0875],
         [ 0.1366,  0.3679, -0.1709],
         [ 0.1630,  0.3463, -0.2179],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[ 39.9000, 130.1500,  76.0000, 361.0000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[ 0.0916,  0.3282, -0.2868],
         [ 0.1722,  0.4064, -0.2076],
         [ 0.3714,  0.5594, -0.0446],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0487,  0.2829, -0.2911],
         [ 0.0869,  0.3192, -0.2603],
         [ 0.2296,  0.4144, -0.1863],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.1797,  0.3988, -0.0875],
         [ 0.1366,  0.3679, -0.1709],
         [ 0.1630,  0.3463, -0.2179],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
97/730
After normalization, Min: -2.0665296676312472, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.0123, 0.1941, 0.5040],
         [0.2195, 0.3695, 0.6521],
         [0.5200, 0.6348, 0.8120],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0812, 0.2876, 0.6664],
         [0.2648, 0.4540, 0.7639],
         [0.5033, 0.6391, 0.8860],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1049, 0.3832, 0.8109],
         [0.2393, 0.4961, 0.8950],
         [0.3541, 0.5460, 0.8529],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[223.2500, 119.7000, 236.5500, 359.1000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.0123, 0.1941, 0.5040],
         [0.2195, 0.3695, 0.6521],
         [0.5200, 0.6348, 0.8120],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0812, 0.2876, 0.6664],
         [0.2648, 0.4540, 0.7639],
         [0.5033, 0.6391, 0.8860],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1049, 0.3832, 0.8109],
         [0.2393, 0.4961, 0.8950],
         [0.3541, 0.5460, 0.8529],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
98/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.6049, 0.8179, 1.0539],
         [0.6063, 0.8193, 1.0553],
         [0.6243, 0.8377, 1.0737],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6049, 0.8179, 1.0539],
         [0.6063, 0.8193, 1.0553],
         [0.6243, 0.8377, 1.0737],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6049, 0.8179, 1.0539],
         [0.6063, 0.8193, 1.0553],
         [0.6243, 0.8377, 1.0737],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[229.9000, 173.8500, 246.0500, 356.2500,   0.0000],
        [143.4500, 264.1000, 155.8000, 305.9000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.6049, 0.8179, 1.0539],
         [0.6063, 0.8193, 1.0553],
         [0.6243, 0.8377, 1.0737],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6049, 0.8179, 1.0539],
         [0.6063, 0.8193, 1.0553],
         [0.6243, 0.8377, 1.0737],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6049, 0.8179, 1.0539],
         [0.6063, 0.8193, 1.0553],
         [0.6243, 0.8377, 1.0737],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
99/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.9637, 1.1321, 1.4191],
         [0.9474, 1.1155, 1.4025],
         [0.9448, 1.1128, 1.3998],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9461, 1.1142, 1.4012],
         [0.9448, 1.1129, 1.3999],
         [0.9301, 1.0979, 1.3849],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9280, 1.0957, 1.3828],
         [0.9280, 1.0957, 1.3828],
         [0.9258, 1.0934, 1.3805],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 97.8500, 207.1000, 117.8000, 355.3000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.9637, 1.1321, 1.4191],
         [0.9474, 1.1155, 1.4025],
         [0.9448, 1.1128, 1.3998],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9461, 1.1142, 1.4012],
         [0.9448, 1.1129, 1.3999],
         [0.9301, 1.0979, 1.3849],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9280, 1.0957, 1.3828],
         [0.9280, 1.0957, 1.3828],
         [0.9258, 1.0934, 1.3805],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
100/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-1.2783, -1.1074, -1.3508],
         [-1.2463, -1.0746, -1.3182],
         [-1.2746, -1.1059, -1.3493],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.2977, -1.1258, -1.3733],
         [-1.2616, -1.0888, -1.3365],
         [-1.2528, -1.0824, -1.3299],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.3356, -1.1484, -1.4485],
         [-1.2827, -1.0943, -1.3947],
         [-1.2482, -1.0636, -1.3612],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[529.1500,  84.5500, 561.4500, 339.1500,   0.0000],
        [189.0500, 257.4500, 197.6000, 343.9000,   0.0000],
        [244.1500, 278.3500, 252.7000, 307.8000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-1.2783, -1.1074, -1.3508],
         [-1.2463, -1.0746, -1.3182],
         [-1.2746, -1.1059, -1.3493],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.2977, -1.1258, -1.3733],
         [-1.2616, -1.0888, -1.3365],
         [-1.2528, -1.0824, -1.3299],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.3356, -1.1484, -1.4485],
         [-1.2827, -1.0943, -1.3947],
         [-1.2482, -1.0636, -1.3612],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
101/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[ 1.5749,  1.9846,  2.3897],
         [ 1.1484,  1.5450,  1.9539],
         [ 0.3188,  0.6678,  1.0893],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.9968,  1.3900,  1.7995],
         [ 0.2556,  0.6009,  1.0296],
         [-0.1003,  0.2388,  0.6624],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.5751,  0.9274,  1.3547],
         [ 0.6449,  0.9988,  1.4257],
         [ 0.2175,  0.5572,  0.9816],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[422.7500, 219.4500, 435.1000, 327.7500,   0.0000],
        [286.9000, 230.8500, 296.4000, 325.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[ 1.5749,  1.9846,  2.3897],
         [ 1.1484,  1.5450,  1.9539],
         [ 0.3188,  0.6678,  1.0893],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.9968,  1.3900,  1.7995],
         [ 0.2556,  0.6009,  1.0296],
         [-0.1003,  0.2388,  0.6624],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.5751,  0.9274,  1.3547],
         [ 0.6449,  0.9988,  1.4257],
         [ 0.2175,  0.5572,  0.9816],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
102/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[ 0.6960,  0.7880,  1.1273],
         [ 1.3579,  1.4813,  1.7846],
         [ 0.6342,  0.7414,  1.0478],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.7551,  0.8153,  1.1316],
         [ 0.7604,  0.8207,  1.1369],
         [-0.1666, -0.1271,  0.1892],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.3851,  0.4508,  0.6793],
         [ 0.3623,  0.4275,  0.6561],
         [ 0.1764,  0.2372,  0.4675],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[469.3000, 114.9500, 494.0000, 312.5500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[ 0.6960,  0.7880,  1.1273],
         [ 1.3579,  1.4813,  1.7846],
         [ 0.6342,  0.7414,  1.0478],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.7551,  0.8153,  1.1316],
         [ 0.7604,  0.8207,  1.1369],
         [-0.1666, -0.1271,  0.1892],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.3851,  0.4508,  0.6793],
         [ 0.3623,  0.4275,  0.6561],
         [ 0.1764,  0.2372,  0.4675],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
103/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.7699, 1.9914, 2.2919],
         [1.7892, 2.0111, 2.3116],
         [1.8227, 2.0453, 2.3456],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7672, 1.9886, 2.2891],
         [1.7853, 2.0071, 2.3076],
         [1.8068, 2.0291, 2.3295],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7334, 1.9540, 2.2547],
         [1.7526, 1.9737, 2.2743],
         [1.7865, 2.0084, 2.3088],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 78.8500, 154.8500, 110.2000, 361.0000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.7699, 1.9914, 2.2919],
         [1.7892, 2.0111, 2.3116],
         [1.8227, 2.0453, 2.3456],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7672, 1.9886, 2.2891],
         [1.7853, 2.0071, 2.3076],
         [1.8068, 2.0291, 2.3295],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7334, 1.9540, 2.2547],
         [1.7526, 1.9737, 2.2743],
         [1.7865, 2.0084, 2.3088],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
104/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.2453, 0.6254, 1.0714],
         [0.2453, 0.6254, 1.0714],
         [0.2453, 0.6254, 1.0714],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2453, 0.6254, 1.0714],
         [0.2453, 0.6254, 1.0714],
         [0.2453, 0.6254, 1.0714],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2453, 0.6254, 1.0714],
         [0.2453, 0.6254, 1.0714],
         [0.2453, 0.6254, 1.0714],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[136.8000,  27.5500, 157.7000, 431.3000,   0.0000],
        [238.4500, 212.8000, 249.8500, 301.1500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.2453, 0.6254, 1.0714],
         [0.2453, 0.6254, 1.0714],
         [0.2453, 0.6254, 1.0714],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2453, 0.6254, 1.0714],
         [0.2453, 0.6254, 1.0714],
         [0.2453, 0.6254, 1.0714],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2453, 0.6254, 1.0714],
         [0.2453, 0.6254, 1.0714],
         [0.2453, 0.6254, 1.0714],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
105/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.4851, 0.8179, 1.1062],
         [0.4851, 0.8179, 1.1062],
         [0.4828, 0.8156, 1.1039],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4851, 0.8179, 1.1062],
         [0.4850, 0.8178, 1.1061],
         [0.4816, 0.8144, 1.1027],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4828, 0.8156, 1.1039],
         [0.4816, 0.8144, 1.1027],
         [0.4679, 0.8004, 1.0888],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[299.2500,   2.8500, 328.7000, 478.8000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.4851, 0.8179, 1.1062],
         [0.4851, 0.8179, 1.1062],
         [0.4828, 0.8156, 1.1039],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4851, 0.8179, 1.1062],
         [0.4850, 0.8178, 1.1061],
         [0.4816, 0.8144, 1.1027],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4828, 0.8156, 1.1039],
         [0.4816, 0.8144, 1.1027],
         [0.4679, 0.8004, 1.0888],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
106/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.3143, 0.5383, 1.2636],
         [0.3323, 0.5567, 1.2819],
         [0.3454, 0.5747, 1.2998],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3156, 0.5396, 1.2649],
         [0.3309, 0.5553, 1.2805],
         [0.3287, 0.5576, 1.2828],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3309, 0.5553, 1.2805],
         [0.3308, 0.5551, 1.2803],
         [0.3261, 0.5550, 1.2802],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[204.2500, 196.6500, 216.6000, 356.2500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.3143, 0.5383, 1.2636],
         [0.3323, 0.5567, 1.2819],
         [0.3454, 0.5747, 1.2998],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3156, 0.5396, 1.2649],
         [0.3309, 0.5553, 1.2805],
         [0.3287, 0.5576, 1.2828],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3309, 0.5553, 1.2805],
         [0.3308, 0.5551, 1.2803],
         [0.3261, 0.5550, 1.2802],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
107/730
After normalization, Min: -2.0357142857142856, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.0111,  0.3807,  0.9324],
         [ 0.0056,  0.3978,  0.9494],
         [ 0.0078,  0.4001,  0.9517],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0111,  0.3807,  0.9324],
         [ 0.0056,  0.3978,  0.9494],
         [ 0.0078,  0.4001,  0.9517],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0111,  0.3807,  0.9324],
         [ 0.0056,  0.3978,  0.9494],
         [ 0.0078,  0.4001,  0.9517],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[488.3000, 268.8500, 501.6000, 293.5500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.0111,  0.3807,  0.9324],
         [ 0.0056,  0.3978,  0.9494],
         [ 0.0078,  0.4001,  0.9517],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0111,  0.3807,  0.9324],
         [ 0.0056,  0.3978,  0.9494],
         [ 0.0078,  0.4001,  0.9517],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0111,  0.3807,  0.9324],
         [ 0.0056,  0.3978,  0.9494],
         [ 0.0078,  0.4001,  0.9517],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
108/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.8618, 1.0805, 1.3154],
         [0.8618, 1.0805, 1.3154],
         [0.8618, 1.0805, 1.3154],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8618, 1.0805, 1.3154],
         [0.8618, 1.0805, 1.3154],
         [0.8618, 1.0805, 1.3154],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8618, 1.0805, 1.3154],
         [0.8618, 1.0805, 1.3154],
         [0.8618, 1.0805, 1.3154],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[117.8000, 194.7500, 131.1000, 297.3500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.8618, 1.0805, 1.3154],
         [0.8618, 1.0805, 1.3154],
         [0.8618, 1.0805, 1.3154],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8618, 1.0805, 1.3154],
         [0.8618, 1.0805, 1.3154],
         [0.8618, 1.0805, 1.3154],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8618, 1.0805, 1.3154],
         [0.8618, 1.0805, 1.3154],
         [0.8618, 1.0805, 1.3154],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
109/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.7694, 1.9559, 2.2043],
         [1.7694, 1.9559, 2.2043],
         [1.7694, 1.9559, 2.2043],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7694, 1.9559, 2.2043],
         [1.7694, 1.9559, 2.2043],
         [1.7694, 1.9559, 2.2043],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7694, 1.9559, 2.2043],
         [1.7694, 1.9559, 2.2043],
         [1.7694, 1.9559, 2.2043],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[171.9500, 100.7000, 193.8000, 436.0500,   0.0000],
        [184.3000,  59.8500, 199.5000, 112.1000,   0.0000],
        [ 17.1000,  46.5500,  38.0000, 438.9000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.7694, 1.9559, 2.2043],
         [1.7694, 1.9559, 2.2043],
         [1.7694, 1.9559, 2.2043],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7694, 1.9559, 2.2043],
         [1.7694, 1.9559, 2.2043],
         [1.7694, 1.9559, 2.2043],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7694, 1.9559, 2.2043],
         [1.7694, 1.9559, 2.2043],
         [1.7694, 1.9559, 2.2043],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
110/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.2567,  0.0071,  0.2641],
         [-0.0531,  0.2153,  0.4714],
         [-1.0334, -0.7870, -0.5264],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.4545,  0.7341,  0.9879],
         [-0.5533, -0.2961, -0.0377],
         [-1.1967, -0.9539, -0.6926],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1516,  0.1145,  0.3711],
         [-1.3132, -1.0730, -0.8111],
         [-0.7410, -0.4881, -0.2288],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[166.2500,   1.9000, 220.4000, 468.3500,   0.0000],
        [391.4000, 228.9500, 403.7500, 332.5000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.2567,  0.0071,  0.2641],
         [-0.0531,  0.2153,  0.4714],
         [-1.0334, -0.7870, -0.5264],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.4545,  0.7341,  0.9879],
         [-0.5533, -0.2961, -0.0377],
         [-1.1967, -0.9539, -0.6926],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1516,  0.1145,  0.3711],
         [-1.3132, -1.0730, -0.8111],
         [-0.7410, -0.4881, -0.2288],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
111/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.5929,  0.3286,  1.4034],
         [-0.5766,  0.3453,  1.4200],
         [-0.5740,  0.3479,  1.4226],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5740,  0.3480,  1.4227],
         [-0.5728,  0.3492,  1.4239],
         [-0.5596,  0.3627,  1.4374],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5402,  0.3825,  1.4570],
         [-0.5436,  0.3791,  1.4536],
         [-0.5576,  0.3647,  1.4394],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[489.2500, 228.9500, 497.8000, 334.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.5929,  0.3286,  1.4034],
         [-0.5766,  0.3453,  1.4200],
         [-0.5740,  0.3479,  1.4226],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5740,  0.3480,  1.4227],
         [-0.5728,  0.3492,  1.4239],
         [-0.5596,  0.3627,  1.4374],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5402,  0.3825,  1.4570],
         [-0.5436,  0.3791,  1.4536],
         [-0.5576,  0.3647,  1.4394],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
112/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.1143,  0.2752,  1.5245],
         [-0.1143,  0.2752,  1.5245],
         [-0.1143,  0.2752,  1.5245],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1143,  0.2752,  1.5245],
         [-0.1143,  0.2752,  1.5245],
         [-0.1143,  0.2752,  1.5245],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1143,  0.2752,  1.5245],
         [-0.1143,  0.2752,  1.5245],
         [-0.1143,  0.2752,  1.5245],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[103.5500, 216.6000, 115.9000, 322.0500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.1143,  0.2752,  1.5245],
         [-0.1143,  0.2752,  1.5245],
         [-0.1143,  0.2752,  1.5245],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1143,  0.2752,  1.5245],
         [-0.1143,  0.2752,  1.5245],
         [-0.1143,  0.2752,  1.5245],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1143,  0.2752,  1.5245],
         [-0.1143,  0.2752,  1.5245],
         [-0.1143,  0.2752,  1.5245],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
113/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.9331, -0.7720, -0.8435],
         [-0.7488, -0.5849, -0.6523],
         [-0.5301, -0.3774, -0.3953],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.9927, -0.8328, -0.9372],
         [-0.8094, -0.6468, -0.7167],
         [-0.5811, -0.4284, -0.4497],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.1238, -0.9669, -1.0761],
         [-0.9559, -0.7952, -0.9024],
         [-0.6934, -0.5289, -0.5986],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[274.5500,  19.9500, 288.8000, 103.5500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.9331, -0.7720, -0.8435],
         [-0.7488, -0.5849, -0.6523],
         [-0.5301, -0.3774, -0.3953],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.9927, -0.8328, -0.9372],
         [-0.8094, -0.6468, -0.7167],
         [-0.5811, -0.4284, -0.4497],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.1238, -0.9669, -1.0761],
         [-0.9559, -0.7952, -0.9024],
         [-0.6934, -0.5289, -0.5986],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
114/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.0625,  0.5032,  1.8736],
         [-0.0462,  0.5199,  1.8901],
         [-0.0436,  0.5226,  1.8928],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0643,  0.5014,  1.8717],
         [-0.0629,  0.5028,  1.8731],
         [-0.0472,  0.5189,  1.8892],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0823,  0.4831,  1.8535],
         [-0.0789,  0.4865,  1.8569],
         [-0.0649,  0.5008,  1.8711],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[315.4000,  33.2500, 337.2500, 161.5000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.0625,  0.5032,  1.8736],
         [-0.0462,  0.5199,  1.8901],
         [-0.0436,  0.5226,  1.8928],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0643,  0.5014,  1.8717],
         [-0.0629,  0.5028,  1.8731],
         [-0.0472,  0.5189,  1.8892],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0823,  0.4831,  1.8535],
         [-0.0789,  0.4865,  1.8569],
         [-0.0649,  0.5008,  1.8711],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
115/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.9307, 1.0460, 1.3158],
         [0.9871, 1.1036, 1.3759],
         [1.0773, 1.1958, 1.4999],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8955, 1.0100, 1.2827],
         [0.9330, 1.0483, 1.3234],
         [1.0282, 1.1456, 1.4499],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8856, 0.9998, 1.3048],
         [0.8898, 1.0042, 1.3091],
         [0.9871, 1.1036, 1.4080],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[409.4500,  94.0500, 427.5000, 487.3500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.9307, 1.0460, 1.3158],
         [0.9871, 1.1036, 1.3759],
         [1.0773, 1.1958, 1.4999],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8955, 1.0100, 1.2827],
         [0.9330, 1.0483, 1.3234],
         [1.0282, 1.1456, 1.4499],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8856, 0.9998, 1.3048],
         [0.8898, 1.0042, 1.3091],
         [0.9871, 1.1036, 1.4080],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
116/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-1.1720, -0.9992, -1.3467],
         [-1.1193, -0.9623, -1.2761],
         [-1.0707, -0.9126, -1.2266],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.0653, -0.8900, -1.2381],
         [-1.0669, -0.9087, -1.2227],
         [-1.0572, -0.8989, -1.2130],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.9692, -0.7918, -1.1403],
         [-1.0052, -0.8457, -1.1600],
         [-1.0410, -0.8823, -1.1964],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[513.0000, 193.8000, 538.6500, 456.0000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-1.1720, -0.9992, -1.3467],
         [-1.1193, -0.9623, -1.2761],
         [-1.0707, -0.9126, -1.2266],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.0653, -0.8900, -1.2381],
         [-1.0669, -0.9087, -1.2227],
         [-1.0572, -0.8989, -1.2130],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.9692, -0.7918, -1.1403],
         [-1.0052, -0.8457, -1.1600],
         [-1.0410, -0.8823, -1.1964],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
117/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.1088, 0.4157, 1.2636],
         [0.1268, 0.4342, 1.2819],
         [0.1448, 0.4526, 1.3002],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1088, 0.4157, 1.2636],
         [0.1268, 0.4342, 1.2819],
         [0.1448, 0.4526, 1.3002],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1088, 0.4157, 1.2636],
         [0.1268, 0.4342, 1.2819],
         [0.1448, 0.4526, 1.3002],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[253.6500, 198.5500, 265.0500, 366.7000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.1088, 0.4157, 1.2636],
         [0.1268, 0.4342, 1.2819],
         [0.1448, 0.4526, 1.3002],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1088, 0.4157, 1.2636],
         [0.1268, 0.4342, 1.2819],
         [0.1448, 0.4526, 1.3002],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1088, 0.4157, 1.2636],
         [0.1268, 0.4342, 1.2819],
         [0.1448, 0.4526, 1.3002],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
118/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.2277, 0.6599, 1.8204],
         [0.2277, 0.6599, 1.8204],
         [0.2277, 0.6599, 1.8204],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2111, 0.6429, 1.8034],
         [0.2111, 0.6429, 1.8034],
         [0.2111, 0.6429, 1.8034],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2088, 0.6406, 1.8011],
         [0.2088, 0.6406, 1.8011],
         [0.2088, 0.6406, 1.8011],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 45.6000, 226.1000,  57.9500, 313.5000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.2277, 0.6599, 1.8204],
         [0.2277, 0.6599, 1.8204],
         [0.2277, 0.6599, 1.8204],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2111, 0.6429, 1.8034],
         [0.2111, 0.6429, 1.8034],
         [0.2111, 0.6429, 1.8034],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2088, 0.6406, 1.8011],
         [0.2088, 0.6406, 1.8011],
         [0.2088, 0.6406, 1.8011],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
119/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.6676, 1.7992, 2.0657],
         [1.6851, 1.8172, 2.0836],
         [1.7010, 1.8334, 2.0998],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.6851, 1.8172, 2.0836],
         [1.6864, 1.8185, 2.0849],
         [1.7032, 1.8356, 2.1020],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7010, 1.8334, 2.0998],
         [1.7032, 1.8356, 2.1020],
         [1.7054, 1.8379, 2.1043],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[228.9500, 109.2500, 262.2000, 421.8000,   0.0000],
        [253.6500,  59.8500, 269.8000, 131.1000,   0.0000],
        [ 47.5000, 231.8000,  64.6000, 271.7000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.6676, 1.7992, 2.0657],
         [1.6851, 1.8172, 2.0836],
         [1.7010, 1.8334, 2.0998],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.6851, 1.8172, 2.0836],
         [1.6864, 1.8185, 2.0849],
         [1.7032, 1.8356, 2.1020],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7010, 1.8334, 2.0998],
         [1.7032, 1.8356, 2.1020],
         [1.7054, 1.8379, 2.1043],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
120/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.5193, 0.7829, 1.1062],
         [0.5193, 0.7829, 1.1062],
         [0.5171, 0.7806, 1.1039],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5193, 0.7829, 1.1062],
         [0.5193, 0.7829, 1.1062],
         [0.5172, 0.7808, 1.1041],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5216, 0.7852, 1.1085],
         [0.5214, 0.7850, 1.1083],
         [0.5193, 0.7829, 1.1062],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[306.8500, 217.5500, 323.0000, 377.1500,   0.0000],
        [341.0500, 221.3500, 353.4000, 376.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.5193, 0.7829, 1.1062],
         [0.5193, 0.7829, 1.1062],
         [0.5171, 0.7806, 1.1039],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5193, 0.7829, 1.1062],
         [0.5193, 0.7829, 1.1062],
         [0.5172, 0.7808, 1.1041],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5216, 0.7852, 1.1085],
         [0.5214, 0.7850, 1.1083],
         [0.5193, 0.7829, 1.1062],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
121/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.1088, 0.8184, 1.5773],
         [0.1087, 0.8184, 1.5772],
         [0.1061, 0.8157, 1.5746],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1268, 0.8368, 1.5956],
         [0.1254, 0.8354, 1.5942],
         [0.1097, 0.8193, 1.5782],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1426, 0.8529, 1.6117],
         [0.1414, 0.8517, 1.6105],
         [0.1277, 0.8377, 1.5965],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[380.0000, 232.7500, 391.4000, 299.2500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.1088, 0.8184, 1.5773],
         [0.1087, 0.8184, 1.5772],
         [0.1061, 0.8157, 1.5746],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1268, 0.8368, 1.5956],
         [0.1254, 0.8354, 1.5942],
         [0.1097, 0.8193, 1.5782],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1426, 0.8529, 1.6117],
         [0.1414, 0.8517, 1.6105],
         [0.1277, 0.8377, 1.5965],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
122/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.1297,  0.3291,  0.8108],
         [-0.1717,  0.2861,  0.7680],
         [-0.0524,  0.4081,  0.8894],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0115,  0.4300,  0.8930],
         [-0.1077,  0.3318,  0.7951],
         [-0.0774,  0.3627,  0.8260],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0116,  0.4145,  0.8523],
         [-0.0629,  0.3383,  0.7764],
         [-0.0368,  0.3654,  0.8040],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[  0.0000,   4.7500,  23.7500, 284.0500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.1297,  0.3291,  0.8108],
         [-0.1717,  0.2861,  0.7680],
         [-0.0524,  0.4081,  0.8894],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0115,  0.4300,  0.8930],
         [-0.1077,  0.3318,  0.7951],
         [-0.0774,  0.3627,  0.8260],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0116,  0.4145,  0.8523],
         [-0.0629,  0.3383,  0.7764],
         [-0.0368,  0.3654,  0.8040],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
123/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[ 0.4939,  0.5644,  0.6295],
         [ 0.8137,  0.8775,  0.9930],
         [ 0.9158,  1.0186,  1.1516],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1256, -0.0487,  0.0554],
         [-0.0456,  0.0358,  0.1723],
         [ 0.1624,  0.2818,  0.4263],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0099,  0.1245,  0.2663],
         [ 0.0998,  0.2221,  0.3786],
         [ 0.2707,  0.4154,  0.6058],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[ 74.1000, 181.4500,  92.1500, 329.6500,   0.0000],
        [ 51.3000, 179.5500,  67.4500, 324.9000,   0.0000],
        [435.1000,   2.8500, 456.0000,  98.8000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[ 0.4939,  0.5644,  0.6295],
         [ 0.8137,  0.8775,  0.9930],
         [ 0.9158,  1.0186,  1.1516],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1256, -0.0487,  0.0554],
         [-0.0456,  0.0358,  0.1723],
         [ 0.1624,  0.2818,  0.4263],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0099,  0.1245,  0.2663],
         [ 0.0998,  0.2221,  0.3786],
         [ 0.2707,  0.4154,  0.6058],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
124/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.0476,  0.3434,  0.9301],
         [-0.1522,  0.2365,  0.8237],
         [-0.1926,  0.1906,  0.7734],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0093,  0.3825,  0.9663],
         [-0.1313,  0.2576,  0.8419],
         [-0.1661,  0.2152,  0.7955],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0735,  0.4626,  1.0093],
         [-0.0677,  0.3158,  0.8632],
         [-0.0966,  0.2577,  0.8057],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[ 71.2500, 190.9500,  80.7500, 345.8000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.0476,  0.3434,  0.9301],
         [-0.1522,  0.2365,  0.8237],
         [-0.1926,  0.1906,  0.7734],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0093,  0.3825,  0.9663],
         [-0.1313,  0.2576,  0.8419],
         [-0.1661,  0.2152,  0.7955],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0735,  0.4626,  1.0093],
         [-0.0677,  0.3158,  0.8632],
         [-0.0966,  0.2577,  0.8057],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
125/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.8447, 1.0630, 1.2980],
         [0.8447, 1.0631, 1.2980],
         [0.8473, 1.0657, 1.3006],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8447, 1.0631, 1.2980],
         [0.8473, 1.0657, 1.3006],
         [0.8618, 1.0805, 1.3154],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8473, 1.0657, 1.3006],
         [0.8618, 1.0805, 1.3154],
         [0.8621, 1.0808, 1.3157],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 15.2000, 129.2000,  31.3500, 279.3000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.8447, 1.0630, 1.2980],
         [0.8447, 1.0631, 1.2980],
         [0.8473, 1.0657, 1.3006],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8447, 1.0631, 1.2980],
         [0.8473, 1.0657, 1.3006],
         [0.8618, 1.0805, 1.3154],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8473, 1.0657, 1.3006],
         [0.8618, 1.0805, 1.3154],
         [0.8621, 1.0808, 1.3157],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
126/730
After normalization, Min: -1.8081232462344425, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.2851, -0.0220,  0.8452],
         [-0.2869, -0.0238,  0.8434],
         [-0.3049, -0.0422,  0.8251],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2675, -0.0040,  0.8631],
         [-0.2856, -0.0224,  0.8448],
         [-0.3036, -0.0408,  0.8264],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2517,  0.0122,  0.8793],
         [-0.2675, -0.0040,  0.8631],
         [-0.2859, -0.0227,  0.8445],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[582.3500, 209.0000, 594.7000, 365.7500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.2851, -0.0220,  0.8452],
         [-0.2869, -0.0238,  0.8434],
         [-0.3049, -0.0422,  0.8251],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2675, -0.0040,  0.8631],
         [-0.2856, -0.0224,  0.8448],
         [-0.3036, -0.0408,  0.8264],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2517,  0.0122,  0.8793],
         [-0.2675, -0.0040,  0.8631],
         [-0.2859, -0.0227,  0.8445],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
127/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.8142, -0.1067,  0.5852],
         [-0.9643, -0.2576,  0.4310],
         [-0.9234, -0.1841,  0.4570],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5401,  0.2103,  0.8430],
         [-0.6920,  0.0550,  0.6884],
         [-0.7262,  0.0243,  0.6515],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0041,  0.8081,  1.3509],
         [-0.1110,  0.6905,  1.2293],
         [-0.2287,  0.5701,  1.1095],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[330.6000, 127.3000, 349.6000, 388.5500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.8142, -0.1067,  0.5852],
         [-0.9643, -0.2576,  0.4310],
         [-0.9234, -0.1841,  0.4570],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5401,  0.2103,  0.8430],
         [-0.6920,  0.0550,  0.6884],
         [-0.7262,  0.0243,  0.6515],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0041,  0.8081,  1.3509],
         [-0.1110,  0.6905,  1.2293],
         [-0.2287,  0.5701,  1.1095],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
128/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.6216, 0.7825, 1.0361],
         [0.6054, 0.7659, 1.0195],
         [0.6053, 0.7658, 1.0195],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6234, 0.7843, 1.0379],
         [0.6234, 0.7843, 1.0379],
         [0.6212, 0.7820, 1.0356],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6414, 0.8027, 1.0562],
         [0.6414, 0.8027, 1.0562],
         [0.6392, 0.8004, 1.0539],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[318.2500,   2.8500, 337.2500, 407.5500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.6216, 0.7825, 1.0361],
         [0.6054, 0.7659, 1.0195],
         [0.6053, 0.7658, 1.0195],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6234, 0.7843, 1.0379],
         [0.6234, 0.7843, 1.0379],
         [0.6212, 0.7820, 1.0356],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6414, 0.8027, 1.0562],
         [0.6414, 0.8027, 1.0562],
         [0.6392, 0.8004, 1.0539],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
129/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.5810, 1.7458, 1.9951],
         [1.5824, 1.7472, 1.9965],
         [1.6004, 1.7655, 2.0148],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5810, 1.7458, 1.9951],
         [1.5823, 1.7471, 1.9964],
         [1.5970, 1.7621, 2.0114],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5788, 1.7435, 1.9928],
         [1.5790, 1.7437, 1.9930],
         [1.5833, 1.7481, 1.9974],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[427.5000, 105.4500, 439.8500, 214.7000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.5810, 1.7458, 1.9951],
         [1.5824, 1.7472, 1.9965],
         [1.6004, 1.7655, 2.0148],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5810, 1.7458, 1.9951],
         [1.5823, 1.7471, 1.9964],
         [1.5970, 1.7621, 2.0114],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5788, 1.7435, 1.9928],
         [1.5790, 1.7437, 1.9930],
         [1.5833, 1.7481, 1.9974],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
130/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.0796,  0.4332,  1.5250],
         [-0.0629,  0.4503,  1.5420],
         [-0.0607,  0.4526,  1.5443],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0796,  0.4332,  1.5250],
         [-0.0629,  0.4503,  1.5420],
         [-0.0607,  0.4526,  1.5443],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0796,  0.4332,  1.5250],
         [-0.0629,  0.4503,  1.5420],
         [-0.0607,  0.4526,  1.5443],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[239.4000, 130.1500, 284.0500, 331.5500,   0.0000],
        [338.2000, 109.2500, 355.3000, 184.3000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.0796,  0.4332,  1.5250],
         [-0.0629,  0.4503,  1.5420],
         [-0.0607,  0.4526,  1.5443],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0796,  0.4332,  1.5250],
         [-0.0629,  0.4503,  1.5420],
         [-0.0607,  0.4526,  1.5443],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0796,  0.4332,  1.5250],
         [-0.0629,  0.4503,  1.5420],
         [-0.0607,  0.4526,  1.5443],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
131/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.5758, -0.3550, -0.3753],
         [-0.5424, -0.3550, -0.3752],
         [-0.5420, -0.3546, -0.3771],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5731, -0.3550, -0.3752],
         [-0.5398, -0.3524, -0.3726],
         [-0.5251, -0.3374, -0.3599],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5420, -0.3546, -0.3748],
         [-0.5251, -0.3374, -0.3576],
         [-0.5205, -0.3326, -0.3552],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[432.2500, 107.3500, 456.9500, 501.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.5758, -0.3550, -0.3753],
         [-0.5424, -0.3550, -0.3752],
         [-0.5420, -0.3546, -0.3771],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5731, -0.3550, -0.3752],
         [-0.5398, -0.3524, -0.3726],
         [-0.5251, -0.3374, -0.3599],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5420, -0.3546, -0.3748],
         [-0.5251, -0.3374, -0.3576],
         [-0.5205, -0.3326, -0.3552],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
132/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.1314,  0.3102,  0.9145],
         [-0.1314,  0.3102,  0.9145],
         [-0.1314,  0.3102,  0.9191],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1314,  0.3102,  0.9145],
         [-0.1314,  0.3102,  0.9145],
         [-0.1314,  0.3102,  0.9191],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1314,  0.3102,  0.9145],
         [-0.1314,  0.3102,  0.9145],
         [-0.1314,  0.3102,  0.9191],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[239.4000, 227.0500, 249.8500, 348.6500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.1314,  0.3102,  0.9145],
         [-0.1314,  0.3102,  0.9145],
         [-0.1314,  0.3102,  0.9191],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1314,  0.3102,  0.9145],
         [-0.1314,  0.3102,  0.9145],
         [-0.1314,  0.3102,  0.9191],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1314,  0.3102,  0.9145],
         [-0.1314,  0.3102,  0.9145],
         [-0.1314,  0.3102,  0.9191],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
133/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.1314,  0.2402,  1.2457],
         [-0.1314,  0.2402,  1.2457],
         [-0.1314,  0.2402,  1.2457],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1314,  0.2402,  1.2457],
         [-0.1314,  0.2402,  1.2457],
         [-0.1314,  0.2402,  1.2457],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1314,  0.2402,  1.2457],
         [-0.1314,  0.2402,  1.2457],
         [-0.1314,  0.2402,  1.2457],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[249.8500, 114.9500, 273.6000, 346.7500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.1314,  0.2402,  1.2457],
         [-0.1314,  0.2402,  1.2457],
         [-0.1314,  0.2402,  1.2457],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1314,  0.2402,  1.2457],
         [-0.1314,  0.2402,  1.2457],
         [-0.1314,  0.2402,  1.2457],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1314,  0.2402,  1.2457],
         [-0.1314,  0.2402,  1.2457],
         [-0.1314,  0.2402,  1.2457],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
134/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.4332, 1.2201, 2.2038],
         [0.4139, 1.2003, 2.1841],
         [0.3801, 1.1658, 2.1497],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4359, 1.2187, 2.2038],
         [0.4167, 1.1990, 2.1842],
         [0.3841, 1.1658, 2.1511],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4653, 1.2004, 2.2016],
         [0.4496, 1.1844, 2.1856],
         [0.4337, 1.1681, 2.1694],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[186.2000, 113.0500, 213.7500, 396.1500,   0.0000],
        [152.0000,   8.5500, 174.8000, 111.1500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.4332, 1.2201, 2.2038],
         [0.4139, 1.2003, 2.1841],
         [0.3801, 1.1658, 2.1497],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4359, 1.2187, 2.2038],
         [0.4167, 1.1990, 2.1842],
         [0.3841, 1.1658, 2.1511],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4653, 1.2004, 2.2016],
         [0.4496, 1.1844, 2.1856],
         [0.4337, 1.1681, 2.1694],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
135/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.7762, 0.9930, 1.2282],
         [0.7762, 0.9930, 1.2282],
         [0.7762, 0.9930, 1.2282],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7762, 0.9930, 1.2282],
         [0.7762, 0.9930, 1.2282],
         [0.7762, 0.9930, 1.2282],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7762, 0.9930, 1.2282],
         [0.7762, 0.9930, 1.2282],
         [0.7762, 0.9930, 1.2282],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[459.8000, 251.7500, 473.1000, 298.3000,   0.0000],
        [248.9000, 198.5500, 263.1500, 322.0500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.7762, 0.9930, 1.2282],
         [0.7762, 0.9930, 1.2282],
         [0.7762, 0.9930, 1.2282],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7762, 0.9930, 1.2282],
         [0.7762, 0.9930, 1.2282],
         [0.7762, 0.9930, 1.2282],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7762, 0.9930, 1.2282],
         [0.7762, 0.9930, 1.2282],
         [0.7762, 0.9930, 1.2282],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
136/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.7865, 2.0259, 2.2566],
         [1.7865, 2.0259, 2.2566],
         [1.7888, 2.0282, 2.2589],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7865, 2.0259, 2.2566],
         [1.7865, 2.0259, 2.2566],
         [1.7888, 2.0282, 2.2589],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7865, 2.0259, 2.2566],
         [1.7865, 2.0259, 2.2566],
         [1.7888, 2.0282, 2.2589],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 16.1500, 236.5500,  32.3000, 349.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.7865, 2.0259, 2.2566],
         [1.7865, 2.0259, 2.2566],
         [1.7888, 2.0282, 2.2589],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7865, 2.0259, 2.2566],
         [1.7865, 2.0259, 2.2566],
         [1.7888, 2.0282, 2.2589],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7865, 2.0259, 2.2566],
         [1.7865, 2.0259, 2.2566],
         [1.7888, 2.0282, 2.2589],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
137/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.6563, 0.8354, 1.0017],
         [0.6577, 0.8368, 1.0030],
         [0.6756, 0.8552, 1.0213],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6563, 0.8354, 1.0017],
         [0.6576, 0.8367, 1.0029],
         [0.6723, 0.8517, 1.0179],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6541, 0.8331, 0.9994],
         [0.6542, 0.8333, 0.9995],
         [0.6586, 0.8377, 1.0039],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 71.2500,  62.7000, 103.5500, 373.3500,   0.0000],
        [398.0500, 236.5500, 410.4000, 337.2500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.6563, 0.8354, 1.0017],
         [0.6577, 0.8368, 1.0030],
         [0.6756, 0.8552, 1.0213],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6563, 0.8354, 1.0017],
         [0.6576, 0.8367, 1.0029],
         [0.6723, 0.8517, 1.0179],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6541, 0.8331, 0.9994],
         [0.6542, 0.8333, 0.9995],
         [0.6586, 0.8377, 1.0039],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
138/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.1314,  0.3102,  0.9145],
         [-0.1314,  0.3102,  0.9145],
         [-0.1314,  0.3102,  0.9145],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1314,  0.3102,  0.9145],
         [-0.1314,  0.3102,  0.9145],
         [-0.1314,  0.3102,  0.9145],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1314,  0.3102,  0.9145],
         [-0.1314,  0.3102,  0.9145],
         [-0.1314,  0.3102,  0.9145],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[391.4000,   2.8500, 420.8500, 395.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.1314,  0.3102,  0.9145],
         [-0.1314,  0.3102,  0.9145],
         [-0.1314,  0.3102,  0.9145],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1314,  0.3102,  0.9145],
         [-0.1314,  0.3102,  0.9145],
         [-0.1314,  0.3102,  0.9145],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1314,  0.3102,  0.9145],
         [-0.1314,  0.3102,  0.9145],
         [-0.1314,  0.3102,  0.9145],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
139/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.5130, 1.6237, 1.7516],
         [1.5306, 1.6417, 1.7695],
         [1.5464, 1.6579, 1.7856],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5126, 1.6233, 1.7511],
         [1.5152, 1.6260, 1.7539],
         [1.5333, 1.6444, 1.7722],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5175, 1.6260, 1.7584],
         [1.5355, 1.6444, 1.7768],
         [1.5538, 1.6632, 1.7954],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[250.8000, 114.9500, 285.0000, 492.1000,   0.0000],
        [249.8500,   0.9500, 273.6000, 116.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.5130, 1.6237, 1.7516],
         [1.5306, 1.6417, 1.7695],
         [1.5464, 1.6579, 1.7856],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5126, 1.6233, 1.7511],
         [1.5152, 1.6260, 1.7539],
         [1.5333, 1.6444, 1.7722],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5175, 1.6260, 1.7584],
         [1.5355, 1.6444, 1.7768],
         [1.5538, 1.6632, 1.7954],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
140/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.7523, 1.9209, 2.1346],
         [1.7523, 1.9209, 2.1346],
         [1.7523, 1.9209, 2.1346],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7523, 1.9209, 2.1346],
         [1.7523, 1.9209, 2.1346],
         [1.7523, 1.9209, 2.1346],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7500, 1.9186, 2.1323],
         [1.7500, 1.9186, 2.1323],
         [1.7500, 1.9186, 2.1323],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[304.9500, 257.4500, 319.2000, 312.5500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.7523, 1.9209, 2.1346],
         [1.7523, 1.9209, 2.1346],
         [1.7523, 1.9209, 2.1346],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7523, 1.9209, 2.1346],
         [1.7523, 1.9209, 2.1346],
         [1.7523, 1.9209, 2.1346],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7500, 1.9186, 2.1323],
         [1.7500, 1.9186, 2.1323],
         [1.7500, 1.9186, 2.1323],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
141/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[2.1462, 2.3936, 2.5877],
         [2.1462, 2.3936, 2.5877],
         [2.1462, 2.3936, 2.5877],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.1462, 2.3936, 2.5877],
         [2.1462, 2.3936, 2.5877],
         [2.1462, 2.3936, 2.5877],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.1462, 2.3936, 2.5877],
         [2.1462, 2.3936, 2.5877],
         [2.1462, 2.3936, 2.5877],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[168.1500, 208.0500, 185.2500, 279.3000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[2.1462, 2.3936, 2.5877],
         [2.1462, 2.3936, 2.5877],
         [2.1462, 2.3936, 2.5877],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.1462, 2.3936, 2.5877],
         [2.1462, 2.3936, 2.5877],
         [2.1462, 2.3936, 2.5877],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.1462, 2.3936, 2.5877],
         [2.1462, 2.3936, 2.5877],
         [2.1462, 2.3936, 2.5877],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
142/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.2509,  0.1181,  1.4030],
         [-0.2315,  0.1379,  1.4227],
         [-0.1977,  0.1725,  1.4571],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2509,  0.1181,  1.4030],
         [-0.2315,  0.1379,  1.4227],
         [-0.1977,  0.1725,  1.4571],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2486,  0.1204,  1.4053],
         [-0.2296,  0.1399,  1.4246],
         [-0.1999,  0.1702,  1.4548],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[185.2500, 182.4000, 206.1500, 356.2500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.2509,  0.1181,  1.4030],
         [-0.2315,  0.1379,  1.4227],
         [-0.1977,  0.1725,  1.4571],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2509,  0.1181,  1.4030],
         [-0.2315,  0.1379,  1.4227],
         [-0.1977,  0.1725,  1.4571],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2486,  0.1204,  1.4053],
         [-0.2296,  0.1399,  1.4246],
         [-0.1999,  0.1702,  1.4548],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
143/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.4337, 0.7479, 1.1237],
         [0.4337, 0.7479, 1.1237],
         [0.4359, 0.7502, 1.1260],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4337, 0.7479, 1.1237],
         [0.4337, 0.7479, 1.1237],
         [0.4359, 0.7502, 1.1260],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4337, 0.7479, 1.1260],
         [0.4337, 0.7479, 1.1260],
         [0.4359, 0.7502, 1.1282],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 93.1000, 103.5500, 110.2000, 285.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.4337, 0.7479, 1.1237],
         [0.4337, 0.7479, 1.1237],
         [0.4359, 0.7502, 1.1260],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4337, 0.7479, 1.1237],
         [0.4337, 0.7479, 1.1237],
         [0.4359, 0.7502, 1.1260],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4337, 0.7479, 1.1260],
         [0.4337, 0.7479, 1.1260],
         [0.4359, 0.7502, 1.1282],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
144/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.0102,  0.3291,  1.2122],
         [ 0.0452,  0.3857,  1.2686],
         [ 0.1168,  0.4590,  1.3415],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0076,  0.3318,  1.2149],
         [ 0.0438,  0.3843,  1.2671],
         [ 0.0964,  0.4381,  1.3207],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0298,  0.3701,  1.2529],
         [ 0.0468,  0.3874,  1.2703],
         [ 0.0805,  0.4219,  1.3045],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[342.9500, 154.8500, 356.2500, 296.4000,   0.0000],
        [142.5000, 245.1000, 159.6000, 332.5000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.0102,  0.3291,  1.2122],
         [ 0.0452,  0.3857,  1.2686],
         [ 0.1168,  0.4590,  1.3415],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0076,  0.3318,  1.2149],
         [ 0.0438,  0.3843,  1.2671],
         [ 0.0964,  0.4381,  1.3207],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0298,  0.3701,  1.2529],
         [ 0.0468,  0.3874,  1.2703],
         [ 0.0805,  0.4219,  1.3045],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
145/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.6972, 0.9123, 1.1827],
         [0.9167, 1.1367, 1.4061],
         [1.2323, 1.4593, 1.7273],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3926, 1.6231, 1.8904],
         [1.4267, 1.6581, 1.9252],
         [1.4882, 1.7209, 1.9878],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5605, 1.7948, 2.0613],
         [1.5484, 1.7825, 2.0490],
         [1.5218, 1.7553, 2.0220],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[499.7000,  80.7500, 521.5500, 336.3000,   0.0000],
        [277.4000, 239.4000, 285.0000, 333.4500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.6972, 0.9123, 1.1827],
         [0.9167, 1.1367, 1.4061],
         [1.2323, 1.4593, 1.7273],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3926, 1.6231, 1.8904],
         [1.4267, 1.6581, 1.9252],
         [1.4882, 1.7209, 1.9878],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5605, 1.7948, 2.0613],
         [1.5484, 1.7825, 2.0490],
         [1.5218, 1.7553, 2.0220],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
146/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.4783, 1.9034, 2.2391],
         [1.4769, 1.9020, 2.2378],
         [1.4611, 1.8858, 2.2216],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4769, 1.9020, 2.2378],
         [1.4756, 1.9006, 2.2364],
         [1.4577, 1.8824, 2.2182],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4589, 1.8812, 2.2217],
         [1.4577, 1.8800, 2.2205],
         [1.4437, 1.8657, 2.2063],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 72.2000, 290.7000,  81.7000, 325.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.4783, 1.9034, 2.2391],
         [1.4769, 1.9020, 2.2378],
         [1.4611, 1.8858, 2.2216],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4769, 1.9020, 2.2378],
         [1.4756, 1.9006, 2.2364],
         [1.4577, 1.8824, 2.2182],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4589, 1.8812, 2.2217],
         [1.4577, 1.8800, 2.2205],
         [1.4437, 1.8657, 2.2063],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
147/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.9916, 2.1655, 2.4130],
         [1.9735, 2.1470, 2.3946],
         [1.9574, 2.1306, 2.3782],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.9916, 2.1655, 2.4129],
         [1.9710, 2.1444, 2.3920],
         [1.9429, 2.1157, 2.3634],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.9889, 2.1628, 2.4103],
         [1.9564, 2.1296, 2.3772],
         [1.9426, 2.1154, 2.3631],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[287.8500, 116.8500, 304.9500, 435.1000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.9916, 2.1655, 2.4130],
         [1.9735, 2.1470, 2.3946],
         [1.9574, 2.1306, 2.3782],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.9916, 2.1655, 2.4129],
         [1.9710, 2.1444, 2.3920],
         [1.9429, 2.1157, 2.3634],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.9889, 2.1628, 2.4103],
         [1.9564, 2.1296, 2.3772],
         [1.9426, 2.1154, 2.3631],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
148/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.6074, -0.2118, -0.6147],
         [-0.6020, -0.2063, -0.6093],
         [-0.5039, -0.1110, -0.5121],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4619, -0.0829, -0.4286],
         [-0.5124, -0.1358, -0.4813],
         [-0.4618, -0.0990, -0.4446],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2852,  0.0632, -0.1937],
         [-0.3920, -0.0460, -0.3024],
         [-0.4419, -0.0970, -0.3532],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[141.5500, 175.7500, 152.0000, 251.7500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.6074, -0.2118, -0.6147],
         [-0.6020, -0.2063, -0.6093],
         [-0.5039, -0.1110, -0.5121],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4619, -0.0829, -0.4286],
         [-0.5124, -0.1358, -0.4813],
         [-0.4618, -0.0990, -0.4446],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2852,  0.0632, -0.1937],
         [-0.3920, -0.0460, -0.3024],
         [-0.4419, -0.0970, -0.3532],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
149/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-1.8759, -1.3682, -1.5233],
         [-1.8210, -1.3120, -1.4674],
         [-1.7452, -1.2391, -1.3927],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.8376, -1.3290, -1.4871],
         [-1.8029, -1.2937, -1.4518],
         [-1.7584, -1.2550, -1.4141],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.7592, -1.2534, -1.4416],
         [-1.7402, -1.2364, -1.4235],
         [-1.7066, -1.2298, -1.4039],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[497.8000, 217.5500, 509.2000, 272.6500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-1.8759, -1.3682, -1.5233],
         [-1.8210, -1.3120, -1.4674],
         [-1.7452, -1.2391, -1.3927],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.8376, -1.3290, -1.4871],
         [-1.8029, -1.2937, -1.4518],
         [-1.7584, -1.2550, -1.4141],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.7592, -1.2534, -1.4416],
         [-1.7402, -1.2364, -1.4235],
         [-1.7066, -1.2298, -1.4039],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
150/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.4458, 1.7126, 1.8924],
         [1.5170, 1.7854, 1.9648],
         [1.5842, 1.8541, 2.0332],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4422, 1.7089, 1.8887],
         [1.4794, 1.7470, 1.9266],
         [1.5284, 1.7970, 1.9764],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4106, 1.6720, 1.8542],
         [1.4407, 1.7028, 1.8849],
         [1.4541, 1.7165, 1.8985],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[220.4000, 233.7000, 230.8500, 333.4500,   0.0000],
        [340.1000, 243.2000, 353.4000, 310.6500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.4458, 1.7126, 1.8924],
         [1.5170, 1.7854, 1.9648],
         [1.5842, 1.8541, 2.0332],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4422, 1.7089, 1.8887],
         [1.4794, 1.7470, 1.9266],
         [1.5284, 1.7970, 1.9764],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4106, 1.6720, 1.8542],
         [1.4407, 1.7028, 1.8849],
         [1.4541, 1.7165, 1.8985],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
151/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.6563, 0.8704, 1.2457],
         [0.6563, 0.8704, 1.2457],
         [0.6541, 0.8681, 1.2434],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6563, 0.8704, 1.2457],
         [0.6563, 0.8704, 1.2457],
         [0.6541, 0.8681, 1.2434],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6563, 0.8704, 1.2457],
         [0.6563, 0.8704, 1.2457],
         [0.6541, 0.8681, 1.2434],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[174.8000,   2.8500, 209.0000, 453.1500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.6563, 0.8704, 1.2457],
         [0.6563, 0.8704, 1.2457],
         [0.6541, 0.8681, 1.2434],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6563, 0.8704, 1.2457],
         [0.6563, 0.8704, 1.2457],
         [0.6541, 0.8681, 1.2434],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6563, 0.8704, 1.2457],
         [0.6563, 0.8704, 1.2457],
         [0.6541, 0.8681, 1.2434],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
152/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.2214, 1.1506, 1.6814],
         [1.2214, 1.1506, 1.6814],
         [1.2214, 1.1506, 1.6814],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2214, 1.1506, 1.6814],
         [1.2214, 1.1506, 1.6814],
         [1.2214, 1.1506, 1.6814],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2237, 1.1529, 1.6837],
         [1.2237, 1.1529, 1.6837],
         [1.2237, 1.1529, 1.6837],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[463.6000,  95.9500, 491.1500, 305.9000,   0.0000],
        [456.0000,   1.9000, 476.9000, 121.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.2214, 1.1506, 1.6814],
         [1.2214, 1.1506, 1.6814],
         [1.2214, 1.1506, 1.6814],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2214, 1.1506, 1.6814],
         [1.2214, 1.1506, 1.6814],
         [1.2214, 1.1506, 1.6814],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2237, 1.1529, 1.6837],
         [1.2237, 1.1529, 1.6837],
         [1.2237, 1.1529, 1.6837],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
153/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.4739,  0.1527,  1.1062],
         [-0.4739,  0.1527,  1.1062],
         [-0.4762,  0.1504,  1.1039],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4739,  0.1527,  1.1062],
         [-0.4739,  0.1527,  1.1062],
         [-0.4760,  0.1505,  1.1041],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4717,  0.1550,  1.1085],
         [-0.4719,  0.1548,  1.1083],
         [-0.4739,  0.1527,  1.1062],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[382.8500, 190.0000, 397.1000, 349.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.4739,  0.1527,  1.1062],
         [-0.4739,  0.1527,  1.1062],
         [-0.4762,  0.1504,  1.1039],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4739,  0.1527,  1.1062],
         [-0.4739,  0.1527,  1.1062],
         [-0.4760,  0.1505,  1.1041],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4717,  0.1550,  1.1085],
         [-0.4719,  0.1548,  1.1083],
         [-0.4739,  0.1527,  1.1062],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
154/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.2337,  0.2231,  1.1415],
         [-0.2171,  0.2402,  1.1585],
         [-0.2125,  0.2425,  1.1608],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2324,  0.2245,  1.1429],
         [-0.2169,  0.2403,  1.1586],
         [-0.2114,  0.2437,  1.1620],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2171,  0.2402,  1.1585],
         [-0.2157,  0.2416,  1.1599],
         [-0.1974,  0.2580,  1.1762],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[537.7000,  63.6500, 577.6000, 481.6500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.2337,  0.2231,  1.1415],
         [-0.2171,  0.2402,  1.1585],
         [-0.2125,  0.2425,  1.1608],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2324,  0.2245,  1.1429],
         [-0.2169,  0.2403,  1.1586],
         [-0.2114,  0.2437,  1.1620],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2171,  0.2402,  1.1585],
         [-0.2157,  0.2416,  1.1599],
         [-0.1974,  0.2580,  1.1762],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
155/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.8713, 1.7965, 1.5406],
         [1.8922, 1.7838, 1.5449],
         [1.6624, 1.5398, 1.2998],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8069, 1.7307, 1.4751],
         [1.9190, 1.8137, 1.5735],
         [1.7862, 1.6731, 1.4347],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8124, 1.7372, 1.4834],
         [1.9723, 1.8979, 1.6425],
         [1.9797, 1.8709, 1.6317],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[507.3000,  93.1000, 523.4500, 413.2500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.8713, 1.7965, 1.5406],
         [1.8922, 1.7838, 1.5449],
         [1.6624, 1.5398, 1.2998],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8069, 1.7307, 1.4751],
         [1.9190, 1.8137, 1.5735],
         [1.7862, 1.6731, 1.4347],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8124, 1.7372, 1.4834],
         [1.9723, 1.8979, 1.6425],
         [1.9797, 1.8709, 1.6317],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
156/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.4744, -0.2504,  0.5636],
         [-0.4009, -0.1762,  0.5990],
         [-0.3193, -0.1090,  0.6019],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5672, -0.3436,  0.4311],
         [-0.4909, -0.2528,  0.4680],
         [-0.3904, -0.1697,  0.4956],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.6907, -0.4568,  0.2454],
         [-0.5980, -0.3795,  0.2869],
         [-0.4826, -0.2942,  0.3407],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[114.9500, 241.3000, 123.5000, 312.5500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.4744, -0.2504,  0.5636],
         [-0.4009, -0.1762,  0.5990],
         [-0.3193, -0.1090,  0.6019],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5672, -0.3436,  0.4311],
         [-0.4909, -0.2528,  0.4680],
         [-0.3904, -0.1697,  0.4956],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.6907, -0.4568,  0.2454],
         [-0.5980, -0.3795,  0.2869],
         [-0.4826, -0.2942,  0.3407],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
157/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.6906, 0.9580, 1.3154],
         [0.6906, 0.9580, 1.3154],
         [0.6951, 0.9557, 1.3154],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6906, 0.9580, 1.3154],
         [0.6906, 0.9580, 1.3154],
         [0.6951, 0.9557, 1.3154],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6928, 0.9603, 1.3177],
         [0.6928, 0.9603, 1.3177],
         [0.6973, 0.9580, 1.3177],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[342.0000, 223.2500, 357.2000, 281.2000,   0.0000],
        [266.0000, 270.7500, 279.3000, 310.6500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.6906, 0.9580, 1.3154],
         [0.6906, 0.9580, 1.3154],
         [0.6951, 0.9557, 1.3154],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6906, 0.9580, 1.3154],
         [0.6906, 0.9580, 1.3154],
         [0.6951, 0.9557, 1.3154],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6928, 0.9603, 1.3177],
         [0.6928, 0.9603, 1.3177],
         [0.6973, 0.9580, 1.3177],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
158/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.1768, 0.5203, 1.1585],
         [0.1768, 0.5203, 1.1585],
         [0.1768, 0.5203, 1.1585],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1768, 0.5203, 1.1585],
         [0.1768, 0.5203, 1.1585],
         [0.1768, 0.5203, 1.1585],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1791, 0.5226, 1.1608],
         [0.1791, 0.5226, 1.1608],
         [0.1791, 0.5226, 1.1608],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[495.9000,  68.4000, 533.9000, 377.1500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.1768, 0.5203, 1.1585],
         [0.1768, 0.5203, 1.1585],
         [0.1768, 0.5203, 1.1585],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1768, 0.5203, 1.1585],
         [0.1768, 0.5203, 1.1585],
         [0.1768, 0.5203, 1.1585],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1791, 0.5226, 1.1608],
         [0.1791, 0.5226, 1.1608],
         [0.1791, 0.5226, 1.1608],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
159/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.5279, 1.9365, 2.3070],
         [1.4756, 1.8831, 2.2538],
         [1.4395, 1.8462, 2.2171],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5116, 1.9199, 2.2905],
         [1.4755, 1.8830, 2.2537],
         [1.4384, 1.8450, 2.2159],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5094, 1.9176, 2.2882],
         [1.4720, 1.8794, 2.2501],
         [1.4224, 1.8287, 2.1997],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[474.0500, 227.0500, 490.2000, 359.1000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.5279, 1.9365, 2.3070],
         [1.4756, 1.8831, 2.2538],
         [1.4395, 1.8462, 2.2171],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5116, 1.9199, 2.2905],
         [1.4755, 1.8830, 2.2537],
         [1.4384, 1.8450, 2.2159],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5094, 1.9176, 2.2882],
         [1.4720, 1.8794, 2.2501],
         [1.4224, 1.8287, 2.1997],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
160/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.1083, 0.8004, 1.6814],
         [0.1083, 0.8004, 1.6814],
         [0.1083, 0.8004, 1.6814],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1083, 0.8004, 1.6814],
         [0.1083, 0.8004, 1.6814],
         [0.1083, 0.8004, 1.6814],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1083, 0.8004, 1.6814],
         [0.1083, 0.8004, 1.6814],
         [0.1083, 0.8004, 1.6814],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[327.7500, 219.4500, 343.9000, 374.3000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.1083, 0.8004, 1.6814],
         [0.1083, 0.8004, 1.6814],
         [0.1083, 0.8004, 1.6814],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1083, 0.8004, 1.6814],
         [0.1083, 0.8004, 1.6814],
         [0.1083, 0.8004, 1.6814],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1083, 0.8004, 1.6814],
         [0.1083, 0.8004, 1.6814],
         [0.1083, 0.8004, 1.6814],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
161/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.7766, 0.9584, 1.5424],
         [0.8307, 1.0137, 1.5975],
         [0.8803, 1.0644, 1.6479],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7419, 0.9230, 1.5071],
         [0.7959, 0.9781, 1.5620],
         [0.8441, 1.0274, 1.6110],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7283, 0.9090, 1.4932],
         [0.7766, 0.9584, 1.5424],
         [0.8082, 0.9907, 1.5745],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[555.7500, 262.2000, 566.2000, 303.0500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.7766, 0.9584, 1.5424],
         [0.8307, 1.0137, 1.5975],
         [0.8803, 1.0644, 1.6479],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7419, 0.9230, 1.5071],
         [0.7959, 0.9781, 1.5620],
         [0.8441, 1.0274, 1.6110],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7283, 0.9090, 1.4932],
         [0.7766, 0.9584, 1.5424],
         [0.8082, 0.9907, 1.5745],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
162/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.6049, 0.8704, 1.2631],
         [0.6049, 0.8704, 1.2631],
         [0.6049, 0.8704, 1.2631],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6049, 0.8704, 1.2631],
         [0.6049, 0.8704, 1.2631],
         [0.6049, 0.8704, 1.2631],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6049, 0.8704, 1.2631],
         [0.6049, 0.8704, 1.2631],
         [0.6049, 0.8704, 1.2631],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[488.3000,   0.9500, 519.6500, 468.3500,   0.0000],
        [112.1000, 251.7500, 122.5500, 316.3500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.6049, 0.8704, 1.2631],
         [0.6049, 0.8704, 1.2631],
         [0.6049, 0.8704, 1.2631],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6049, 0.8704, 1.2631],
         [0.6049, 0.8704, 1.2631],
         [0.6049, 0.8704, 1.2631],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6049, 0.8704, 1.2631],
         [0.6049, 0.8704, 1.2631],
         [0.6049, 0.8704, 1.2631],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
163/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.7293, 0.5774, 0.9017],
         [0.9827, 0.8401, 1.1614],
         [1.4900, 1.3902, 1.6934],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6865, 0.5372, 0.8599],
         [0.8928, 0.7795, 1.0854],
         [1.2255, 1.1203, 1.4245],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8281, 0.7134, 1.0196],
         [1.0014, 0.8907, 1.1961],
         [1.0546, 0.9519, 1.2548],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[  1.9000,  24.7000,  22.8000, 263.1500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.7293, 0.5774, 0.9017],
         [0.9827, 0.8401, 1.1614],
         [1.4900, 1.3902, 1.6934],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6865, 0.5372, 0.8599],
         [0.8928, 0.7795, 1.0854],
         [1.2255, 1.1203, 1.4245],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8281, 0.7134, 1.0196],
         [1.0014, 0.8907, 1.1961],
         [1.0546, 0.9519, 1.2548],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
164/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.4319, 0.6585, 1.5401],
         [0.4333, 0.6586, 1.5388],
         [0.4540, 0.6636, 1.5281],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3598, 0.5848, 1.4694],
         [0.3624, 0.5862, 1.4681],
         [0.3974, 0.6069, 1.4866],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2899, 0.5134, 1.4297],
         [0.2913, 0.5148, 1.4016],
         [0.3135, 0.5355, 1.4216],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 10.4500, 224.2000,  27.5500, 336.3000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.4319, 0.6585, 1.5401],
         [0.4333, 0.6586, 1.5388],
         [0.4540, 0.6636, 1.5281],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3598, 0.5848, 1.4694],
         [0.3624, 0.5862, 1.4681],
         [0.3974, 0.6069, 1.4866],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2899, 0.5134, 1.4297],
         [0.2913, 0.5148, 1.4016],
         [0.3135, 0.5355, 1.4216],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
165/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[2.1975, 2.3936, 2.5180],
         [2.1975, 2.3936, 2.5180],
         [2.1998, 2.3959, 2.5203],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.1975, 2.3936, 2.5180],
         [2.1975, 2.3936, 2.5180],
         [2.1998, 2.3959, 2.5203],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.1975, 2.3936, 2.5180],
         [2.1975, 2.3936, 2.5180],
         [2.1998, 2.3959, 2.5203],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[179.5500, 151.0500, 195.7000, 212.8000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[2.1975, 2.3936, 2.5180],
         [2.1975, 2.3936, 2.5180],
         [2.1998, 2.3959, 2.5203],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.1975, 2.3936, 2.5180],
         [2.1975, 2.3936, 2.5180],
         [2.1998, 2.3959, 2.5203],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.1975, 2.3936, 2.5180],
         [2.1975, 2.3936, 2.5180],
         [2.1998, 2.3959, 2.5203],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
166/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-1.6230, -1.3565, -1.7190],
         [-1.6047, -1.3890, -1.7308],
         [-1.4113, -1.1958, -1.5048],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.6842, -1.4361, -1.7409],
         [-1.5518, -1.3495, -1.6036],
         [-1.2145, -1.0127, -1.2591],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.6696, -1.4226, -1.6541],
         [-1.6757, -1.4479, -1.6272],
         [-1.4931, -1.3121, -1.4462],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[138.7000, 121.6000, 152.9500, 361.0000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-1.6230, -1.3565, -1.7190],
         [-1.6047, -1.3890, -1.7308],
         [-1.4113, -1.1958, -1.5048],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.6842, -1.4361, -1.7409],
         [-1.5518, -1.3495, -1.6036],
         [-1.2145, -1.0127, -1.2591],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.6696, -1.4226, -1.6541],
         [-1.6757, -1.4479, -1.6272],
         [-1.4931, -1.3121, -1.4462],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
167/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.4023, -0.2639, -0.1276],
         [-0.4417, -0.3028, -0.1627],
         [-0.3980, -0.2424, -0.0668],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.3977,  0.5752,  0.7100],
         [ 0.2227,  0.3949,  0.5658],
         [-0.2907, -0.1299,  0.0479],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.5632,  0.7947,  0.9540],
         [ 0.2582,  0.4679,  0.6734],
         [-0.2531, -0.0570,  0.1613],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[342.0000, 199.5000, 357.2000, 355.3000,   0.0000],
        [ 83.6000, 266.9500, 116.8500, 425.6000,   0.0000],
        [299.2500, 250.8000, 309.7000, 301.1500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.4023, -0.2639, -0.1276],
         [-0.4417, -0.3028, -0.1627],
         [-0.3980, -0.2424, -0.0668],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.3977,  0.5752,  0.7100],
         [ 0.2227,  0.3949,  0.5658],
         [-0.2907, -0.1299,  0.0479],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.5632,  0.7947,  0.9540],
         [ 0.2582,  0.4679,  0.6734],
         [-0.2531, -0.0570,  0.1613],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
168/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.9132, 1.4832, 1.9080],
         [0.9132, 1.4832, 1.9080],
         [0.9132, 1.4832, 1.9080],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9132, 1.4832, 1.9080],
         [0.9132, 1.4832, 1.9080],
         [0.9132, 1.4832, 1.9080],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9109, 1.4809, 1.9057],
         [0.9109, 1.4809, 1.9057],
         [0.9109, 1.4809, 1.9057],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[  4.7500, 237.5000,  19.9500, 346.7500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.9132, 1.4832, 1.9080],
         [0.9132, 1.4832, 1.9080],
         [0.9132, 1.4832, 1.9080],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9132, 1.4832, 1.9080],
         [0.9132, 1.4832, 1.9080],
         [0.9132, 1.4832, 1.9080],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9109, 1.4809, 1.9057],
         [0.9109, 1.4809, 1.9057],
         [0.9109, 1.4809, 1.9057],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
169/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[2.2489, 2.2360, 2.6226],
         [2.2489, 2.2360, 2.6226],
         [2.2489, 2.2360, 2.6226],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.2489, 2.2360, 2.6226],
         [2.2489, 2.2360, 2.6226],
         [2.2489, 2.2360, 2.6226],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.2489, 2.2337, 2.6203],
         [2.2489, 2.2337, 2.6203],
         [2.2489, 2.2337, 2.6203],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[496.8500,  83.6000, 523.4500, 482.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[2.2489, 2.2360, 2.6226],
         [2.2489, 2.2360, 2.6226],
         [2.2489, 2.2360, 2.6226],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.2489, 2.2360, 2.6226],
         [2.2489, 2.2360, 2.6226],
         [2.2489, 2.2360, 2.6226],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.2489, 2.2337, 2.6203],
         [2.2489, 2.2337, 2.6203],
         [2.2489, 2.2337, 2.6203],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
170/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-1.4162, -1.3359, -1.4215],
         [-1.4162, -1.3359, -1.4215],
         [-1.4118, -1.3313, -1.4214],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.4356, -1.3571, -1.4384],
         [-1.4355, -1.3570, -1.4383],
         [-1.4320, -1.3532, -1.4351],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.4694, -1.4078, -1.4361],
         [-1.4682, -1.4066, -1.4353],
         [-1.4523, -1.3883, -1.4273],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[346.7500, 246.0500, 356.2500, 284.0500,   0.0000],
        [280.2500, 244.1500, 291.6500, 335.3500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-1.4162, -1.3359, -1.4215],
         [-1.4162, -1.3359, -1.4215],
         [-1.4118, -1.3313, -1.4214],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.4356, -1.3571, -1.4384],
         [-1.4355, -1.3570, -1.4383],
         [-1.4320, -1.3532, -1.4351],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.4694, -1.4078, -1.4361],
         [-1.4682, -1.4066, -1.4353],
         [-1.4523, -1.3883, -1.4273],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
171/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.3419, -0.1150, -1.1481],
         [-0.2138,  0.0159, -1.0177],
         [ 0.3598,  0.6023, -0.4295],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0549,  0.2920, -0.7824],
         [ 0.1772,  0.4170, -0.6606],
         [ 0.5338,  0.7816, -0.2977],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.4168,  0.6804, -0.4722],
         [ 0.4104,  0.6738, -0.5129],
         [ 0.6032,  0.8713, -0.3193],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[350.5500, 234.6500, 361.0000, 342.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.3419, -0.1150, -1.1481],
         [-0.2138,  0.0159, -1.0177],
         [ 0.3598,  0.6023, -0.4295],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0549,  0.2920, -0.7824],
         [ 0.1772,  0.4170, -0.6606],
         [ 0.5338,  0.7816, -0.2977],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.4168,  0.6804, -0.4722],
         [ 0.4104,  0.6738, -0.5129],
         [ 0.6032,  0.8713, -0.3193],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
172/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.1083, 0.2927, 0.6705],
         [0.1083, 0.2927, 0.6705],
         [0.1083, 0.2927, 0.6705],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1083, 0.2927, 0.6705],
         [0.1083, 0.2927, 0.6705],
         [0.1083, 0.2927, 0.6705],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1106, 0.2950, 0.6728],
         [0.1106, 0.2950, 0.6728],
         [0.1106, 0.2950, 0.6728],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[475.9500, 116.8500, 494.0000, 303.0500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.1083, 0.2927, 0.6705],
         [0.1083, 0.2927, 0.6705],
         [0.1083, 0.2927, 0.6705],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1083, 0.2927, 0.6705],
         [0.1083, 0.2927, 0.6705],
         [0.1083, 0.2927, 0.6705],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1106, 0.2950, 0.6728],
         [0.1106, 0.2950, 0.6728],
         [0.1106, 0.2950, 0.6728],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
173/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.9817, 1.2906, 1.4897],
         [0.9817, 1.2906, 1.4897],
         [0.9817, 1.2906, 1.4897],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9817, 1.2906, 1.4897],
         [0.9817, 1.2906, 1.4897],
         [0.9817, 1.2906, 1.4897],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9862, 1.2883, 1.4897],
         [0.9862, 1.2883, 1.4897],
         [0.9862, 1.2883, 1.4897],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[494.9500, 225.1500, 505.4000, 304.0000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.9817, 1.2906, 1.4897],
         [0.9817, 1.2906, 1.4897],
         [0.9817, 1.2906, 1.4897],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9817, 1.2906, 1.4897],
         [0.9817, 1.2906, 1.4897],
         [0.9817, 1.2906, 1.4897],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9862, 1.2883, 1.4897],
         [0.9862, 1.2883, 1.4897],
         [0.9862, 1.2883, 1.4897],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
174/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.8961, 1.1155, 1.3502],
         [0.8961, 1.1155, 1.3502],
         [0.8961, 1.1155, 1.3502],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8961, 1.1155, 1.3502],
         [0.8961, 1.1155, 1.3502],
         [0.8961, 1.1155, 1.3502],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8961, 1.1155, 1.3502],
         [0.8961, 1.1155, 1.3502],
         [0.8961, 1.1155, 1.3502],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[209.0000, 182.4000, 220.4000, 331.5500,   0.0000],
        [409.4500, 269.8000, 421.8000, 312.5500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.8961, 1.1155, 1.3502],
         [0.8961, 1.1155, 1.3502],
         [0.8961, 1.1155, 1.3502],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8961, 1.1155, 1.3502],
         [0.8961, 1.1155, 1.3502],
         [0.8961, 1.1155, 1.3502],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8961, 1.1155, 1.3502],
         [0.8961, 1.1155, 1.3502],
         [0.8961, 1.1155, 1.3502],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
175/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.3536,  0.0656,  0.8104],
         [-0.3369,  0.0826,  0.8274],
         [-0.3347,  0.0849,  0.8297],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3536,  0.0656,  0.8104],
         [-0.3369,  0.0826,  0.8274],
         [-0.3347,  0.0849,  0.8297],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3536,  0.0656,  0.8104],
         [-0.3369,  0.0826,  0.8274],
         [-0.3347,  0.0849,  0.8297],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[407.5500, 197.6000, 416.1000, 355.3000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.3536,  0.0656,  0.8104],
         [-0.3369,  0.0826,  0.8274],
         [-0.3347,  0.0849,  0.8297],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3536,  0.0656,  0.8104],
         [-0.3369,  0.0826,  0.8274],
         [-0.3347,  0.0849,  0.8297],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3536,  0.0656,  0.8104],
         [-0.3369,  0.0826,  0.8274],
         [-0.3347,  0.0849,  0.8297],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
176/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.4269, 1.5882, 1.9777],
         [1.4269, 1.5882, 1.9777],
         [1.4247, 1.5859, 1.9754],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4269, 1.5882, 1.9777],
         [1.4269, 1.5882, 1.9777],
         [1.4247, 1.5859, 1.9754],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4269, 1.5882, 1.9777],
         [1.4269, 1.5882, 1.9777],
         [1.4247, 1.5859, 1.9754],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[163.4000, 254.6000, 175.7500, 302.1000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.4269, 1.5882, 1.9777],
         [1.4269, 1.5882, 1.9777],
         [1.4247, 1.5859, 1.9754],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4269, 1.5882, 1.9777],
         [1.4269, 1.5882, 1.9777],
         [1.4247, 1.5859, 1.9754],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4269, 1.5882, 1.9777],
         [1.4269, 1.5882, 1.9777],
         [1.4247, 1.5859, 1.9754],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
177/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.8447, 1.0630, 1.2980],
         [0.8447, 1.0630, 1.2980],
         [0.8447, 1.0630, 1.2980],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8447, 1.0630, 1.2980],
         [0.8447, 1.0630, 1.2980],
         [0.8447, 1.0630, 1.2980],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8447, 1.0630, 1.2980],
         [0.8447, 1.0630, 1.2980],
         [0.8447, 1.0630, 1.2980],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[229.9000, 262.2000, 241.3000, 289.7500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.8447, 1.0630, 1.2980],
         [0.8447, 1.0630, 1.2980],
         [0.8447, 1.0630, 1.2980],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8447, 1.0630, 1.2980],
         [0.8447, 1.0630, 1.2980],
         [0.8447, 1.0630, 1.2980],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8447, 1.0630, 1.2980],
         [0.8447, 1.0630, 1.2980],
         [0.8447, 1.0630, 1.2980],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
178/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[ 0.4313,  0.4654,  0.4764],
         [-0.5349, -0.5224, -0.5071],
         [ 0.1145,  0.1415,  0.1540],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0979,  0.1232,  0.1384],
         [-0.4023, -0.3883, -0.3707],
         [ 0.3654,  0.3962,  0.4104],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0424, -0.0410,  0.0094],
         [-0.2983, -0.3026, -0.2511],
         [ 0.6494,  0.6622,  0.7115],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[419.9000, 162.4500, 439.8500, 381.9000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[ 0.4313,  0.4654,  0.4764],
         [-0.5349, -0.5224, -0.5071],
         [ 0.1145,  0.1415,  0.1540],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0979,  0.1232,  0.1384],
         [-0.4023, -0.3883, -0.3707],
         [ 0.3654,  0.3962,  0.4104],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0424, -0.0410,  0.0094],
         [-0.2983, -0.3026, -0.2511],
         [ 0.6494,  0.6622,  0.7115],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
179/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.2282, 0.6078, 1.2980],
         [0.2282, 0.6078, 1.2980],
         [0.2282, 0.6078, 1.2980],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2282, 0.6078, 1.2980],
         [0.2282, 0.6078, 1.2980],
         [0.2282, 0.6078, 1.2980],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2282, 0.6078, 1.2980],
         [0.2282, 0.6078, 1.2980],
         [0.2282, 0.6078, 1.2980],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[348.6500,  26.6000, 361.9500, 303.0500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.2282, 0.6078, 1.2980],
         [0.2282, 0.6078, 1.2980],
         [0.2282, 0.6078, 1.2980],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2282, 0.6078, 1.2980],
         [0.2282, 0.6078, 1.2980],
         [0.2282, 0.6078, 1.2980],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2282, 0.6078, 1.2980],
         [0.2282, 0.6078, 1.2980],
         [0.2282, 0.6078, 1.2980],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
180/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.5360, 1.1326, 1.7507],
         [0.5180, 1.1142, 1.7323],
         [0.4999, 1.0957, 1.7140],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5360, 1.1326, 1.7507],
         [0.5192, 1.1154, 1.7336],
         [0.4999, 1.0957, 1.7140],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5386, 1.1353, 1.7533],
         [0.5339, 1.1305, 1.7485],
         [0.5019, 1.0977, 1.7160],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[449.3500, 226.1000, 467.4000, 349.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.5360, 1.1326, 1.7507],
         [0.5180, 1.1142, 1.7323],
         [0.4999, 1.0957, 1.7140],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5360, 1.1326, 1.7507],
         [0.5192, 1.1154, 1.7336],
         [0.4999, 1.0957, 1.7140],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5386, 1.1353, 1.7533],
         [0.5339, 1.1305, 1.7485],
         [0.5019, 1.0977, 1.7160],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
181/730
After normalization, Min: -2.1179039301310043, Max: 2.6225708071390788
Checking data:  {'img': tensor([[[0.5193, 0.7829, 1.4897],
         [0.5193, 0.7829, 1.4897],
         [0.5193, 0.7829, 1.4897],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5193, 0.7829, 1.4897],
         [0.5193, 0.7829, 1.4897],
         [0.5193, 0.7829, 1.4897],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5148, 0.7852, 1.4897],
         [0.5148, 0.7852, 1.4897],
         [0.5148, 0.7852, 1.4897],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 45.6000, 238.4500,  54.1500, 317.3000,   0.0000],
        [437.9500, 268.8500, 447.4500, 304.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.5193, 0.7829, 1.4897],
         [0.5193, 0.7829, 1.4897],
         [0.5193, 0.7829, 1.4897],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5193, 0.7829, 1.4897],
         [0.5193, 0.7829, 1.4897],
         [0.5193, 0.7829, 1.4897],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5148, 0.7852, 1.4897],
         [0.5148, 0.7852, 1.4897],
         [0.5148, 0.7852, 1.4897],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
182/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[2.1633, 1.9559, 2.3786],
         [2.1633, 1.9559, 2.3786],
         [2.1633, 1.9559, 2.3786],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.1633, 1.9559, 2.3786],
         [2.1633, 1.9559, 2.3786],
         [2.1633, 1.9559, 2.3786],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.1655, 1.9582, 2.3809],
         [2.1654, 1.9580, 2.3807],
         [2.1633, 1.9559, 2.3786],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[141.5500, 235.6000, 152.0000, 336.3000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[2.1633, 1.9559, 2.3786],
         [2.1633, 1.9559, 2.3786],
         [2.1633, 1.9559, 2.3786],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.1633, 1.9559, 2.3786],
         [2.1633, 1.9559, 2.3786],
         [2.1633, 1.9559, 2.3786],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.1655, 1.9582, 2.3809],
         [2.1654, 1.9580, 2.3807],
         [2.1633, 1.9559, 2.3786],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
183/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.1088, 0.5208, 1.0021],
         [0.1088, 0.5208, 1.0021],
         [0.1088, 0.5208, 1.0021],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1268, 0.5392, 1.0205],
         [0.1268, 0.5392, 1.0205],
         [0.1268, 0.5392, 1.0205],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1448, 0.5576, 1.0388],
         [0.1448, 0.5576, 1.0388],
         [0.1448, 0.5576, 1.0388],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[536.7500,   0.9500, 563.3500, 417.0500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.1088, 0.5208, 1.0021],
         [0.1088, 0.5208, 1.0021],
         [0.1088, 0.5208, 1.0021],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1268, 0.5392, 1.0205],
         [0.1268, 0.5392, 1.0205],
         [0.1268, 0.5392, 1.0205],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1448, 0.5576, 1.0388],
         [0.1448, 0.5576, 1.0388],
         [0.1448, 0.5576, 1.0388],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
184/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.8511,  0.0822,  1.1058],
         [-0.8673,  0.0656,  1.0893],
         [-0.8674,  0.0655,  1.0892],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8493,  0.0840,  1.1076],
         [-0.8493,  0.0840,  1.1076],
         [-0.8516,  0.0817,  1.1053],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8313,  0.1024,  1.1214],
         [-0.8313,  0.1024,  1.1214],
         [-0.8335,  0.1001,  1.1191],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[285.9500, 264.1000, 298.3000, 315.4000,   0.0000],
        [228.9500, 234.6500, 245.1000, 298.3000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.8511,  0.0822,  1.1058],
         [-0.8673,  0.0656,  1.0893],
         [-0.8674,  0.0655,  1.0892],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8493,  0.0840,  1.1076],
         [-0.8493,  0.0840,  1.1076],
         [-0.8516,  0.0817,  1.1053],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8313,  0.1024,  1.1214],
         [-0.8313,  0.1024,  1.1214],
         [-0.8335,  0.1001,  1.1191],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
185/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.0222, 0.4673, 1.0709],
         [0.0056, 0.4503, 1.0539],
         [0.0033, 0.4480, 1.0517],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0222, 0.4673, 1.0709],
         [0.0056, 0.4503, 1.0539],
         [0.0033, 0.4480, 1.0517],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0222, 0.4673, 1.0709],
         [0.0056, 0.4503, 1.0539],
         [0.0033, 0.4480, 1.0517],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[115.9000, 180.5000, 133.0000, 317.3000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.0222, 0.4673, 1.0709],
         [0.0056, 0.4503, 1.0539],
         [0.0033, 0.4480, 1.0517],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0222, 0.4673, 1.0709],
         [0.0056, 0.4503, 1.0539],
         [0.0033, 0.4480, 1.0517],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0222, 0.4673, 1.0709],
         [0.0056, 0.4503, 1.0539],
         [0.0033, 0.4480, 1.0517],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
186/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.1187, 1.3431, 1.5768],
         [1.1187, 1.3431, 1.5768],
         [1.1187, 1.3431, 1.5768],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1200, 1.3445, 1.5782],
         [1.1200, 1.3445, 1.5782],
         [1.1200, 1.3445, 1.5782],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1381, 1.3629, 1.5965],
         [1.1381, 1.3629, 1.5965],
         [1.1381, 1.3629, 1.5965],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[185.2500, 264.1000, 191.9000, 288.8000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.1187, 1.3431, 1.5768],
         [1.1187, 1.3431, 1.5768],
         [1.1187, 1.3431, 1.5768],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1200, 1.3445, 1.5782],
         [1.1200, 1.3445, 1.5782],
         [1.1200, 1.3445, 1.5782],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1381, 1.3629, 1.5965],
         [1.1381, 1.3629, 1.5965],
         [1.1381, 1.3629, 1.5965],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
187/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.3237, 1.3427, 1.7855],
         [1.3039, 1.3224, 1.7654],
         [1.2728, 1.2906, 1.7337],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3233, 1.3422, 1.7851],
         [1.2886, 1.3067, 1.7497],
         [1.2728, 1.2906, 1.7337],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3211, 1.3400, 1.7828],
         [1.2884, 1.3066, 1.7496],
         [1.2708, 1.2886, 1.7317],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[285.0000, 104.5000, 315.4000, 473.1000,   0.0000],
        [243.2000,   3.8000, 270.7500, 123.5000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.3237, 1.3427, 1.7855],
         [1.3039, 1.3224, 1.7654],
         [1.2728, 1.2906, 1.7337],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3233, 1.3422, 1.7851],
         [1.2886, 1.3067, 1.7497],
         [1.2728, 1.2906, 1.7337],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3211, 1.3400, 1.7828],
         [1.2884, 1.3066, 1.7496],
         [1.2708, 1.2886, 1.7317],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
188/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.2385, 1.4657, 1.6988],
         [1.2385, 1.4657, 1.6988],
         [1.2385, 1.4657, 1.6988],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2385, 1.4657, 1.6988],
         [1.2385, 1.4657, 1.6988],
         [1.2385, 1.4657, 1.6988],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2385, 1.4657, 1.6988],
         [1.2385, 1.4657, 1.6988],
         [1.2385, 1.4657, 1.6988],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[550.0500,  62.7000, 570.9500, 288.8000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.2385, 1.4657, 1.6988],
         [1.2385, 1.4657, 1.6988],
         [1.2385, 1.4657, 1.6988],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2385, 1.4657, 1.6988],
         [1.2385, 1.4657, 1.6988],
         [1.2385, 1.4657, 1.6988],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2385, 1.4657, 1.6988],
         [1.2385, 1.4657, 1.6988],
         [1.2385, 1.4657, 1.6988],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
189/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-1.5853, -1.5280, -1.5247],
         [-1.5528, -1.5280, -1.5081],
         [-1.5501, -1.5253, -1.5055],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.5514, -1.5266, -1.5068],
         [-1.5501, -1.5252, -1.5054],
         [-1.5343, -1.5091, -1.4893],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.5334, -1.5060, -1.4929],
         [-1.5321, -1.5068, -1.4870],
         [-1.5160, -1.4904, -1.4707],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[474.0500, 174.8000, 492.1000, 264.1000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-1.5853, -1.5280, -1.5247],
         [-1.5528, -1.5280, -1.5081],
         [-1.5501, -1.5253, -1.5055],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.5514, -1.5266, -1.5068],
         [-1.5501, -1.5252, -1.5054],
         [-1.5343, -1.5091, -1.4893],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.5334, -1.5060, -1.4929],
         [-1.5321, -1.5068, -1.4870],
         [-1.5160, -1.4904, -1.4707],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
190/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.9462, -0.4173, -0.1620],
         [-1.0239, -0.4769, -0.3383],
         [-1.1260, -0.5444, -0.6164],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5559, -0.0197,  0.1917],
         [-0.6910, -0.1393, -0.0414],
         [-0.9126, -0.3286, -0.4335],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.2286,  0.7613,  0.8668],
         [ 0.1002,  0.6348,  0.6611],
         [-0.2667,  0.2988,  0.1616],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[419.9000,  88.3500, 456.9500, 340.1000,   0.0000],
        [454.1000,   6.6500, 486.4000,  95.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.9462, -0.4173, -0.1620],
         [-1.0239, -0.4769, -0.3383],
         [-1.1260, -0.5444, -0.6164],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5559, -0.0197,  0.1917],
         [-0.6910, -0.1393, -0.0414],
         [-0.9126, -0.3286, -0.4335],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.2286,  0.7613,  0.8668],
         [ 0.1002,  0.6348,  0.6611],
         [-0.2667,  0.2988,  0.1616],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
191/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.4242, 1.6555, 1.8878],
         [1.2870, 1.5152, 1.7481],
         [1.4490, 1.6808, 1.9130],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4686, 1.7009, 1.9330],
         [1.3648, 1.5947, 1.8273],
         [1.4287, 1.6601, 1.8924],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3930, 1.6236, 1.8560],
         [1.4047, 1.6355, 1.8679],
         [1.3945, 1.6251, 1.8576],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 45.6000,   2.8500,  77.9000, 370.5000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.4242, 1.6555, 1.8878],
         [1.2870, 1.5152, 1.7481],
         [1.4490, 1.6808, 1.9130],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4686, 1.7009, 1.9330],
         [1.3648, 1.5947, 1.8273],
         [1.4287, 1.6601, 1.8924],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3930, 1.6236, 1.8560],
         [1.4047, 1.6355, 1.8679],
         [1.3945, 1.6251, 1.8576],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
192/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.3589, 1.5187, 1.7341],
         [1.3755, 1.5357, 1.7511],
         [1.3755, 1.5357, 1.7511],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3589, 1.5187, 1.7341],
         [1.3755, 1.5357, 1.7511],
         [1.3755, 1.5357, 1.7511],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3589, 1.5187, 1.7341],
         [1.3755, 1.5357, 1.7511],
         [1.3755, 1.5357, 1.7511],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[169.1000, 241.3000, 185.2500, 335.3500,   0.0000],
        [104.5000, 246.0500, 116.8500, 313.5000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.3589, 1.5187, 1.7341],
         [1.3755, 1.5357, 1.7511],
         [1.3755, 1.5357, 1.7511],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3589, 1.5187, 1.7341],
         [1.3755, 1.5357, 1.7511],
         [1.3755, 1.5357, 1.7511],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3589, 1.5187, 1.7341],
         [1.3755, 1.5357, 1.7511],
         [1.3755, 1.5357, 1.7511],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
193/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.7077, 1.2206, 1.7676],
         [0.7117, 1.2219, 1.7350],
         [0.7649, 1.2440, 1.7570],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7131, 1.2233, 1.7677],
         [0.7129, 1.2206, 1.7337],
         [0.7305, 1.2085, 1.7215],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7825, 1.2621, 1.7750],
         [0.7646, 1.2434, 1.7563],
         [0.7526, 1.2229, 1.7317],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[583.3000, 183.3500, 605.1500, 371.4500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.7077, 1.2206, 1.7676],
         [0.7117, 1.2219, 1.7350],
         [0.7649, 1.2440, 1.7570],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7131, 1.2233, 1.7677],
         [0.7129, 1.2206, 1.7337],
         [0.7305, 1.2085, 1.7215],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7825, 1.2621, 1.7750],
         [0.7646, 1.2434, 1.7563],
         [0.7526, 1.2229, 1.7317],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
194/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.2967, 0.5728, 1.5942],
         [0.2967, 0.5728, 1.5942],
         [0.2967, 0.5728, 1.5942],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2967, 0.5728, 1.5942],
         [0.2967, 0.5728, 1.5942],
         [0.2967, 0.5728, 1.5942],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2989, 0.5751, 1.5965],
         [0.2989, 0.5751, 1.5965],
         [0.2989, 0.5751, 1.5965],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[319.2000,  93.1000, 347.7000, 363.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.2967, 0.5728, 1.5942],
         [0.2967, 0.5728, 1.5942],
         [0.2967, 0.5728, 1.5942],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2967, 0.5728, 1.5942],
         [0.2967, 0.5728, 1.5942],
         [0.2967, 0.5728, 1.5942],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2989, 0.5751, 1.5965],
         [0.2989, 0.5751, 1.5965],
         [0.2989, 0.5751, 1.5965],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
195/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.4513, 0.7484, 0.9498],
         [0.4679, 0.7654, 0.9668],
         [0.4702, 0.7677, 0.9691],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4512, 0.7483, 0.9498],
         [0.4667, 0.7641, 0.9655],
         [0.4700, 0.7675, 0.9689],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4531, 0.7434, 0.9471],
         [0.4567, 0.7470, 0.9507],
         [0.4724, 0.7631, 0.9668],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 10.4500, 198.5500,  20.9000, 342.0000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.4513, 0.7484, 0.9498],
         [0.4679, 0.7654, 0.9668],
         [0.4702, 0.7677, 0.9691],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4512, 0.7483, 0.9498],
         [0.4667, 0.7641, 0.9655],
         [0.4700, 0.7675, 0.9689],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4531, 0.7434, 0.9471],
         [0.4567, 0.7470, 0.9507],
         [0.4724, 0.7631, 0.9668],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
196/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.3994, 0.8704, 1.3328],
         [0.3994, 0.8704, 1.3328],
         [0.3994, 0.8704, 1.3328],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3994, 0.8704, 1.3328],
         [0.3994, 0.8704, 1.3328],
         [0.3994, 0.8704, 1.3328],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4017, 0.8728, 1.3351],
         [0.4017, 0.8728, 1.3351],
         [0.4017, 0.8728, 1.3351],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 85.5000, 152.0000, 114.0000, 368.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.3994, 0.8704, 1.3328],
         [0.3994, 0.8704, 1.3328],
         [0.3994, 0.8704, 1.3328],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3994, 0.8704, 1.3328],
         [0.3994, 0.8704, 1.3328],
         [0.3994, 0.8704, 1.3328],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4017, 0.8728, 1.3351],
         [0.4017, 0.8728, 1.3351],
         [0.4017, 0.8728, 1.3351],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
197/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-1.1418, -0.1450,  1.2282],
         [-1.1418, -0.1450,  1.2282],
         [-1.1418, -0.1450,  1.2282],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.1418, -0.1450,  1.2282],
         [-1.1418, -0.1450,  1.2282],
         [-1.1418, -0.1450,  1.2282],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.1418, -0.1450,  1.2282],
         [-1.1418, -0.1450,  1.2282],
         [-1.1418, -0.1450,  1.2282],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[306.8500, 235.6000, 315.4000, 329.6500,   0.0000],
        [433.2000, 253.6500, 445.5500, 310.6500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-1.1418, -0.1450,  1.2282],
         [-1.1418, -0.1450,  1.2282],
         [-1.1418, -0.1450,  1.2282],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.1418, -0.1450,  1.2282],
         [-1.1418, -0.1450,  1.2282],
         [-1.1418, -0.1450,  1.2282],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.1418, -0.1450,  1.2282],
         [-1.1418, -0.1450,  1.2282],
         [-1.1418, -0.1450,  1.2282],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
198/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.7493, -0.3564, -0.8114],
         [-1.0875, -0.7022, -1.1530],
         [-1.3623, -0.9831, -1.4010],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.1282, -0.7452, -1.1590],
         [-1.4565, -1.0808, -1.4919],
         [-1.6336, -1.2618, -1.6570],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.2488, -0.8846, -1.2245],
         [-1.5278, -1.1699, -1.5084],
         [-1.5753, -1.2184, -1.5528],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[323.9500, 267.9000, 330.6000, 315.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.7493, -0.3564, -0.8114],
         [-1.0875, -0.7022, -1.1530],
         [-1.3623, -0.9831, -1.4010],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.1282, -0.7452, -1.1590],
         [-1.4565, -1.0808, -1.4919],
         [-1.6336, -1.2618, -1.6570],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.2488, -0.8846, -1.2245],
         [-1.5278, -1.1699, -1.5084],
         [-1.5753, -1.2184, -1.5528],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
199/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.6049, 1.1155, 1.6649],
         [0.6036, 1.1155, 1.6988],
         [0.5833, 1.1178, 1.7034],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6049, 1.1155, 1.6649],
         [0.6036, 1.1155, 1.6988],
         [0.5833, 1.1178, 1.7034],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6072, 1.1178, 1.6672],
         [0.6058, 1.1178, 1.7011],
         [0.5856, 1.1202, 1.7057],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[424.6500, 123.5000, 444.6000, 431.3000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.6049, 1.1155, 1.6649],
         [0.6036, 1.1155, 1.6988],
         [0.5833, 1.1178, 1.7034],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6049, 1.1155, 1.6649],
         [0.6036, 1.1155, 1.6988],
         [0.5833, 1.1178, 1.7034],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6072, 1.1178, 1.6672],
         [0.6058, 1.1178, 1.7011],
         [0.5856, 1.1202, 1.7057],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
200/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.0801,  0.3277,  0.8099],
         [-0.0801,  0.3277,  0.8099],
         [-0.0823,  0.3254,  0.8076],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0801,  0.3277,  0.8099],
         [-0.0801,  0.3277,  0.8099],
         [-0.0823,  0.3254,  0.8076],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0801,  0.3277,  0.8099],
         [-0.0801,  0.3277,  0.8099],
         [-0.0823,  0.3254,  0.8076],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[455.0500, 250.8000, 464.5500, 316.3500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.0801,  0.3277,  0.8099],
         [-0.0801,  0.3277,  0.8099],
         [-0.0823,  0.3254,  0.8076],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0801,  0.3277,  0.8099],
         [-0.0801,  0.3277,  0.8099],
         [-0.0823,  0.3254,  0.8076],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0801,  0.3277,  0.8099],
         [-0.0801,  0.3277,  0.8099],
         [-0.0823,  0.3254,  0.8076],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
201/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.5878, 0.8529, 1.2457],
         [0.5878, 0.8529, 1.2457],
         [0.5856, 0.8506, 1.2434],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5878, 0.8529, 1.2457],
         [0.5878, 0.8529, 1.2457],
         [0.5856, 0.8506, 1.2434],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5878, 0.8529, 1.2457],
         [0.5878, 0.8529, 1.2457],
         [0.5856, 0.8506, 1.2434],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[527.2500, 142.5000, 541.5000, 370.5000,   0.0000],
        [172.9000, 224.2000, 186.2000, 339.1500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.5878, 0.8529, 1.2457],
         [0.5878, 0.8529, 1.2457],
         [0.5856, 0.8506, 1.2434],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5878, 0.8529, 1.2457],
         [0.5878, 0.8529, 1.2457],
         [0.5856, 0.8506, 1.2434],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5878, 0.8529, 1.2457],
         [0.5878, 0.8529, 1.2457],
         [0.5856, 0.8506, 1.2434],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
202/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.8276, 1.1331, 1.4722],
         [0.8276, 1.1331, 1.4722],
         [0.8276, 1.1331, 1.4722],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8276, 1.1331, 1.4722],
         [0.8276, 1.1331, 1.4722],
         [0.8276, 1.1331, 1.4722],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8276, 1.1331, 1.4722],
         [0.8276, 1.1331, 1.4722],
         [0.8276, 1.1331, 1.4722],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[176.7000, 247.0000, 184.3000, 323.0000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.8276, 1.1331, 1.4722],
         [0.8276, 1.1331, 1.4722],
         [0.8276, 1.1331, 1.4722],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8276, 1.1331, 1.4722],
         [0.8276, 1.1331, 1.4722],
         [0.8276, 1.1331, 1.4722],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8276, 1.1331, 1.4722],
         [0.8276, 1.1331, 1.4722],
         [0.8276, 1.1331, 1.4722],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
203/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[ 0.5730,  0.7507,  1.1971],
         [ 0.7515,  0.9359,  1.3801],
         [-0.5036, -0.3181,  0.1228],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.3924,  0.5872,  1.0669],
         [ 0.6812,  0.8825,  1.3609],
         [-0.1319,  0.0513,  0.5337],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.5708,  0.8203,  1.2875],
         [ 0.7468,  1.0003,  1.4667],
         [ 0.3340,  0.5782,  1.0505],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[325.8500, 268.8500, 336.3000, 316.3500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[ 0.5730,  0.7507,  1.1971],
         [ 0.7515,  0.9359,  1.3801],
         [-0.5036, -0.3181,  0.1228],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.3924,  0.5872,  1.0669],
         [ 0.6812,  0.8825,  1.3609],
         [-0.1319,  0.0513,  0.5337],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.5708,  0.8203,  1.2875],
         [ 0.7468,  1.0003,  1.4667],
         [ 0.3340,  0.5782,  1.0505],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
204/730
After normalization, Min: -2.083654420442196, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.1782, 0.6442, 1.1599],
         [0.2150, 0.6819, 1.1974],
         [0.2683, 0.7364, 1.2516],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1944, 0.6608, 1.1764],
         [0.2111, 0.6779, 1.1934],
         [0.2332, 0.7005, 1.2159],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1961, 0.6626, 1.1782],
         [0.1951, 0.6616, 1.1771],
         [0.2108, 0.6776, 1.1931],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[536.7500, 263.1500, 551.0000, 349.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.1782, 0.6442, 1.1599],
         [0.2150, 0.6819, 1.1974],
         [0.2683, 0.7364, 1.2516],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1944, 0.6608, 1.1764],
         [0.2111, 0.6779, 1.1934],
         [0.2332, 0.7005, 1.2159],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1961, 0.6626, 1.1782],
         [0.1951, 0.6616, 1.1771],
         [0.2108, 0.6776, 1.1931],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
205/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.4337, 0.8354, 1.4548],
         [0.4337, 0.8354, 1.4548],
         [0.4314, 0.8331, 1.4525],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4337, 0.8354, 1.4548],
         [0.4337, 0.8354, 1.4548],
         [0.4316, 0.8333, 1.4527],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4359, 0.8377, 1.4571],
         [0.4358, 0.8376, 1.4569],
         [0.4337, 0.8354, 1.4548],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 68.4000, 245.1000,  79.8000, 311.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.4337, 0.8354, 1.4548],
         [0.4337, 0.8354, 1.4548],
         [0.4314, 0.8331, 1.4525],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4337, 0.8354, 1.4548],
         [0.4337, 0.8354, 1.4548],
         [0.4316, 0.8333, 1.4527],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4359, 0.8377, 1.4571],
         [0.4358, 0.8376, 1.4569],
         [0.4337, 0.8354, 1.4548],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
206/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.4679, 0.8704, 1.4200],
         [0.4666, 0.8691, 1.4186],
         [0.4486, 0.8506, 1.4002],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4679, 0.8704, 1.4200],
         [0.4666, 0.8691, 1.4186],
         [0.4486, 0.8506, 1.4002],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4679, 0.8704, 1.4200],
         [0.4666, 0.8691, 1.4186],
         [0.4486, 0.8506, 1.4002],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[429.4000, 140.6000, 442.7000, 340.1000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.4679, 0.8704, 1.4200],
         [0.4666, 0.8691, 1.4186],
         [0.4486, 0.8506, 1.4002],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4679, 0.8704, 1.4200],
         [0.4666, 0.8691, 1.4186],
         [0.4486, 0.8506, 1.4002],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4679, 0.8704, 1.4200],
         [0.4666, 0.8691, 1.4186],
         [0.4486, 0.8506, 1.4002],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
207/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.5130, 1.6762, 1.8561],
         [1.5112, 1.6744, 1.8543],
         [1.4936, 1.6564, 1.8364],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5292, 1.6928, 1.8727],
         [1.5125, 1.6758, 1.8557],
         [1.5103, 1.6735, 1.8534],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5293, 1.6929, 1.8727],
         [1.5146, 1.6779, 1.8578],
         [1.5106, 1.6738, 1.8537],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[202.3500, 247.0000, 210.9000, 329.6500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.5130, 1.6762, 1.8561],
         [1.5112, 1.6744, 1.8543],
         [1.4936, 1.6564, 1.8364],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5292, 1.6928, 1.8727],
         [1.5125, 1.6758, 1.8557],
         [1.5103, 1.6735, 1.8534],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5293, 1.6929, 1.8727],
         [1.5146, 1.6779, 1.8578],
         [1.5106, 1.6738, 1.8537],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
208/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.0506, 1.1510, 1.7341],
         [1.0493, 1.1496, 1.7328],
         [1.0335, 1.1335, 1.7167],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0687, 1.1694, 1.7525],
         [1.0673, 1.1681, 1.7511],
         [1.0515, 1.1519, 1.7351],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0867, 1.1879, 1.7708],
         [1.0855, 1.1867, 1.7696],
         [1.0715, 1.1724, 1.7554],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[230.8500, 265.0500, 239.4000, 305.9000,   0.0000],
        [186.2000, 255.5500, 195.7000, 313.5000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.0506, 1.1510, 1.7341],
         [1.0493, 1.1496, 1.7328],
         [1.0335, 1.1335, 1.7167],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0687, 1.1694, 1.7525],
         [1.0673, 1.1681, 1.7511],
         [1.0515, 1.1519, 1.7351],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0867, 1.1879, 1.7708],
         [1.0855, 1.1867, 1.7696],
         [1.0715, 1.1724, 1.7554],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
209/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.1015, 1.3256, 1.5594],
         [1.1015, 1.3256, 1.5594],
         [1.1015, 1.3256, 1.5594],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1015, 1.3256, 1.5594],
         [1.1015, 1.3256, 1.5594],
         [1.1015, 1.3256, 1.5594],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1015, 1.3256, 1.5594],
         [1.1015, 1.3256, 1.5594],
         [1.1015, 1.3256, 1.5594],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[336.3000,  23.7500, 348.6500, 370.5000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.1015, 1.3256, 1.5594],
         [1.1015, 1.3256, 1.5594],
         [1.1015, 1.3256, 1.5594],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1015, 1.3256, 1.5594],
         [1.1015, 1.3256, 1.5594],
         [1.1015, 1.3256, 1.5594],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1015, 1.3256, 1.5594],
         [1.1015, 1.3256, 1.5594],
         [1.1015, 1.3256, 1.5594],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
210/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.2899, 1.7283, 1.8905],
         [1.2899, 1.7283, 1.8905],
         [1.2873, 1.7256, 1.8879],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2899, 1.7283, 1.8905],
         [1.2873, 1.7256, 1.8879],
         [1.2728, 1.7108, 1.8731],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2873, 1.7256, 1.8879],
         [1.2728, 1.7108, 1.8731],
         [1.2725, 1.7105, 1.8728],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[360.0500, 230.8500, 366.7000, 288.8000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.2899, 1.7283, 1.8905],
         [1.2899, 1.7283, 1.8905],
         [1.2873, 1.7256, 1.8879],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2899, 1.7283, 1.8905],
         [1.2873, 1.7256, 1.8879],
         [1.2728, 1.7108, 1.8731],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2873, 1.7256, 1.8879],
         [1.2728, 1.7108, 1.8731],
         [1.2725, 1.7105, 1.8728],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
211/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.6948, -0.7914, -0.9477],
         [-0.4925, -0.5988, -0.7037],
         [-0.2521, -0.3162, -0.4039],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8198, -0.9204, -1.0722],
         [-0.6770, -0.7851, -0.8902],
         [-0.4665, -0.5363, -0.6163],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.9013, -1.0142, -1.1167],
         [-0.8621, -0.9453, -1.0579],
         [-0.7047, -0.7838, -0.8381],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[313.5000, 187.1500, 323.9500, 287.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.6948, -0.7914, -0.9477],
         [-0.4925, -0.5988, -0.7037],
         [-0.2521, -0.3162, -0.4039],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8198, -0.9204, -1.0722],
         [-0.6770, -0.7851, -0.8902],
         [-0.4665, -0.5363, -0.6163],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.9013, -1.0142, -1.1167],
         [-0.8621, -0.9453, -1.0579],
         [-0.7047, -0.7838, -0.8381],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
212/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.0133, -0.1279, -0.1326],
         [-0.5683, -0.6777, -0.7396],
         [-0.7986, -0.9015, -1.0702],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1277, -0.2089, -0.1940],
         [-0.5535, -0.6612, -0.7204],
         [-0.3339, -0.4186, -0.5890],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.5063,  0.4735,  0.5244],
         [ 0.3400,  0.2729,  0.2507],
         [ 0.1454,  0.0879, -0.0464],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[468.3500, 289.7500, 476.9000, 328.7000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.0133, -0.1279, -0.1326],
         [-0.5683, -0.6777, -0.7396],
         [-0.7986, -0.9015, -1.0702],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1277, -0.2089, -0.1940],
         [-0.5535, -0.6612, -0.7204],
         [-0.3339, -0.4186, -0.5890],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.5063,  0.4735,  0.5244],
         [ 0.3400,  0.2729,  0.2507],
         [ 0.1454,  0.0879, -0.0464],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
213/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-1.3644, -1.4230, -1.3513],
         [-1.3631, -1.4216, -1.3499],
         [-1.3455, -1.4037, -1.3321],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.3631, -1.4216, -1.3473],
         [-1.3645, -1.4231, -1.3514],
         [-1.3659, -1.4245, -1.3528],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.3455, -1.4037, -1.2980],
         [-1.3659, -1.4245, -1.3483],
         [-1.3860, -1.4451, -1.3693],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[271.7000, 117.8000, 290.7000, 425.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-1.3644, -1.4230, -1.3513],
         [-1.3631, -1.4216, -1.3499],
         [-1.3455, -1.4037, -1.3321],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.3631, -1.4216, -1.3473],
         [-1.3645, -1.4231, -1.3514],
         [-1.3659, -1.4245, -1.3528],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.3455, -1.4037, -1.2980],
         [-1.3659, -1.4245, -1.3483],
         [-1.3860, -1.4451, -1.3693],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
214/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.1525, 1.3777, 1.6112],
         [1.1525, 1.3777, 1.6112],
         [1.1525, 1.3777, 1.6112],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1344, 1.3593, 1.5929],
         [1.1344, 1.3593, 1.5929],
         [1.1344, 1.3593, 1.5929],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1209, 1.3454, 1.5791],
         [1.1209, 1.3454, 1.5791],
         [1.1209, 1.3454, 1.5791],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 49.4000, 156.7500,  65.5500, 304.9500,   0.0000],
        [239.4000, 247.0000, 250.8000, 325.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.1525, 1.3777, 1.6112],
         [1.1525, 1.3777, 1.6112],
         [1.1525, 1.3777, 1.6112],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1344, 1.3593, 1.5929],
         [1.1344, 1.3593, 1.5929],
         [1.1344, 1.3593, 1.5929],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1209, 1.3454, 1.5791],
         [1.1209, 1.3454, 1.5791],
         [1.1209, 1.3454, 1.5791],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
215/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.4612, 1.6057, 1.7860],
         [1.4625, 1.6071, 1.7873],
         [1.4779, 1.6228, 1.8030],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4598, 1.6044, 1.7846],
         [1.4599, 1.6045, 1.7847],
         [1.4632, 1.6079, 1.7881],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4419, 1.5860, 1.7663],
         [1.4452, 1.5894, 1.7697],
         [1.4589, 1.6034, 1.7837],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[150.1000, 239.4000, 167.2000, 328.7000,   0.0000],
        [514.9000, 181.4500, 535.8000, 281.2000,   0.0000],
        [112.1000, 272.6500, 125.4000, 309.7000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.4612, 1.6057, 1.7860],
         [1.4625, 1.6071, 1.7873],
         [1.4779, 1.6228, 1.8030],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4598, 1.6044, 1.7846],
         [1.4599, 1.6045, 1.7847],
         [1.4632, 1.6079, 1.7881],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4419, 1.5860, 1.7663],
         [1.4452, 1.5894, 1.7697],
         [1.4589, 1.6034, 1.7837],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
216/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.7591, 0.9755, 1.2108],
         [0.7591, 0.9755, 1.2108],
         [0.7591, 0.9755, 1.2108],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7591, 0.9755, 1.2108],
         [0.7591, 0.9755, 1.2108],
         [0.7591, 0.9755, 1.2108],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7568, 0.9732, 1.2085],
         [0.7568, 0.9732, 1.2085],
         [0.7568, 0.9732, 1.2085],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[529.1500, 113.0500, 547.2000, 417.0500,   0.0000],
        [111.1500, 266.9500, 125.4000, 331.5500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.7591, 0.9755, 1.2108],
         [0.7591, 0.9755, 1.2108],
         [0.7591, 0.9755, 1.2108],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7591, 0.9755, 1.2108],
         [0.7591, 0.9755, 1.2108],
         [0.7591, 0.9755, 1.2108],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7568, 0.9732, 1.2085],
         [0.7568, 0.9732, 1.2085],
         [0.7568, 0.9732, 1.2085],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
217/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.8447, 1.0630, 1.2980],
         [0.8447, 1.0630, 1.2980],
         [0.8447, 1.0630, 1.2980],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8447, 1.0630, 1.2980],
         [0.8447, 1.0630, 1.2980],
         [0.8447, 1.0630, 1.2980],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8447, 1.0630, 1.2980],
         [0.8447, 1.0630, 1.2980],
         [0.8447, 1.0630, 1.2980],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 45.6000, 230.8500,  58.9000, 321.1000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.8447, 1.0630, 1.2980],
         [0.8447, 1.0630, 1.2980],
         [0.8447, 1.0630, 1.2980],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8447, 1.0630, 1.2980],
         [0.8447, 1.0630, 1.2980],
         [0.8447, 1.0630, 1.2980],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8447, 1.0630, 1.2980],
         [0.8447, 1.0630, 1.2980],
         [0.8447, 1.0630, 1.2980],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
218/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.5468, 1.7108, 1.9254],
         [1.5468, 1.7108, 1.9254],
         [1.5445, 1.7085, 1.9231],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5468, 1.7108, 1.9254],
         [1.5468, 1.7108, 1.9254],
         [1.5445, 1.7085, 1.9231],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5468, 1.7108, 1.9254],
         [1.5468, 1.7108, 1.9254],
         [1.5445, 1.7085, 1.9231],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[325.8500, 207.1000, 339.1500, 341.0500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.5468, 1.7108, 1.9254],
         [1.5468, 1.7108, 1.9254],
         [1.5445, 1.7085, 1.9231],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5468, 1.7108, 1.9254],
         [1.5468, 1.7108, 1.9254],
         [1.5445, 1.7085, 1.9231],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5468, 1.7108, 1.9254],
         [1.5468, 1.7108, 1.9254],
         [1.5445, 1.7085, 1.9231],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
219/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.6153, 1.7808, 1.9602],
         [1.6135, 1.7790, 1.9584],
         [1.5933, 1.7583, 1.9378],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.6135, 1.7790, 1.9585],
         [1.5968, 1.7619, 1.9415],
         [1.5788, 1.7435, 1.9231],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5959, 1.7610, 1.9405],
         [1.5946, 1.7596, 1.9392],
         [1.5765, 1.7412, 1.9208],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[114.9500,   2.8500, 168.1500, 487.3500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.6153, 1.7808, 1.9602],
         [1.6135, 1.7790, 1.9584],
         [1.5933, 1.7583, 1.9378],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.6135, 1.7790, 1.9585],
         [1.5968, 1.7619, 1.9415],
         [1.5788, 1.7435, 1.9231],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5959, 1.7610, 1.9405],
         [1.5946, 1.7596, 1.9392],
         [1.5765, 1.7412, 1.9208],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
220/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.2557, 1.4832, 1.7163],
         [1.2557, 1.4832, 1.7163],
         [1.2557, 1.4832, 1.7163],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2557, 1.4832, 1.7163],
         [1.2557, 1.4832, 1.7163],
         [1.2557, 1.4832, 1.7163],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2579, 1.4855, 1.7185],
         [1.2579, 1.4855, 1.7185],
         [1.2579, 1.4855, 1.7185],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[242.2500, 229.9000, 255.5500, 340.1000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.2557, 1.4832, 1.7163],
         [1.2557, 1.4832, 1.7163],
         [1.2557, 1.4832, 1.7163],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2557, 1.4832, 1.7163],
         [1.2557, 1.4832, 1.7163],
         [1.2557, 1.4832, 1.7163],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2579, 1.4855, 1.7185],
         [1.2579, 1.4855, 1.7185],
         [1.2579, 1.4855, 1.7185],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
221/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.9817, 1.1155, 1.2457],
         [0.9817, 1.1155, 1.2457],
         [0.9817, 1.1155, 1.2457],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9817, 1.1155, 1.2457],
         [0.9817, 1.1155, 1.2457],
         [0.9817, 1.1155, 1.2457],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9839, 1.1178, 1.2480],
         [0.9839, 1.1178, 1.2480],
         [0.9839, 1.1178, 1.2480],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[507.3000,   5.7000, 543.4000, 355.3000,   0.0000],
        [142.5000, 255.5500, 155.8000, 286.9000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.9817, 1.1155, 1.2457],
         [0.9817, 1.1155, 1.2457],
         [0.9817, 1.1155, 1.2457],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9817, 1.1155, 1.2457],
         [0.9817, 1.1155, 1.2457],
         [0.9817, 1.1155, 1.2457],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9839, 1.1178, 1.2480],
         [0.9839, 1.1178, 1.2480],
         [0.9839, 1.1178, 1.2480],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
222/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.2111, 1.1506, 1.9428],
         [0.2111, 1.1506, 1.9428],
         [0.2111, 1.1506, 1.9428],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2111, 1.1506, 1.9428],
         [0.2111, 1.1506, 1.9428],
         [0.2111, 1.1506, 1.9428],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2111, 1.1506, 1.9428],
         [0.2111, 1.1506, 1.9428],
         [0.2111, 1.1506, 1.9428],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 48.4500, 275.5000,  57.0000, 325.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.2111, 1.1506, 1.9428],
         [0.2111, 1.1506, 1.9428],
         [0.2111, 1.1506, 1.9428],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2111, 1.1506, 1.9428],
         [0.2111, 1.1506, 1.9428],
         [0.2111, 1.1506, 1.9428],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2111, 1.1506, 1.9428],
         [0.2111, 1.1506, 1.9428],
         [0.2111, 1.1506, 1.9428],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
223/730
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
Checking data:  {'img': tensor([[[1.0159, 1.2381, 1.4374],
         [1.0159, 1.2381, 1.4374],
         [1.0159, 1.2381, 1.4374],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0159, 1.2381, 1.4374],
         [1.0159, 1.2381, 1.4374],
         [1.0159, 1.2381, 1.4374],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0137, 1.2358, 1.4351],
         [1.0137, 1.2358, 1.4351],
         [1.0137, 1.2358, 1.4351],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[588.0500, 167.2000, 599.4500, 342.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.0159, 1.2381, 1.4374],
         [1.0159, 1.2381, 1.4374],
         [1.0159, 1.2381, 1.4374],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0159, 1.2381, 1.4374],
         [1.0159, 1.2381, 1.4374],
         [1.0159, 1.2381, 1.4374],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0137, 1.2358, 1.4351],
         [1.0137, 1.2358, 1.4351],
         [1.0137, 1.2358, 1.4351],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
224/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.4911, -0.0924,  0.9842],
         [-0.4911, -0.0924,  0.9842],
         [-0.4911, -0.0924,  0.9842],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4883, -0.0924,  0.9842],
         [-0.4883, -0.0924,  0.9842],
         [-0.4883, -0.0924,  0.9842],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4545, -0.0901,  0.9865],
         [-0.4545, -0.0901,  0.9865],
         [-0.4545, -0.0901,  0.9865],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[153.9000, 121.6000, 171.9500, 429.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.4911, -0.0924,  0.9842],
         [-0.4911, -0.0924,  0.9842],
         [-0.4911, -0.0924,  0.9842],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4883, -0.0924,  0.9842],
         [-0.4883, -0.0924,  0.9842],
         [-0.4883, -0.0924,  0.9842],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4545, -0.0901,  0.9865],
         [-0.4545, -0.0901,  0.9865],
         [-0.4545, -0.0901,  0.9865],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
225/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.1881, 1.3436, 1.5250],
         [1.2047, 1.3606, 1.5420],
         [1.2070, 1.3629, 1.5443],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2061, 1.3449, 1.5263],
         [1.2215, 1.3608, 1.5421],
         [1.2249, 1.3640, 1.5458],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2259, 1.3583, 1.5421],
         [1.2273, 1.3597, 1.5479],
         [1.2434, 1.3742, 1.5683],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[131.1000,  99.7500, 149.1500, 396.1500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.1881, 1.3436, 1.5250],
         [1.2047, 1.3606, 1.5420],
         [1.2070, 1.3629, 1.5443],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2061, 1.3449, 1.5263],
         [1.2215, 1.3608, 1.5421],
         [1.2249, 1.3640, 1.5458],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2259, 1.3583, 1.5421],
         [1.2273, 1.3597, 1.5479],
         [1.2434, 1.3742, 1.5683],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
226/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.1525, 1.3252, 1.6112],
         [1.1524, 1.3251, 1.6112],
         [1.1498, 1.3224, 1.6085],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1371, 1.3095, 1.5956],
         [1.1343, 1.3066, 1.5928],
         [1.1149, 1.2867, 1.5730],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1547, 1.3274, 1.6135],
         [1.1331, 1.3054, 1.5915],
         [1.0970, 1.2685, 1.5548],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[334.4000, 148.2000, 350.5500, 277.4000,   0.0000],
        [146.3000, 247.0000, 155.8000, 315.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.1525, 1.3252, 1.6112],
         [1.1524, 1.3251, 1.6112],
         [1.1498, 1.3224, 1.6085],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1371, 1.3095, 1.5956],
         [1.1343, 1.3066, 1.5928],
         [1.1149, 1.2867, 1.5730],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1547, 1.3274, 1.6135],
         [1.1331, 1.3054, 1.5915],
         [1.0970, 1.2685, 1.5548],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
227/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.1894, 1.5205, 1.7708],
         [1.2057, 1.5371, 1.7873],
         [1.2078, 1.5393, 1.7896],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2651, 1.5979, 1.8479],
         [1.2636, 1.5963, 1.8463],
         [1.2609, 1.5936, 1.8436],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3931, 1.7287, 1.9758],
         [1.3713, 1.7065, 1.9537],
         [1.3351, 1.6695, 1.9168],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[432.2500, 116.8500, 446.5000, 274.5500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.1894, 1.5205, 1.7708],
         [1.2057, 1.5371, 1.7873],
         [1.2078, 1.5393, 1.7896],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2651, 1.5979, 1.8479],
         [1.2636, 1.5963, 1.8463],
         [1.2609, 1.5936, 1.8436],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3931, 1.7287, 1.9758],
         [1.3713, 1.7065, 1.9537],
         [1.3351, 1.6695, 1.9168],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
228/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.1254, 0.5728, 1.1759],
         [0.1268, 0.5714, 1.1759],
         [0.1448, 0.5576, 1.1782],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1254, 0.5728, 1.1759],
         [0.1268, 0.5714, 1.1759],
         [0.1446, 0.5574, 1.1781],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1232, 0.5705, 1.1737],
         [0.1247, 0.5693, 1.1738],
         [0.1426, 0.5553, 1.1759],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[439.8500, 169.1000, 454.1000, 376.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.1254, 0.5728, 1.1759],
         [0.1268, 0.5714, 1.1759],
         [0.1448, 0.5576, 1.1782],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1254, 0.5728, 1.1759],
         [0.1268, 0.5714, 1.1759],
         [0.1446, 0.5574, 1.1781],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1232, 0.5705, 1.1737],
         [0.1247, 0.5693, 1.1738],
         [0.1426, 0.5553, 1.1759],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
229/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.9474, 1.1681, 1.4025],
         [0.9474, 1.1681, 1.4025],
         [0.9474, 1.1681, 1.4025],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9474, 1.1681, 1.4025],
         [0.9474, 1.1681, 1.4025],
         [0.9474, 1.1681, 1.4025],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9474, 1.1681, 1.4025],
         [0.9474, 1.1681, 1.4025],
         [0.9474, 1.1681, 1.4025],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[425.6000,   0.9500, 470.2500, 499.7000,   0.0000],
        [102.6000, 214.7000, 112.1000, 327.7500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.9474, 1.1681, 1.4025],
         [0.9474, 1.1681, 1.4025],
         [0.9474, 1.1681, 1.4025],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9474, 1.1681, 1.4025],
         [0.9474, 1.1681, 1.4025],
         [0.9474, 1.1681, 1.4025],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9474, 1.1681, 1.4025],
         [0.9474, 1.1681, 1.4025],
         [0.9474, 1.1681, 1.4025],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
230/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.0912, 0.5028, 1.2980],
         [0.0912, 0.5028, 1.2980],
         [0.0912, 0.5028, 1.2980],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0912, 0.5028, 1.2980],
         [0.0912, 0.5028, 1.2980],
         [0.0912, 0.5028, 1.2980],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0912, 0.5028, 1.2980],
         [0.0912, 0.5028, 1.2980],
         [0.0912, 0.5028, 1.2980],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[234.6500,   0.9500, 278.3500, 343.9000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.0912, 0.5028, 1.2980],
         [0.0912, 0.5028, 1.2980],
         [0.0912, 0.5028, 1.2980],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0912, 0.5028, 1.2980],
         [0.0912, 0.5028, 1.2980],
         [0.0912, 0.5028, 1.2980],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0912, 0.5028, 1.2980],
         [0.0912, 0.5028, 1.2980],
         [0.0912, 0.5028, 1.2980],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
231/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-1.1245, -0.9335, -1.4007],
         [-1.0634, -0.8890, -1.2664],
         [-1.2030, -1.0479, -1.3512],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5593, -0.3709, -0.7833],
         [-0.8785, -0.6986, -1.0387],
         [-1.1789, -1.0243, -1.2862],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4481, -0.2434, -0.5653],
         [-0.2280, -0.0198, -0.2976],
         [-0.4862, -0.3042, -0.4931],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[495.9000,  54.1500, 526.3000, 449.3500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-1.1245, -0.9335, -1.4007],
         [-1.0634, -0.8890, -1.2664],
         [-1.2030, -1.0479, -1.3512],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5593, -0.3709, -0.7833],
         [-0.8785, -0.6986, -1.0387],
         [-1.1789, -1.0243, -1.2862],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4481, -0.2434, -0.5653],
         [-0.2280, -0.0198, -0.2976],
         [-0.4862, -0.3042, -0.4931],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
232/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.5946, 1.0174, 1.2351],
         [0.7649, 1.1915, 1.4085],
         [0.7847, 1.2118, 1.4287],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6882, 1.1131, 1.3304],
         [0.8355, 1.2637, 1.4803],
         [0.8376, 1.2659, 1.4825],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8259, 1.2539, 1.4706],
         [0.8974, 1.3270, 1.5433],
         [0.8628, 1.2917, 1.5082],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 46.5500,  67.4500, 101.6500, 524.4000,   0.0000],
        [109.2500,   1.9000, 139.6500,  99.7500,   0.0000],
        [594.7000, 235.6000, 606.1000, 315.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.5946, 1.0174, 1.2351],
         [0.7649, 1.1915, 1.4085],
         [0.7847, 1.2118, 1.4287],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6882, 1.1131, 1.3304],
         [0.8355, 1.2637, 1.4803],
         [0.8376, 1.2659, 1.4825],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8259, 1.2539, 1.4706],
         [0.8974, 1.3270, 1.5433],
         [0.8628, 1.2917, 1.5082],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
233/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.5040, 0.7848, 1.0558],
         [0.5400, 0.8216, 1.0924],
         [0.5734, 0.8557, 1.1264],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5400, 0.8216, 1.0924],
         [0.5734, 0.8557, 1.1264],
         [0.5912, 0.8740, 1.1446],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5689, 0.8511, 1.1218],
         [0.5869, 0.8695, 1.1402],
         [0.6030, 0.8860, 1.1565],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[166.2500, 188.1000, 181.4500, 357.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.5040, 0.7848, 1.0558],
         [0.5400, 0.8216, 1.0924],
         [0.5734, 0.8557, 1.1264],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5400, 0.8216, 1.0924],
         [0.5734, 0.8557, 1.1264],
         [0.5912, 0.8740, 1.1446],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5689, 0.8511, 1.1218],
         [0.5869, 0.8695, 1.1402],
         [0.6030, 0.8860, 1.1565],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
234/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.2281, -0.2262, -0.1773],
         [-0.4185, -0.4210, -0.3684],
         [-0.0751, -0.0653,  0.0224],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4003, -0.4023, -0.3526],
         [-0.2282, -0.2263, -0.1747],
         [ 0.0525,  0.0652,  0.1523],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3614, -0.3626, -0.3131],
         [ 0.0695,  0.0780,  0.1283],
         [ 0.1803,  0.1958,  0.2823],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[129.2000, 184.3000, 146.3000, 337.2500,   0.0000],
        [175.7500, 266.9500, 191.9000, 312.5500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.2281, -0.2262, -0.1773],
         [-0.4185, -0.4210, -0.3684],
         [-0.0751, -0.0653,  0.0224],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4003, -0.4023, -0.3526],
         [-0.2282, -0.2263, -0.1747],
         [ 0.0525,  0.0652,  0.1523],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3614, -0.3626, -0.3131],
         [ 0.0695,  0.0780,  0.1283],
         [ 0.1803,  0.1958,  0.2823],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
235/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.9479, 1.2035, 1.3856],
         [0.9466, 1.2022, 1.3842],
         [0.9335, 1.1842, 1.3686],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9646, 1.2206, 1.4026],
         [0.9660, 1.2221, 1.4040],
         [0.9697, 1.2212, 1.4055],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9650, 1.2210, 1.4030],
         [0.9832, 1.2397, 1.4215],
         [1.0059, 1.2582, 1.4423],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[222.3000,  94.0500, 237.5000, 374.3000,   0.0000],
        [  7.6000, 248.9000,  19.0000, 317.3000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.9479, 1.2035, 1.3856],
         [0.9466, 1.2022, 1.3842],
         [0.9335, 1.1842, 1.3686],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9646, 1.2206, 1.4026],
         [0.9660, 1.2221, 1.4040],
         [0.9697, 1.2212, 1.4055],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9650, 1.2210, 1.4030],
         [0.9832, 1.2397, 1.4215],
         [1.0059, 1.2582, 1.4423],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
236/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.1314,  0.3803,  1.0191],
         [-0.1314,  0.3803,  1.0191],
         [-0.1314,  0.3803,  1.0191],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1314,  0.3803,  1.0191],
         [-0.1314,  0.3803,  1.0191],
         [-0.1314,  0.3803,  1.0191],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1314,  0.3803,  1.0191],
         [-0.1314,  0.3803,  1.0191],
         [-0.1314,  0.3803,  1.0191],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[253.6500,  83.6000, 278.3500, 339.1500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.1314,  0.3803,  1.0191],
         [-0.1314,  0.3803,  1.0191],
         [-0.1314,  0.3803,  1.0191],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1314,  0.3803,  1.0191],
         [-0.1314,  0.3803,  1.0191],
         [-0.1314,  0.3803,  1.0191],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1314,  0.3803,  1.0191],
         [-0.1314,  0.3803,  1.0191],
         [-0.1314,  0.3803,  1.0191],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
237/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[2.1295, 2.3240, 2.5707],
         [2.1462, 2.3410, 2.5877],
         [2.1484, 2.3433, 2.5900],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.1295, 2.3240, 2.5707],
         [2.1462, 2.3410, 2.5877],
         [2.1484, 2.3433, 2.5900],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.1295, 2.3240, 2.5707],
         [2.1462, 2.3410, 2.5877],
         [2.1484, 2.3433, 2.5900],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[590.9000, 148.2000, 607.0500, 299.2500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[2.1295, 2.3240, 2.5707],
         [2.1462, 2.3410, 2.5877],
         [2.1484, 2.3433, 2.5900],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.1295, 2.3240, 2.5707],
         [2.1462, 2.3410, 2.5877],
         [2.1484, 2.3433, 2.5900],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.1295, 2.3240, 2.5707],
         [2.1462, 2.3410, 2.5877],
         [2.1484, 2.3433, 2.5900],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
238/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.1828,  0.4153,  1.4200],
         [-0.1828,  0.4153,  1.4200],
         [-0.1806,  0.4176,  1.4222],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1828,  0.4153,  1.4200],
         [-0.1828,  0.4153,  1.4200],
         [-0.1806,  0.4176,  1.4222],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1828,  0.4153,  1.4200],
         [-0.1828,  0.4153,  1.4200],
         [-0.1806,  0.4176,  1.4222],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[129.2000, 172.9000, 146.3000, 319.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.1828,  0.4153,  1.4200],
         [-0.1828,  0.4153,  1.4200],
         [-0.1806,  0.4176,  1.4222],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1828,  0.4153,  1.4200],
         [-0.1828,  0.4153,  1.4200],
         [-0.1806,  0.4176,  1.4222],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1828,  0.4153,  1.4200],
         [-0.1828,  0.4153,  1.4200],
         [-0.1806,  0.4176,  1.4222],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
239/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.0736, 0.4848, 0.9663],
         [0.0556, 0.4664, 0.9480],
         [0.0398, 0.4503, 0.9319],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0736, 0.4848, 0.9663],
         [0.0556, 0.4664, 0.9480],
         [0.0398, 0.4503, 0.9319],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0736, 0.4848, 0.9663],
         [0.0556, 0.4664, 0.9480],
         [0.0398, 0.4503, 0.9319],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[220.4000,   2.8500, 246.0500, 482.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.0736, 0.4848, 0.9663],
         [0.0556, 0.4664, 0.9480],
         [0.0398, 0.4503, 0.9319],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0736, 0.4848, 0.9663],
         [0.0556, 0.4664, 0.9480],
         [0.0398, 0.4503, 0.9319],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0736, 0.4848, 0.9663],
         [0.0556, 0.4664, 0.9480],
         [0.0398, 0.4503, 0.9319],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
240/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.1529, 1.3782, 1.6117],
         [1.1529, 1.3781, 1.6116],
         [1.1503, 1.3754, 1.6090],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1529, 1.3781, 1.6116],
         [1.1503, 1.3755, 1.6090],
         [1.1358, 1.3606, 1.5942],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1503, 1.3754, 1.6090],
         [1.1358, 1.3606, 1.5942],
         [1.1355, 1.3603, 1.5939],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[201.4000,  18.0500, 238.4500, 351.5000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.1529, 1.3782, 1.6117],
         [1.1529, 1.3781, 1.6116],
         [1.1503, 1.3754, 1.6090],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1529, 1.3781, 1.6116],
         [1.1503, 1.3755, 1.6090],
         [1.1358, 1.3606, 1.5942],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1503, 1.3754, 1.6090],
         [1.1358, 1.3606, 1.5942],
         [1.1355, 1.3603, 1.5939],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
241/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.0394, 1.0962, 1.6296],
         [0.0448, 1.0995, 1.6306],
         [0.1290, 1.1438, 1.6571],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0295, 1.0312, 1.6584],
         [0.0373, 1.0510, 1.6453],
         [0.1496, 1.1175, 1.7151],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1286, 1.0768, 1.8322],
         [0.1333, 1.0781, 1.7971],
         [0.2055, 1.1334, 1.8195],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 32.3000,  64.6000, 116.8500, 506.3500,   0.0000],
        [  6.6500,   3.8000,  34.2000,  67.4500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.0394, 1.0962, 1.6296],
         [0.0448, 1.0995, 1.6306],
         [0.1290, 1.1438, 1.6571],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0295, 1.0312, 1.6584],
         [0.0373, 1.0510, 1.6453],
         [0.1496, 1.1175, 1.7151],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1286, 1.0768, 1.8322],
         [0.1333, 1.0781, 1.7971],
         [0.2055, 1.1334, 1.8195],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
242/730
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.1917, -0.0836, -0.8558],
         [-0.5582, -0.4587, -1.2279],
         [-0.9573, -0.8691, -1.6364],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1798, -0.0548, -0.8768],
         [-0.3543, -0.2489, -1.0231],
         [-0.7661, -0.6724, -1.4442],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0859,  0.0416, -0.7867],
         [-0.1190,  0.0078, -0.8200],
         [-0.5154, -0.4020, -1.2175],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[166.2500,   0.0000, 195.7000, 229.9000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.1917, -0.0836, -0.8558],
         [-0.5582, -0.4587, -1.2279],
         [-0.9573, -0.8691, -1.6364],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1798, -0.0548, -0.8768],
         [-0.3543, -0.2489, -1.0231],
         [-0.7661, -0.6724, -1.4442],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0859,  0.0416, -0.7867],
         [-0.1190,  0.0078, -0.8200],
         [-0.5154, -0.4020, -1.2175],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
243/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.0750, 0.3987, 1.4034],
         [0.0925, 0.4166, 1.4213],
         [0.1106, 0.4351, 1.4397],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0912, 0.4153, 1.4200],
         [0.0938, 0.4179, 1.4226],
         [0.1104, 0.4349, 1.4395],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0938, 0.4180, 1.4226],
         [0.1083, 0.4328, 1.4374],
         [0.1083, 0.4328, 1.4374],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[558.6000, 118.7500, 592.8000, 424.6500,   0.0000],
        [336.3000, 273.6000, 346.7500, 330.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.0750, 0.3987, 1.4034],
         [0.0925, 0.4166, 1.4213],
         [0.1106, 0.4351, 1.4397],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0912, 0.4153, 1.4200],
         [0.0938, 0.4179, 1.4226],
         [0.1104, 0.4349, 1.4395],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0938, 0.4180, 1.4226],
         [0.1083, 0.4328, 1.4374],
         [0.1083, 0.4328, 1.4374],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
244/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.5576, -0.5110, -0.8961],
         [-0.6885, -0.6615, -0.9914],
         [-0.5512, -0.5238, -0.7947],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3288, -0.2753, -0.7041],
         [-0.2834, -0.2303, -0.6211],
         [-0.8876, -0.8643, -1.1956],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2932, -0.2205, -0.7596],
         [-0.0725,  0.0037, -0.4991],
         [-0.4734, -0.4245, -0.8476],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[462.6500,   2.8500, 501.6000, 456.0000,   0.0000],
        [139.6500, 238.4500, 152.9500, 329.6500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.5576, -0.5110, -0.8961],
         [-0.6885, -0.6615, -0.9914],
         [-0.5512, -0.5238, -0.7947],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3288, -0.2753, -0.7041],
         [-0.2834, -0.2303, -0.6211],
         [-0.8876, -0.8643, -1.1956],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2932, -0.2205, -0.7596],
         [-0.0725,  0.0037, -0.4991],
         [-0.4734, -0.4245, -0.8476],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
245/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.2805, 0.6788, 1.8566],
         [0.2985, 0.6972, 1.8777],
         [0.3187, 0.7179, 1.9304],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2985, 0.6972, 1.8750],
         [0.3165, 0.7156, 1.8958],
         [0.3345, 0.7341, 1.9441],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3187, 0.7179, 1.8955],
         [0.3345, 0.7341, 1.9116],
         [0.3529, 0.7528, 1.9343],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[289.7500, 208.0500, 302.1000, 332.5000,   0.0000],
        [115.9000, 213.7500, 130.1500, 349.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.2805, 0.6788, 1.8566],
         [0.2985, 0.6972, 1.8777],
         [0.3187, 0.7179, 1.9304],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2985, 0.6972, 1.8750],
         [0.3165, 0.7156, 1.8958],
         [0.3345, 0.7341, 1.9441],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3187, 0.7179, 1.8955],
         [0.3345, 0.7341, 1.9116],
         [0.3529, 0.7528, 1.9343],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
246/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.5878, 0.9055, 1.2980],
         [0.5878, 0.9054, 1.3007],
         [0.5852, 0.9028, 1.3301],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5865, 0.9041, 1.2966],
         [0.5852, 0.9028, 1.2981],
         [0.5707, 0.8880, 1.3154],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5707, 0.8880, 1.2805],
         [0.5707, 0.8880, 1.2833],
         [0.5707, 0.8880, 1.3154],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[425.6000,   8.5500, 456.0000, 149.1500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.5878, 0.9055, 1.2980],
         [0.5878, 0.9054, 1.3007],
         [0.5852, 0.9028, 1.3301],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5865, 0.9041, 1.2966],
         [0.5852, 0.9028, 1.2981],
         [0.5707, 0.8880, 1.3154],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5707, 0.8880, 1.2805],
         [0.5707, 0.8880, 1.2833],
         [0.5707, 0.8880, 1.3154],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
247/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[2.2489, 2.4286, 2.5703],
         [2.2489, 2.4286, 2.5703],
         [2.2489, 2.4286, 2.5703],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.2489, 2.4286, 2.5703],
         [2.2489, 2.4286, 2.5703],
         [2.2489, 2.4286, 2.5703],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.2489, 2.4286, 2.5703],
         [2.2489, 2.4286, 2.5703],
         [2.2489, 2.4286, 2.5703],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[560.5000,  22.8000, 602.3000, 439.8500,   0.0000],
        [378.1000, 251.7500, 390.4500, 315.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[2.2489, 2.4286, 2.5703],
         [2.2489, 2.4286, 2.5703],
         [2.2489, 2.4286, 2.5703],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.2489, 2.4286, 2.5703],
         [2.2489, 2.4286, 2.5703],
         [2.2489, 2.4286, 2.5703],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.2489, 2.4286, 2.5703],
         [2.2489, 2.4286, 2.5703],
         [2.2489, 2.4286, 2.5703],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
248/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.5292, 1.7979, 2.3955],
         [1.5459, 1.8149, 2.4125],
         [1.5508, 1.8199, 2.4175],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4932, 1.7610, 2.3615],
         [1.5112, 1.7794, 2.3772],
         [1.5292, 1.7979, 2.3955],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4616, 1.7287, 2.3607],
         [1.4774, 1.7449, 2.3474],
         [1.4954, 1.7633, 2.3651],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[448.4000, 222.3000, 460.7500, 342.0000,   0.0000],
        [550.0500, 227.0500, 569.0500, 327.7500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.5292, 1.7979, 2.3955],
         [1.5459, 1.8149, 2.4125],
         [1.5508, 1.8199, 2.4175],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4932, 1.7610, 2.3615],
         [1.5112, 1.7794, 2.3772],
         [1.5292, 1.7979, 2.3955],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4616, 1.7287, 2.3607],
         [1.4774, 1.7449, 2.3474],
         [1.4954, 1.7633, 2.3651],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
249/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.4474, -0.3118, -1.4069],
         [-0.2388, -0.1165, -1.1386],
         [ 0.8850,  1.0162,  0.0759],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8188, -0.7280, -1.6528],
         [-0.1869, -0.0873, -0.9742],
         [ 0.3555,  0.4521, -0.3638],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.6211, -0.5708, -1.2666],
         [-0.5755, -0.5688, -1.2097],
         [-0.7607, -0.7622, -1.3153],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[582.3500,  97.8500, 604.2000, 334.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.4474, -0.3118, -1.4069],
         [-0.2388, -0.1165, -1.1386],
         [ 0.8850,  1.0162,  0.0759],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8188, -0.7280, -1.6528],
         [-0.1869, -0.0873, -0.9742],
         [ 0.3555,  0.4521, -0.3638],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.6211, -0.5708, -1.2666],
         [-0.5755, -0.5688, -1.2097],
         [-0.7607, -0.7622, -1.3153],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
250/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.4269, 1.5882, 1.6291],
         [1.4269, 1.5882, 1.6291],
         [1.4269, 1.5882, 1.6291],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4269, 1.5882, 1.6291],
         [1.4269, 1.5882, 1.6291],
         [1.4269, 1.5882, 1.6291],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4269, 1.5882, 1.6291],
         [1.4269, 1.5882, 1.6291],
         [1.4269, 1.5882, 1.6291],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[  4.7500, 253.6500,  17.1000, 355.3000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.4269, 1.5882, 1.6291],
         [1.4269, 1.5882, 1.6291],
         [1.4269, 1.5882, 1.6291],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4269, 1.5882, 1.6291],
         [1.4269, 1.5882, 1.6291],
         [1.4269, 1.5882, 1.6291],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4269, 1.5882, 1.6291],
         [1.4269, 1.5882, 1.6291],
         [1.4269, 1.5882, 1.6291],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
251/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-1.0215, -0.8273, -0.2179],
         [-1.0048, -0.8088, -0.1969],
         [-1.0000, -0.7882, -0.1451],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.0162, -0.8245, -0.2193],
         [-1.0022, -0.8076, -0.2011],
         [-0.9877, -0.7906, -0.1842],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.9497, -0.7881, -0.2354],
         [-0.9787, -0.7881, -0.2207],
         [-0.9787, -0.7881, -0.2207],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[500.6500,  57.9500, 554.8000, 496.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-1.0215, -0.8273, -0.2179],
         [-1.0048, -0.8088, -0.1969],
         [-1.0000, -0.7882, -0.1451],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.0162, -0.8245, -0.2193],
         [-1.0022, -0.8076, -0.2011],
         [-0.9877, -0.7906, -0.1842],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.9497, -0.7881, -0.2354],
         [-0.9787, -0.7881, -0.2207],
         [-0.9787, -0.7881, -0.2207],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
252/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.7532, 1.9918, 2.1877],
         [1.7695, 2.0084, 2.2043],
         [1.7721, 2.0111, 2.2070],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7695, 2.0084, 2.2043],
         [1.7720, 2.0111, 2.2069],
         [1.7867, 2.0261, 2.2219],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7721, 2.0111, 2.2070],
         [1.7867, 2.0261, 2.2219],
         [1.7908, 2.0302, 2.2260],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[572.8500, 247.0000, 587.1000, 321.1000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.7532, 1.9918, 2.1877],
         [1.7695, 2.0084, 2.2043],
         [1.7721, 2.0111, 2.2070],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7695, 2.0084, 2.2043],
         [1.7720, 2.0111, 2.2069],
         [1.7867, 2.0261, 2.2219],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7721, 2.0111, 2.2070],
         [1.7867, 2.0261, 2.2219],
         [1.7908, 2.0302, 2.2260],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
253/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[ 0.2890,  0.0738, -0.7670],
         [-0.1042, -0.3622, -1.1805],
         [ 0.1188, -0.1411, -0.9196],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.4370,  0.2238, -0.6114],
         [-0.0270, -0.2834, -1.0678],
         [-0.1491, -0.4162, -1.1751],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.8060,  0.5808, -0.1815],
         [ 0.6541,  0.4095, -0.3485],
         [ 0.4454,  0.1773, -0.5376],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[583.3000, 149.1500, 598.5000, 346.7500,   0.0000],
        [193.8000, 147.2500, 209.0000, 235.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[ 0.2890,  0.0738, -0.7670],
         [-0.1042, -0.3622, -1.1805],
         [ 0.1188, -0.1411, -0.9196],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.4370,  0.2238, -0.6114],
         [-0.0270, -0.2834, -1.0678],
         [-0.1491, -0.4162, -1.1751],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.8060,  0.5808, -0.1815],
         [ 0.6541,  0.4095, -0.3485],
         [ 0.4454,  0.1773, -0.5376],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
254/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.1187, 1.3607, 1.6465],
         [1.1218, 1.3638, 1.6497],
         [1.1551, 1.3979, 1.6836],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1191, 1.3611, 1.6470],
         [1.1370, 1.3794, 1.6652],
         [1.1518, 1.3945, 1.6802],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1191, 1.3611, 1.6470],
         [1.1358, 1.3782, 1.6640],
         [1.1381, 1.3805, 1.6663],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[272.6500, 218.5000, 288.8000, 267.9000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.1187, 1.3607, 1.6465],
         [1.1218, 1.3638, 1.6497],
         [1.1551, 1.3979, 1.6836],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1191, 1.3611, 1.6470],
         [1.1370, 1.3794, 1.6652],
         [1.1518, 1.3945, 1.6802],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1191, 1.3611, 1.6470],
         [1.1358, 1.3782, 1.6640],
         [1.1381, 1.3805, 1.6663],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
255/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[2.0267, 2.1664, 2.3965],
         [2.0434, 2.1835, 2.4134],
         [2.0457, 2.1858, 2.4157],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0281, 2.1678, 2.3978],
         [2.0435, 2.1836, 2.4135],
         [2.0468, 2.1870, 2.4169],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0434, 2.1835, 2.4134],
         [2.0448, 2.1849, 2.4148],
         [2.0608, 2.2013, 2.4312],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[197.6000, 160.5500, 208.0500, 322.0500,   0.0000],
        [165.3000, 142.5000, 190.0000, 330.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[2.0267, 2.1664, 2.3965],
         [2.0434, 2.1835, 2.4134],
         [2.0457, 2.1858, 2.4157],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0281, 2.1678, 2.3978],
         [2.0435, 2.1836, 2.4135],
         [2.0468, 2.1870, 2.4169],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0434, 2.1835, 2.4134],
         [2.0448, 2.1849, 2.4148],
         [2.0608, 2.2013, 2.4312],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
256/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.1486,  0.3978,  1.2457],
         [-0.1486,  0.3978,  1.2457],
         [-0.1486,  0.3978,  1.2457],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1486,  0.3978,  1.2457],
         [-0.1485,  0.3979,  1.2458],
         [-0.1472,  0.3991,  1.2470],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1485,  0.3978,  1.2411],
         [-0.1451,  0.4013,  1.2446],
         [-0.1314,  0.4153,  1.2585],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[424.6500, 123.5000, 446.5000, 254.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.1486,  0.3978,  1.2457],
         [-0.1486,  0.3978,  1.2457],
         [-0.1486,  0.3978,  1.2457],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1486,  0.3978,  1.2457],
         [-0.1485,  0.3979,  1.2458],
         [-0.1472,  0.3991,  1.2470],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1485,  0.3978,  1.2411],
         [-0.1451,  0.4013,  1.2446],
         [-0.1314,  0.4153,  1.2585],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
257/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.4739,  0.1702,  0.8448],
         [-0.4739,  0.1702,  0.8448],
         [-0.4739,  0.1702,  0.8448],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4739,  0.1702,  0.8448],
         [-0.4739,  0.1702,  0.8448],
         [-0.4739,  0.1702,  0.8448],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4717,  0.1725,  0.8471],
         [-0.4717,  0.1725,  0.8471],
         [-0.4717,  0.1725,  0.8471],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[236.5500, 201.4000, 247.0000, 297.3500,   0.0000],
        [170.0500, 244.1500, 187.1500, 287.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.4739,  0.1702,  0.8448],
         [-0.4739,  0.1702,  0.8448],
         [-0.4739,  0.1702,  0.8448],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4739,  0.1702,  0.8448],
         [-0.4739,  0.1702,  0.8448],
         [-0.4739,  0.1702,  0.8448],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4717,  0.1725,  0.8471],
         [-0.4717,  0.1725,  0.8471],
         [-0.4717,  0.1725,  0.8471],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
258/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.9641, 1.4127, 2.0818],
         [0.9646, 1.4132, 2.0823],
         [0.9646, 1.4132, 2.0823],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9478, 1.3961, 2.0653],
         [0.9633, 1.4119, 2.0810],
         [0.9646, 1.4132, 2.0823],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9452, 1.3934, 2.0626],
         [0.9488, 1.3970, 2.0662],
         [0.9646, 1.4132, 2.0823],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[  0.9500, 179.5500,  13.3000, 344.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.9641, 1.4127, 2.0818],
         [0.9646, 1.4132, 2.0823],
         [0.9646, 1.4132, 2.0823],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9478, 1.3961, 2.0653],
         [0.9633, 1.4119, 2.0810],
         [0.9646, 1.4132, 2.0823],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9452, 1.3934, 2.0626],
         [0.9488, 1.3970, 2.0662],
         [0.9646, 1.4132, 2.0823],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
259/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[ 0.0895,  0.4822,  0.1652],
         [ 0.8269,  1.2200,  1.0143],
         [ 1.0045,  1.4038,  1.3850],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.7087, -0.3697, -0.6696],
         [ 0.2047,  0.5825,  0.3612],
         [ 1.1299,  1.5304,  1.4755],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8136, -0.5135, -0.8418],
         [-0.3645, -0.0221, -0.2444],
         [ 0.6028,  0.9710,  0.8955],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[241.3000,  30.4000, 256.5000, 269.8000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[ 0.0895,  0.4822,  0.1652],
         [ 0.8269,  1.2200,  1.0143],
         [ 1.0045,  1.4038,  1.3850],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.7087, -0.3697, -0.6696],
         [ 0.2047,  0.5825,  0.3612],
         [ 1.1299,  1.5304,  1.4755],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8136, -0.5135, -0.8418],
         [-0.3645, -0.0221, -0.2444],
         [ 0.6028,  0.9710,  0.8955],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
260/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.2967, 0.8354, 1.3328],
         [0.2967, 0.8354, 1.3328],
         [0.2989, 0.8331, 1.3328],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2980, 0.8368, 1.3342],
         [0.2980, 0.8368, 1.3342],
         [0.3003, 0.8345, 1.3342],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3138, 0.8529, 1.3502],
         [0.3138, 0.8529, 1.3502],
         [0.3161, 0.8506, 1.3502],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[341.0500, 190.0000, 355.3000, 352.4500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.2967, 0.8354, 1.3328],
         [0.2967, 0.8354, 1.3328],
         [0.2989, 0.8331, 1.3328],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2980, 0.8368, 1.3342],
         [0.2980, 0.8368, 1.3342],
         [0.3003, 0.8345, 1.3342],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3138, 0.8529, 1.3502],
         [0.3138, 0.8529, 1.3502],
         [0.3161, 0.8506, 1.3502],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
261/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.7690, 1.5878, 2.0121],
         [1.7523, 1.5707, 1.9951],
         [1.7500, 1.5684, 1.9928],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7676, 1.5864, 2.0108],
         [1.7522, 1.5706, 1.9950],
         [1.7489, 1.5672, 1.9916],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7523, 1.5707, 1.9951],
         [1.7509, 1.5693, 1.9937],
         [1.7349, 1.5529, 1.9774],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[217.5500, 246.0500, 231.8000, 325.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.7690, 1.5878, 2.0121],
         [1.7523, 1.5707, 1.9951],
         [1.7500, 1.5684, 1.9928],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7676, 1.5864, 2.0108],
         [1.7522, 1.5706, 1.9950],
         [1.7489, 1.5672, 1.9916],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7523, 1.5707, 1.9951],
         [1.7509, 1.5693, 1.9937],
         [1.7349, 1.5529, 1.9774],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
262/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[2.0434, 1.7983, 2.2566],
         [2.0254, 1.7799, 2.2382],
         [2.0074, 1.7615, 2.2199],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0614, 1.8167, 2.2749],
         [2.0434, 1.7983, 2.2566],
         [2.0254, 1.7799, 2.2382],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0795, 1.8352, 2.2933],
         [2.0614, 1.8167, 2.2749],
         [2.0434, 1.7983, 2.2566],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 63.6500, 220.4000,  72.2000, 305.9000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[2.0434, 1.7983, 2.2566],
         [2.0254, 1.7799, 2.2382],
         [2.0074, 1.7615, 2.2199],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0614, 1.8167, 2.2749],
         [2.0434, 1.7983, 2.2566],
         [2.0254, 1.7799, 2.2382],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0795, 1.8352, 2.2933],
         [2.0614, 1.8167, 2.2749],
         [2.0434, 1.7983, 2.2566],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
263/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.4954, 1.7633, 1.9777],
         [1.5134, 1.7817, 1.9960],
         [1.5337, 1.7979, 2.0144],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4787, 1.7462, 1.9607],
         [1.4954, 1.7633, 1.9777],
         [1.5157, 1.7794, 1.9960],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4828, 1.7504, 1.9648],
         [1.4840, 1.7516, 1.9660],
         [1.5019, 1.7653, 1.9820],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[179.5500,  26.6000, 197.6000, 395.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.4954, 1.7633, 1.9777],
         [1.5134, 1.7817, 1.9960],
         [1.5337, 1.7979, 2.0144],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4787, 1.7462, 1.9607],
         [1.4954, 1.7633, 1.9777],
         [1.5157, 1.7794, 1.9960],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4828, 1.7504, 1.9648],
         [1.4840, 1.7516, 1.9660],
         [1.5019, 1.7653, 1.9820],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
264/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.6563, 1.1155, 1.7511],
         [0.6563, 1.1155, 1.7511],
         [0.6563, 1.1155, 1.7511],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6563, 1.1155, 1.7511],
         [0.6563, 1.1155, 1.7511],
         [0.6563, 1.1155, 1.7511],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6563, 1.1155, 1.7511],
         [0.6563, 1.1155, 1.7511],
         [0.6563, 1.1155, 1.7511],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[154.8500, 163.4000, 173.8500, 368.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.6563, 1.1155, 1.7511],
         [0.6563, 1.1155, 1.7511],
         [0.6563, 1.1155, 1.7511],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6563, 1.1155, 1.7511],
         [0.6563, 1.1155, 1.7511],
         [0.6563, 1.1155, 1.7511],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6563, 1.1155, 1.7511],
         [0.6563, 1.1155, 1.7511],
         [0.6563, 1.1155, 1.7511],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
265/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[2.1290, 2.3060, 2.3098],
         [2.1290, 2.3060, 2.3124],
         [2.1290, 2.3060, 2.3483],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.1290, 2.3060, 2.3465],
         [2.1290, 2.3060, 2.3465],
         [2.1290, 2.3058, 2.3510],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.1268, 2.3014, 2.3809],
         [2.1268, 2.3014, 2.3809],
         [2.1268, 2.2994, 2.3851],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[452.2000, 226.1000, 465.5000, 317.3000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[2.1290, 2.3060, 2.3098],
         [2.1290, 2.3060, 2.3124],
         [2.1290, 2.3060, 2.3483],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.1290, 2.3060, 2.3465],
         [2.1290, 2.3060, 2.3465],
         [2.1290, 2.3058, 2.3510],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.1268, 2.3014, 2.3809],
         [2.1268, 2.3014, 2.3809],
         [2.1268, 2.2994, 2.3851],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
266/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.6734, 0.9230, 1.1062],
         [0.6734, 0.9230, 1.1062],
         [0.6757, 0.9253, 1.1085],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6734, 0.9230, 1.1062],
         [0.6734, 0.9230, 1.1062],
         [0.6755, 0.9251, 1.1083],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6734, 0.9184, 1.1039],
         [0.6736, 0.9185, 1.1041],
         [0.6757, 0.9207, 1.1062],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[326.8000, 234.6500, 334.4000, 315.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.6734, 0.9230, 1.1062],
         [0.6734, 0.9230, 1.1062],
         [0.6757, 0.9253, 1.1085],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6734, 0.9230, 1.1062],
         [0.6734, 0.9230, 1.1062],
         [0.6755, 0.9251, 1.1083],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6734, 0.9184, 1.1039],
         [0.6736, 0.9185, 1.1041],
         [0.6757, 0.9207, 1.1062],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
267/730
After normalization, Min: -1.9980306523205411, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.9303, 1.0805, 1.2980],
         [0.9303, 1.0805, 1.2980],
         [0.9326, 1.0828, 1.3002],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9303, 1.0805, 1.2980],
         [0.9303, 1.0805, 1.2980],
         [0.9324, 1.0827, 1.3001],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9280, 1.0782, 1.2957],
         [0.9282, 1.0784, 1.2958],
         [0.9303, 1.0805, 1.2980],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 61.7500, 262.2000,  77.9000, 320.1500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.9303, 1.0805, 1.2980],
         [0.9303, 1.0805, 1.2980],
         [0.9326, 1.0828, 1.3002],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9303, 1.0805, 1.2980],
         [0.9303, 1.0805, 1.2980],
         [0.9324, 1.0827, 1.3001],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9280, 1.0782, 1.2957],
         [0.9282, 1.0784, 1.2958],
         [0.9303, 1.0805, 1.2980],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
268/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.5802, 2.0600, 2.3428],
         [1.5639, 2.0434, 2.3262],
         [1.5613, 2.0407, 2.3236],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5626, 2.0420, 2.3249],
         [1.5613, 2.0408, 2.3236],
         [1.5466, 2.0257, 2.3087],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5445, 2.0236, 2.3066],
         [1.5445, 2.0236, 2.3066],
         [1.5423, 2.0213, 2.3043],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[124.4500, 140.6000, 143.4500, 336.3000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.5802, 2.0600, 2.3428],
         [1.5639, 2.0434, 2.3262],
         [1.5613, 2.0407, 2.3236],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5626, 2.0420, 2.3249],
         [1.5613, 2.0408, 2.3236],
         [1.5466, 2.0257, 2.3087],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5445, 2.0236, 2.3066],
         [1.5445, 2.0236, 2.3066],
         [1.5423, 2.0213, 2.3043],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
269/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-1.0386, -0.0570,  1.3681],
         [-1.0219, -0.0399,  1.3851],
         [-1.0197, -0.0376,  1.3874],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.0386, -0.0570,  1.3681],
         [-1.0219, -0.0399,  1.3851],
         [-1.0197, -0.0376,  1.3874],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.0386, -0.0570,  1.3681],
         [-1.0219, -0.0399,  1.3851],
         [-1.0197, -0.0376,  1.3874],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[454.1000, 193.8000, 468.3500, 346.7500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-1.0386, -0.0570,  1.3681],
         [-1.0219, -0.0399,  1.3851],
         [-1.0197, -0.0376,  1.3874],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.0386, -0.0570,  1.3681],
         [-1.0219, -0.0399,  1.3851],
         [-1.0197, -0.0376,  1.3874],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.0386, -0.0570,  1.3681],
         [-1.0219, -0.0399,  1.3851],
         [-1.0197, -0.0376,  1.3874],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
270/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.7929, 1.1851, 2.2212],
         [0.7956, 1.1851, 2.2226],
         [0.8294, 1.1874, 2.2410],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7735, 1.1653, 2.2016],
         [0.7775, 1.1667, 2.2043],
         [0.8113, 1.1690, 2.2226],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7379, 1.1289, 2.1653],
         [0.7574, 1.1461, 2.1838],
         [0.7933, 1.1506, 2.2043],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 31.3500, 229.9000,  38.0000, 302.1000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.7929, 1.1851, 2.2212],
         [0.7956, 1.1851, 2.2226],
         [0.8294, 1.1874, 2.2410],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7735, 1.1653, 2.2016],
         [0.7775, 1.1667, 2.2043],
         [0.8113, 1.1690, 2.2226],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7379, 1.1289, 2.1653],
         [0.7574, 1.1461, 2.1838],
         [0.7933, 1.1506, 2.2043],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
271/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.1314,  0.3628,  1.5420],
         [ 0.0105,  0.5079,  1.6864],
         [ 0.1008,  0.6002,  1.7784],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2927,  0.1978,  1.3778],
         [-0.1326,  0.3616,  1.5408],
         [-0.0272,  0.4693,  1.6481],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.6664, -0.1841,  0.9975],
         [-0.4832,  0.0031,  1.1839],
         [-0.2746,  0.2164,  1.3962],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[408.5000, 206.1500, 418.9500, 302.1000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.1314,  0.3628,  1.5420],
         [ 0.0105,  0.5079,  1.6864],
         [ 0.1008,  0.6002,  1.7784],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2927,  0.1978,  1.3778],
         [-0.1326,  0.3616,  1.5408],
         [-0.0272,  0.4693,  1.6481],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.6664, -0.1841,  0.9975],
         [-0.4832,  0.0031,  1.1839],
         [-0.2746,  0.2164,  1.3962],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
272/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.0844, 1.2556, 2.3088],
         [1.0844, 1.2556, 2.3088],
         [1.0844, 1.2556, 2.3088],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0844, 1.2556, 2.3088],
         [1.0844, 1.2556, 2.3088],
         [1.0844, 1.2556, 2.3088],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0867, 1.2579, 2.3111],
         [1.0867, 1.2579, 2.3111],
         [1.0867, 1.2579, 2.3111],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 11.4000, 138.7000,  38.9500, 391.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.0844, 1.2556, 2.3088],
         [1.0844, 1.2556, 2.3088],
         [1.0844, 1.2556, 2.3088],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0844, 1.2556, 2.3088],
         [1.0844, 1.2556, 2.3088],
         [1.0844, 1.2556, 2.3088],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0867, 1.2579, 2.3111],
         [1.0867, 1.2579, 2.3111],
         [1.0867, 1.2579, 2.3111],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
273/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.3922, 1.5703, 1.6984],
         [1.3742, 1.5518, 1.6800],
         [1.3562, 1.5334, 1.6617],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3922, 1.5703, 1.6984],
         [1.3742, 1.5518, 1.6800],
         [1.3562, 1.5334, 1.6617],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3922, 1.5703, 1.6984],
         [1.3742, 1.5518, 1.6800],
         [1.3562, 1.5334, 1.6617],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[542.4500, 138.7000, 555.7500, 371.4500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.3922, 1.5703, 1.6984],
         [1.3742, 1.5518, 1.6800],
         [1.3562, 1.5334, 1.6617],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3922, 1.5703, 1.6984],
         [1.3742, 1.5518, 1.6800],
         [1.3562, 1.5334, 1.6617],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3922, 1.5703, 1.6984],
         [1.3742, 1.5518, 1.6800],
         [1.3562, 1.5334, 1.6617],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
274/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[2.0948, 2.2885, 2.5354],
         [2.0948, 2.2885, 2.5354],
         [2.0948, 2.2885, 2.5354],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0948, 2.2885, 2.5354],
         [2.0948, 2.2885, 2.5354],
         [2.0948, 2.2885, 2.5354],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0925, 2.2862, 2.5331],
         [2.0925, 2.2862, 2.5331],
         [2.0925, 2.2862, 2.5331],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 38.9500, 173.8500,  56.0500, 333.4500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[2.0948, 2.2885, 2.5354],
         [2.0948, 2.2885, 2.5354],
         [2.0948, 2.2885, 2.5354],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0948, 2.2885, 2.5354],
         [2.0948, 2.2885, 2.5354],
         [2.0948, 2.2885, 2.5354],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0925, 2.2862, 2.5331],
         [2.0925, 2.2862, 2.5331],
         [2.0925, 2.2862, 2.5331],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
275/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.8379, 2.0084, 2.2217],
         [1.8379, 2.0084, 2.2217],
         [1.8379, 2.0084, 2.2217],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8379, 2.0084, 2.2217],
         [1.8379, 2.0084, 2.2217],
         [1.8379, 2.0084, 2.2217],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8357, 2.0061, 2.2194],
         [1.8357, 2.0061, 2.2194],
         [1.8357, 2.0061, 2.2194],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[485.4500, 166.2500, 495.9000, 342.0000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.8379, 2.0084, 2.2217],
         [1.8379, 2.0084, 2.2217],
         [1.8379, 2.0084, 2.2217],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8379, 2.0084, 2.2217],
         [1.8379, 2.0084, 2.2217],
         [1.8379, 2.0084, 2.2217],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8357, 2.0061, 2.2194],
         [1.8357, 2.0061, 2.2194],
         [1.8357, 2.0061, 2.2194],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
276/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-1.6647, -1.0314, -0.2653],
         [-1.2470, -0.6399,  0.1029],
         [-1.0211, -0.4437,  0.2406],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.7730, -1.1737, -0.4326],
         [-1.5209, -0.9055, -0.2047],
         [-1.3691, -0.7881, -0.1526],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.8133, -1.2024, -0.5756],
         [-1.7314, -1.1541, -0.5560],
         [-1.7128, -1.1561, -0.5742],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[361.0000, 109.2500, 396.1500, 455.0500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-1.6647, -1.0314, -0.2653],
         [-1.2470, -0.6399,  0.1029],
         [-1.0211, -0.4437,  0.2406],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.7730, -1.1737, -0.4326],
         [-1.5209, -0.9055, -0.2047],
         [-1.3691, -0.7881, -0.1526],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.8133, -1.2024, -0.5756],
         [-1.7314, -1.1541, -0.5560],
         [-1.7128, -1.1561, -0.5742],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
277/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[2.0092, 2.1485, 2.3786],
         [2.0092, 2.1485, 2.3786],
         [2.0092, 2.1485, 2.3786],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0092, 2.1485, 2.3786],
         [2.0092, 2.1485, 2.3786],
         [2.0092, 2.1485, 2.3786],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0092, 2.1485, 2.3786],
         [2.0092, 2.1485, 2.3786],
         [2.0092, 2.1485, 2.3786],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[259.3500, 138.7000, 277.4000, 395.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[2.0092, 2.1485, 2.3786],
         [2.0092, 2.1485, 2.3786],
         [2.0092, 2.1485, 2.3786],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0092, 2.1485, 2.3786],
         [2.0092, 2.1485, 2.3786],
         [2.0092, 2.1485, 2.3786],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0092, 2.1485, 2.3786],
         [2.0092, 2.1485, 2.3786],
         [2.0092, 2.1485, 2.3786],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
278/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.8961, 1.6758, 2.3437],
         [0.8961, 1.6758, 2.3437],
         [0.8961, 1.6758, 2.3437],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8961, 1.6758, 2.3437],
         [0.8961, 1.6758, 2.3437],
         [0.8961, 1.6758, 2.3437],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8983, 1.6781, 2.3460],
         [0.8983, 1.6781, 2.3460],
         [0.8983, 1.6781, 2.3460],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[304.0000, 130.1500, 316.3500, 335.3500,   0.0000],
        [555.7500, 194.7500, 573.8000, 294.5000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.8961, 1.6758, 2.3437],
         [0.8961, 1.6758, 2.3437],
         [0.8961, 1.6758, 2.3437],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8961, 1.6758, 2.3437],
         [0.8961, 1.6758, 2.3437],
         [0.8961, 1.6758, 2.3437],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8983, 1.6781, 2.3460],
         [0.8983, 1.6781, 2.3460],
         [0.8983, 1.6781, 2.3460],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
279/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[ 0.0276,  0.2452,  0.7975],
         [ 0.0068,  0.2267,  0.7791],
         [-0.0267,  0.2271,  0.7840],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.2452,  0.4677,  1.0190],
         [ 0.1659,  0.3894,  0.9410],
         [ 0.0553,  0.3109,  0.8671],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.4760,  0.7059,  1.2494],
         [ 0.3422,  0.5696,  1.1203],
         [ 0.1501,  0.4077,  0.9573],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[ 38.9500, 184.3000,  56.0500, 337.2500,   0.0000],
        [445.5500, 207.1000, 464.5500, 271.7000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[ 0.0276,  0.2452,  0.7975],
         [ 0.0068,  0.2267,  0.7791],
         [-0.0267,  0.2271,  0.7840],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.2452,  0.4677,  1.0190],
         [ 0.1659,  0.3894,  0.9410],
         [ 0.0553,  0.3109,  0.8671],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.4760,  0.7059,  1.2494],
         [ 0.3422,  0.5696,  1.1203],
         [ 0.1501,  0.4077,  0.9573],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
280/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.5121, 1.6753, 1.8901],
         [1.5121, 1.6753, 1.8901],
         [1.5121, 1.6753, 1.8901],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4927, 1.6555, 1.8704],
         [1.4927, 1.6555, 1.8704],
         [1.4927, 1.6555, 1.8704],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4612, 1.6232, 1.8383],
         [1.4612, 1.6232, 1.8383],
         [1.4612, 1.6232, 1.8383],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[197.6000, 187.1500, 220.4000, 363.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.5121, 1.6753, 1.8901],
         [1.5121, 1.6753, 1.8901],
         [1.5121, 1.6753, 1.8901],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4927, 1.6555, 1.8704],
         [1.4927, 1.6555, 1.8704],
         [1.4927, 1.6555, 1.8704],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4612, 1.6232, 1.8383],
         [1.4612, 1.6232, 1.8383],
         [1.4612, 1.6232, 1.8383],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
281/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.6105, -0.0920,  0.8627],
         [-0.5938, -0.0749,  0.8797],
         [-0.5915, -0.0726,  0.8819],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.6105, -0.0920,  0.8627],
         [-0.5938, -0.0749,  0.8797],
         [-0.5915, -0.0726,  0.8819],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.6105, -0.0920,  0.8627],
         [-0.5938, -0.0749,  0.8797],
         [-0.5915, -0.0726,  0.8819],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[ 98.8000, 223.2500, 110.2000, 330.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.6105, -0.0920,  0.8627],
         [-0.5938, -0.0749,  0.8797],
         [-0.5915, -0.0726,  0.8819],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.6105, -0.0920,  0.8627],
         [-0.5938, -0.0749,  0.8797],
         [-0.5915, -0.0726,  0.8819],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.6105, -0.0920,  0.8627],
         [-0.5938, -0.0749,  0.8797],
         [-0.5915, -0.0726,  0.8819],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
282/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.6635, 0.7903, 0.9402],
         [1.0065, 1.1367, 1.2864],
         [1.3334, 1.4226, 1.5862],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6097, 0.7311, 0.9166],
         [0.9131, 1.0375, 1.2203],
         [1.2431, 1.3303, 1.4967],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5868, 0.6594, 0.8612],
         [0.7857, 0.8626, 1.0636],
         [1.0274, 1.1097, 1.3056],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[342.9500, 254.6000, 348.6500, 337.2500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.6635, 0.7903, 0.9402],
         [1.0065, 1.1367, 1.2864],
         [1.3334, 1.4226, 1.5862],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6097, 0.7311, 0.9166],
         [0.9131, 1.0375, 1.2203],
         [1.2431, 1.3303, 1.4967],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5868, 0.6594, 0.8612],
         [0.7857, 0.8626, 1.0636],
         [1.0274, 1.1097, 1.3056],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
283/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.0844, 1.3081, 1.5420],
         [1.0844, 1.3081, 1.5420],
         [1.0867, 1.3104, 1.5443],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0844, 1.3081, 1.5420],
         [1.0844, 1.3081, 1.5420],
         [1.0865, 1.3102, 1.5441],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0822, 1.3058, 1.5397],
         [1.0823, 1.3060, 1.5398],
         [1.0844, 1.3081, 1.5420],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[423.7000, 210.9000, 434.1500, 365.7500,   0.0000],
        [268.8500, 249.8500, 284.0500, 324.9000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.0844, 1.3081, 1.5420],
         [1.0844, 1.3081, 1.5420],
         [1.0867, 1.3104, 1.5443],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0844, 1.3081, 1.5420],
         [1.0844, 1.3081, 1.5420],
         [1.0865, 1.3102, 1.5441],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0822, 1.3058, 1.5397],
         [1.0823, 1.3060, 1.5398],
         [1.0844, 1.3081, 1.5420],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
284/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.5456, -0.8835, -0.4307],
         [-0.6505, -0.9921, -0.5362],
         [-0.7109, -1.0696, -0.5820],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5644, -0.9028, -0.4527],
         [-0.6490, -0.9892, -0.5388],
         [-0.6893, -1.0326, -0.5773],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.6062, -0.9386, -0.5319],
         [-0.6507, -0.9840, -0.5768],
         [-0.6575, -0.9910, -0.5749],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[380.0000, 237.5000, 390.4500, 337.2500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.5456, -0.8835, -0.4307],
         [-0.6505, -0.9921, -0.5362],
         [-0.7109, -1.0696, -0.5820],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5644, -0.9028, -0.4527],
         [-0.6490, -0.9892, -0.5388],
         [-0.6893, -1.0326, -0.5773],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.6062, -0.9386, -0.5319],
         [-0.6507, -0.9840, -0.5768],
         [-0.6575, -0.9910, -0.5749],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
285/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.1876, 1.3611, 1.9259],
         [1.1889, 1.3625, 1.9272],
         [1.2043, 1.3782, 1.9428],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2043, 1.3782, 1.9429],
         [1.2057, 1.3795, 1.9442],
         [1.2057, 1.3795, 1.9442],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2092, 1.3832, 1.9478],
         [1.2237, 1.3980, 1.9626],
         [1.2237, 1.3980, 1.9626],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[355.3000, 188.1000, 372.4000, 429.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.1876, 1.3611, 1.9259],
         [1.1889, 1.3625, 1.9272],
         [1.2043, 1.3782, 1.9428],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2043, 1.3782, 1.9429],
         [1.2057, 1.3795, 1.9442],
         [1.2057, 1.3795, 1.9442],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2092, 1.3832, 1.9478],
         [1.2237, 1.3980, 1.9626],
         [1.2237, 1.3980, 1.9626],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
286/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.1486,  0.3277,  0.9668],
         [-0.1486,  0.3277,  0.9668],
         [-0.1486,  0.3277,  0.9668],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1486,  0.3277,  0.9668],
         [-0.1486,  0.3277,  0.9668],
         [-0.1486,  0.3277,  0.9668],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1486,  0.3277,  0.9668],
         [-0.1486,  0.3277,  0.9668],
         [-0.1486,  0.3277,  0.9668],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[404.7000, 198.5500, 418.9500, 355.3000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.1486,  0.3277,  0.9668],
         [-0.1486,  0.3277,  0.9668],
         [-0.1486,  0.3277,  0.9668],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1486,  0.3277,  0.9668],
         [-0.1486,  0.3277,  0.9668],
         [-0.1486,  0.3277,  0.9668],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1486,  0.3277,  0.9668],
         [-0.1486,  0.3277,  0.9668],
         [-0.1486,  0.3277,  0.9668],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
287/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.5596,  0.2402,  1.4200],
         [-0.5596,  0.2402,  1.4200],
         [-0.5573,  0.2425,  1.4222],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5596,  0.2402,  1.4200],
         [-0.5596,  0.2402,  1.4200],
         [-0.5573,  0.2425,  1.4222],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5596,  0.2402,  1.4200],
         [-0.5596,  0.2402,  1.4200],
         [-0.5573,  0.2425,  1.4222],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[582.3500,  79.8000, 605.1500, 195.7000,   0.0000],
        [457.9000, 234.6500, 470.2500, 302.1000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.5596,  0.2402,  1.4200],
         [-0.5596,  0.2402,  1.4200],
         [-0.5573,  0.2425,  1.4222],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5596,  0.2402,  1.4200],
         [-0.5596,  0.2402,  1.4200],
         [-0.5573,  0.2425,  1.4222],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5596,  0.2402,  1.4200],
         [-0.5596,  0.2402,  1.4200],
         [-0.5573,  0.2425,  1.4222],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
288/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[2.0605, 2.2885, 2.5877],
         [2.0605, 2.2885, 2.5877],
         [2.0605, 2.2885, 2.5877],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0605, 2.2885, 2.5877],
         [2.0605, 2.2885, 2.5877],
         [2.0605, 2.2885, 2.5877],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0583, 2.2862, 2.5854],
         [2.0583, 2.2862, 2.5854],
         [2.0583, 2.2862, 2.5854],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[455.0500, 169.1000, 474.0500, 358.1500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[2.0605, 2.2885, 2.5877],
         [2.0605, 2.2885, 2.5877],
         [2.0605, 2.2885, 2.5877],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0605, 2.2885, 2.5877],
         [2.0605, 2.2885, 2.5877],
         [2.0605, 2.2885, 2.5877],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0583, 2.2862, 2.5854],
         [2.0583, 2.2862, 2.5854],
         [2.0583, 2.2862, 2.5854],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
289/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.3022,  0.0306,  1.1241],
         [-0.2842,  0.0490,  1.1425],
         [-0.2662,  0.0674,  1.1608],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3022,  0.0306,  1.1241],
         [-0.2842,  0.0490,  1.1425],
         [-0.2662,  0.0674,  1.1608],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3000,  0.0329,  1.1264],
         [-0.2820,  0.0513,  1.1448],
         [-0.2639,  0.0697,  1.1631],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[208.0500, 165.3000, 238.4500, 362.9000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.3022,  0.0306,  1.1241],
         [-0.2842,  0.0490,  1.1425],
         [-0.2662,  0.0674,  1.1608],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3022,  0.0306,  1.1241],
         [-0.2842,  0.0490,  1.1425],
         [-0.2662,  0.0674,  1.1608],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3000,  0.0329,  1.1264],
         [-0.2820,  0.0513,  1.1448],
         [-0.2639,  0.0697,  1.1631],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
290/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-1.4676, -1.4571, -1.1243],
         [-1.5257, -1.4571, -1.1476],
         [-1.6285, -1.4552, -1.2178],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.4302, -1.4216, -1.0885],
         [-1.4845, -1.4228, -1.1424],
         [-1.5591, -1.4342, -1.1835],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.3781, -1.4055, -1.0608],
         [-1.4235, -1.4041, -1.1126],
         [-1.5230, -1.3877, -1.1776],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[571.9000, 194.7500, 596.6000, 298.3000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-1.4676, -1.4571, -1.1243],
         [-1.5257, -1.4571, -1.1476],
         [-1.6285, -1.4552, -1.2178],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.4302, -1.4216, -1.0885],
         [-1.4845, -1.4228, -1.1424],
         [-1.5591, -1.4342, -1.1835],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.3781, -1.4055, -1.0608],
         [-1.4235, -1.4041, -1.1126],
         [-1.5230, -1.3877, -1.1776],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
291/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.8212, 1.9038, 2.1873],
         [1.8393, 1.9223, 2.2056],
         [1.8572, 1.9406, 2.2239],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8185, 1.9052, 2.1873],
         [1.8352, 1.9223, 2.2043],
         [1.8512, 1.9386, 2.2205],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7843, 1.9186, 2.1846],
         [1.7879, 1.9223, 2.1882],
         [1.8059, 1.9407, 2.2066],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 17.1000, 170.0500,  38.9500, 365.7500,   0.0000],
        [168.1500, 249.8500, 182.4000, 282.1500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.8212, 1.9038, 2.1873],
         [1.8393, 1.9223, 2.2056],
         [1.8572, 1.9406, 2.2239],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8185, 1.9052, 2.1873],
         [1.8352, 1.9223, 2.2043],
         [1.8512, 1.9386, 2.2205],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7843, 1.9186, 2.1846],
         [1.7879, 1.9223, 2.1882],
         [1.8059, 1.9407, 2.2066],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
292/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.9646, 1.1856, 1.4200],
         [0.9646, 1.1856, 1.4200],
         [0.9668, 1.1879, 1.4222],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9646, 1.1856, 1.4200],
         [0.9646, 1.1856, 1.4200],
         [0.9666, 1.1877, 1.4221],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9623, 1.1833, 1.4177],
         [0.9625, 1.1835, 1.4178],
         [0.9646, 1.1856, 1.4200],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[188.1000,  92.1500, 209.0000, 304.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.9646, 1.1856, 1.4200],
         [0.9646, 1.1856, 1.4200],
         [0.9668, 1.1879, 1.4222],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9646, 1.1856, 1.4200],
         [0.9646, 1.1856, 1.4200],
         [0.9666, 1.1877, 1.4221],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9623, 1.1833, 1.4177],
         [0.9625, 1.1835, 1.4178],
         [0.9646, 1.1856, 1.4200],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
293/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.2557, 1.5882, 2.0126],
         [1.2588, 1.5914, 2.0157],
         [1.2922, 1.6256, 2.0497],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2561, 1.5887, 2.0130],
         [1.2741, 1.6071, 2.0314],
         [1.2922, 1.6256, 2.0497],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2538, 1.5909, 2.0152],
         [1.2696, 1.6071, 2.0314],
         [1.2877, 1.6256, 2.0497],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[228.0000, 184.3000, 247.0000, 247.0000,   0.0000],
        [143.4500, 267.9000, 156.7500, 329.6500,   0.0000],
        [ 58.9000, 242.2500,  76.0000, 315.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.2557, 1.5882, 2.0126],
         [1.2588, 1.5914, 2.0157],
         [1.2922, 1.6256, 2.0497],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2561, 1.5887, 2.0130],
         [1.2741, 1.6071, 2.0314],
         [1.2922, 1.6256, 2.0497],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2538, 1.5909, 2.0152],
         [1.2696, 1.6071, 2.0314],
         [1.2877, 1.6256, 2.0497],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
294/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[2.0777, 2.3235, 2.5529],
         [2.0790, 2.3249, 2.5542],
         [2.0944, 2.3406, 2.5699],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0790, 2.3208, 2.5515],
         [2.0791, 2.3209, 2.5516],
         [2.0824, 2.3243, 2.5550],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0926, 2.2863, 2.5332],
         [2.0960, 2.2897, 2.5366],
         [2.1097, 2.3037, 2.5506],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[204.2500, 110.2000, 221.3500, 277.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[2.0777, 2.3235, 2.5529],
         [2.0790, 2.3249, 2.5542],
         [2.0944, 2.3406, 2.5699],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0790, 2.3208, 2.5515],
         [2.0791, 2.3209, 2.5516],
         [2.0824, 2.3243, 2.5550],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0926, 2.2863, 2.5332],
         [2.0960, 2.2897, 2.5366],
         [2.1097, 2.3037, 2.5506],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
295/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.2899, 1.4657, 1.7163],
         [1.2899, 1.4657, 1.7163],
         [1.2922, 1.4680, 1.7185],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2899, 1.4657, 1.7163],
         [1.2899, 1.4657, 1.7163],
         [1.2922, 1.4680, 1.7185],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2899, 1.4657, 1.7163],
         [1.2899, 1.4657, 1.7163],
         [1.2922, 1.4680, 1.7185],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[215.6500,   0.0000, 247.9500, 456.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.2899, 1.4657, 1.7163],
         [1.2899, 1.4657, 1.7163],
         [1.2922, 1.4680, 1.7185],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2899, 1.4657, 1.7163],
         [1.2899, 1.4657, 1.7163],
         [1.2922, 1.4680, 1.7185],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2899, 1.4657, 1.7163],
         [1.2899, 1.4657, 1.7163],
         [1.2922, 1.4680, 1.7185],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
296/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.4440, 1.8158, 1.9951],
         [1.4454, 1.8172, 1.9965],
         [1.4634, 1.8356, 2.0148],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4440, 1.8158, 1.9951],
         [1.4454, 1.8172, 1.9965],
         [1.4634, 1.8356, 2.0148],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4440, 1.8158, 1.9951],
         [1.4454, 1.8172, 1.9965],
         [1.4634, 1.8356, 2.0148],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[457.9000, 102.6000, 483.5500, 308.7500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.4440, 1.8158, 1.9951],
         [1.4454, 1.8172, 1.9965],
         [1.4634, 1.8356, 2.0148],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4440, 1.8158, 1.9951],
         [1.4454, 1.8172, 1.9965],
         [1.4634, 1.8356, 2.0148],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4440, 1.8158, 1.9951],
         [1.4454, 1.8172, 1.9965],
         [1.4634, 1.8356, 2.0148],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
297/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.1648,  0.2061,  1.2117],
         [-0.1472,  0.2241,  1.2296],
         [-0.1292,  0.2425,  1.2480],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1472,  0.2241,  1.2296],
         [-0.1460,  0.2253,  1.2309],
         [-0.1292,  0.2425,  1.2480],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1314,  0.2403,  1.2457],
         [-0.1292,  0.2425,  1.2480],
         [-0.1275,  0.2442,  1.2496],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[344.8500, 137.7500, 359.1000, 284.0500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.1648,  0.2061,  1.2117],
         [-0.1472,  0.2241,  1.2296],
         [-0.1292,  0.2425,  1.2480],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1472,  0.2241,  1.2296],
         [-0.1460,  0.2253,  1.2309],
         [-0.1292,  0.2425,  1.2480],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1314,  0.2403,  1.2457],
         [-0.1292,  0.2425,  1.2480],
         [-0.1275,  0.2442,  1.2496],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
298/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.0502, 1.2731, 1.5071],
         [1.0502, 1.2731, 1.5071],
         [1.0502, 1.2731, 1.5071],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0502, 1.2731, 1.5071],
         [1.0502, 1.2731, 1.5071],
         [1.0502, 1.2731, 1.5071],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0524, 1.2754, 1.5094],
         [1.0524, 1.2754, 1.5094],
         [1.0524, 1.2754, 1.5094],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[351.5000, 246.0500, 359.1000, 286.9000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.0502, 1.2731, 1.5071],
         [1.0502, 1.2731, 1.5071],
         [1.0502, 1.2731, 1.5071],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0502, 1.2731, 1.5071],
         [1.0502, 1.2731, 1.5071],
         [1.0502, 1.2731, 1.5071],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0524, 1.2754, 1.5094],
         [1.0524, 1.2754, 1.5094],
         [1.0524, 1.2754, 1.5094],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
299/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.1015, 1.0630, 1.5594],
         [1.1015, 1.0631, 1.5594],
         [1.0963, 1.0634, 1.5617],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1015, 1.0631, 1.5594],
         [1.0964, 1.0657, 1.5594],
         [1.0673, 1.0782, 1.5617],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0985, 1.0680, 1.5617],
         [1.0696, 1.0828, 1.5617],
         [1.0696, 1.0805, 1.5640],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[359.1000, 177.6500, 380.0000, 361.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.1015, 1.0630, 1.5594],
         [1.1015, 1.0631, 1.5594],
         [1.0963, 1.0634, 1.5617],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1015, 1.0631, 1.5594],
         [1.0964, 1.0657, 1.5594],
         [1.0673, 1.0782, 1.5617],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0985, 1.0680, 1.5617],
         [1.0696, 1.0828, 1.5617],
         [1.0696, 1.0805, 1.5640],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
300/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.8794, 1.1330, 1.3516],
         [0.8789, 1.1155, 1.3865],
         [0.8767, 1.1132, 1.4048],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8956, 1.1483, 1.3708],
         [0.8802, 1.1168, 1.3877],
         [0.8767, 1.1132, 1.4048],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8982, 1.1353, 1.4048],
         [0.8947, 1.1317, 1.4025],
         [0.8764, 1.1129, 1.4045],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[163.4000,  88.3500, 191.9000, 290.7000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.8794, 1.1330, 1.3516],
         [0.8789, 1.1155, 1.3865],
         [0.8767, 1.1132, 1.4048],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8956, 1.1483, 1.3708],
         [0.8802, 1.1168, 1.3877],
         [0.8767, 1.1132, 1.4048],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8982, 1.1353, 1.4048],
         [0.8947, 1.1317, 1.4025],
         [0.8764, 1.1129, 1.4045],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
301/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.6573, -0.3859,  0.3761],
         [-1.2103, -0.9880, -0.3179],
         [-1.6425, -1.4667, -0.9344],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5942, -0.3254,  0.4404],
         [-1.1268, -0.9053, -0.2317],
         [-1.5422, -1.3643, -0.8320],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.6585, -0.4392,  0.3753],
         [-1.1521, -0.9608, -0.2424],
         [-1.5435, -1.3665, -0.8276],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[514.9000, 244.1500, 532.9500, 298.3000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.6573, -0.3859,  0.3761],
         [-1.2103, -0.9880, -0.3179],
         [-1.6425, -1.4667, -0.9344],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5942, -0.3254,  0.4404],
         [-1.1268, -0.9053, -0.2317],
         [-1.5422, -1.3643, -0.8320],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.6585, -0.4392,  0.3753],
         [-1.1521, -0.9608, -0.2424],
         [-1.5435, -1.3665, -0.8276],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
302/730
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.3369,  0.1527,  0.7054],
         [-0.3369,  0.1527,  0.7054],
         [-0.3369,  0.1527,  0.7054],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3369,  0.1527,  0.7054],
         [-0.3369,  0.1527,  0.7054],
         [-0.3369,  0.1527,  0.7054],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3369,  0.1527,  0.7054],
         [-0.3369,  0.1527,  0.7054],
         [-0.3369,  0.1527,  0.7054],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[508.2500, 170.0500, 529.1500, 323.0000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.3369,  0.1527,  0.7054],
         [-0.3369,  0.1527,  0.7054],
         [-0.3369,  0.1527,  0.7054],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3369,  0.1527,  0.7054],
         [-0.3369,  0.1527,  0.7054],
         [-0.3369,  0.1527,  0.7054],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3369,  0.1527,  0.7054],
         [-0.3369,  0.1527,  0.7054],
         [-0.3369,  0.1527,  0.7054],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
303/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.0916, 0.5208, 1.0893],
         [0.1083, 0.5378, 1.1062],
         [0.1106, 0.5401, 1.1085],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0930, 0.5221, 1.0906],
         [0.1084, 0.5379, 1.1063],
         [0.1117, 0.5413, 1.1097],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1083, 0.5378, 1.1016],
         [0.1097, 0.5392, 1.1030],
         [0.1257, 0.5556, 1.1194],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[243.2000,  92.1500, 264.1000, 357.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.0916, 0.5208, 1.0893],
         [0.1083, 0.5378, 1.1062],
         [0.1106, 0.5401, 1.1085],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0930, 0.5221, 1.0906],
         [0.1084, 0.5379, 1.1063],
         [0.1117, 0.5413, 1.1097],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1083, 0.5378, 1.1016],
         [0.1097, 0.5392, 1.1030],
         [0.1257, 0.5556, 1.1194],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
304/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.8507,  0.1527,  1.5245],
         [-0.8507,  0.1527,  1.5245],
         [-0.8507,  0.1527,  1.5245],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8507,  0.1527,  1.5245],
         [-0.8507,  0.1527,  1.5245],
         [-0.8507,  0.1527,  1.5245],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8507,  0.1527,  1.5245],
         [-0.8507,  0.1527,  1.5245],
         [-0.8507,  0.1527,  1.5245],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[282.1500,  20.9000, 314.4500, 423.7000,   0.0000],
        [455.0500, 194.7500, 467.4000, 252.7000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.8507,  0.1527,  1.5245],
         [-0.8507,  0.1527,  1.5245],
         [-0.8507,  0.1527,  1.5245],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8507,  0.1527,  1.5245],
         [-0.8507,  0.1527,  1.5245],
         [-0.8507,  0.1527,  1.5245],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8507,  0.1527,  1.5245],
         [-0.8507,  0.1527,  1.5245],
         [-0.8507,  0.1527,  1.5245],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
305/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.2219, 1.4661, 1.7516],
         [1.2201, 1.4643, 1.7498],
         [1.2047, 1.4486, 1.7341],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2381, 1.4828, 1.7681],
         [1.2227, 1.4670, 1.7524],
         [1.2193, 1.4636, 1.7490],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2408, 1.4855, 1.7708],
         [1.2394, 1.4841, 1.7695],
         [1.2234, 1.4677, 1.7531],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[338.2000, 117.8000, 361.0000, 353.4000,   0.0000],
        [342.9500,   1.9000, 376.2000, 116.8500,   0.0000],
        [ 71.2500, 251.7500,  84.5500, 285.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.2219, 1.4661, 1.7516],
         [1.2201, 1.4643, 1.7498],
         [1.2047, 1.4486, 1.7341],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2381, 1.4828, 1.7681],
         [1.2227, 1.4670, 1.7524],
         [1.2193, 1.4636, 1.7490],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2408, 1.4855, 1.7708],
         [1.2394, 1.4841, 1.7695],
         [1.2234, 1.4677, 1.7531],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
306/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.4226,  0.3978,  1.6988],
         [-0.4239,  0.3964,  1.6974],
         [-0.4419,  0.3780,  1.6792],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4226,  0.3978,  1.6988],
         [-0.4239,  0.3964,  1.6974],
         [-0.4397,  0.3803,  1.6814],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4226,  0.3978,  1.6988],
         [-0.4237,  0.3966,  1.6976],
         [-0.4377,  0.3823,  1.6834],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[ 35.1500, 229.9000,  57.0000, 366.7000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.4226,  0.3978,  1.6988],
         [-0.4239,  0.3964,  1.6974],
         [-0.4419,  0.3780,  1.6792],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4226,  0.3978,  1.6988],
         [-0.4239,  0.3964,  1.6974],
         [-0.4397,  0.3803,  1.6814],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4226,  0.3978,  1.6988],
         [-0.4237,  0.3966,  1.6976],
         [-0.4377,  0.3823,  1.6834],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
307/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.1417, 0.5369, 1.0879],
         [0.1435, 0.5387, 1.0897],
         [0.1637, 0.5594, 1.1103],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1061, 0.5005, 1.0543],
         [0.1241, 0.5189, 1.0700],
         [0.1421, 0.5374, 1.0883],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0700, 0.4636, 1.0490],
         [0.0880, 0.4821, 1.0379],
         [0.1064, 0.5008, 1.0559],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[255.5500,  63.6500, 288.8000, 392.3500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.1417, 0.5369, 1.0879],
         [0.1435, 0.5387, 1.0897],
         [0.1637, 0.5594, 1.1103],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1061, 0.5005, 1.0543],
         [0.1241, 0.5189, 1.0700],
         [0.1421, 0.5374, 1.0883],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0700, 0.4636, 1.0490],
         [0.0880, 0.4821, 1.0379],
         [0.1064, 0.5008, 1.0559],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
308/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.8678,  0.0826,  1.5594],
         [-0.8678,  0.0826,  1.5594],
         [-0.8678,  0.0826,  1.5594],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8678,  0.0826,  1.5594],
         [-0.8678,  0.0826,  1.5594],
         [-0.8678,  0.0826,  1.5594],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8678,  0.0826,  1.5594],
         [-0.8678,  0.0826,  1.5594],
         [-0.8678,  0.0826,  1.5594],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[145.3500, 172.9000, 160.5500, 299.2500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.8678,  0.0826,  1.5594],
         [-0.8678,  0.0826,  1.5594],
         [-0.8678,  0.0826,  1.5594],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8678,  0.0826,  1.5594],
         [-0.8678,  0.0826,  1.5594],
         [-0.8678,  0.0826,  1.5594],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8678,  0.0826,  1.5594],
         [-0.8678,  0.0826,  1.5594],
         [-0.8678,  0.0826,  1.5594],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
309/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.8902, 1.9743, 2.3098],
         [1.9091, 1.9937, 2.3290],
         [1.9452, 2.0305, 2.3657],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.9064, 1.9909, 2.3263],
         [1.9091, 1.9937, 2.3290],
         [1.9452, 2.0305, 2.3657],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.9064, 1.9909, 2.3263],
         [1.9091, 1.9937, 2.3290],
         [1.9449, 2.0302, 2.3654],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[434.1500,  95.9500, 480.7000, 471.2000,   0.0000],
        [530.1000,   3.8000, 558.6000,  92.1500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.8902, 1.9743, 2.3098],
         [1.9091, 1.9937, 2.3290],
         [1.9452, 2.0305, 2.3657],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.9064, 1.9909, 2.3263],
         [1.9091, 1.9937, 2.3290],
         [1.9452, 2.0305, 2.3657],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.9064, 1.9909, 2.3263],
         [1.9091, 1.9937, 2.3290],
         [1.9449, 2.0302, 2.3654],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
310/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.9988, 1.1856, 1.3851],
         [0.9988, 1.1856, 1.3851],
         [0.9988, 1.1856, 1.3851],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9988, 1.1856, 1.3851],
         [0.9988, 1.1856, 1.3851],
         [0.9988, 1.1856, 1.3851],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9965, 1.1833, 1.3828],
         [0.9965, 1.1833, 1.3828],
         [0.9965, 1.1833, 1.3828],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[138.7000,   0.0000, 182.4000, 463.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.9988, 1.1856, 1.3851],
         [0.9988, 1.1856, 1.3851],
         [0.9988, 1.1856, 1.3851],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9988, 1.1856, 1.3851],
         [0.9988, 1.1856, 1.3851],
         [0.9988, 1.1856, 1.3851],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9965, 1.1833, 1.3828],
         [0.9965, 1.1833, 1.3828],
         [0.9965, 1.1833, 1.3828],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
311/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.2333,  0.7120,  1.2805],
         [-0.2171,  0.6954,  1.2805],
         [-0.2171,  0.6954,  1.2805],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2157,  0.6968,  1.2819],
         [-0.2157,  0.6968,  1.2819],
         [-0.2157,  0.6968,  1.2819],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1977,  0.7152,  1.3002],
         [-0.1977,  0.7152,  1.3002],
         [-0.1977,  0.7152,  1.3002],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[259.3500, 106.4000, 280.2500, 323.0000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.2333,  0.7120,  1.2805],
         [-0.2171,  0.6954,  1.2805],
         [-0.2171,  0.6954,  1.2805],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2157,  0.6968,  1.2819],
         [-0.2157,  0.6968,  1.2819],
         [-0.2157,  0.6968,  1.2819],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1977,  0.7152,  1.3002],
         [-0.1977,  0.7152,  1.3002],
         [-0.1977,  0.7152,  1.3002],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
312/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.7009, 1.7633, 2.0474],
         [1.7009, 1.7633, 2.0474],
         [1.7032, 1.7656, 2.0497],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7009, 1.7633, 2.0474],
         [1.7009, 1.7633, 2.0474],
         [1.7032, 1.7656, 2.0497],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7009, 1.7633, 2.0474],
         [1.7009, 1.7633, 2.0474],
         [1.7032, 1.7656, 2.0497],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 92.1500, 149.1500, 120.6500, 359.1000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.7009, 1.7633, 2.0474],
         [1.7009, 1.7633, 2.0474],
         [1.7032, 1.7656, 2.0497],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7009, 1.7633, 2.0474],
         [1.7009, 1.7633, 2.0474],
         [1.7032, 1.7656, 2.0497],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7009, 1.7633, 2.0474],
         [1.7009, 1.7633, 2.0474],
         [1.7032, 1.7656, 2.0497],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
313/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.0912, 1.0630, 1.9777],
         [0.0912, 1.0630, 1.9777],
         [0.0912, 1.0630, 1.9777],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0899, 1.0617, 1.9764],
         [0.0912, 1.0630, 1.9777],
         [0.0912, 1.0630, 1.9777],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0745, 1.0460, 1.9607],
         [0.0912, 1.0630, 1.9777],
         [0.0915, 1.0633, 1.9780],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[235.6000, 128.2500, 249.8500, 408.5000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.0912, 1.0630, 1.9777],
         [0.0912, 1.0630, 1.9777],
         [0.0912, 1.0630, 1.9777],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0899, 1.0617, 1.9764],
         [0.0912, 1.0630, 1.9777],
         [0.0912, 1.0630, 1.9777],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0745, 1.0460, 1.9607],
         [0.0912, 1.0630, 1.9777],
         [0.0915, 1.0633, 1.9780],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
314/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.2796, 0.8880, 2.0648],
         [0.2796, 0.8880, 2.0648],
         [0.2796, 0.8880, 2.0648],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2796, 0.8880, 2.0648],
         [0.2796, 0.8880, 2.0648],
         [0.2796, 0.8880, 2.0648],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2796, 0.8880, 2.0648],
         [0.2796, 0.8880, 2.0648],
         [0.2796, 0.8880, 2.0648],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[181.4500, 253.6500, 215.6500, 493.0500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.2796, 0.8880, 2.0648],
         [0.2796, 0.8880, 2.0648],
         [0.2796, 0.8880, 2.0648],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2796, 0.8880, 2.0648],
         [0.2796, 0.8880, 2.0648],
         [0.2796, 0.8880, 2.0648],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2796, 0.8880, 2.0648],
         [0.2796, 0.8880, 2.0648],
         [0.2796, 0.8880, 2.0648],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
315/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.8271, 1.0801, 1.5066],
         [0.8091, 1.0616, 1.4883],
         [0.8001, 1.0478, 1.4745],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8284, 1.0814, 1.5107],
         [0.8091, 1.0616, 1.4910],
         [0.8001, 1.0476, 1.4773],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8438, 1.0972, 1.5585],
         [0.8113, 1.0639, 1.5254],
         [0.8023, 1.0478, 1.5117],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[454.1000,  98.8000, 475.0000, 342.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.8271, 1.0801, 1.5066],
         [0.8091, 1.0616, 1.4883],
         [0.8001, 1.0478, 1.4745],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8284, 1.0814, 1.5107],
         [0.8091, 1.0616, 1.4910],
         [0.8001, 1.0476, 1.4773],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8438, 1.0972, 1.5585],
         [0.8113, 1.0639, 1.5254],
         [0.8023, 1.0478, 1.5117],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
316/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[ 0.3936,  0.7770,  1.6406],
         [ 0.3766,  0.7596,  1.6233],
         [ 0.3385,  0.7205,  1.5845],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.1553,  0.5320,  1.3926],
         [ 0.2324,  0.6108,  1.4710],
         [ 0.2981,  0.6737,  1.5358],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3883, -0.0376,  0.7659],
         [-0.2370,  0.1165,  0.9196],
         [-0.0038,  0.3486,  1.1527],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[386.6500, 141.5500, 395.2000, 348.6500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[ 0.3936,  0.7770,  1.6406],
         [ 0.3766,  0.7596,  1.6233],
         [ 0.3385,  0.7205,  1.5845],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.1553,  0.5320,  1.3926],
         [ 0.2324,  0.6108,  1.4710],
         [ 0.2981,  0.6737,  1.5358],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3883, -0.0376,  0.7659],
         [-0.2370,  0.1165,  0.9196],
         [-0.0038,  0.3486,  1.1527],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
317/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.5082, -0.1450,  0.7228],
         [-0.5082, -0.1450,  0.7228],
         [-0.5104, -0.1427,  0.7228],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5082, -0.1450,  0.7228],
         [-0.5083, -0.1448,  0.7228],
         [-0.5116, -0.1415,  0.7228],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5082, -0.1450,  0.7228],
         [-0.5095, -0.1436,  0.7228],
         [-0.5253, -0.1275,  0.7228],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[326.8000, 105.4500, 338.2000, 380.0000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.5082, -0.1450,  0.7228],
         [-0.5082, -0.1450,  0.7228],
         [-0.5104, -0.1427,  0.7228],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5082, -0.1450,  0.7228],
         [-0.5083, -0.1448,  0.7228],
         [-0.5116, -0.1415,  0.7228],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5082, -0.1450,  0.7228],
         [-0.5095, -0.1436,  0.7228],
         [-0.5253, -0.1275,  0.7228],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
318/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.3554, -0.1814, -0.2895],
         [-0.3761, -0.1998, -0.3092],
         [-0.4302, -0.2182, -0.3390],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3915, -0.2182, -0.3262],
         [-0.4122, -0.2366, -0.3459],
         [-0.4663, -0.2551, -0.3757],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4253, -0.2528, -0.3606],
         [-0.4460, -0.2714, -0.3799],
         [-0.5001, -0.2916, -0.4061],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[501.6000,  85.5000, 516.8000, 448.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.3554, -0.1814, -0.2895],
         [-0.3761, -0.1998, -0.3092],
         [-0.4302, -0.2182, -0.3390],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3915, -0.2182, -0.3262],
         [-0.4122, -0.2366, -0.3459],
         [-0.4663, -0.2551, -0.3757],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4253, -0.2528, -0.3606],
         [-0.4460, -0.2714, -0.3799],
         [-0.5001, -0.2916, -0.4061],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
319/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.1542, -0.1158, -0.5893],
         [ 0.4737,  0.5248,  0.0842],
         [ 0.5013,  0.5373,  0.1334],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3493, -0.3138, -0.7941],
         [-0.1551, -0.1166, -0.5910],
         [-0.3618, -0.3301, -0.7669],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1784, -0.1233, -0.6882],
         [-0.2531, -0.2145, -0.7321],
         [-0.5106, -0.4781, -0.9569],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[330.6000, 133.9500, 347.7000, 268.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.1542, -0.1158, -0.5893],
         [ 0.4737,  0.5248,  0.0842],
         [ 0.5013,  0.5373,  0.1334],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3493, -0.3138, -0.7941],
         [-0.1551, -0.1166, -0.5910],
         [-0.3618, -0.3301, -0.7669],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1784, -0.1233, -0.6882],
         [-0.2531, -0.2145, -0.7321],
         [-0.5106, -0.4781, -0.9569],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
320/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.2557, 1.4132, 1.6640],
         [1.2570, 1.4145, 1.6653],
         [1.2751, 1.4330, 1.6837],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2544, 1.4118, 1.6626],
         [1.2570, 1.4145, 1.6653],
         [1.2751, 1.4330, 1.6837],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2390, 1.3961, 1.6470],
         [1.2568, 1.4144, 1.6652],
         [1.2731, 1.4310, 1.6817],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[104.5000,  83.6000, 140.6000, 431.3000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.2557, 1.4132, 1.6640],
         [1.2570, 1.4145, 1.6653],
         [1.2751, 1.4330, 1.6837],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2544, 1.4118, 1.6626],
         [1.2570, 1.4145, 1.6653],
         [1.2751, 1.4330, 1.6837],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2390, 1.3961, 1.6470],
         [1.2568, 1.4144, 1.6652],
         [1.2731, 1.4310, 1.6817],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
321/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-1.0219, -0.0399,  1.3851],
         [-1.0219, -0.0399,  1.3851],
         [-1.0219, -0.0399,  1.3851],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.0219, -0.0399,  1.3851],
         [-1.0219, -0.0399,  1.3851],
         [-1.0219, -0.0399,  1.3851],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.0219, -0.0399,  1.3851],
         [-1.0219, -0.0399,  1.3851],
         [-1.0219, -0.0399,  1.3851],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[251.7500, 201.4000, 261.2500, 324.9000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-1.0219, -0.0399,  1.3851],
         [-1.0219, -0.0399,  1.3851],
         [-1.0219, -0.0399,  1.3851],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.0219, -0.0399,  1.3851],
         [-1.0219, -0.0399,  1.3851],
         [-1.0219, -0.0399,  1.3851],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.0219, -0.0399,  1.3851],
         [-1.0219, -0.0399,  1.3851],
         [-1.0219, -0.0399,  1.3851],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
322/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.7591, 0.9755, 1.2108],
         [0.7591, 0.9755, 1.2108],
         [0.7591, 0.9755, 1.2108],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7591, 0.9755, 1.2108],
         [0.7591, 0.9755, 1.2108],
         [0.7591, 0.9755, 1.2108],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7591, 0.9755, 1.2108],
         [0.7591, 0.9755, 1.2108],
         [0.7591, 0.9755, 1.2108],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 61.7500, 192.8500,  72.2000, 345.8000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.7591, 0.9755, 1.2108],
         [0.7591, 0.9755, 1.2108],
         [0.7591, 0.9755, 1.2108],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7591, 0.9755, 1.2108],
         [0.7591, 0.9755, 1.2108],
         [0.7591, 0.9755, 1.2108],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7591, 0.9755, 1.2108],
         [0.7591, 0.9755, 1.2108],
         [0.7591, 0.9755, 1.2108],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
323/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.5026, 0.9409, 1.9084],
         [0.5040, 0.9423, 1.9098],
         [0.5216, 0.9603, 1.9277],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5207, 0.9607, 1.9241],
         [0.5207, 0.9594, 1.9268],
         [0.5227, 0.9615, 1.9289],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5454, 0.9948, 1.9133],
         [0.5432, 0.9778, 1.9405],
         [0.5432, 0.9778, 1.9411],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 66.5000,  89.3000,  85.5000, 385.7000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.5026, 0.9409, 1.9084],
         [0.5040, 0.9423, 1.9098],
         [0.5216, 0.9603, 1.9277],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5207, 0.9607, 1.9241],
         [0.5207, 0.9594, 1.9268],
         [0.5227, 0.9615, 1.9289],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5454, 0.9948, 1.9133],
         [0.5432, 0.9778, 1.9405],
         [0.5432, 0.9778, 1.9411],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
324/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.8212, 1.9739, 2.2744],
         [1.8379, 1.9909, 2.2914],
         [1.8402, 1.9932, 2.2937],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8212, 1.9739, 2.2744],
         [1.8379, 1.9909, 2.2914],
         [1.8402, 1.9932, 2.2937],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8212, 1.9739, 2.2744],
         [1.8379, 1.9909, 2.2914],
         [1.8402, 1.9932, 2.2937],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[422.7500, 120.6500, 435.1000, 380.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.8212, 1.9739, 2.2744],
         [1.8379, 1.9909, 2.2914],
         [1.8402, 1.9932, 2.2937],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8212, 1.9739, 2.2744],
         [1.8379, 1.9909, 2.2914],
         [1.8402, 1.9932, 2.2937],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8212, 1.9739, 2.2744],
         [1.8379, 1.9909, 2.2914],
         [1.8402, 1.9932, 2.2937],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
325/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.9303, 1.4132, 1.5942],
         [0.9303, 1.4132, 1.5942],
         [0.9303, 1.4132, 1.5942],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9303, 1.4132, 1.5942],
         [0.9303, 1.4132, 1.5942],
         [0.9303, 1.4132, 1.5942],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9280, 1.4109, 1.5920],
         [0.9280, 1.4109, 1.5920],
         [0.9280, 1.4109, 1.5920],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[233.7000, 160.5500, 249.8500, 318.2500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.9303, 1.4132, 1.5942],
         [0.9303, 1.4132, 1.5942],
         [0.9303, 1.4132, 1.5942],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9303, 1.4132, 1.5942],
         [0.9303, 1.4132, 1.5942],
         [0.9303, 1.4132, 1.5942],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9280, 1.4109, 1.5920],
         [0.9280, 1.4109, 1.5920],
         [0.9280, 1.4109, 1.5920],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
326/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.3755, 1.5007, 1.8034],
         [1.3755, 1.5007, 1.8034],
         [1.3778, 1.5030, 1.8057],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3755, 1.5007, 1.8034],
         [1.3755, 1.5007, 1.8034],
         [1.3776, 1.5028, 1.8055],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3755, 1.5007, 1.8034],
         [1.3755, 1.5007, 1.8034],
         [1.3755, 1.5007, 1.8034],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[347.7000, 254.6000, 354.3500, 318.2500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.3755, 1.5007, 1.8034],
         [1.3755, 1.5007, 1.8034],
         [1.3778, 1.5030, 1.8057],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3755, 1.5007, 1.8034],
         [1.3755, 1.5007, 1.8034],
         [1.3776, 1.5028, 1.8055],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3755, 1.5007, 1.8034],
         [1.3755, 1.5007, 1.8034],
         [1.3755, 1.5007, 1.8034],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
327/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.2967, 1.0105, 2.0125],
         [0.2769, 0.9903, 1.9924],
         [0.2435, 0.9561, 1.9584],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3143, 1.0285, 2.0305],
         [0.2808, 0.9943, 1.9964],
         [0.2617, 0.9748, 1.9770],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3327, 1.0474, 2.0492],
         [0.3134, 1.0276, 2.0295],
         [0.2818, 0.9953, 1.9974],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[461.7000, 247.9500, 466.4500, 317.3000,   0.0000],
        [120.6500, 241.3000, 133.9500, 266.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.2967, 1.0105, 2.0125],
         [0.2769, 0.9903, 1.9924],
         [0.2435, 0.9561, 1.9584],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3143, 1.0285, 2.0305],
         [0.2808, 0.9943, 1.9964],
         [0.2617, 0.9748, 1.9770],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3327, 1.0474, 2.0492],
         [0.3134, 1.0276, 2.0295],
         [0.2818, 0.9953, 1.9974],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
328/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-1.0206, -0.0560,  1.3690],
         [-1.0386, -0.0745,  1.3507],
         [-1.0571, -0.0934,  1.3318],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.9525,  0.0135,  1.4383],
         [-0.9719, -0.0063,  1.4186],
         [-1.0078, -0.0430,  1.3821],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.9434,  0.0228,  1.4475],
         [-0.9605,  0.0054,  1.4302],
         [-0.9919, -0.0267,  1.3982],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[198.5500, 237.5000, 204.2500, 324.9000,   0.0000],
        [ 91.2000, 273.6000,  99.7500, 319.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-1.0206, -0.0560,  1.3690],
         [-1.0386, -0.0745,  1.3507],
         [-1.0571, -0.0934,  1.3318],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.9525,  0.0135,  1.4383],
         [-0.9719, -0.0063,  1.4186],
         [-1.0078, -0.0430,  1.3821],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.9434,  0.0228,  1.4475],
         [-0.9605,  0.0054,  1.4302],
         [-0.9919, -0.0267,  1.3982],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
329/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.5198, 0.8184, 1.2984],
         [0.5198, 0.8184, 1.2984],
         [0.5152, 0.8206, 1.2984],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5364, 0.8354, 1.3154],
         [0.5364, 0.8354, 1.3154],
         [0.5299, 0.8356, 1.3133],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5387, 0.8377, 1.3177],
         [0.5387, 0.8377, 1.3177],
         [0.5342, 0.8400, 1.3177],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 32.3000, 252.7000,  40.8500, 310.6500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.5198, 0.8184, 1.2984],
         [0.5198, 0.8184, 1.2984],
         [0.5152, 0.8206, 1.2984],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5364, 0.8354, 1.3154],
         [0.5364, 0.8354, 1.3154],
         [0.5299, 0.8356, 1.3133],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5387, 0.8377, 1.3177],
         [0.5387, 0.8377, 1.3177],
         [0.5342, 0.8400, 1.3177],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
330/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-1.3311, -0.7398, -0.7757],
         [-1.3781, -0.7352, -0.7895],
         [-1.3369, -0.6481, -0.7284],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.3100, -0.7223, -0.7400],
         [-1.3515, -0.7553, -0.7925],
         [-1.3728, -0.6879, -0.7661],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.2644, -0.7071, -0.7043],
         [-1.3713, -0.7781, -0.7990],
         [-1.4116, -0.7640, -0.8175],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[561.4500, 228.9500, 566.2000, 287.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-1.3311, -0.7398, -0.7757],
         [-1.3781, -0.7352, -0.7895],
         [-1.3369, -0.6481, -0.7284],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.3100, -0.7223, -0.7400],
         [-1.3515, -0.7553, -0.7925],
         [-1.3728, -0.6879, -0.7661],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.2644, -0.7071, -0.7043],
         [-1.3713, -0.7781, -0.7990],
         [-1.4116, -0.7640, -0.8175],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
331/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.0287,  0.3803,  1.0026],
         [-0.0287,  0.3803,  1.0365],
         [-0.0287,  0.3803,  1.0388],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0287,  0.3803,  1.0026],
         [-0.0287,  0.3803,  1.0365],
         [-0.0287,  0.3803,  1.0388],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0264,  0.3826,  1.0049],
         [-0.0264,  0.3826,  1.0388],
         [-0.0264,  0.3826,  1.0411],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[302.1000,  22.8000, 332.5000, 353.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.0287,  0.3803,  1.0026],
         [-0.0287,  0.3803,  1.0365],
         [-0.0287,  0.3803,  1.0388],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0287,  0.3803,  1.0026],
         [-0.0287,  0.3803,  1.0365],
         [-0.0287,  0.3803,  1.0388],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0264,  0.3826,  1.0049],
         [-0.0264,  0.3826,  1.0388],
         [-0.0264,  0.3826,  1.0411],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
332/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.9646, 1.2206, 2.3088],
         [0.9646, 1.2206, 2.3088],
         [0.9646, 1.2206, 2.3088],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9646, 1.2206, 2.3088],
         [0.9647, 1.2207, 2.3090],
         [0.9659, 1.2220, 2.3102],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9646, 1.2206, 2.3088],
         [0.9659, 1.2220, 2.3102],
         [0.9817, 1.2381, 2.3263],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[232.7500, 252.7000, 238.4500, 338.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.9646, 1.2206, 2.3088],
         [0.9646, 1.2206, 2.3088],
         [0.9646, 1.2206, 2.3088],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9646, 1.2206, 2.3088],
         [0.9647, 1.2207, 2.3090],
         [0.9659, 1.2220, 2.3102],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9646, 1.2206, 2.3088],
         [0.9659, 1.2220, 2.3102],
         [0.9817, 1.2381, 2.3263],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
333/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[2.2151, 2.3940, 2.6056],
         [2.2151, 2.3940, 2.6056],
         [2.2151, 2.3940, 2.6056],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.2318, 2.4111, 2.6226],
         [2.2318, 2.4111, 2.6226],
         [2.2318, 2.4111, 2.6226],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.2340, 2.4134, 2.6249],
         [2.2340, 2.4134, 2.6249],
         [2.2340, 2.4134, 2.6249],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[142.5000, 196.6500, 148.2000, 249.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[2.2151, 2.3940, 2.6056],
         [2.2151, 2.3940, 2.6056],
         [2.2151, 2.3940, 2.6056],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.2318, 2.4111, 2.6226],
         [2.2318, 2.4111, 2.6226],
         [2.2318, 2.4111, 2.6226],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.2340, 2.4134, 2.6249],
         [2.2340, 2.4134, 2.6249],
         [2.2340, 2.4134, 2.6249],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
334/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.4226,  0.1702,  0.7576],
         [-0.4226,  0.1702,  0.7576],
         [-0.4226,  0.1702,  0.7576],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4226,  0.1702,  0.7576],
         [-0.4226,  0.1702,  0.7576],
         [-0.4226,  0.1702,  0.7576],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4203,  0.1725,  0.7599],
         [-0.4203,  0.1725,  0.7599],
         [-0.4203,  0.1725,  0.7599],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[539.6000, 137.7500, 556.7000, 320.1500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.4226,  0.1702,  0.7576],
         [-0.4226,  0.1702,  0.7576],
         [-0.4226,  0.1702,  0.7576],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4226,  0.1702,  0.7576],
         [-0.4226,  0.1702,  0.7576],
         [-0.4226,  0.1702,  0.7576],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4203,  0.1725,  0.7599],
         [-0.4203,  0.1725,  0.7599],
         [-0.4203,  0.1725,  0.7599],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
335/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.1849, -0.2153,  0.5092],
         [ 0.2867,  0.3180,  1.0232],
         [-0.3022, -0.2840,  0.4192],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.7373, -0.7576, -0.1938],
         [-0.5833, -0.5541, -0.0029],
         [-0.9591, -0.9324, -0.3871],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1630, -0.1052,  0.0949],
         [ 0.3227,  0.3828,  0.6285],
         [-0.0852,  0.0140,  0.2500],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[189.0500, 216.6000, 193.8000, 344.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.1849, -0.2153,  0.5092],
         [ 0.2867,  0.3180,  1.0232],
         [-0.3022, -0.2840,  0.4192],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.7373, -0.7576, -0.1938],
         [-0.5833, -0.5541, -0.0029],
         [-0.9591, -0.9324, -0.3871],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1630, -0.1052,  0.0949],
         [ 0.3227,  0.3828,  0.6285],
         [-0.0852,  0.0140,  0.2500],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
336/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.7762, 1.0455, 1.4025],
         [0.7762, 1.0455, 1.4025],
         [0.7784, 1.0478, 1.4048],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7762, 1.0455, 1.4025],
         [0.7762, 1.0455, 1.4025],
         [0.7783, 1.0476, 1.4046],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7739, 1.0432, 1.4048],
         [0.7741, 1.0434, 1.4050],
         [0.7762, 1.0455, 1.4071],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[220.4000,  79.8000, 239.4000, 281.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.7762, 1.0455, 1.4025],
         [0.7762, 1.0455, 1.4025],
         [0.7784, 1.0478, 1.4048],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7762, 1.0455, 1.4025],
         [0.7762, 1.0455, 1.4025],
         [0.7783, 1.0476, 1.4046],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7739, 1.0432, 1.4048],
         [0.7741, 1.0434, 1.4050],
         [0.7762, 1.0455, 1.4071],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
337/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.0840, 1.4827, 1.7158],
         [1.0659, 1.4643, 1.6974],
         [1.0569, 1.4482, 1.6837],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0840, 1.4827, 1.7158],
         [1.0659, 1.4643, 1.6974],
         [1.0566, 1.4484, 1.6837],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0840, 1.4827, 1.7158],
         [1.0659, 1.4643, 1.6974],
         [1.0524, 1.4505, 1.6837],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[277.4000, 192.8500, 289.7500, 344.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.0840, 1.4827, 1.7158],
         [1.0659, 1.4643, 1.6974],
         [1.0569, 1.4482, 1.6837],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0840, 1.4827, 1.7158],
         [1.0659, 1.4643, 1.6974],
         [1.0566, 1.4484, 1.6837],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0840, 1.4827, 1.7158],
         [1.0659, 1.4643, 1.6974],
         [1.0524, 1.4505, 1.6837],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
338/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.6281,  0.5553,  2.3263],
         [-0.6281,  0.5553,  2.3263],
         [-0.6281,  0.5553,  2.3263],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.6281,  0.5553,  2.3263],
         [-0.6281,  0.5553,  2.3263],
         [-0.6281,  0.5553,  2.3263],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.6258,  0.5576,  2.3286],
         [-0.6258,  0.5576,  2.3286],
         [-0.6258,  0.5576,  2.3286],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[322.0500,  77.9000, 333.4500, 382.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.6281,  0.5553,  2.3263],
         [-0.6281,  0.5553,  2.3263],
         [-0.6281,  0.5553,  2.3263],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.6281,  0.5553,  2.3263],
         [-0.6281,  0.5553,  2.3263],
         [-0.6281,  0.5553,  2.3263],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.6258,  0.5576,  2.3286],
         [-0.6258,  0.5576,  2.3286],
         [-0.6258,  0.5576,  2.3286],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
339/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.8961, 1.0455, 1.2282],
         [0.8961, 1.0455, 1.2282],
         [0.8938, 1.0432, 1.2259],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8961, 1.0455, 1.2282],
         [0.8961, 1.0455, 1.2282],
         [0.8938, 1.0432, 1.2259],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8961, 1.0455, 1.2282],
         [0.8961, 1.0455, 1.2282],
         [0.8938, 1.0432, 1.2259],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 11.4000, 168.1500,  22.8000, 322.0500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.8961, 1.0455, 1.2282],
         [0.8961, 1.0455, 1.2282],
         [0.8938, 1.0432, 1.2259],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8961, 1.0455, 1.2282],
         [0.8961, 1.0455, 1.2282],
         [0.8938, 1.0432, 1.2259],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8961, 1.0455, 1.2282],
         [0.8961, 1.0455, 1.2282],
         [0.8938, 1.0432, 1.2259],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
340/730
After normalization, Min: -2.083654420442196, Max: 2.6051416142781574
Checking data:  {'img': tensor([[[1.4269, 1.5357, 1.8731],
         [1.4269, 1.5357, 1.8731],
         [1.4269, 1.5357, 1.8731],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4269, 1.5357, 1.8731],
         [1.4269, 1.5357, 1.8731],
         [1.4269, 1.5357, 1.8731],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4269, 1.5357, 1.8731],
         [1.4269, 1.5357, 1.8731],
         [1.4269, 1.5357, 1.8731],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[206.1500, 187.1500, 216.6000, 352.4500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.4269, 1.5357, 1.8731],
         [1.4269, 1.5357, 1.8731],
         [1.4269, 1.5357, 1.8731],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4269, 1.5357, 1.8731],
         [1.4269, 1.5357, 1.8731],
         [1.4269, 1.5357, 1.8731],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4269, 1.5357, 1.8731],
         [1.4269, 1.5357, 1.8731],
         [1.4269, 1.5357, 1.8731],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
341/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.7933, 1.7458, 1.7860],
         [0.7933, 1.7458, 1.7860],
         [0.7956, 1.7481, 1.7883],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7933, 1.7458, 1.7860],
         [0.7934, 1.7459, 1.7861],
         [0.7967, 1.7493, 1.7895],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7956, 1.7481, 1.7883],
         [0.7967, 1.7493, 1.7895],
         [0.8104, 1.7633, 1.8034],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[320.1500, 118.7500, 335.3500, 418.0000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.7933, 1.7458, 1.7860],
         [0.7933, 1.7458, 1.7860],
         [0.7956, 1.7481, 1.7883],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7933, 1.7458, 1.7860],
         [0.7934, 1.7459, 1.7861],
         [0.7967, 1.7493, 1.7895],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7956, 1.7481, 1.7883],
         [0.7967, 1.7493, 1.7895],
         [0.8104, 1.7633, 1.8034],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
342/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.0741, 0.5203, 1.1585],
         [0.0741, 0.5203, 1.1585],
         [0.0741, 0.5203, 1.1585],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0741, 0.5203, 1.1585],
         [0.0741, 0.5203, 1.1585],
         [0.0741, 0.5203, 1.1585],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0741, 0.5203, 1.1585],
         [0.0741, 0.5203, 1.1585],
         [0.0741, 0.5203, 1.1585],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[414.2000,   7.6000, 429.4000, 344.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.0741, 0.5203, 1.1585],
         [0.0741, 0.5203, 1.1585],
         [0.0741, 0.5203, 1.1585],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0741, 0.5203, 1.1585],
         [0.0741, 0.5203, 1.1585],
         [0.0741, 0.5203, 1.1585],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0741, 0.5203, 1.1585],
         [0.0741, 0.5203, 1.1585],
         [0.0741, 0.5203, 1.1585],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
343/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.3823, 0.9055, 1.9951],
         [0.3823, 0.9055, 1.9951],
         [0.3823, 0.9055, 1.9951],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3823, 0.9055, 1.9951],
         [0.3823, 0.9055, 1.9951],
         [0.3823, 0.9055, 1.9951],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3846, 0.9078, 1.9974],
         [0.3846, 0.9078, 1.9974],
         [0.3846, 0.9078, 1.9974],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[358.1500, 116.8500, 372.4000, 382.8500,   0.0000],
        [225.1500, 266.0000, 238.4500, 314.4500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.3823, 0.9055, 1.9951],
         [0.3823, 0.9055, 1.9951],
         [0.3823, 0.9055, 1.9951],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3823, 0.9055, 1.9951],
         [0.3823, 0.9055, 1.9951],
         [0.3823, 0.9055, 1.9951],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3846, 0.9078, 1.9974],
         [0.3846, 0.9078, 1.9974],
         [0.3846, 0.9078, 1.9974],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
344/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.5026, 0.9409, 1.4727],
         [0.5193, 0.9580, 1.4897],
         [0.5193, 0.9580, 1.4897],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5040, 0.9423, 1.4740],
         [0.5193, 0.9580, 1.4897],
         [0.5193, 0.9580, 1.4897],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5193, 0.9580, 1.4897],
         [0.5195, 0.9582, 1.4899],
         [0.5216, 0.9603, 1.4920],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[366.7000, 111.1500, 387.6000, 487.3500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.5026, 0.9409, 1.4727],
         [0.5193, 0.9580, 1.4897],
         [0.5193, 0.9580, 1.4897],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5040, 0.9423, 1.4740],
         [0.5193, 0.9580, 1.4897],
         [0.5193, 0.9580, 1.4897],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5193, 0.9580, 1.4897],
         [0.5195, 0.9582, 1.4899],
         [0.5216, 0.9603, 1.4920],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
345/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.2385, 1.4132, 1.6640],
         [1.2385, 1.4132, 1.6640],
         [1.2385, 1.4132, 1.6640],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2385, 1.4132, 1.6640],
         [1.2385, 1.4132, 1.6640],
         [1.2385, 1.4132, 1.6640],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2385, 1.4132, 1.6640],
         [1.2385, 1.4132, 1.6640],
         [1.2385, 1.4132, 1.6640],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[266.9500,  26.6000, 283.1000, 252.7000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.2385, 1.4132, 1.6640],
         [1.2385, 1.4132, 1.6640],
         [1.2385, 1.4132, 1.6640],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2385, 1.4132, 1.6640],
         [1.2385, 1.4132, 1.6640],
         [1.2385, 1.4132, 1.6640],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2385, 1.4132, 1.6640],
         [1.2385, 1.4132, 1.6640],
         [1.2385, 1.4132, 1.6640],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
346/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.2851,  0.2231,  0.8627],
         [-0.2684,  0.2402,  0.8797],
         [-0.2662,  0.2425,  0.8819],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2851,  0.2231,  0.8627],
         [-0.2684,  0.2402,  0.8797],
         [-0.2662,  0.2425,  0.8819],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2851,  0.2231,  0.8627],
         [-0.2684,  0.2402,  0.8797],
         [-0.2662,  0.2425,  0.8819],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[360.0500,  97.8500, 375.2500, 404.7000,   0.0000],
        [228.0000, 255.5500, 234.6500, 322.0500,   0.0000],
        [119.7000, 245.1000, 133.9500, 304.0000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.2851,  0.2231,  0.8627],
         [-0.2684,  0.2402,  0.8797],
         [-0.2662,  0.2425,  0.8819],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2851,  0.2231,  0.8627],
         [-0.2684,  0.2402,  0.8797],
         [-0.2662,  0.2425,  0.8819],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2851,  0.2231,  0.8627],
         [-0.2684,  0.2402,  0.8797],
         [-0.2662,  0.2425,  0.8819],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
347/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.1953, 0.3291, 0.5847],
         [0.2571, 0.3896, 0.6463],
         [0.1572, 0.2482, 0.5239],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1751, 0.3085, 0.5642],
         [0.2604, 0.3929, 0.6496],
         [0.2218, 0.3143, 0.5897],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1174, 0.2495, 0.5054],
         [0.2441, 0.3763, 0.6331],
         [0.3226, 0.4174, 0.6923],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[510.1500, 113.0500, 527.2500, 438.9000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.1953, 0.3291, 0.5847],
         [0.2571, 0.3896, 0.6463],
         [0.1572, 0.2482, 0.5239],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1751, 0.3085, 0.5642],
         [0.2604, 0.3929, 0.6496],
         [0.2218, 0.3143, 0.5897],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1174, 0.2495, 0.5054],
         [0.2441, 0.3763, 0.6331],
         [0.3226, 0.4174, 0.6923],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
348/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.0056, 0.4503, 1.0539],
         [0.0056, 0.4503, 1.0539],
         [0.0033, 0.4480, 1.0517],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0056, 0.4503, 1.0539],
         [0.0056, 0.4503, 1.0539],
         [0.0033, 0.4480, 1.0517],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0056, 0.4503, 1.0539],
         [0.0056, 0.4503, 1.0539],
         [0.0033, 0.4480, 1.0517],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[487.3500, 149.1500, 498.7500, 348.6500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.0056, 0.4503, 1.0539],
         [0.0056, 0.4503, 1.0539],
         [0.0033, 0.4480, 1.0517],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0056, 0.4503, 1.0539],
         [0.0056, 0.4503, 1.0539],
         [0.0033, 0.4480, 1.0517],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0056, 0.4503, 1.0539],
         [0.0056, 0.4503, 1.0539],
         [0.0033, 0.4480, 1.0517],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
349/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.2895, 1.5353, 1.8030],
         [1.2719, 1.5173, 1.7851],
         [1.2539, 1.4989, 1.7667],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2912, 1.5371, 1.8047],
         [1.2886, 1.5343, 1.8020],
         [1.2707, 1.5161, 1.7839],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3089, 1.5551, 1.8227],
         [1.2931, 1.5389, 1.8066],
         [1.2770, 1.5225, 1.7903],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[509.2000, 155.8000, 528.2000, 433.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.2895, 1.5353, 1.8030],
         [1.2719, 1.5173, 1.7851],
         [1.2539, 1.4989, 1.7667],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2912, 1.5371, 1.8047],
         [1.2886, 1.5343, 1.8020],
         [1.2707, 1.5161, 1.7839],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3089, 1.5551, 1.8227],
         [1.2931, 1.5389, 1.8066],
         [1.2770, 1.5225, 1.7903],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
350/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.9020,  0.0826,  1.5071],
         [-0.9020,  0.0826,  1.5071],
         [-0.9020,  0.0826,  1.5071],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.9020,  0.0826,  1.5071],
         [-0.9020,  0.0826,  1.5071],
         [-0.9020,  0.0826,  1.5071],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8998,  0.0849,  1.5094],
         [-0.8998,  0.0849,  1.5094],
         [-0.8998,  0.0849,  1.5094],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[456.9500, 156.7500, 475.0000, 402.8000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.9020,  0.0826,  1.5071],
         [-0.9020,  0.0826,  1.5071],
         [-0.9020,  0.0826,  1.5071],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.9020,  0.0826,  1.5071],
         [-0.9020,  0.0826,  1.5071],
         [-0.9020,  0.0826,  1.5071],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8998,  0.0849,  1.5094],
         [-0.8998,  0.0849,  1.5094],
         [-0.8998,  0.0849,  1.5094],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
351/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.5292, 1.3602, 1.6112],
         [1.5112, 1.3418, 1.5929],
         [1.4977, 1.3279, 1.5791],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5292, 1.3602, 1.6112],
         [1.5112, 1.3418, 1.5929],
         [1.4977, 1.3279, 1.5791],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5292, 1.3602, 1.6112],
         [1.5112, 1.3418, 1.5929],
         [1.4977, 1.3279, 1.5791],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[121.6000, 100.7000, 149.1500, 505.4000,   0.0000],
        [ 92.1500,   2.8500, 129.2000,  84.5500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.5292, 1.3602, 1.6112],
         [1.5112, 1.3418, 1.5929],
         [1.4977, 1.3279, 1.5791],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5292, 1.3602, 1.6112],
         [1.5112, 1.3418, 1.5929],
         [1.4977, 1.3279, 1.5791],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5292, 1.3602, 1.6112],
         [1.5112, 1.3418, 1.5929],
         [1.4977, 1.3279, 1.5791],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
352/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.0107,  0.5913,  1.3337],
         [ 0.0033,  0.6083,  1.3507],
         [-0.0260,  0.6105,  1.3529],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0087,  0.6110,  1.3534],
         [ 0.0213,  0.6267,  1.3690],
         [-0.0102,  0.6267,  1.3690],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0421,  0.6452,  1.3874],
         [ 0.0394,  0.6452,  1.3874],
         [ 0.0075,  0.6449,  1.3871],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[394.2500, 136.8000, 407.5500, 386.6500,   0.0000],
        [  1.9000, 133.9500,  18.0500, 402.8000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.0107,  0.5913,  1.3337],
         [ 0.0033,  0.6083,  1.3507],
         [-0.0260,  0.6105,  1.3529],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0087,  0.6110,  1.3534],
         [ 0.0213,  0.6267,  1.3690],
         [-0.0102,  0.6267,  1.3690],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0421,  0.6452,  1.3874],
         [ 0.0394,  0.6452,  1.3874],
         [ 0.0075,  0.6449,  1.3871],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
353/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.8212, 2.0789, 2.3616],
         [1.8573, 2.1157, 2.3983],
         [1.8912, 2.1458, 2.4305],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8019, 2.0591, 2.3419],
         [1.8379, 2.0959, 2.3786],
         [1.8741, 2.1284, 2.4131],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7636, 2.0199, 2.3029],
         [1.7998, 2.0570, 2.3398],
         [1.8405, 2.0939, 2.3789],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[548.1500, 113.0500, 563.3500, 408.5000,   0.0000],
        [266.9500, 250.8000, 277.4000, 294.5000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.8212, 2.0789, 2.3616],
         [1.8573, 2.1157, 2.3983],
         [1.8912, 2.1458, 2.4305],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8019, 2.0591, 2.3419],
         [1.8379, 2.0959, 2.3786],
         [1.8741, 2.1284, 2.4131],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7636, 2.0199, 2.3029],
         [1.7998, 2.0570, 2.3398],
         [1.8405, 2.0939, 2.3789],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
354/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.7248, 1.0455, 1.8731],
         [0.7248, 1.0455, 1.8731],
         [0.7226, 1.0432, 1.8708],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7248, 1.0455, 1.8731],
         [0.7248, 1.0455, 1.8731],
         [0.7227, 1.0434, 1.8710],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7271, 1.0478, 1.8754],
         [0.7269, 1.0476, 1.8752],
         [0.7248, 1.0455, 1.8731],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[209.9500, 189.0500, 220.4000, 337.2500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.7248, 1.0455, 1.8731],
         [0.7248, 1.0455, 1.8731],
         [0.7226, 1.0432, 1.8708],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7248, 1.0455, 1.8731],
         [0.7248, 1.0455, 1.8731],
         [0.7227, 1.0434, 1.8710],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7271, 1.0478, 1.8754],
         [0.7269, 1.0476, 1.8752],
         [0.7248, 1.0455, 1.8731],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
355/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.6361, 1.0419, 2.3923],
         [0.5997, 1.0047, 2.3553],
         [0.5452, 0.9489, 2.3000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5509, 0.9309, 2.2874],
         [0.5551, 0.9352, 2.2916],
         [0.5717, 0.9500, 2.3127],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5223, 0.8095, 2.2353],
         [0.5550, 0.8429, 2.2689],
         [0.6021, 0.8910, 2.3211],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[462.6500, 103.5500, 493.0500, 498.7500,   0.0000],
        [535.8000,   3.8000, 563.3500,  72.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.6361, 1.0419, 2.3923],
         [0.5997, 1.0047, 2.3553],
         [0.5452, 0.9489, 2.3000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5509, 0.9309, 2.2874],
         [0.5551, 0.9352, 2.2916],
         [0.5717, 0.9500, 2.3127],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5223, 0.8095, 2.2353],
         [0.5550, 0.8429, 2.2689],
         [0.6021, 0.8910, 2.3211],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
356/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.1999,  0.2227,  0.8971],
         [-0.1999,  0.2227,  0.8971],
         [-0.1999,  0.2227,  0.8971],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1999,  0.2227,  0.8971],
         [-0.1999,  0.2227,  0.8971],
         [-0.1999,  0.2227,  0.8971],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1999,  0.2227,  0.8971],
         [-0.1999,  0.2227,  0.8971],
         [-0.1999,  0.2227,  0.8971],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[267.9000, 169.1000, 279.3000, 304.0000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.1999,  0.2227,  0.8971],
         [-0.1999,  0.2227,  0.8971],
         [-0.1999,  0.2227,  0.8971],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1999,  0.2227,  0.8971],
         [-0.1999,  0.2227,  0.8971],
         [-0.1999,  0.2227,  0.8971],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1999,  0.2227,  0.8971],
         [-0.1999,  0.2227,  0.8971],
         [-0.1999,  0.2227,  0.8971],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
357/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.2214, 1.5007, 1.8905],
         [1.2214, 1.5007, 1.8905],
         [1.2214, 1.5007, 1.8905],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2214, 1.5007, 1.8905],
         [1.2214, 1.5007, 1.8905],
         [1.2214, 1.5007, 1.8905],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2214, 1.5007, 1.8905],
         [1.2214, 1.5007, 1.8905],
         [1.2214, 1.5007, 1.8905],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[530.1000, 144.4000, 541.5000, 407.5500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.2214, 1.5007, 1.8905],
         [1.2214, 1.5007, 1.8905],
         [1.2214, 1.5007, 1.8905],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2214, 1.5007, 1.8905],
         [1.2214, 1.5007, 1.8905],
         [1.2214, 1.5007, 1.8905],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2214, 1.5007, 1.8905],
         [1.2214, 1.5007, 1.8905],
         [1.2214, 1.5007, 1.8905],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
358/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.5189, 1.2376, 1.7855],
         [0.5008, 1.2192, 1.7672],
         [0.4851, 1.2031, 1.7511],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5189, 1.2376, 1.7855],
         [0.5008, 1.2192, 1.7672],
         [0.4851, 1.2031, 1.7511],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5189, 1.2376, 1.7855],
         [0.5008, 1.2192, 1.7672],
         [0.4851, 1.2031, 1.7511],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[378.1000, 159.6000, 393.3000, 412.3000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.5189, 1.2376, 1.7855],
         [0.5008, 1.2192, 1.7672],
         [0.4851, 1.2031, 1.7511],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5189, 1.2376, 1.7855],
         [0.5008, 1.2192, 1.7672],
         [0.4851, 1.2031, 1.7511],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5189, 1.2376, 1.7855],
         [0.5008, 1.2192, 1.7672],
         [0.4851, 1.2031, 1.7511],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
359/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[ 0.6149,  0.4429,  0.4192],
         [ 0.3507,  0.1757,  0.1545],
         [-0.0643, -0.2118, -0.2106],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.5738,  0.4023,  0.3760],
         [ 0.3234,  0.1477,  0.1266],
         [-0.1057, -0.2541, -0.2528],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.4561,  0.2978,  0.2407],
         [ 0.1874,  0.0129, -0.0097],
         [-0.2243, -0.3753, -0.3734],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[281.2000, 122.5500, 295.4500, 430.3500,   0.0000],
        [592.8000, 256.5000, 606.1000, 326.8000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[ 0.6149,  0.4429,  0.4192],
         [ 0.3507,  0.1757,  0.1545],
         [-0.0643, -0.2118, -0.2106],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.5738,  0.4023,  0.3760],
         [ 0.3234,  0.1477,  0.1266],
         [-0.1057, -0.2541, -0.2528],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.4561,  0.2978,  0.2407],
         [ 0.1874,  0.0129, -0.0097],
         [-0.2243, -0.3753, -0.3734],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
360/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-1.7034, -1.4544, -1.1037],
         [-1.5391, -1.2851, -0.9324],
         [-0.8050, -0.5116, -0.1302],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.6910, -1.4417, -1.0911],
         [-1.6288, -1.3767, -1.0236],
         [-0.8214, -0.5283, -0.1468],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.7105, -1.4617, -1.1110],
         [-1.7797, -1.5310, -1.1772],
         [-0.8682, -0.5762, -0.1945],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[512.0500, 117.8000, 531.0500, 299.2500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-1.7034, -1.4544, -1.1037],
         [-1.5391, -1.2851, -0.9324],
         [-0.8050, -0.5116, -0.1302],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.6910, -1.4417, -1.0911],
         [-1.6288, -1.3767, -1.0236],
         [-0.8214, -0.5283, -0.1468],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.7105, -1.4617, -1.1110],
         [-1.7797, -1.5310, -1.1772],
         [-0.8682, -0.5762, -0.1945],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
361/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.9525, -0.7393, -1.1761],
         [-0.9345, -0.7208, -1.1577],
         [-0.9142, -0.7001, -1.1371],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.9345, -0.7222, -1.1619],
         [-0.9164, -0.7037, -1.1434],
         [-0.8948, -0.6817, -1.1215],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.9188, -0.7223, -1.1940],
         [-0.9016, -0.7047, -1.1765],
         [-0.8655, -0.6679, -1.1398],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[424.6500, 104.5000, 444.6000, 456.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.9525, -0.7393, -1.1761],
         [-0.9345, -0.7208, -1.1577],
         [-0.9142, -0.7001, -1.1371],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.9345, -0.7222, -1.1619],
         [-0.9164, -0.7037, -1.1434],
         [-0.8948, -0.6817, -1.1215],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.9188, -0.7223, -1.1940],
         [-0.9016, -0.7047, -1.1765],
         [-0.8655, -0.6679, -1.1398],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
362/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.4616, 1.5362, 1.8213],
         [1.4783, 1.5532, 1.8383],
         [1.4805, 1.5555, 1.8406],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4629, 1.5375, 1.8226],
         [1.4784, 1.5533, 1.8384],
         [1.4817, 1.5567, 1.8417],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4783, 1.5532, 1.8383],
         [1.4796, 1.5546, 1.8396],
         [1.4957, 1.5710, 1.8560],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[532.9500, 114.9500, 563.3500, 529.1500,   0.0000],
        [553.8500,  55.1000, 585.2000, 531.0500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.4616, 1.5362, 1.8213],
         [1.4783, 1.5532, 1.8383],
         [1.4805, 1.5555, 1.8406],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4629, 1.5375, 1.8226],
         [1.4784, 1.5533, 1.8384],
         [1.4817, 1.5567, 1.8417],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4783, 1.5532, 1.8383],
         [1.4796, 1.5546, 1.8396],
         [1.4957, 1.5710, 1.8560],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
363/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.7766, 1.4311, 2.1699],
         [0.7735, 1.4307, 2.1680],
         [0.7352, 1.4307, 2.1497],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7942, 1.4491, 2.1878],
         [0.7748, 1.4321, 2.1694],
         [0.7386, 1.4342, 2.1532],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8122, 1.4675, 2.2061],
         [0.7929, 1.4505, 2.1878],
         [0.7545, 1.4505, 2.1694],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[309.7000, 111.1500, 330.6000, 482.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.7766, 1.4311, 2.1699],
         [0.7735, 1.4307, 2.1680],
         [0.7352, 1.4307, 2.1497],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7942, 1.4491, 2.1878],
         [0.7748, 1.4321, 2.1694],
         [0.7386, 1.4342, 2.1532],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8122, 1.4675, 2.2061],
         [0.7929, 1.4505, 2.1878],
         [0.7545, 1.4505, 2.1694],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
364/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[ 0.1232,  0.6406,  1.5048],
         [ 0.0678,  0.5875,  1.4502],
         [-0.0067,  0.5474,  1.3923],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0831,  0.6032,  1.4659],
         [ 0.0302,  0.5806,  1.4276],
         [-0.0504,  0.5027,  1.3475],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0106,  0.5434,  1.3838],
         [-0.0317,  0.5219,  1.3623],
         [-0.1310,  0.4243,  1.2593],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[545.3000,  72.2000, 576.6500, 547.2000,   0.0000],
        [510.1500,   2.8500, 537.7000,  89.3000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[ 0.1232,  0.6406,  1.5048],
         [ 0.0678,  0.5875,  1.4502],
         [-0.0067,  0.5474,  1.3923],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0831,  0.6032,  1.4659],
         [ 0.0302,  0.5806,  1.4276],
         [-0.0504,  0.5027,  1.3475],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0106,  0.5434,  1.3838],
         [-0.0317,  0.5219,  1.3623],
         [-0.1310,  0.4243,  1.2593],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
365/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-1.0833, -0.8209, -1.0968],
         [-0.8181, -0.5696, -0.7269],
         [-0.3460, -0.1216, -0.0365],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.0439, -0.7861, -1.0228],
         [-0.9158, -0.6733, -0.7977],
         [-0.5832, -0.3685, -0.2849],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.9282, -0.7320, -0.9036],
         [-0.9550, -0.7606, -0.8637],
         [-0.8006, -0.5952, -0.5180],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[ 66.5000, 174.8000,  93.1000, 387.6000,   0.0000],
        [327.7500, 198.5500, 344.8500, 349.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-1.0833, -0.8209, -1.0968],
         [-0.8181, -0.5696, -0.7269],
         [-0.3460, -0.1216, -0.0365],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.0439, -0.7861, -1.0228],
         [-0.9158, -0.6733, -0.7977],
         [-0.5832, -0.3685, -0.2849],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.9282, -0.7320, -0.9036],
         [-0.9550, -0.7606, -0.8637],
         [-0.8006, -0.5952, -0.5180],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
366/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.4269, 1.5707, 1.7163],
         [1.4269, 1.5707, 1.7163],
         [1.4292, 1.5730, 1.7185],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4269, 1.5707, 1.7163],
         [1.4269, 1.5707, 1.7163],
         [1.4290, 1.5728, 1.7184],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4247, 1.5684, 1.7140],
         [1.4248, 1.5686, 1.7141],
         [1.4269, 1.5707, 1.7163],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 69.3500,  64.6000,  90.2500, 394.2500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.4269, 1.5707, 1.7163],
         [1.4269, 1.5707, 1.7163],
         [1.4292, 1.5730, 1.7185],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4269, 1.5707, 1.7163],
         [1.4269, 1.5707, 1.7163],
         [1.4290, 1.5728, 1.7184],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4247, 1.5684, 1.7140],
         [1.4248, 1.5686, 1.7141],
         [1.4269, 1.5707, 1.7163],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
367/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.1187, 1.3431, 1.5768],
         [1.1187, 1.3431, 1.5768],
         [1.1187, 1.3431, 1.5768],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1187, 1.3431, 1.5768],
         [1.1187, 1.3431, 1.5768],
         [1.1187, 1.3431, 1.5768],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1187, 1.3431, 1.5768],
         [1.1187, 1.3431, 1.5768],
         [1.1187, 1.3431, 1.5768],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[576.6500, 200.4500, 588.0500, 289.7500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.1187, 1.3431, 1.5768],
         [1.1187, 1.3431, 1.5768],
         [1.1187, 1.3431, 1.5768],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1187, 1.3431, 1.5768],
         [1.1187, 1.3431, 1.5768],
         [1.1187, 1.3431, 1.5768],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1187, 1.3431, 1.5768],
         [1.1187, 1.3431, 1.5768],
         [1.1187, 1.3431, 1.5768],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
368/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.4924, -0.2864,  0.0417],
         [-0.5781, -0.3740, -0.0455],
         [-0.6258, -0.4228, -0.0987],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4545, -0.2477,  0.0802],
         [-0.5254, -0.3201,  0.0081],
         [-0.5901, -0.3863, -0.0623],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4072, -0.1993,  0.1284],
         [-0.4771, -0.2707,  0.0573],
         [-0.5607, -0.3563, -0.0325],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[  2.8500,  62.7000,  66.5000, 489.2500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.4924, -0.2864,  0.0417],
         [-0.5781, -0.3740, -0.0455],
         [-0.6258, -0.4228, -0.0987],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4545, -0.2477,  0.0802],
         [-0.5254, -0.3201,  0.0081],
         [-0.5901, -0.3863, -0.0623],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4072, -0.1993,  0.1284],
         [-0.4771, -0.2707,  0.0573],
         [-0.5607, -0.3563, -0.0325],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
369/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.0173, 1.2395, 1.6130],
         [1.0168, 1.2389, 1.6125],
         [1.0203, 1.2403, 1.6139],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0668, 1.2901, 1.6635],
         [1.0461, 1.2690, 1.6424],
         [1.0146, 1.2344, 1.6076],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0620, 1.2875, 1.6539],
         [1.0283, 1.2530, 1.6197],
         [0.9991, 1.2206, 1.5837],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[335.3500,  62.7000, 347.7000, 409.4500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.0173, 1.2395, 1.6130],
         [1.0168, 1.2389, 1.6125],
         [1.0203, 1.2403, 1.6139],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0668, 1.2901, 1.6635],
         [1.0461, 1.2690, 1.6424],
         [1.0146, 1.2344, 1.6076],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0620, 1.2875, 1.6539],
         [1.0283, 1.2530, 1.6197],
         [0.9991, 1.2206, 1.5837],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
370/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.2856,  0.3102,  0.8971],
         [-0.2856,  0.3102,  0.8971],
         [-0.2856,  0.3102,  0.8971],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2856,  0.3102,  0.8971],
         [-0.2856,  0.3102,  0.8971],
         [-0.2856,  0.3102,  0.8971],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2856,  0.3102,  0.8971],
         [-0.2856,  0.3102,  0.8971],
         [-0.2856,  0.3102,  0.8971],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[405.6500,  50.3500, 423.7000, 263.1500,   0.0000],
        [263.1500, 205.2000, 281.2000, 341.0500,   0.0000],
        [ 72.2000, 218.5000,  90.2500, 350.5500,   0.0000],
        [140.6000, 257.4500, 151.0500, 309.7000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.2856,  0.3102,  0.8971],
         [-0.2856,  0.3102,  0.8971],
         [-0.2856,  0.3102,  0.8971],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2856,  0.3102,  0.8971],
         [-0.2856,  0.3102,  0.8971],
         [-0.2856,  0.3102,  0.8971],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2856,  0.3102,  0.8971],
         [-0.2856,  0.3102,  0.8971],
         [-0.2856,  0.3102,  0.8971],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
371/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.6645, -0.0754,  0.3031],
         [-0.6302, -0.0010,  0.3592],
         [-0.6373,  0.0658,  0.4070],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.7966, -0.1752,  0.1872],
         [-0.7225, -0.0705,  0.2862],
         [-0.6505,  0.0892,  0.4131],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.0214, -0.3758, -0.0179],
         [-0.9216, -0.1880,  0.1372],
         [-0.7364,  0.0428,  0.3606],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[391.4000, 120.6500, 415.1500, 450.3000,   0.0000],
        [287.8500, 249.8500, 301.1500, 310.6500,   0.0000],
        [137.7500, 242.2500, 146.3000, 335.3500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.6645, -0.0754,  0.3031],
         [-0.6302, -0.0010,  0.3592],
         [-0.6373,  0.0658,  0.4070],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.7966, -0.1752,  0.1872],
         [-0.7225, -0.0705,  0.2862],
         [-0.6505,  0.0892,  0.4131],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.0214, -0.3758, -0.0179],
         [-0.9216, -0.1880,  0.1372],
         [-0.7364,  0.0428,  0.3606],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
372/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.8961, 0.9755, 1.4548],
         [0.8961, 0.9755, 1.4548],
         [0.8961, 0.9755, 1.4548],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8961, 0.9755, 1.4548],
         [0.8961, 0.9755, 1.4548],
         [0.8961, 0.9755, 1.4548],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8961, 0.9755, 1.4548],
         [0.8961, 0.9755, 1.4548],
         [0.8961, 0.9755, 1.4548],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[512.0500, 170.0500, 520.6000, 351.5000,   0.0000],
        [103.5500, 280.2500, 114.0000, 312.5500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.8961, 0.9755, 1.4548],
         [0.8961, 0.9755, 1.4548],
         [0.8961, 0.9755, 1.4548],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8961, 0.9755, 1.4548],
         [0.8961, 0.9755, 1.4548],
         [0.8961, 0.9755, 1.4548],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8961, 0.9755, 1.4548],
         [0.8961, 0.9755, 1.4548],
         [0.8961, 0.9755, 1.4548],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
373/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.0463,  0.2572,  1.3672],
         [-0.0463,  0.2572,  1.3672],
         [-0.0485,  0.2550,  1.3650],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0629,  0.2402,  1.3502],
         [-0.0630,  0.2401,  1.3501],
         [-0.0643,  0.2388,  1.3489],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0630,  0.2401,  1.3502],
         [-0.0664,  0.2367,  1.3468],
         [-0.0804,  0.2224,  1.3325],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[512.0500, 124.4500, 531.0500, 283.1000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.0463,  0.2572,  1.3672],
         [-0.0463,  0.2572,  1.3672],
         [-0.0485,  0.2550,  1.3650],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0629,  0.2402,  1.3502],
         [-0.0630,  0.2401,  1.3501],
         [-0.0643,  0.2388,  1.3489],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0630,  0.2401,  1.3502],
         [-0.0664,  0.2367,  1.3468],
         [-0.0804,  0.2224,  1.3325],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
374/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.1015, 1.3256, 1.5594],
         [1.1015, 1.3256, 1.5594],
         [1.1038, 1.3279, 1.5617],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1015, 1.3256, 1.5594],
         [1.1015, 1.3256, 1.5594],
         [1.1038, 1.3279, 1.5617],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1015, 1.3256, 1.5594],
         [1.1015, 1.3256, 1.5594],
         [1.1038, 1.3279, 1.5617],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[418.9500,  18.0500, 454.1000, 368.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.1015, 1.3256, 1.5594],
         [1.1015, 1.3256, 1.5594],
         [1.1038, 1.3279, 1.5617],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1015, 1.3256, 1.5594],
         [1.1015, 1.3256, 1.5594],
         [1.1038, 1.3279, 1.5617],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1015, 1.3256, 1.5594],
         [1.1015, 1.3256, 1.5594],
         [1.1038, 1.3279, 1.5617],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
375/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.9474, 1.1681, 1.4025],
         [0.9474, 1.1681, 1.4025],
         [0.9474, 1.1681, 1.4025],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9474, 1.1681, 1.4025],
         [0.9474, 1.1681, 1.4025],
         [0.9474, 1.1681, 1.4025],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9474, 1.1681, 1.4025],
         [0.9474, 1.1681, 1.4025],
         [0.9474, 1.1681, 1.4025],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[231.8000, 162.4500, 243.2000, 325.8500,   0.0000],
        [419.9000, 268.8500, 432.2500, 310.6500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.9474, 1.1681, 1.4025],
         [0.9474, 1.1681, 1.4025],
         [0.9474, 1.1681, 1.4025],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9474, 1.1681, 1.4025],
         [0.9474, 1.1681, 1.4025],
         [0.9474, 1.1681, 1.4025],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9474, 1.1681, 1.4025],
         [0.9474, 1.1681, 1.4025],
         [0.9474, 1.1681, 1.4025],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
376/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[ 0.2469,  0.1017, -0.1122],
         [ 1.0977,  0.9716,  0.7538],
         [ 0.4324,  0.2868,  0.0743],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.6795,  0.5440,  0.3281],
         [ 0.5764,  0.4384,  0.2230],
         [ 1.2554,  1.1258,  0.9108],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 1.1496,  1.0246,  0.8066],
         [ 0.0422, -0.1103, -0.3219],
         [ 1.0008,  0.8375,  0.6377],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[216.6000,  97.8500, 227.0500, 293.5500,   0.0000],
        [357.2000,  76.9500, 371.4500, 226.1000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[ 0.2469,  0.1017, -0.1122],
         [ 1.0977,  0.9716,  0.7538],
         [ 0.4324,  0.2868,  0.0743],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.6795,  0.5440,  0.3281],
         [ 0.5764,  0.4384,  0.2230],
         [ 1.2554,  1.1258,  0.9108],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 1.1496,  1.0246,  0.8066],
         [ 0.0422, -0.1103, -0.3219],
         [ 1.0008,  0.8375,  0.6377],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
377/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.5644, 1.7988, 2.0304],
         [1.5824, 1.8172, 2.0488],
         [1.6004, 1.8356, 2.0671],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5643, 1.7987, 2.0304],
         [1.5810, 1.8158, 2.0474],
         [1.5970, 1.8321, 2.0636],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5617, 1.7961, 2.0277],
         [1.5653, 1.7997, 2.0314],
         [1.5833, 1.8181, 2.0497],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[276.4500, 183.3500, 286.9000, 291.6500,   0.0000],
        [551.0000, 231.8000, 565.2500, 329.6500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.5644, 1.7988, 2.0304],
         [1.5824, 1.8172, 2.0488],
         [1.6004, 1.8356, 2.0671],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5643, 1.7987, 2.0304],
         [1.5810, 1.8158, 2.0474],
         [1.5970, 1.8321, 2.0636],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5617, 1.7961, 2.0277],
         [1.5653, 1.7997, 2.0314],
         [1.5833, 1.8181, 2.0497],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
378/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.4679, 0.7304, 1.0888],
         [0.4679, 0.7304, 1.0888],
         [0.4679, 0.7304, 1.0888],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4679, 0.7304, 1.0888],
         [0.4679, 0.7304, 1.0888],
         [0.4679, 0.7304, 1.0888],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4679, 0.7304, 1.0888],
         [0.4679, 0.7304, 1.0888],
         [0.4679, 0.7304, 1.0888],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 10.4500,   0.9500,  51.3000, 436.0500,   0.0000],
        [457.9000, 253.6500, 468.3500, 342.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.4679, 0.7304, 1.0888],
         [0.4679, 0.7304, 1.0888],
         [0.4679, 0.7304, 1.0888],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4679, 0.7304, 1.0888],
         [0.4679, 0.7304, 1.0888],
         [0.4679, 0.7304, 1.0888],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4679, 0.7304, 1.0888],
         [0.4679, 0.7304, 1.0888],
         [0.4679, 0.7304, 1.0888],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
379/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.7694, 1.9384, 2.1520],
         [1.7694, 1.9384, 2.1520],
         [1.7694, 1.9384, 2.1520],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7694, 1.9384, 2.1520],
         [1.7694, 1.9384, 2.1520],
         [1.7694, 1.9384, 2.1520],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7717, 1.9407, 2.1543],
         [1.7715, 1.9405, 2.1541],
         [1.7694, 1.9384, 2.1520],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[410.4000,  91.2000, 437.0000, 288.8000,   0.0000],
        [397.1000,  47.5000, 412.3000, 101.6500,   0.0000],
        [  0.0000, 167.2000,  11.4000, 301.1500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.7694, 1.9384, 2.1520],
         [1.7694, 1.9384, 2.1520],
         [1.7694, 1.9384, 2.1520],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7694, 1.9384, 2.1520],
         [1.7694, 1.9384, 2.1520],
         [1.7694, 1.9384, 2.1520],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7717, 1.9407, 2.1543],
         [1.7715, 1.9405, 2.1541],
         [1.7694, 1.9384, 2.1520],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
380/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.3138, 0.2577, 0.6182],
         [0.3138, 0.2577, 0.6182],
         [0.3161, 0.2600, 0.6205],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3138, 0.2577, 0.6182],
         [0.3138, 0.2577, 0.6182],
         [0.3161, 0.2600, 0.6205],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3138, 0.2577, 0.6182],
         [0.3138, 0.2577, 0.6182],
         [0.3161, 0.2600, 0.6205],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[554.8000,  39.9000, 589.0000, 522.5000,   0.0000],
        [546.2500,   9.5000, 562.4000,  65.5500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.3138, 0.2577, 0.6182],
         [0.3138, 0.2577, 0.6182],
         [0.3161, 0.2600, 0.6205],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3138, 0.2577, 0.6182],
         [0.3138, 0.2577, 0.6182],
         [0.3161, 0.2600, 0.6205],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3138, 0.2577, 0.6182],
         [0.3138, 0.2577, 0.6182],
         [0.3161, 0.2600, 0.6205],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
381/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.5017, 0.7825, 1.0370],
         [0.4837, 0.7640, 1.0351],
         [0.4657, 0.7456, 1.0168],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5018, 0.7825, 1.0535],
         [0.4851, 0.7654, 1.0365],
         [0.4670, 0.7470, 1.0182],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5022, 0.7829, 1.0539],
         [0.5008, 0.7815, 1.0526],
         [0.4828, 0.7631, 1.0342],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[242.2500,  23.7500, 273.6000, 457.9000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.5017, 0.7825, 1.0370],
         [0.4837, 0.7640, 1.0351],
         [0.4657, 0.7456, 1.0168],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5018, 0.7825, 1.0535],
         [0.4851, 0.7654, 1.0365],
         [0.4670, 0.7470, 1.0182],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5022, 0.7829, 1.0539],
         [0.5008, 0.7815, 1.0526],
         [0.4828, 0.7631, 1.0342],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
382/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.5707, 0.7479, 0.9494],
         [0.5707, 0.7479, 0.9494],
         [0.5729, 0.7502, 0.9517],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5707, 0.7479, 0.9494],
         [0.5707, 0.7479, 0.9494],
         [0.5729, 0.7502, 0.9517],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5707, 0.7479, 0.9494],
         [0.5707, 0.7479, 0.9494],
         [0.5729, 0.7502, 0.9517],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[397.1000,  38.9500, 427.5000, 424.6500,   0.0000],
        [361.0000, 182.4000, 367.6500, 335.3500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.5707, 0.7479, 0.9494],
         [0.5707, 0.7479, 0.9494],
         [0.5729, 0.7502, 0.9517],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5707, 0.7479, 0.9494],
         [0.5707, 0.7479, 0.9494],
         [0.5729, 0.7502, 0.9517],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5707, 0.7479, 0.9494],
         [0.5707, 0.7479, 0.9494],
         [0.5729, 0.7502, 0.9517],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
383/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.4679, 0.6779, 1.0539],
         [0.4873, 0.6977, 1.0737],
         [0.5234, 0.7345, 1.1104],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4499, 0.6595, 1.0356],
         [0.4705, 0.6805, 1.0566],
         [0.5053, 0.7161, 1.0920],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4368, 0.6460, 1.0222],
         [0.4695, 0.6794, 1.0555],
         [0.4918, 0.7023, 1.0783],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[459.8000, 163.4000, 477.8500, 287.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.4679, 0.6779, 1.0539],
         [0.4873, 0.6977, 1.0737],
         [0.5234, 0.7345, 1.1104],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4499, 0.6595, 1.0356],
         [0.4705, 0.6805, 1.0566],
         [0.5053, 0.7161, 1.0920],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4368, 0.6460, 1.0222],
         [0.4695, 0.6794, 1.0555],
         [0.4918, 0.7023, 1.0783],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
384/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.2513,  0.1001,  1.2457],
         [-0.2513,  0.1001,  1.2457],
         [-0.2536,  0.0978,  1.2434],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2513,  0.1001,  1.2457],
         [-0.2513,  0.1001,  1.2457],
         [-0.2536,  0.0978,  1.2434],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2513,  0.1001,  1.2457],
         [-0.2513,  0.1001,  1.2457],
         [-0.2536,  0.0978,  1.2434],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[136.8000, 140.6000, 149.1500, 350.5500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.2513,  0.1001,  1.2457],
         [-0.2513,  0.1001,  1.2457],
         [-0.2536,  0.0978,  1.2434],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2513,  0.1001,  1.2457],
         [-0.2513,  0.1001,  1.2457],
         [-0.2536,  0.0978,  1.2434],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2513,  0.1001,  1.2457],
         [-0.2513,  0.1001,  1.2457],
         [-0.2536,  0.0978,  1.2434],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
385/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.4098, 1.5357, 1.8034],
         [1.4098, 1.5357, 1.8034],
         [1.4075, 1.5334, 1.8011],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4098, 1.5357, 1.8034],
         [1.4098, 1.5357, 1.8034],
         [1.4075, 1.5334, 1.8011],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4098, 1.5357, 1.8034],
         [1.4098, 1.5357, 1.8034],
         [1.4075, 1.5334, 1.8011],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[383.8000, 168.1500, 399.0000, 401.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.4098, 1.5357, 1.8034],
         [1.4098, 1.5357, 1.8034],
         [1.4075, 1.5334, 1.8011],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4098, 1.5357, 1.8034],
         [1.4098, 1.5357, 1.8034],
         [1.4075, 1.5334, 1.8011],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4098, 1.5357, 1.8034],
         [1.4098, 1.5357, 1.8034],
         [1.4075, 1.5334, 1.8011],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
386/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.6717, 0.8512, 1.2788],
         [0.6627, 0.8420, 1.2696],
         [0.7168, 0.8972, 1.3246],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6447, 0.8236, 1.2513],
         [0.7384, 0.9194, 1.3467],
         [0.7682, 0.9498, 1.3769],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8652, 1.0490, 1.4757],
         [0.5863, 0.7639, 1.1918],
         [0.3231, 0.4948, 0.9239],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[365.7500,   0.9500, 394.2500, 489.2500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.6717, 0.8512, 1.2788],
         [0.6627, 0.8420, 1.2696],
         [0.7168, 0.8972, 1.3246],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6447, 0.8236, 1.2513],
         [0.7384, 0.9194, 1.3467],
         [0.7682, 0.9498, 1.3769],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8652, 1.0490, 1.4757],
         [0.5863, 0.7639, 1.1918],
         [0.3231, 0.4948, 0.9239],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
387/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.5648, 1.7117, 2.0309],
         [1.5842, 1.7315, 2.0506],
         [1.6220, 1.7702, 2.0891],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5842, 1.7315, 2.0506],
         [1.6008, 1.7485, 2.0675],
         [1.6194, 1.7675, 2.0865],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.6197, 1.7679, 2.0868],
         [1.6172, 1.7652, 2.0842],
         [1.6127, 1.7607, 2.0797],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 11.4000,  93.1000,  39.9000, 373.3500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.5648, 1.7117, 2.0309],
         [1.5842, 1.7315, 2.0506],
         [1.6220, 1.7702, 2.0891],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5842, 1.7315, 2.0506],
         [1.6008, 1.7485, 2.0675],
         [1.6194, 1.7675, 2.0865],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.6197, 1.7679, 2.0868],
         [1.6172, 1.7652, 2.0842],
         [1.6127, 1.7607, 2.0797],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
388/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.8002, -0.0408,  1.0879],
         [-0.8209, -0.0620,  1.0668],
         [-0.8722, -0.1168,  1.0123],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8195, -0.0592,  1.0654],
         [-0.8374, -0.0775,  1.0473],
         [-0.8687, -0.1120,  1.0131],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8529, -0.0772,  0.9994],
         [-0.8526, -0.0772,  0.9995],
         [-0.8507, -0.0835,  0.9974],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[548.1500, 248.9000, 561.4500, 399.0000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.8002, -0.0408,  1.0879],
         [-0.8209, -0.0620,  1.0668],
         [-0.8722, -0.1168,  1.0123],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8195, -0.0592,  1.0654],
         [-0.8374, -0.0775,  1.0473],
         [-0.8687, -0.1120,  1.0131],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8529, -0.0772,  0.9994],
         [-0.8526, -0.0772,  0.9995],
         [-0.8507, -0.0835,  0.9974],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
389/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.1148,  0.2923,  0.9489],
         [-0.1328,  0.2738,  0.9306],
         [-0.1486,  0.2577,  0.9145],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1134,  0.2936,  0.9502],
         [-0.1328,  0.2738,  0.9306],
         [-0.1484,  0.2579,  0.9147],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0980,  0.3094,  0.9659],
         [-0.1307,  0.2759,  0.9327],
         [-0.1463,  0.2600,  0.9168],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[102.6000,   0.9500, 123.5000, 306.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.1148,  0.2923,  0.9489],
         [-0.1328,  0.2738,  0.9306],
         [-0.1486,  0.2577,  0.9145],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1134,  0.2936,  0.9502],
         [-0.1328,  0.2738,  0.9306],
         [-0.1484,  0.2579,  0.9147],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0980,  0.3094,  0.9659],
         [-0.1307,  0.2759,  0.9327],
         [-0.1463,  0.2600,  0.9168],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
390/730
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
Checking data:  {'img': tensor([[[0.4679, 0.6604, 0.9668],
         [0.4860, 0.6788, 0.9851],
         [0.5085, 0.7018, 1.0081],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4499, 0.6419, 0.9484],
         [0.4666, 0.6590, 0.9654],
         [0.4891, 0.6820, 0.9884],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4269, 0.6184, 0.9251],
         [0.4283, 0.6198, 0.9264],
         [0.4508, 0.6429, 0.9494],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 97.8500,   0.0000, 127.3000, 437.0000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.4679, 0.6604, 0.9668],
         [0.4860, 0.6788, 0.9851],
         [0.5085, 0.7018, 1.0081],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4499, 0.6419, 0.9484],
         [0.4666, 0.6590, 0.9654],
         [0.4891, 0.6820, 0.9884],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4269, 0.6184, 0.9251],
         [0.4283, 0.6198, 0.9264],
         [0.4508, 0.6429, 0.9494],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
391/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.3652, 0.6779, 1.0539],
         [0.3665, 0.6793, 1.0553],
         [0.3845, 0.6976, 1.0736],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3652, 0.6779, 1.0539],
         [0.3664, 0.6791, 1.0552],
         [0.3811, 0.6942, 1.0702],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3652, 0.6779, 1.0539],
         [0.3652, 0.6779, 1.0539],
         [0.3671, 0.6799, 1.0559],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[331.5500,  34.2000, 348.6500, 383.8000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.3652, 0.6779, 1.0539],
         [0.3665, 0.6793, 1.0553],
         [0.3845, 0.6976, 1.0736],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3652, 0.6779, 1.0539],
         [0.3664, 0.6791, 1.0552],
         [0.3811, 0.6942, 1.0702],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3652, 0.6779, 1.0539],
         [0.3652, 0.6779, 1.0539],
         [0.3671, 0.6799, 1.0559],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
392/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.1314,  0.2402,  0.9145],
         [-0.1314,  0.2402,  0.9145],
         [-0.1314,  0.2402,  0.9145],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1314,  0.2402,  0.9145],
         [-0.1314,  0.2402,  0.9145],
         [-0.1314,  0.2402,  0.9145],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1314,  0.2402,  0.9145],
         [-0.1314,  0.2402,  0.9145],
         [-0.1314,  0.2402,  0.9145],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[388.5500,   2.8500, 421.8000, 503.5000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.1314,  0.2402,  0.9145],
         [-0.1314,  0.2402,  0.9145],
         [-0.1314,  0.2402,  0.9145],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1314,  0.2402,  0.9145],
         [-0.1314,  0.2402,  0.9145],
         [-0.1314,  0.2402,  0.9145],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1314,  0.2402,  0.9145],
         [-0.1314,  0.2402,  0.9145],
         [-0.1314,  0.2402,  0.9145],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
393/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.7248, 0.9405, 1.1759],
         [0.7248, 0.9405, 1.1759],
         [0.7248, 0.9405, 1.1759],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7248, 0.9405, 1.1759],
         [0.7248, 0.9405, 1.1759],
         [0.7248, 0.9405, 1.1759],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7248, 0.9405, 1.1759],
         [0.7248, 0.9405, 1.1759],
         [0.7248, 0.9405, 1.1759],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 35.1500,   0.9500,  73.1500, 473.1000,   0.0000],
        [281.2000, 260.3000, 292.6000, 319.2000,   0.0000],
        [340.1000, 247.9500, 354.3500, 323.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.7248, 0.9405, 1.1759],
         [0.7248, 0.9405, 1.1759],
         [0.7248, 0.9405, 1.1759],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7248, 0.9405, 1.1759],
         [0.7248, 0.9405, 1.1759],
         [0.7248, 0.9405, 1.1759],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7248, 0.9405, 1.1759],
         [0.7248, 0.9405, 1.1759],
         [0.7248, 0.9405, 1.1759],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
394/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[2.0948, 2.2530, 2.6060],
         [2.0957, 2.2545, 2.6061],
         [2.1029, 2.2618, 2.6134],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0943, 2.2360, 2.6387],
         [2.0804, 2.2375, 2.5930],
         [2.1029, 2.2618, 2.6134],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0921, 2.2333, 2.6373],
         [2.0804, 2.2225, 2.6228],
         [2.1032, 2.2598, 2.6163],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 21.8500,  86.4500,  69.3500, 540.5500,   0.0000],
        [  7.6000,   2.8500,  34.2000,  81.7000,   0.0000],
        [155.8000,   0.9500, 184.3000,  93.1000,   0.0000],
        [185.2500, 101.6500, 209.9500, 505.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[2.0948, 2.2530, 2.6060],
         [2.0957, 2.2545, 2.6061],
         [2.1029, 2.2618, 2.6134],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0943, 2.2360, 2.6387],
         [2.0804, 2.2375, 2.5930],
         [2.1029, 2.2618, 2.6134],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0921, 2.2333, 2.6373],
         [2.0804, 2.2225, 2.6228],
         [2.1032, 2.2598, 2.6163],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
395/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.0454,  0.3807,  1.0544],
         [-0.0287,  0.3978,  1.0714],
         [-0.0264,  0.4001,  1.0737],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0454,  0.3807,  1.0544],
         [-0.0287,  0.3978,  1.0714],
         [-0.0264,  0.4001,  1.0737],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0454,  0.3807,  1.0544],
         [-0.0287,  0.3978,  1.0714],
         [-0.0264,  0.4001,  1.0737],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[ 70.3000, 120.6500,  85.5000, 377.1500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.0454,  0.3807,  1.0544],
         [-0.0287,  0.3978,  1.0714],
         [-0.0264,  0.4001,  1.0737],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0454,  0.3807,  1.0544],
         [-0.0287,  0.3978,  1.0714],
         [-0.0264,  0.4001,  1.0737],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0454,  0.3807,  1.0544],
         [-0.0287,  0.3978,  1.0714],
         [-0.0264,  0.4001,  1.0737],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
396/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.7933, 0.9930, 1.2980],
         [0.7933, 0.9930, 1.2980],
         [0.7933, 0.9930, 1.2980],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7933, 0.9930, 1.2980],
         [0.7933, 0.9930, 1.2980],
         [0.7933, 0.9930, 1.2980],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7956, 0.9953, 1.3002],
         [0.7956, 0.9953, 1.3002],
         [0.7956, 0.9953, 1.3002],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[247.0000,   3.8000, 265.0500, 460.7500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.7933, 0.9930, 1.2980],
         [0.7933, 0.9930, 1.2980],
         [0.7933, 0.9930, 1.2980],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7933, 0.9930, 1.2980],
         [0.7933, 0.9930, 1.2980],
         [0.7933, 0.9930, 1.2980],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7956, 0.9953, 1.3002],
         [0.7956, 0.9953, 1.3002],
         [0.7956, 0.9953, 1.3002],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
397/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.9474, 1.1681, 1.4025],
         [0.9474, 1.1681, 1.4025],
         [0.9497, 1.1704, 1.4048],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9474, 1.1681, 1.4025],
         [0.9474, 1.1681, 1.4025],
         [0.9495, 1.1702, 1.4046],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9452, 1.1658, 1.4002],
         [0.9454, 1.1659, 1.4004],
         [0.9474, 1.1681, 1.4025],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 73.1500,   0.9500, 110.2000, 451.2500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.9474, 1.1681, 1.4025],
         [0.9474, 1.1681, 1.4025],
         [0.9497, 1.1704, 1.4048],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9474, 1.1681, 1.4025],
         [0.9474, 1.1681, 1.4025],
         [0.9495, 1.1702, 1.4046],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9452, 1.1658, 1.4002],
         [0.9454, 1.1659, 1.4004],
         [0.9474, 1.1681, 1.4025],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
398/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.5707, 0.8354, 1.8557],
         [0.5707, 0.8354, 1.8557],
         [0.5684, 0.8331, 1.8534],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5693, 0.8341, 1.8543],
         [0.5693, 0.8341, 1.8543],
         [0.5673, 0.8319, 1.8522],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5535, 0.8179, 1.8382],
         [0.5513, 0.8156, 1.8360],
         [0.5513, 0.8153, 1.8363],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[418.0000,  90.2500, 448.4000, 479.7500,   0.0000],
        [466.4500,   0.0000, 483.5500,  88.3500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.5707, 0.8354, 1.8557],
         [0.5707, 0.8354, 1.8557],
         [0.5684, 0.8331, 1.8534],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5693, 0.8341, 1.8543],
         [0.5693, 0.8341, 1.8543],
         [0.5673, 0.8319, 1.8522],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5535, 0.8179, 1.8382],
         [0.5513, 0.8156, 1.8360],
         [0.5513, 0.8153, 1.8363],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
399/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.9474, 1.1155, 1.3677],
         [0.9474, 1.1155, 1.3677],
         [0.9474, 1.1155, 1.3677],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9474, 1.1155, 1.3677],
         [0.9474, 1.1155, 1.3677],
         [0.9474, 1.1155, 1.3677],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9474, 1.1155, 1.3677],
         [0.9474, 1.1155, 1.3677],
         [0.9474, 1.1155, 1.3677],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[352.4500,   1.9000, 372.4000, 388.5500,   0.0000],
        [  7.6000, 240.3500,  19.9500, 318.2500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.9474, 1.1155, 1.3677],
         [0.9474, 1.1155, 1.3677],
         [0.9474, 1.1155, 1.3677],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9474, 1.1155, 1.3677],
         [0.9474, 1.1155, 1.3677],
         [0.9474, 1.1155, 1.3677],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9474, 1.1155, 1.3677],
         [0.9474, 1.1155, 1.3677],
         [0.9474, 1.1155, 1.3677],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
400/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.2548, 1.3772, 1.6456],
         [1.2372, 1.3593, 1.6277],
         [1.2214, 1.3431, 1.6116],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2372, 1.3593, 1.6277],
         [1.2360, 1.3580, 1.6265],
         [1.2192, 1.3408, 1.6094],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2214, 1.3431, 1.6116],
         [1.2192, 1.3408, 1.6094],
         [1.2169, 1.3385, 1.6071],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[205.2000, 103.5500, 227.0500, 417.0500,   0.0000],
        [253.6500,   9.5000, 271.7000, 130.1500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.2548, 1.3772, 1.6456],
         [1.2372, 1.3593, 1.6277],
         [1.2214, 1.3431, 1.6116],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2372, 1.3593, 1.6277],
         [1.2360, 1.3580, 1.6265],
         [1.2192, 1.3408, 1.6094],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2214, 1.3431, 1.6116],
         [1.2192, 1.3408, 1.6094],
         [1.2169, 1.3385, 1.6071],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
401/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.1995,  0.1881,  0.7407],
         [-0.1833,  0.2047,  0.7572],
         [-0.1810,  0.2070,  0.7595],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2013,  0.1863,  0.7388],
         [-0.2013,  0.1863,  0.7388],
         [-0.1990,  0.1886,  0.7411],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2171,  0.1702,  0.7228],
         [-0.2171,  0.1702,  0.7228],
         [-0.2154,  0.1719,  0.7245],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[228.0000, 152.9500, 241.3000, 313.5000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.1995,  0.1881,  0.7407],
         [-0.1833,  0.2047,  0.7572],
         [-0.1810,  0.2070,  0.7595],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2013,  0.1863,  0.7388],
         [-0.2013,  0.1863,  0.7388],
         [-0.1990,  0.1886,  0.7411],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2171,  0.1702,  0.7228],
         [-0.2171,  0.1702,  0.7228],
         [-0.2154,  0.1719,  0.7245],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
402/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.4170, 0.6258, 1.0021],
         [0.4337, 0.6429, 1.0191],
         [0.4359, 0.6452, 1.0214],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4170, 0.6258, 1.0021],
         [0.4337, 0.6429, 1.0191],
         [0.4359, 0.6452, 1.0214],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4170, 0.6258, 1.0021],
         [0.4337, 0.6429, 1.0191],
         [0.4359, 0.6452, 1.0214],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[133.9500,  10.4500, 157.7000, 421.8000,   0.0000],
        [406.6000, 238.4500, 416.1000, 347.7000,   0.0000],
        [461.7000, 251.7500, 470.2500, 337.2500,   0.0000],
        [498.7500, 282.1500, 507.3000, 338.2000,   0.0000],
        [596.6000, 266.9500, 605.1500, 311.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.4170, 0.6258, 1.0021],
         [0.4337, 0.6429, 1.0191],
         [0.4359, 0.6452, 1.0214],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4170, 0.6258, 1.0021],
         [0.4337, 0.6429, 1.0191],
         [0.4359, 0.6452, 1.0214],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4170, 0.6258, 1.0021],
         [0.4337, 0.6429, 1.0191],
         [0.4359, 0.6452, 1.0214],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
403/730
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
Checking data:  {'img': tensor([[[-0.7038, -0.4675, -0.0689],
         [-0.7218, -0.4859, -0.0872],
         [-0.6985, -0.4621, -0.0635],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.3167,  0.5758,  0.9698],
         [ 0.2109,  0.4676,  0.8620],
         [ 0.0260,  0.2786,  0.6739],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.3510,  0.6108,  1.0046],
         [ 0.3608,  0.6209,  1.0147],
         [ 0.3731,  0.6335,  1.0272],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[106.4000,   0.9500, 133.0000, 475.9500,   0.0000],
        [222.3000, 266.9500, 234.6500, 312.5500,   0.0000],
        [580.4500, 277.4000, 589.9500, 302.1000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.7038, -0.4675, -0.0689],
         [-0.7218, -0.4859, -0.0872],
         [-0.6985, -0.4621, -0.0635],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.3167,  0.5758,  0.9698],
         [ 0.2109,  0.4676,  0.8620],
         [ 0.0260,  0.2786,  0.6739],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.3510,  0.6108,  1.0046],
         [ 0.3608,  0.6209,  1.0147],
         [ 0.3731,  0.6335,  1.0272],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
404/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.0629,  0.6078,  1.9428],
         [-0.0629,  0.6078,  1.9428],
         [-0.0629,  0.6078,  1.9428],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0656,  0.6092,  1.9428],
         [-0.0629,  0.6078,  1.9428],
         [-0.0629,  0.6078,  1.9428],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0941,  0.6273,  1.9451],
         [-0.0652,  0.6125,  1.9451],
         [-0.0646,  0.6121,  1.9451],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[376.2000,  36.1000, 402.8000, 416.1000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.0629,  0.6078,  1.9428],
         [-0.0629,  0.6078,  1.9428],
         [-0.0629,  0.6078,  1.9428],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0656,  0.6092,  1.9428],
         [-0.0629,  0.6078,  1.9428],
         [-0.0629,  0.6078,  1.9428],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0941,  0.6273,  1.9451],
         [-0.0652,  0.6125,  1.9451],
         [-0.0646,  0.6121,  1.9451],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
405/730
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.4830, -0.1359, -0.2084],
         [ 0.0310,  0.4105,  0.3327],
         [ 0.6842,  1.1390,  1.0159],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0149,  0.3926,  0.3570],
         [ 0.3680,  0.7630,  0.7166],
         [ 0.9227,  1.4195,  1.3027],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.4303,  0.8526,  0.8850],
         [ 0.7297,  1.1928,  1.1775],
         [ 1.2378,  1.7744,  1.7253],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[180.5000, 111.1500, 209.9500, 399.0000,   0.0000],
        [225.1500,  92.1500, 240.3500, 125.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.4830, -0.1359, -0.2084],
         [ 0.0310,  0.4105,  0.3327],
         [ 0.6842,  1.1390,  1.0159],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0149,  0.3926,  0.3570],
         [ 0.3680,  0.7630,  0.7166],
         [ 0.9227,  1.4195,  1.3027],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.4303,  0.8526,  0.8850],
         [ 0.7297,  1.1928,  1.1775],
         [ 1.2378,  1.7744,  1.7253],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
406/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.7762, 0.9930, 1.2631],
         [0.7762, 0.9930, 1.2631],
         [0.7762, 0.9930, 1.2631],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7762, 0.9930, 1.2631],
         [0.7762, 0.9930, 1.2631],
         [0.7762, 0.9930, 1.2631],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7762, 0.9930, 1.2631],
         [0.7762, 0.9930, 1.2631],
         [0.7762, 0.9930, 1.2631],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 33.2500, 142.5000,  56.0500, 283.1000,   0.0000],
        [106.4000, 100.7000, 124.4500, 283.1000,   0.0000],
        [339.1500, 225.1500, 352.4500, 305.9000,   0.0000],
        [355.3000, 186.2000, 365.7500, 308.7500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.7762, 0.9930, 1.2631],
         [0.7762, 0.9930, 1.2631],
         [0.7762, 0.9930, 1.2631],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7762, 0.9930, 1.2631],
         [0.7762, 0.9930, 1.2631],
         [0.7762, 0.9930, 1.2631],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7762, 0.9930, 1.2631],
         [0.7762, 0.9930, 1.2631],
         [0.7762, 0.9930, 1.2631],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
407/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.1254, 0.7654, 1.9951],
         [0.1254, 0.7654, 1.9951],
         [0.1232, 0.7631, 1.9928],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1254, 0.7654, 1.9951],
         [0.1254, 0.7654, 1.9951],
         [0.1234, 0.7633, 1.9930],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1277, 0.7677, 1.9974],
         [0.1275, 0.7675, 1.9972],
         [0.1254, 0.7654, 1.9951],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[535.8000,  51.3000, 599.4500, 526.3000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.1254, 0.7654, 1.9951],
         [0.1254, 0.7654, 1.9951],
         [0.1232, 0.7631, 1.9928],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1254, 0.7654, 1.9951],
         [0.1254, 0.7654, 1.9951],
         [0.1234, 0.7633, 1.9930],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1277, 0.7677, 1.9974],
         [0.1275, 0.7675, 1.9972],
         [0.1254, 0.7654, 1.9951],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
408/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.2111, 0.3628, 0.8971],
         [0.2129, 0.3646, 0.8989],
         [0.2309, 0.3830, 0.9173],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2142, 0.3660, 0.9003],
         [0.2322, 0.3844, 0.9186],
         [0.2503, 0.4028, 0.9370],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2480, 0.4005, 0.9347],
         [0.2660, 0.4190, 0.9530],
         [0.2841, 0.4374, 0.9714],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[315.4000, 133.9500, 329.6500, 418.0000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.2111, 0.3628, 0.8971],
         [0.2129, 0.3646, 0.8989],
         [0.2309, 0.3830, 0.9173],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2142, 0.3660, 0.9003],
         [0.2322, 0.3844, 0.9186],
         [0.2503, 0.4028, 0.9370],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2480, 0.4005, 0.9347],
         [0.2660, 0.4190, 0.9530],
         [0.2841, 0.4374, 0.9714],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
409/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.4612, 1.6232, 1.8731],
         [1.4612, 1.6232, 1.8731],
         [1.4634, 1.6256, 1.8754],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4612, 1.6232, 1.8731],
         [1.4612, 1.6232, 1.8731],
         [1.4634, 1.6256, 1.8754],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4612, 1.6232, 1.8731],
         [1.4612, 1.6232, 1.8731],
         [1.4634, 1.6256, 1.8754],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 64.6000,  61.7500, 101.6500, 496.8500,   0.0000],
        [541.5000, 255.5500, 551.9500, 355.3000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.4612, 1.6232, 1.8731],
         [1.4612, 1.6232, 1.8731],
         [1.4634, 1.6256, 1.8754],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4612, 1.6232, 1.8731],
         [1.4612, 1.6232, 1.8731],
         [1.4634, 1.6256, 1.8754],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4612, 1.6232, 1.8731],
         [1.4612, 1.6232, 1.8731],
         [1.4634, 1.6256, 1.8754],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
410/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.3589, 1.5887, 1.8213],
         [1.3589, 1.5887, 1.8213],
         [1.3611, 1.5909, 1.8235],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3769, 1.6071, 1.8396],
         [1.3768, 1.6070, 1.8395],
         [1.3755, 1.6057, 1.8383],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3949, 1.6255, 1.8579],
         [1.3913, 1.6219, 1.8543],
         [1.3755, 1.6057, 1.8383],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[368.6000,   1.9000, 414.2000, 415.1500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.3589, 1.5887, 1.8213],
         [1.3589, 1.5887, 1.8213],
         [1.3611, 1.5909, 1.8235],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3769, 1.6071, 1.8396],
         [1.3768, 1.6070, 1.8395],
         [1.3755, 1.6057, 1.8383],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3949, 1.6255, 1.8579],
         [1.3913, 1.6219, 1.8543],
         [1.3755, 1.6057, 1.8383],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
411/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.3300, 0.7470, 1.5594],
         [0.3107, 0.7272, 1.5736],
         [0.2773, 0.6908, 1.5441],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3134, 0.7299, 1.5423],
         [0.2953, 0.7115, 1.5555],
         [0.2773, 0.6931, 1.5397],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3134, 0.7299, 1.5415],
         [0.2952, 0.7113, 1.5257],
         [0.2751, 0.6908, 1.5374],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[560.5000,  51.3000, 598.5000, 558.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.3300, 0.7470, 1.5594],
         [0.3107, 0.7272, 1.5736],
         [0.2773, 0.6908, 1.5441],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3134, 0.7299, 1.5423],
         [0.2953, 0.7115, 1.5555],
         [0.2773, 0.6931, 1.5397],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3134, 0.7299, 1.5415],
         [0.2952, 0.7113, 1.5257],
         [0.2751, 0.6908, 1.5374],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
412/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.0912, 0.5378, 1.1411],
         [0.0912, 0.5378, 1.1411],
         [0.0912, 0.5378, 1.1411],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0912, 0.5378, 1.1411],
         [0.0912, 0.5378, 1.1411],
         [0.0912, 0.5378, 1.1411],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0912, 0.5378, 1.1411],
         [0.0912, 0.5378, 1.1411],
         [0.0912, 0.5378, 1.1411],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[452.2000,   3.8000, 478.8000, 456.0000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.0912, 0.5378, 1.1411],
         [0.0912, 0.5378, 1.1411],
         [0.0912, 0.5378, 1.1411],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0912, 0.5378, 1.1411],
         [0.0912, 0.5378, 1.1411],
         [0.0912, 0.5378, 1.1411],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0912, 0.5378, 1.1411],
         [0.0912, 0.5378, 1.1411],
         [0.0912, 0.5378, 1.1411],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
413/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[2.2142, 2.3581, 2.6221],
         [2.1962, 2.3397, 2.6038],
         [2.1782, 2.3212, 2.5854],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.2142, 2.3581, 2.6221],
         [2.1962, 2.3397, 2.6038],
         [2.1782, 2.3212, 2.5854],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.2120, 2.3558, 2.6198],
         [2.1939, 2.3374, 2.6015],
         [2.1759, 2.3189, 2.5831],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[379.0500,  87.4000, 410.4000, 456.9500,   0.0000],
        [436.0500,  47.5000, 456.0000, 119.7000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[2.2142, 2.3581, 2.6221],
         [2.1962, 2.3397, 2.6038],
         [2.1782, 2.3212, 2.5854],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.2142, 2.3581, 2.6221],
         [2.1962, 2.3397, 2.6038],
         [2.1782, 2.3212, 2.5854],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.2120, 2.3558, 2.6198],
         [2.1939, 2.3374, 2.6015],
         [2.1759, 2.3189, 2.5831],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
414/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.4323, 0.6940, 1.0874],
         [0.4675, 0.7299, 1.1232],
         [0.4811, 0.7438, 1.1370],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3481, 0.6106, 1.0030],
         [0.3994, 0.6631, 1.0553],
         [0.4152, 0.6793, 1.0714],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3391, 0.6337, 1.0054],
         [0.3927, 0.6885, 1.0603],
         [0.4082, 0.7043, 1.0802],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[187.1500,  26.6000, 207.1000, 228.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.4323, 0.6940, 1.0874],
         [0.4675, 0.7299, 1.1232],
         [0.4811, 0.7438, 1.1370],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3481, 0.6106, 1.0030],
         [0.3994, 0.6631, 1.0553],
         [0.4152, 0.6793, 1.0714],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3391, 0.6337, 1.0054],
         [0.3927, 0.6885, 1.0603],
         [0.4082, 0.7043, 1.0802],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
415/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.5869, 0.9055, 1.3328],
         [0.5391, 0.8898, 1.3172],
         [0.5585, 0.9151, 1.3403],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6059, 0.9225, 1.3539],
         [0.5892, 0.9083, 1.3397],
         [0.5779, 0.9346, 1.3670],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6265, 0.9230, 1.4117],
         [0.6233, 0.9256, 1.4131],
         [0.6156, 0.9606, 1.4377],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[288.8000, 119.7000, 314.4500, 478.8000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.5869, 0.9055, 1.3328],
         [0.5391, 0.8898, 1.3172],
         [0.5585, 0.9151, 1.3403],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6059, 0.9225, 1.3539],
         [0.5892, 0.9083, 1.3397],
         [0.5779, 0.9346, 1.3670],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6265, 0.9230, 1.4117],
         [0.6233, 0.9256, 1.4131],
         [0.6156, 0.9606, 1.4377],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
416/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[ 0.5318,  0.8989,  1.2217],
         [ 0.6333,  0.9695,  1.2920],
         [ 0.7133,  1.0513,  1.3734],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.8288,  1.1693,  1.4909],
         [ 0.7299,  1.0683,  1.3903],
         [ 0.5917,  0.9269,  1.2496],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1907,  0.1271,  0.4533],
         [-0.3324, -0.0178,  0.3091],
         [-0.5418, -0.2318,  0.0960],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[ 83.6000,   0.9500, 114.0000, 288.8000,   0.0000],
        [  2.8500,   5.7000,  32.3000, 262.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[ 0.5318,  0.8989,  1.2217],
         [ 0.6333,  0.9695,  1.2920],
         [ 0.7133,  1.0513,  1.3734],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.8288,  1.1693,  1.4909],
         [ 0.7299,  1.0683,  1.3903],
         [ 0.5917,  0.9269,  1.2496],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1907,  0.1271,  0.4533],
         [-0.3324, -0.0178,  0.3091],
         [-0.5418, -0.2318,  0.0960],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
417/730
After normalization, Min: -2.0357142857142856, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.1314,  0.2227,  1.3502],
         [-0.1314,  0.2227,  1.3502],
         [-0.1314,  0.2227,  1.3502],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1314,  0.2227,  1.3502],
         [-0.1314,  0.2227,  1.3502],
         [-0.1314,  0.2227,  1.3502],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1292,  0.2250,  1.3525],
         [-0.1292,  0.2250,  1.3525],
         [-0.1292,  0.2250,  1.3525],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[551.0000,  40.8500, 585.2000, 532.0000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.1314,  0.2227,  1.3502],
         [-0.1314,  0.2227,  1.3502],
         [-0.1314,  0.2227,  1.3502],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1314,  0.2227,  1.3502],
         [-0.1314,  0.2227,  1.3502],
         [-0.1314,  0.2227,  1.3502],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1292,  0.2250,  1.3525],
         [-0.1292,  0.2250,  1.3525],
         [-0.1292,  0.2250,  1.3525],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
418/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.8276, 1.0805, 1.2980],
         [0.8276, 1.0805, 1.2980],
         [0.8276, 1.0805, 1.2980],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8276, 1.0805, 1.2980],
         [0.8276, 1.0805, 1.2980],
         [0.8276, 1.0805, 1.2980],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8298, 1.0828, 1.3002],
         [0.8298, 1.0828, 1.3002],
         [0.8298, 1.0828, 1.3002],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[203.3000,  77.9000, 230.8500, 402.8000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.8276, 1.0805, 1.2980],
         [0.8276, 1.0805, 1.2980],
         [0.8276, 1.0805, 1.2980],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8276, 1.0805, 1.2980],
         [0.8276, 1.0805, 1.2980],
         [0.8276, 1.0805, 1.2980],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8298, 1.0828, 1.3002],
         [0.8298, 1.0828, 1.3002],
         [0.8298, 1.0828, 1.3002],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
419/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.0741, 0.9405, 2.2043],
         [0.0741, 0.9405, 2.2043],
         [0.0741, 0.9405, 2.2043],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0741, 0.9405, 2.2043],
         [0.0741, 0.9405, 2.2043],
         [0.0741, 0.9405, 2.2043],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0741, 0.9405, 2.2043],
         [0.0741, 0.9405, 2.2043],
         [0.0741, 0.9405, 2.2043],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[401.8500,   0.9500, 451.2500, 426.5500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.0741, 0.9405, 2.2043],
         [0.0741, 0.9405, 2.2043],
         [0.0741, 0.9405, 2.2043],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0741, 0.9405, 2.2043],
         [0.0741, 0.9405, 2.2043],
         [0.0741, 0.9405, 2.2043],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0741, 0.9405, 2.2043],
         [0.0741, 0.9405, 2.2043],
         [0.0741, 0.9405, 2.2043],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
420/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.5762, -0.0219,  0.9150],
         [-0.5596, -0.0049,  0.9319],
         [-0.5573, -0.0026,  0.9342],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5749, -0.0206,  0.9163],
         [-0.5594, -0.0048,  0.9320],
         [-0.5561, -0.0014,  0.9354],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5596, -0.0049,  0.9319],
         [-0.5582, -0.0035,  0.9333],
         [-0.5421,  0.0129,  0.9497],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[290.7000,  96.9000, 310.6500, 406.6000,   0.0000],
        [329.6500,   0.9500, 357.2000, 110.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.5762, -0.0219,  0.9150],
         [-0.5596, -0.0049,  0.9319],
         [-0.5573, -0.0026,  0.9342],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5749, -0.0206,  0.9163],
         [-0.5594, -0.0048,  0.9320],
         [-0.5561, -0.0014,  0.9354],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5596, -0.0049,  0.9319],
         [-0.5582, -0.0035,  0.9333],
         [-0.5421,  0.0129,  0.9497],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
421/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.0972,  0.6954,  1.6988],
         [-0.0972,  0.6954,  1.6988],
         [-0.0972,  0.6954,  1.6988],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0958,  0.6968,  1.7002],
         [-0.0958,  0.6968,  1.7002],
         [-0.0958,  0.6968,  1.7002],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0823,  0.7175,  1.7185],
         [-0.0823,  0.7175,  1.7185],
         [-0.0823,  0.7175,  1.7185],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[333.4500, 112.1000, 349.6000, 344.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.0972,  0.6954,  1.6988],
         [-0.0972,  0.6954,  1.6988],
         [-0.0972,  0.6954,  1.6988],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0958,  0.6968,  1.7002],
         [-0.0958,  0.6968,  1.7002],
         [-0.0958,  0.6968,  1.7002],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0823,  0.7175,  1.7185],
         [-0.0823,  0.7175,  1.7185],
         [-0.0823,  0.7175,  1.7185],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
422/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.9479, 1.1685, 1.4030],
         [0.9646, 1.1856, 1.4200],
         [0.9668, 1.1879, 1.4222],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9479, 1.1685, 1.4030],
         [0.9646, 1.1856, 1.4200],
         [0.9668, 1.1879, 1.4222],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9479, 1.1685, 1.4030],
         [0.9646, 1.1856, 1.4200],
         [0.9668, 1.1879, 1.4222],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[437.0000,   2.8500, 475.9500, 450.3000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.9479, 1.1685, 1.4030],
         [0.9646, 1.1856, 1.4200],
         [0.9668, 1.1879, 1.4222],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9479, 1.1685, 1.4030],
         [0.9646, 1.1856, 1.4200],
         [0.9668, 1.1879, 1.4222],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9479, 1.1685, 1.4030],
         [0.9646, 1.1856, 1.4200],
         [0.9668, 1.1879, 1.4222],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
423/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[ 0.0736,  0.8000,  2.1167],
         [ 0.0917,  0.8184,  2.1350],
         [ 0.1101,  0.8373,  2.1538],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0349,  0.7604,  2.0773],
         [ 0.0556,  0.7815,  2.0983],
         [ 0.0897,  0.8164,  2.1331],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0390,  0.6848,  2.0020],
         [-0.0028,  0.7218,  2.0389],
         [ 0.0379,  0.7634,  2.0803],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[103.5500, 107.3500, 127.3000, 385.7000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[ 0.0736,  0.8000,  2.1167],
         [ 0.0917,  0.8184,  2.1350],
         [ 0.1101,  0.8373,  2.1538],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0349,  0.7604,  2.0773],
         [ 0.0556,  0.7815,  2.0983],
         [ 0.0897,  0.8164,  2.1331],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0390,  0.6848,  2.0020],
         [-0.0028,  0.7218,  2.0389],
         [ 0.0379,  0.7634,  2.0803],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
424/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.9659, 1.1869, 1.4213],
         [1.0002, 1.2220, 1.4562],
         [1.0208, 1.2431, 1.4772],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9821, 1.2035, 1.4378],
         [1.0015, 1.2234, 1.4576],
         [1.0353, 1.2579, 1.4920],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9844, 1.2058, 1.4401],
         [1.0036, 1.2255, 1.4597],
         [1.0353, 1.2579, 1.4920],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[509.2000,   0.9500, 572.8500, 604.2000,   0.0000],
        [573.8000,   1.9000, 597.5500, 473.1000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.9659, 1.1869, 1.4213],
         [1.0002, 1.2220, 1.4562],
         [1.0208, 1.2431, 1.4772],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9821, 1.2035, 1.4378],
         [1.0015, 1.2234, 1.4576],
         [1.0353, 1.2579, 1.4920],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9844, 1.2058, 1.4401],
         [1.0036, 1.2255, 1.4597],
         [1.0353, 1.2579, 1.4920],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
425/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.2684,  0.8529,  2.5877],
         [-0.2684,  0.8529,  2.5877],
         [-0.2684,  0.8529,  2.5877],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2684,  0.8529,  2.5877],
         [-0.2684,  0.8529,  2.5877],
         [-0.2684,  0.8529,  2.5877],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2684,  0.8529,  2.5877],
         [-0.2684,  0.8529,  2.5877],
         [-0.2684,  0.8529,  2.5877],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[399.0000,   0.9500, 424.6500, 438.9000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.2684,  0.8529,  2.5877],
         [-0.2684,  0.8529,  2.5877],
         [-0.2684,  0.8529,  2.5877],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2684,  0.8529,  2.5877],
         [-0.2684,  0.8529,  2.5877],
         [-0.2684,  0.8529,  2.5877],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2684,  0.8529,  2.5877],
         [-0.2684,  0.8529,  2.5877],
         [-0.2684,  0.8529,  2.5877],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
426/730
After normalization, Min: -2.1179039301310043, Max: 2.6225708071390788
Checking data:  {'img': tensor([[[-0.5230,  0.1540,  0.8118],
         [-0.5205,  0.1567,  0.8144],
         [-0.4880,  0.1899,  0.8475],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4424,  0.2024,  0.8769],
         [-0.4437,  0.2010,  0.8755],
         [-0.4595,  0.1849,  0.8595],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4784,  0.1587,  0.8356],
         [-0.4796,  0.1575,  0.8344],
         [-0.4933,  0.1434,  0.8205],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[100.7000,   0.9500, 126.3500, 486.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.5230,  0.1540,  0.8118],
         [-0.5205,  0.1567,  0.8144],
         [-0.4880,  0.1899,  0.8475],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4424,  0.2024,  0.8769],
         [-0.4437,  0.2010,  0.8755],
         [-0.4595,  0.1849,  0.8595],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4784,  0.1587,  0.8356],
         [-0.4796,  0.1575,  0.8344],
         [-0.4933,  0.1434,  0.8205],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
427/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.7865, 2.0084, 2.3437],
         [1.7865, 2.0084, 2.3437],
         [1.7865, 2.0084, 2.3437],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7865, 2.0084, 2.3437],
         [1.7865, 2.0084, 2.3437],
         [1.7865, 2.0084, 2.3437],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7865, 2.0084, 2.3391],
         [1.7865, 2.0084, 2.3391],
         [1.7865, 2.0084, 2.3391],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[270.7500,  57.9500, 307.8000, 307.8000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.7865, 2.0084, 2.3437],
         [1.7865, 2.0084, 2.3437],
         [1.7865, 2.0084, 2.3437],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7865, 2.0084, 2.3437],
         [1.7865, 2.0084, 2.3437],
         [1.7865, 2.0084, 2.3437],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7865, 2.0084, 2.3391],
         [1.7865, 2.0084, 2.3391],
         [1.7865, 2.0084, 2.3391],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
428/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.1314,  0.2752,  0.7576],
         [-0.1314,  0.2752,  0.7576],
         [-0.1314,  0.2752,  0.7576],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1314,  0.2752,  0.7576],
         [-0.1314,  0.2752,  0.7576],
         [-0.1314,  0.2752,  0.7576],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1292,  0.2775,  0.7599],
         [-0.1292,  0.2775,  0.7599],
         [-0.1292,  0.2775,  0.7599],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[405.6500,  66.5000, 423.7000, 362.9000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.1314,  0.2752,  0.7576],
         [-0.1314,  0.2752,  0.7576],
         [-0.1314,  0.2752,  0.7576],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1314,  0.2752,  0.7576],
         [-0.1314,  0.2752,  0.7576],
         [-0.1314,  0.2752,  0.7576],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1292,  0.2775,  0.7599],
         [-0.1292,  0.2775,  0.7599],
         [-0.1292,  0.2775,  0.7599],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
429/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.7933, 1.0105, 1.2457],
         [0.7946, 1.0118, 1.2470],
         [0.8122, 1.0299, 1.2649],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7920, 1.0091, 1.2443],
         [0.7921, 1.0092, 1.2444],
         [0.7954, 1.0126, 1.2478],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7739, 0.9907, 1.2259],
         [0.7751, 0.9919, 1.2271],
         [0.7891, 1.0062, 1.2414],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[461.7000,   1.9000, 499.7000, 457.9000,   0.0000],
        [153.9000, 257.4500, 167.2000, 306.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.7933, 1.0105, 1.2457],
         [0.7946, 1.0118, 1.2470],
         [0.8122, 1.0299, 1.2649],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7920, 1.0091, 1.2443],
         [0.7921, 1.0092, 1.2444],
         [0.7954, 1.0126, 1.2478],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7739, 0.9907, 1.2259],
         [0.7751, 0.9919, 1.2271],
         [0.7891, 1.0062, 1.2414],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
430/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.8164, -0.0224,  1.1934],
         [-0.8164, -0.0224,  1.1934],
         [-0.8142, -0.0201,  1.1957],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8151, -0.0211,  1.1947],
         [-0.8164, -0.0224,  1.1934],
         [-0.8143, -0.0203,  1.1955],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.7997, -0.0054,  1.2103],
         [-0.8164, -0.0224,  1.1934],
         [-0.8164, -0.0224,  1.1934],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[ 31.3500,  59.8500,  70.3000, 315.4000,   0.0000],
        [267.9000, 240.3500, 281.2000, 267.9000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.8164, -0.0224,  1.1934],
         [-0.8164, -0.0224,  1.1934],
         [-0.8142, -0.0201,  1.1957],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8151, -0.0211,  1.1947],
         [-0.8164, -0.0224,  1.1934],
         [-0.8143, -0.0203,  1.1955],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.7997, -0.0054,  1.2103],
         [-0.8164, -0.0224,  1.1934],
         [-0.8164, -0.0224,  1.1934],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
431/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[ 1.2779,  1.4880,  0.1877],
         [ 1.2477,  1.4387,  0.1987],
         [ 1.0069,  1.1740,  0.0498],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 1.4021,  1.6149,  0.2810],
         [ 1.0249,  1.2122, -0.0311],
         [ 0.9418,  1.1089, -0.0263],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.6139,  0.8095, -0.5267],
         [ 0.3973,  0.5867, -0.7089],
         [ 1.0839,  1.2702,  0.0530],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[552.9000, 142.5000, 582.3500, 446.5000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[ 1.2779,  1.4880,  0.1877],
         [ 1.2477,  1.4387,  0.1987],
         [ 1.0069,  1.1740,  0.0498],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 1.4021,  1.6149,  0.2810],
         [ 1.0249,  1.2122, -0.0311],
         [ 0.9418,  1.1089, -0.0263],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.6139,  0.8095, -0.5267],
         [ 0.3973,  0.5867, -0.7089],
         [ 1.0839,  1.2702,  0.0530],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
432/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[2.0430, 2.2180, 2.4304],
         [2.0069, 2.1839, 2.3950],
         [1.9683, 2.1812, 2.3763],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0623, 2.2365, 2.4460],
         [2.0237, 2.2009, 2.4093],
         [1.9774, 2.1837, 2.3772],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0958, 2.2549, 2.4323],
         [2.0473, 2.2203, 2.3978],
         [2.0117, 2.1901, 2.3657],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[503.5000,  89.3000, 532.9500, 517.7500,   0.0000],
        [502.5500,   0.9500, 529.1500,  91.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[2.0430, 2.2180, 2.4304],
         [2.0069, 2.1839, 2.3950],
         [1.9683, 2.1812, 2.3763],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0623, 2.2365, 2.4460],
         [2.0237, 2.2009, 2.4093],
         [1.9774, 2.1837, 2.3772],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0958, 2.2549, 2.4323],
         [2.0473, 2.2203, 2.3978],
         [2.0117, 2.1901, 2.3657],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
433/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[2.2147, 2.3936, 2.6051],
         [2.2147, 2.3936, 2.6051],
         [2.2124, 2.3913, 2.6028],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.2147, 2.3936, 2.6051],
         [2.2147, 2.3936, 2.6051],
         [2.2126, 2.3914, 2.6030],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.2169, 2.3959, 2.6074],
         [2.2167, 2.3957, 2.6073],
         [2.2147, 2.3936, 2.6051],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[163.4000,  36.1000, 186.2000, 390.4500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[2.2147, 2.3936, 2.6051],
         [2.2147, 2.3936, 2.6051],
         [2.2124, 2.3913, 2.6028],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.2147, 2.3936, 2.6051],
         [2.2147, 2.3936, 2.6051],
         [2.2126, 2.3914, 2.6030],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.2169, 2.3959, 2.6074],
         [2.2167, 2.3957, 2.6073],
         [2.2147, 2.3936, 2.6051],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
434/730
After normalization, Min: -2.083654420442196, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.0673, 1.3431, 1.6988],
         [1.0659, 1.3445, 1.6988],
         [1.0524, 1.3629, 1.7011],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0673, 1.3431, 1.6988],
         [1.0659, 1.3445, 1.6988],
         [1.0523, 1.3628, 1.7009],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0673, 1.3431, 1.6988],
         [1.0659, 1.3445, 1.6988],
         [1.0502, 1.3606, 1.6988],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[536.7500, 108.3000, 563.3500, 445.5500,   0.0000],
        [288.8000, 261.2500, 303.0500, 305.9000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.0673, 1.3431, 1.6988],
         [1.0659, 1.3445, 1.6988],
         [1.0524, 1.3629, 1.7011],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0673, 1.3431, 1.6988],
         [1.0659, 1.3445, 1.6988],
         [1.0523, 1.3628, 1.7009],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0673, 1.3431, 1.6988],
         [1.0659, 1.3445, 1.6988],
         [1.0502, 1.3606, 1.6988],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
435/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.3300, 0.8520, 1.2622],
         [0.3111, 0.8327, 1.2429],
         [0.2773, 0.7981, 1.2085],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3138, 0.8354, 1.2457],
         [0.3112, 0.8328, 1.2430],
         [0.2787, 0.7995, 1.2099],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3138, 0.8354, 1.2457],
         [0.3125, 0.8341, 1.2443],
         [0.2944, 0.8156, 1.2259],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[  3.8000,  23.7500,  32.3000, 451.2500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.3300, 0.8520, 1.2622],
         [0.3111, 0.8327, 1.2429],
         [0.2773, 0.7981, 1.2085],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3138, 0.8354, 1.2457],
         [0.3112, 0.8328, 1.2430],
         [0.2787, 0.7995, 1.2099],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3138, 0.8354, 1.2457],
         [0.3125, 0.8341, 1.2443],
         [0.2944, 0.8156, 1.2259],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
436/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[ 0.8424,  0.8317,  0.7544],
         [ 0.3126,  0.2376,  0.1799],
         [ 0.2039,  0.1034,  0.0486],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 1.2077,  1.2052,  1.1262],
         [-1.1259, -1.2331, -1.2842],
         [-0.6864, -0.8068, -0.8575],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.8362,  0.8254,  0.7481],
         [-1.3498, -1.4617, -1.5119],
         [-1.2142, -1.3434, -1.3921],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[356.2500,  95.9500, 368.6000, 357.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[ 0.8424,  0.8317,  0.7544],
         [ 0.3126,  0.2376,  0.1799],
         [ 0.2039,  0.1034,  0.0486],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 1.2077,  1.2052,  1.1262],
         [-1.1259, -1.2331, -1.2842],
         [-0.6864, -0.8068, -0.8575],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.8362,  0.8254,  0.7481],
         [-1.3498, -1.4617, -1.5119],
         [-1.2142, -1.3434, -1.3921],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
437/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.2899, 1.5182, 1.7511],
         [1.2899, 1.5182, 1.7511],
         [1.2899, 1.5182, 1.7511],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2899, 1.5182, 1.7511],
         [1.2899, 1.5182, 1.7511],
         [1.2899, 1.5182, 1.7511],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2922, 1.5205, 1.7534],
         [1.2922, 1.5205, 1.7534],
         [1.2922, 1.5205, 1.7534],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[319.2000, 254.6000, 325.8500, 297.3500,   0.0000],
        [325.8500, 256.5000, 333.4500, 296.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.2899, 1.5182, 1.7511],
         [1.2899, 1.5182, 1.7511],
         [1.2899, 1.5182, 1.7511],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2899, 1.5182, 1.7511],
         [1.2899, 1.5182, 1.7511],
         [1.2899, 1.5182, 1.7511],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2922, 1.5205, 1.7534],
         [1.2922, 1.5205, 1.7534],
         [1.2922, 1.5205, 1.7534],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
438/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.8271, 1.0276, 1.3324],
         [0.8258, 1.0262, 1.3310],
         [0.8104, 1.0105, 1.3154],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8104, 1.0105, 1.3153],
         [0.8091, 1.0091, 1.3140],
         [0.8091, 1.0091, 1.3140],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8055, 1.0055, 1.3104],
         [0.7911, 0.9907, 1.2957],
         [0.7911, 0.9907, 1.2957],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[166.2500,  59.8500, 190.0000, 400.9000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.8271, 1.0276, 1.3324],
         [0.8258, 1.0262, 1.3310],
         [0.8104, 1.0105, 1.3154],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8104, 1.0105, 1.3153],
         [0.8091, 1.0091, 1.3140],
         [0.8091, 1.0091, 1.3140],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8055, 1.0055, 1.3104],
         [0.7911, 0.9907, 1.2957],
         [0.7911, 0.9907, 1.2957],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
439/730
After normalization, Min: -2.0494049107533874, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.3309, 0.5378, 0.8099],
         [0.3309, 0.5378, 0.8099],
         [0.3332, 0.5401, 0.8122],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3309, 0.5378, 0.8099],
         [0.3309, 0.5378, 0.8099],
         [0.3332, 0.5401, 0.8122],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3309, 0.5378, 0.8099],
         [0.3309, 0.5378, 0.8099],
         [0.3332, 0.5401, 0.8122],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[513.0000, 158.6500, 525.3500, 377.1500,   0.0000],
        [218.5000, 231.8000, 228.9500, 336.3000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.3309, 0.5378, 0.8099],
         [0.3309, 0.5378, 0.8099],
         [0.3332, 0.5401, 0.8122],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3309, 0.5378, 0.8099],
         [0.3309, 0.5378, 0.8099],
         [0.3332, 0.5401, 0.8122],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3309, 0.5378, 0.8099],
         [0.3309, 0.5378, 0.8099],
         [0.3332, 0.5401, 0.8122],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
440/730
After normalization, Min: -1.843907852620537, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.3883,  0.1176,  1.1585],
         [-0.3883,  0.1176,  1.1585],
         [-0.3883,  0.1176,  1.1585],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3883,  0.1176,  1.1585],
         [-0.3883,  0.1176,  1.1585],
         [-0.3883,  0.1176,  1.1585],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3883,  0.1176,  1.1585],
         [-0.3883,  0.1176,  1.1585],
         [-0.3883,  0.1176,  1.1585],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[ 19.0000,  68.4000,  62.7000, 471.2000,   0.0000],
        [546.2500, 249.8500, 558.6000, 311.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.3883,  0.1176,  1.1585],
         [-0.3883,  0.1176,  1.1585],
         [-0.3883,  0.1176,  1.1585],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3883,  0.1176,  1.1585],
         [-0.3883,  0.1176,  1.1585],
         [-0.3883,  0.1176,  1.1585],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3883,  0.1176,  1.1585],
         [-0.3883,  0.1176,  1.1585],
         [-0.3883,  0.1176,  1.1585],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
441/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.0458,  0.1702,  0.4614],
         [-0.0458,  0.1702,  0.4614],
         [-0.0458,  0.1702,  0.4614],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0458,  0.1702,  0.4614],
         [-0.0458,  0.1702,  0.4614],
         [-0.0458,  0.1702,  0.4614],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0436,  0.1725,  0.4614],
         [-0.0436,  0.1725,  0.4614],
         [-0.0436,  0.1725,  0.4614],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[371.4500, 212.8000, 380.9500, 324.9000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.0458,  0.1702,  0.4614],
         [-0.0458,  0.1702,  0.4614],
         [-0.0458,  0.1702,  0.4614],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0458,  0.1702,  0.4614],
         [-0.0458,  0.1702,  0.4614],
         [-0.0458,  0.1702,  0.4614],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0436,  0.1725,  0.4614],
         [-0.0436,  0.1725,  0.4614],
         [-0.0436,  0.1725,  0.4614],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
442/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.7014, 1.8688, 2.1176],
         [1.7180, 1.8859, 2.1346],
         [1.7203, 1.8882, 2.1368],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7013, 1.8688, 2.1175],
         [1.7168, 1.8846, 2.1333],
         [1.7201, 1.8880, 2.1367],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.6987, 1.8661, 2.1149],
         [1.7023, 1.8697, 2.1185],
         [1.7180, 1.8859, 2.1346],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[104.5000, 221.3500, 124.4500, 320.1500,   0.0000],
        [448.4000, 250.8000, 460.7500, 298.3000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.7014, 1.8688, 2.1176],
         [1.7180, 1.8859, 2.1346],
         [1.7203, 1.8882, 2.1368],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7013, 1.8688, 2.1175],
         [1.7168, 1.8846, 2.1333],
         [1.7201, 1.8880, 2.1367],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.6987, 1.8661, 2.1149],
         [1.7023, 1.8697, 2.1185],
         [1.7180, 1.8859, 2.1346],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
443/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.9182, -0.7393, -0.9155],
         [-1.1045, -0.9310, -1.1028],
         [-1.1641, -1.0081, -1.1383],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.3219, -1.1519, -1.3594],
         [-1.4570, -1.2914, -1.4641],
         [-1.3199, -1.1673, -1.2971],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.2465, -1.0748, -1.2880],
         [-1.2718, -1.1019, -1.3053],
         [-1.2788, -1.1233, -1.2621],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[111.1500,   2.8500, 129.2000, 314.4500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.9182, -0.7393, -0.9155],
         [-1.1045, -0.9310, -1.1028],
         [-1.1641, -1.0081, -1.1383],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.3219, -1.1519, -1.3594],
         [-1.4570, -1.2914, -1.4641],
         [-1.3199, -1.1673, -1.2971],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.2465, -1.0748, -1.2880],
         [-1.2718, -1.1019, -1.3053],
         [-1.2788, -1.1233, -1.2621],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
444/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.6054, 0.9234, 1.3507],
         [0.6221, 0.9405, 1.3677],
         [0.6221, 0.9405, 1.3677],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6054, 0.9234, 1.3507],
         [0.6221, 0.9405, 1.3677],
         [0.6221, 0.9405, 1.3677],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6054, 0.9234, 1.3507],
         [0.6221, 0.9405, 1.3677],
         [0.6221, 0.9405, 1.3677],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 49.4000,  94.0500,  60.8000, 293.5500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.6054, 0.9234, 1.3507],
         [0.6221, 0.9405, 1.3677],
         [0.6221, 0.9405, 1.3677],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6054, 0.9234, 1.3507],
         [0.6221, 0.9405, 1.3677],
         [0.6221, 0.9405, 1.3677],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6054, 0.9234, 1.3507],
         [0.6221, 0.9405, 1.3677],
         [0.6221, 0.9405, 1.3677],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
445/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.7757, 0.9925, 1.2278],
         [0.7591, 0.9755, 1.2108],
         [0.7568, 0.9732, 1.2085],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7758, 0.9926, 1.2278],
         [0.7603, 0.9768, 1.2121],
         [0.7570, 0.9734, 1.2087],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7784, 0.9952, 1.2305],
         [0.7748, 0.9916, 1.2269],
         [0.7591, 0.9755, 1.2108],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 74.1000,   2.8500, 114.0000, 247.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.7757, 0.9925, 1.2278],
         [0.7591, 0.9755, 1.2108],
         [0.7568, 0.9732, 1.2085],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7758, 0.9926, 1.2278],
         [0.7603, 0.9768, 1.2121],
         [0.7570, 0.9734, 1.2087],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7784, 0.9952, 1.2305],
         [0.7748, 0.9916, 1.2269],
         [0.7591, 0.9755, 1.2108],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
446/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.3584, 1.6057, 1.8731],
         [1.3584, 1.6057, 1.8731],
         [1.3607, 1.6080, 1.8754],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3544, 1.6057, 1.8717],
         [1.3572, 1.6045, 1.8718],
         [1.3605, 1.6079, 1.8752],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3078, 1.6053, 1.8557],
         [1.3380, 1.5917, 1.8569],
         [1.3523, 1.6054, 1.8708],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[231.8000, 223.2500, 247.0000, 350.5500,   0.0000],
        [383.8000, 245.1000, 398.0500, 291.6500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.3584, 1.6057, 1.8731],
         [1.3584, 1.6057, 1.8731],
         [1.3607, 1.6080, 1.8754],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3544, 1.6057, 1.8717],
         [1.3572, 1.6045, 1.8718],
         [1.3605, 1.6079, 1.8752],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3078, 1.6053, 1.8557],
         [1.3380, 1.5917, 1.8569],
         [1.3523, 1.6054, 1.8708],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
447/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.2111, 0.5553, 1.1934],
         [0.2111, 0.5553, 1.1934],
         [0.2111, 0.5553, 1.1934],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2111, 0.5553, 1.1934],
         [0.2111, 0.5553, 1.1934],
         [0.2111, 0.5553, 1.1934],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2111, 0.5553, 1.1934],
         [0.2111, 0.5553, 1.1934],
         [0.2111, 0.5553, 1.1934],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[332.5000, 186.2000, 345.8000, 313.5000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.2111, 0.5553, 1.1934],
         [0.2111, 0.5553, 1.1934],
         [0.2111, 0.5553, 1.1934],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2111, 0.5553, 1.1934],
         [0.2111, 0.5553, 1.1934],
         [0.2111, 0.5553, 1.1934],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2111, 0.5553, 1.1934],
         [0.2111, 0.5553, 1.1934],
         [0.2111, 0.5553, 1.1934],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
448/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.8618, 1.0805, 1.3502],
         [0.8618, 1.0805, 1.3502],
         [0.8618, 1.0805, 1.3502],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8618, 1.0805, 1.3502],
         [0.8618, 1.0805, 1.3502],
         [0.8618, 1.0805, 1.3502],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8618, 1.0805, 1.3502],
         [0.8618, 1.0805, 1.3502],
         [0.8618, 1.0805, 1.3502],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[562.4000, 154.8500, 572.8500, 211.8500,   0.0000],
        [285.0000, 244.1500, 299.2500, 307.8000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.8618, 1.0805, 1.3502],
         [0.8618, 1.0805, 1.3502],
         [0.8618, 1.0805, 1.3502],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8618, 1.0805, 1.3502],
         [0.8618, 1.0805, 1.3502],
         [0.8618, 1.0805, 1.3502],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8618, 1.0805, 1.3502],
         [0.8618, 1.0805, 1.3502],
         [0.8618, 1.0805, 1.3502],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
449/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.7415, 1.0626, 2.1690],
         [0.7432, 1.0644, 2.1708],
         [0.7587, 1.0801, 2.1864],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7252, 1.0459, 2.1524],
         [0.7407, 1.0618, 2.1681],
         [0.7442, 1.0653, 2.1717],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7226, 1.0433, 2.1497],
         [0.7262, 1.0469, 2.1534],
         [0.7442, 1.0653, 2.1717],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 77.9000,  89.3000, 108.3000, 381.9000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.7415, 1.0626, 2.1690],
         [0.7432, 1.0644, 2.1708],
         [0.7587, 1.0801, 2.1864],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7252, 1.0459, 2.1524],
         [0.7407, 1.0618, 2.1681],
         [0.7442, 1.0653, 2.1717],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7226, 1.0433, 2.1497],
         [0.7262, 1.0469, 2.1534],
         [0.7442, 1.0653, 2.1717],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
450/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.8447, 0.8354, 1.3502],
         [0.8460, 0.8368, 1.3516],
         [0.8618, 0.8575, 1.3700],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8447, 0.8354, 1.3502],
         [0.8460, 0.8368, 1.3516],
         [0.8618, 0.8575, 1.3700],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8469, 0.8377, 1.3525],
         [0.8481, 0.8389, 1.3537],
         [0.8618, 0.8575, 1.3700],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 16.1500, 211.8500,  34.2000, 276.4500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.8447, 0.8354, 1.3502],
         [0.8460, 0.8368, 1.3516],
         [0.8618, 0.8575, 1.3700],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8447, 0.8354, 1.3502],
         [0.8460, 0.8368, 1.3516],
         [0.8618, 0.8575, 1.3700],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8469, 0.8377, 1.3525],
         [0.8481, 0.8389, 1.3537],
         [0.8618, 0.8575, 1.3700],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
451/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.5982, 1.7983, 1.9951],
         [1.5585, 1.7605, 1.9575],
         [1.4662, 1.6985, 1.8958],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.6334, 1.8343, 2.0309],
         [1.6116, 1.8148, 2.0115],
         [1.5276, 1.7612, 1.9627],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.6496, 1.8509, 2.0475],
         [1.6496, 1.8533, 2.0499],
         [1.6178, 1.8494, 2.0506],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 95.0000,  78.8500, 109.2500, 325.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.5982, 1.7983, 1.9951],
         [1.5585, 1.7605, 1.9575],
         [1.4662, 1.6985, 1.8958],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.6334, 1.8343, 2.0309],
         [1.6116, 1.8148, 2.0115],
         [1.5276, 1.7612, 1.9627],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.6496, 1.8509, 2.0475],
         [1.6496, 1.8533, 2.0499],
         [1.6178, 1.8494, 2.0506],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
452/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.0673, 1.2731, 1.7511],
         [1.0673, 1.2731, 1.7511],
         [1.0650, 1.2708, 1.7488],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0673, 1.2731, 1.7511],
         [1.0673, 1.2731, 1.7511],
         [1.0652, 1.2710, 1.7494],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0696, 1.2754, 1.7535],
         [1.0694, 1.2752, 1.7578],
         [1.0673, 1.2731, 1.7597],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[121.6000, 260.3000, 132.0500, 333.4500,   0.0000],
        [ 60.8000, 266.0000,  76.0000, 335.3500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.0673, 1.2731, 1.7511],
         [1.0673, 1.2731, 1.7511],
         [1.0650, 1.2708, 1.7488],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0673, 1.2731, 1.7511],
         [1.0673, 1.2731, 1.7511],
         [1.0652, 1.2710, 1.7494],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0696, 1.2754, 1.7535],
         [1.0694, 1.2752, 1.7578],
         [1.0673, 1.2731, 1.7597],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
453/730
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.4098, 1.5882, 1.8731],
         [1.4098, 1.5882, 1.8731],
         [1.4098, 1.5882, 1.8731],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4071, 1.5896, 1.8731],
         [1.4071, 1.5896, 1.8731],
         [1.4071, 1.5896, 1.8731],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3710, 1.6034, 1.8708],
         [1.3710, 1.6034, 1.8708],
         [1.3710, 1.6034, 1.8708],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[117.8000, 274.5500, 127.3000, 304.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.4098, 1.5882, 1.8731],
         [1.4098, 1.5882, 1.8731],
         [1.4098, 1.5882, 1.8731],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4071, 1.5896, 1.8731],
         [1.4071, 1.5896, 1.8731],
         [1.4071, 1.5896, 1.8731],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3710, 1.6034, 1.8708],
         [1.3710, 1.6034, 1.8708],
         [1.3710, 1.6034, 1.8708],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
454/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.2144,  0.2613,  0.9172],
         [-0.3065,  0.1990,  0.8427],
         [-0.3898,  0.0982,  0.7898],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0153,  0.4654,  1.0970],
         [-0.1833,  0.2934,  0.9301],
         [-0.3567,  0.1171,  0.7774],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.2090,  0.7062,  1.2527],
         [-0.0020,  0.4891,  1.0701],
         [-0.2471,  0.2224,  0.8534],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[471.2000,  38.9500, 516.8000, 419.9000,   0.0000],
        [382.8500, 235.6000, 399.0000, 307.8000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.2144,  0.2613,  0.9172],
         [-0.3065,  0.1990,  0.8427],
         [-0.3898,  0.0982,  0.7898],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0153,  0.4654,  1.0970],
         [-0.1833,  0.2934,  0.9301],
         [-0.3567,  0.1171,  0.7774],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.2090,  0.7062,  1.2527],
         [-0.0020,  0.4891,  1.0701],
         [-0.2471,  0.2224,  0.8534],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
455/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.4954, 1.6758, 1.8034],
         [1.4967, 1.6771, 1.8047],
         [1.5122, 1.6929, 1.8204],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4941, 1.6744, 1.8020],
         [1.4942, 1.6745, 1.8021],
         [1.4975, 1.6779, 1.8055],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4761, 1.6560, 1.7837],
         [1.4795, 1.6595, 1.7872],
         [1.4932, 1.6735, 1.8011],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[444.6000, 111.1500, 455.0500, 388.5500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.4954, 1.6758, 1.8034],
         [1.4967, 1.6771, 1.8047],
         [1.5122, 1.6929, 1.8204],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4941, 1.6744, 1.8020],
         [1.4942, 1.6745, 1.8021],
         [1.4975, 1.6779, 1.8055],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4761, 1.6560, 1.7837],
         [1.4795, 1.6595, 1.7872],
         [1.4932, 1.6735, 1.8011],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
456/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.8276, 1.0980, 1.4200],
         [0.8275, 1.0980, 1.4199],
         [0.8249, 1.0953, 1.4173],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8275, 1.0980, 1.4199],
         [0.8250, 1.0954, 1.4173],
         [0.8104, 1.0805, 1.4025],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8249, 1.0953, 1.4173],
         [0.8104, 1.0805, 1.4025],
         [0.8101, 1.0802, 1.4022],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[379.0500, 242.2500, 392.3500, 321.1000,   0.0000],
        [189.0500, 234.6500, 204.2500, 320.1500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.8276, 1.0980, 1.4200],
         [0.8275, 1.0980, 1.4199],
         [0.8249, 1.0953, 1.4173],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8275, 1.0980, 1.4199],
         [0.8250, 1.0954, 1.4173],
         [0.8104, 1.0805, 1.4025],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8249, 1.0953, 1.4173],
         [0.8104, 1.0805, 1.4025],
         [0.8101, 1.0802, 1.4022],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
457/730
After normalization, Min: -2.0665296676312472, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.0331, 1.1856, 1.4374],
         [1.0331, 1.1856, 1.4374],
         [1.0331, 1.1856, 1.4374],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0331, 1.1856, 1.4374],
         [1.0331, 1.1856, 1.4374],
         [1.0331, 1.1856, 1.4374],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0331, 1.1856, 1.4374],
         [1.0331, 1.1856, 1.4374],
         [1.0331, 1.1856, 1.4374],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[340.1000,   1.9000, 382.8500, 524.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.0331, 1.1856, 1.4374],
         [1.0331, 1.1856, 1.4374],
         [1.0331, 1.1856, 1.4374],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0331, 1.1856, 1.4374],
         [1.0331, 1.1856, 1.4374],
         [1.0331, 1.1856, 1.4374],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0331, 1.1856, 1.4374],
         [1.0331, 1.1856, 1.4374],
         [1.0331, 1.1856, 1.4374],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
458/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.0287,  0.3277,  0.8274],
         [-0.0287,  0.3277,  0.8274],
         [-0.0309,  0.3254,  0.8251],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0287,  0.3277,  0.8274],
         [-0.0288,  0.3276,  0.8273],
         [-0.0321,  0.3242,  0.8239],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0309,  0.3254,  0.8251],
         [-0.0321,  0.3242,  0.8239],
         [-0.0458,  0.3102,  0.8099],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[402.8000, 172.9000, 418.9500, 370.5000,   0.0000],
        [ 95.0000, 250.8000, 105.4500, 328.7000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.0287,  0.3277,  0.8274],
         [-0.0287,  0.3277,  0.8274],
         [-0.0309,  0.3254,  0.8251],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0287,  0.3277,  0.8274],
         [-0.0288,  0.3276,  0.8273],
         [-0.0321,  0.3242,  0.8239],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0309,  0.3254,  0.8251],
         [-0.0321,  0.3242,  0.8239],
         [-0.0458,  0.3102,  0.8099],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
459/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.0116,  0.5378,  1.1759],
         [-0.0116,  0.5378,  1.1759],
         [-0.0116,  0.5378,  1.1759],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0116,  0.5378,  1.1759],
         [-0.0116,  0.5378,  1.1759],
         [-0.0116,  0.5378,  1.1759],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0116,  0.5378,  1.1759],
         [-0.0116,  0.5378,  1.1759],
         [-0.0116,  0.5378,  1.1759],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[552.9000, 198.5500, 566.2000, 353.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.0116,  0.5378,  1.1759],
         [-0.0116,  0.5378,  1.1759],
         [-0.0116,  0.5378,  1.1759],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0116,  0.5378,  1.1759],
         [-0.0116,  0.5378,  1.1759],
         [-0.0116,  0.5378,  1.1759],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0116,  0.5378,  1.1759],
         [-0.0116,  0.5378,  1.1759],
         [-0.0116,  0.5378,  1.1759],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
460/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.5536, 0.8354, 1.8731],
         [0.5536, 0.8354, 1.8731],
         [0.5536, 0.8354, 1.8731],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5536, 0.8354, 1.8731],
         [0.5536, 0.8354, 1.8731],
         [0.5536, 0.8354, 1.8731],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5536, 0.8354, 1.8731],
         [0.5536, 0.8354, 1.8731],
         [0.5536, 0.8354, 1.8731],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[142.5000, 161.5000, 156.7500, 367.6500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.5536, 0.8354, 1.8731],
         [0.5536, 0.8354, 1.8731],
         [0.5536, 0.8354, 1.8731],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5536, 0.8354, 1.8731],
         [0.5536, 0.8354, 1.8731],
         [0.5536, 0.8354, 1.8731],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5536, 0.8354, 1.8731],
         [0.5536, 0.8354, 1.8731],
         [0.5536, 0.8354, 1.8731],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
461/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.0304, 1.2345, 1.3310],
         [0.9432, 1.1287, 1.2588],
         [0.8650, 1.0488, 1.1793],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0082, 1.1952, 1.3277],
         [1.0260, 1.2134, 1.3458],
         [1.0536, 1.2416, 1.3781],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9512, 1.1370, 1.3064],
         [0.9401, 1.1255, 1.2950],
         [0.9084, 1.0928, 1.2634],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[281.2000,  92.1500, 300.2000, 418.0000,   0.0000],
        [457.9000, 222.3000, 468.3500, 308.7500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.0304, 1.2345, 1.3310],
         [0.9432, 1.1287, 1.2588],
         [0.8650, 1.0488, 1.1793],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0082, 1.1952, 1.3277],
         [1.0260, 1.2134, 1.3458],
         [1.0536, 1.2416, 1.3781],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9512, 1.1370, 1.3064],
         [0.9401, 1.1255, 1.2950],
         [0.9084, 1.0928, 1.2634],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
462/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.5022, 0.7654, 1.1237],
         [0.5022, 0.7654, 1.1237],
         [0.5022, 0.7654, 1.1237],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5022, 0.7654, 1.1237],
         [0.5022, 0.7654, 1.1237],
         [0.5022, 0.7654, 1.1237],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5022, 0.7654, 1.1237],
         [0.5022, 0.7654, 1.1237],
         [0.5022, 0.7654, 1.1237],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[570.0000,   0.9500, 606.1000, 388.5500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.5022, 0.7654, 1.1237],
         [0.5022, 0.7654, 1.1237],
         [0.5022, 0.7654, 1.1237],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5022, 0.7654, 1.1237],
         [0.5022, 0.7654, 1.1237],
         [0.5022, 0.7654, 1.1237],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5022, 0.7654, 1.1237],
         [0.5022, 0.7654, 1.1237],
         [0.5022, 0.7654, 1.1237],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
463/730
After normalization, Min: -2.083654420442196, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.6901, 1.1326, 1.5241],
         [0.6734, 1.1155, 1.5071],
         [0.6712, 1.1132, 1.5048],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6901, 1.1326, 1.5241],
         [0.6734, 1.1155, 1.5071],
         [0.6712, 1.1132, 1.5048],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6901, 1.1326, 1.5241],
         [0.6734, 1.1155, 1.5071],
         [0.6712, 1.1132, 1.5048],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[563.3500, 259.3500, 581.4000, 333.4500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.6901, 1.1326, 1.5241],
         [0.6734, 1.1155, 1.5071],
         [0.6712, 1.1132, 1.5048],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6901, 1.1326, 1.5241],
         [0.6734, 1.1155, 1.5071],
         [0.6712, 1.1132, 1.5048],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6901, 1.1326, 1.5241],
         [0.6734, 1.1155, 1.5071],
         [0.6712, 1.1132, 1.5048],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
464/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.5707, 0.7304, 0.9842],
         [0.5707, 0.7304, 0.9842],
         [0.5707, 0.7304, 0.9842],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5707, 0.7304, 0.9842],
         [0.5707, 0.7304, 0.9842],
         [0.5707, 0.7304, 0.9842],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5729, 0.7327, 0.9865],
         [0.5729, 0.7327, 0.9865],
         [0.5729, 0.7327, 0.9865],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[300.2000, 115.9000, 323.0000, 368.6000,   0.0000],
        [509.2000, 219.4500, 517.7500, 340.1000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.5707, 0.7304, 0.9842],
         [0.5707, 0.7304, 0.9842],
         [0.5707, 0.7304, 0.9842],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5707, 0.7304, 0.9842],
         [0.5707, 0.7304, 0.9842],
         [0.5707, 0.7304, 0.9842],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5729, 0.7327, 0.9865],
         [0.5729, 0.7327, 0.9865],
         [0.5729, 0.7327, 0.9865],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
465/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.2282, 0.4153, 0.7228],
         [0.2282, 0.4152, 0.7228],
         [0.2255, 0.4126, 0.7201],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2268, 0.4139, 0.7214],
         [0.2256, 0.4126, 0.7201],
         [0.2109, 0.3976, 0.7052],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2088, 0.3955, 0.7031],
         [0.2088, 0.3955, 0.7031],
         [0.2069, 0.3935, 0.7011],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[326.8000, 110.2000, 350.5500, 368.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.2282, 0.4153, 0.7228],
         [0.2282, 0.4152, 0.7228],
         [0.2255, 0.4126, 0.7201],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2268, 0.4139, 0.7214],
         [0.2256, 0.4126, 0.7201],
         [0.2109, 0.3976, 0.7052],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2088, 0.3955, 0.7031],
         [0.2088, 0.3955, 0.7031],
         [0.2069, 0.3935, 0.7011],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
466/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.1083, 0.5903, 1.3851],
         [0.1065, 0.5885, 1.3833],
         [0.0912, 0.5728, 1.3677],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1052, 0.5871, 1.3819],
         [0.0899, 0.5716, 1.3664],
         [0.0912, 0.5728, 1.3677],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0741, 0.5553, 1.3502],
         [0.0752, 0.5565, 1.3514],
         [0.0892, 0.5708, 1.3657],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[507.3000,  81.7000, 539.6000, 428.4500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.1083, 0.5903, 1.3851],
         [0.1065, 0.5885, 1.3833],
         [0.0912, 0.5728, 1.3677],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1052, 0.5871, 1.3819],
         [0.0899, 0.5716, 1.3664],
         [0.0912, 0.5728, 1.3677],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0741, 0.5553, 1.3502],
         [0.0752, 0.5565, 1.3514],
         [0.0892, 0.5708, 1.3657],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
467/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.5207, 0.5908, 0.3760],
         [0.5206, 0.5552, 0.3956],
         [0.5192, 0.5382, 0.4279],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5760, 0.6474, 0.4323],
         [0.5679, 0.6050, 0.4385],
         [0.5165, 0.5502, 0.3934],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6400, 0.7128, 0.4920],
         [0.5798, 0.6172, 0.4165],
         [0.5032, 0.5369, 0.3753],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[463.6000, 213.7500, 484.5000, 346.7500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.5207, 0.5908, 0.3760],
         [0.5206, 0.5552, 0.3956],
         [0.5192, 0.5382, 0.4279],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5760, 0.6474, 0.4323],
         [0.5679, 0.6050, 0.4385],
         [0.5165, 0.5502, 0.3934],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6400, 0.7128, 0.4920],
         [0.5798, 0.6172, 0.4165],
         [0.5032, 0.5369, 0.3753],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
468/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.0673, 1.4132, 1.7337],
         [1.0673, 1.4132, 1.7337],
         [1.0673, 1.4132, 1.7337],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0673, 1.4132, 1.7337],
         [1.0673, 1.4132, 1.7337],
         [1.0673, 1.4132, 1.7337],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0696, 1.4155, 1.7360],
         [1.0696, 1.4155, 1.7360],
         [1.0696, 1.4155, 1.7360],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[271.7000, 236.5500, 285.9500, 336.3000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.0673, 1.4132, 1.7337],
         [1.0673, 1.4132, 1.7337],
         [1.0673, 1.4132, 1.7337],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0673, 1.4132, 1.7337],
         [1.0673, 1.4132, 1.7337],
         [1.0673, 1.4132, 1.7337],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0696, 1.4155, 1.7360],
         [1.0696, 1.4155, 1.7360],
         [1.0696, 1.4155, 1.7360],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
469/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.7591, 0.9755, 1.2108],
         [0.7591, 0.9755, 1.2108],
         [0.7591, 0.9755, 1.2108],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7591, 0.9755, 1.2108],
         [0.7591, 0.9755, 1.2108],
         [0.7591, 0.9755, 1.2108],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7591, 0.9755, 1.2108],
         [0.7591, 0.9755, 1.2108],
         [0.7591, 0.9755, 1.2108],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[364.8000, 112.1000, 398.0500, 351.5000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.7591, 0.9755, 1.2108],
         [0.7591, 0.9755, 1.2108],
         [0.7591, 0.9755, 1.2108],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7591, 0.9755, 1.2108],
         [0.7591, 0.9755, 1.2108],
         [0.7591, 0.9755, 1.2108],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7591, 0.9755, 1.2108],
         [0.7591, 0.9755, 1.2108],
         [0.7591, 0.9755, 1.2108],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
470/730
After normalization, Min: -2.0494049107533874, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.2385, 1.5182, 1.9080],
         [1.2385, 1.5182, 1.9080],
         [1.2385, 1.5159, 1.9103],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2372, 1.5168, 1.9066],
         [1.2372, 1.5168, 1.9066],
         [1.2372, 1.5145, 1.9089],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2192, 1.4984, 1.8883],
         [1.2192, 1.4984, 1.8883],
         [1.2192, 1.4961, 1.8905],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[235.6000, 170.0500, 255.5500, 370.5000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.2385, 1.5182, 1.9080],
         [1.2385, 1.5182, 1.9080],
         [1.2385, 1.5159, 1.9103],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2372, 1.5168, 1.9066],
         [1.2372, 1.5168, 1.9066],
         [1.2372, 1.5145, 1.9089],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2192, 1.4984, 1.8883],
         [1.2192, 1.4984, 1.8883],
         [1.2192, 1.4961, 1.8905],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
471/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.4166, 0.7479, 1.0017],
         [0.4166, 0.7479, 1.0017],
         [0.4143, 0.7456, 0.9994],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4166, 0.7479, 1.0017],
         [0.4166, 0.7479, 1.0017],
         [0.4145, 0.7458, 0.9995],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4188, 0.7502, 1.0039],
         [0.4186, 0.7500, 1.0038],
         [0.4166, 0.7479, 1.0017],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[237.5000, 162.4500, 251.7500, 352.4500,   0.0000],
        [308.7500, 173.8500, 323.9500, 342.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.4166, 0.7479, 1.0017],
         [0.4166, 0.7479, 1.0017],
         [0.4143, 0.7456, 0.9994],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4166, 0.7479, 1.0017],
         [0.4166, 0.7479, 1.0017],
         [0.4145, 0.7458, 0.9995],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4188, 0.7502, 1.0039],
         [0.4186, 0.7500, 1.0038],
         [0.4166, 0.7479, 1.0017],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
472/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.7077, 0.9230, 1.2980],
         [0.7077, 0.9230, 1.2980],
         [0.7054, 0.9207, 1.2957],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7077, 0.9230, 1.2980],
         [0.7077, 0.9230, 1.2980],
         [0.7054, 0.9207, 1.2957],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7077, 0.9230, 1.2980],
         [0.7077, 0.9230, 1.2980],
         [0.7054, 0.9207, 1.2957],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[314.4500, 111.1500, 339.1500, 408.5000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.7077, 0.9230, 1.2980],
         [0.7077, 0.9230, 1.2980],
         [0.7054, 0.9207, 1.2957],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7077, 0.9230, 1.2980],
         [0.7077, 0.9230, 1.2980],
         [0.7054, 0.9207, 1.2957],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7077, 0.9230, 1.2980],
         [0.7077, 0.9230, 1.2980],
         [0.7054, 0.9207, 1.2957],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
473/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.8845,  0.0831,  1.4553],
         [-0.8845,  0.0831,  1.4553],
         [-0.8845,  0.0831,  1.4553],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8664,  0.1015,  1.4736],
         [-0.8664,  0.1015,  1.4736],
         [-0.8664,  0.1015,  1.4736],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8484,  0.1200,  1.4920],
         [-0.8484,  0.1200,  1.4920],
         [-0.8484,  0.1200,  1.4920],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[379.0500, 236.5500, 387.6000, 321.1000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.8845,  0.0831,  1.4553],
         [-0.8845,  0.0831,  1.4553],
         [-0.8845,  0.0831,  1.4553],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8664,  0.1015,  1.4736],
         [-0.8664,  0.1015,  1.4736],
         [-0.8664,  0.1015,  1.4736],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8484,  0.1200,  1.4920],
         [-0.8484,  0.1200,  1.4920],
         [-0.8484,  0.1200,  1.4920],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
474/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.2282, 0.3978, 1.2805],
         [0.2282, 0.3978, 1.2805],
         [0.2282, 0.3978, 1.2805],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2282, 0.3978, 1.2805],
         [0.2282, 0.3978, 1.2805],
         [0.2282, 0.3978, 1.2805],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2282, 0.3978, 1.2805],
         [0.2282, 0.3978, 1.2805],
         [0.2282, 0.3978, 1.2805],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[156.7500, 103.5500, 178.6000, 285.9500,   0.0000],
        [135.8500,   5.7000, 159.6000, 101.6500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.2282, 0.3978, 1.2805],
         [0.2282, 0.3978, 1.2805],
         [0.2282, 0.3978, 1.2805],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2282, 0.3978, 1.2805],
         [0.2282, 0.3978, 1.2805],
         [0.2282, 0.3978, 1.2805],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2282, 0.3978, 1.2805],
         [0.2282, 0.3978, 1.2805],
         [0.2282, 0.3978, 1.2805],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
475/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[2.2489, 2.4286, 2.6400],
         [2.2489, 2.4286, 2.6400],
         [2.2489, 2.4286, 2.6400],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.2489, 2.4286, 2.6400],
         [2.2489, 2.4286, 2.6400],
         [2.2489, 2.4286, 2.6400],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.2489, 2.4286, 2.6400],
         [2.2489, 2.4286, 2.6400],
         [2.2489, 2.4286, 2.6400],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[422.7500, 198.5500, 435.1000, 350.5500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[2.2489, 2.4286, 2.6400],
         [2.2489, 2.4286, 2.6400],
         [2.2489, 2.4286, 2.6400],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.2489, 2.4286, 2.6400],
         [2.2489, 2.4286, 2.6400],
         [2.2489, 2.4286, 2.6400],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.2489, 2.4286, 2.6400],
         [2.2489, 2.4286, 2.6400],
         [2.2489, 2.4286, 2.6400],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
476/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.0458,  0.5378,  1.2282],
         [-0.0445,  0.5364,  1.2282],
         [-0.0287,  0.5203,  1.2282],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0458,  0.5378,  1.2282],
         [-0.0446,  0.5365,  1.2282],
         [-0.0299,  0.5215,  1.2282],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0458,  0.5378,  1.2282],
         [-0.0458,  0.5378,  1.2282],
         [-0.0439,  0.5358,  1.2282],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[189.0500, 216.6000, 199.5000, 260.3000,   0.0000],
        [258.4000, 257.4500, 272.6500, 332.5000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.0458,  0.5378,  1.2282],
         [-0.0445,  0.5364,  1.2282],
         [-0.0287,  0.5203,  1.2282],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0458,  0.5378,  1.2282],
         [-0.0446,  0.5365,  1.2282],
         [-0.0299,  0.5215,  1.2282],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0458,  0.5378,  1.2282],
         [-0.0458,  0.5378,  1.2282],
         [-0.0439,  0.5358,  1.2282],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
477/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.1263, 0.5913, 1.0723],
         [0.1263, 0.5912, 1.0723],
         [0.1259, 0.5908, 1.0764],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1637, 0.6267, 1.1090],
         [0.1624, 0.6254, 1.1076],
         [0.1464, 0.6090, 1.0956],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2178, 0.6497, 1.1479],
         [0.2142, 0.6461, 1.1443],
         [0.1959, 0.6274, 1.1257],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[544.3500, 204.2500, 557.6500, 308.7500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.1263, 0.5913, 1.0723],
         [0.1263, 0.5912, 1.0723],
         [0.1259, 0.5908, 1.0764],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1637, 0.6267, 1.1090],
         [0.1624, 0.6254, 1.1076],
         [0.1464, 0.6090, 1.0956],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2178, 0.6497, 1.1479],
         [0.2142, 0.6461, 1.1443],
         [0.1959, 0.6274, 1.1257],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
478/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.5639, 1.7283, 1.9777],
         [1.5639, 1.7283, 1.9777],
         [1.5617, 1.7260, 1.9754],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5639, 1.7283, 1.9777],
         [1.5639, 1.7283, 1.9777],
         [1.5617, 1.7260, 1.9754],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5639, 1.7283, 1.9777],
         [1.5639, 1.7283, 1.9777],
         [1.5617, 1.7260, 1.9754],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[401.8500, 163.4000, 414.2000, 326.8000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.5639, 1.7283, 1.9777],
         [1.5639, 1.7283, 1.9777],
         [1.5617, 1.7260, 1.9754],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5639, 1.7283, 1.9777],
         [1.5639, 1.7283, 1.9777],
         [1.5617, 1.7260, 1.9754],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5639, 1.7283, 1.9777],
         [1.5639, 1.7283, 1.9777],
         [1.5617, 1.7260, 1.9754],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
479/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[2.0948, 2.2710, 2.5180],
         [2.0948, 2.2710, 2.5180],
         [2.0925, 2.2687, 2.5157],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0948, 2.2710, 2.5180],
         [2.0948, 2.2710, 2.5180],
         [2.0925, 2.2687, 2.5157],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0948, 2.2710, 2.5180],
         [2.0948, 2.2710, 2.5180],
         [2.0925, 2.2687, 2.5157],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[240.3500, 158.6500, 247.9500, 388.5500,   0.0000],
        [165.3000, 234.6500, 178.6000, 359.1000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[2.0948, 2.2710, 2.5180],
         [2.0948, 2.2710, 2.5180],
         [2.0925, 2.2687, 2.5157],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0948, 2.2710, 2.5180],
         [2.0948, 2.2710, 2.5180],
         [2.0925, 2.2687, 2.5157],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0948, 2.2710, 2.5180],
         [2.0948, 2.2710, 2.5180],
         [2.0925, 2.2687, 2.5157],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
480/730
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.6096, -0.1086,  1.1076],
         [-0.5934, -0.0920,  1.1241],
         [-0.5912, -0.0897,  1.1264],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5753, -0.0735,  1.1425],
         [-0.5753, -0.0735,  1.1425],
         [-0.5753, -0.0735,  1.1425],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5550, -0.0528,  1.1631],
         [-0.5550, -0.0528,  1.1631],
         [-0.5553, -0.0531,  1.1628],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[386.6500, 140.6000, 406.6000, 400.9000,   0.0000],
        [182.4000, 202.3500, 196.6500, 334.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.6096, -0.1086,  1.1076],
         [-0.5934, -0.0920,  1.1241],
         [-0.5912, -0.0897,  1.1264],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5753, -0.0735,  1.1425],
         [-0.5753, -0.0735,  1.1425],
         [-0.5753, -0.0735,  1.1425],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5550, -0.0528,  1.1631],
         [-0.5550, -0.0528,  1.1631],
         [-0.5553, -0.0531,  1.1628],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
481/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.2874,  0.4484,  1.1915],
         [-0.3406,  0.3940,  1.1374],
         [-0.3637,  0.3658,  1.1116],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3058,  0.4296,  1.1701],
         [-0.3741,  0.3598,  1.1005],
         [-0.4222,  0.3062,  1.0493],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3139,  0.4236,  1.1274],
         [-0.3514,  0.3852,  1.0892],
         [-0.4316,  0.3013,  1.0056],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[292.6000, 267.9000, 298.3000, 322.0500,   0.0000],
        [395.2000, 268.8500, 408.5000, 327.7500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.2874,  0.4484,  1.1915],
         [-0.3406,  0.3940,  1.1374],
         [-0.3637,  0.3658,  1.1116],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3058,  0.4296,  1.1701],
         [-0.3741,  0.3598,  1.1005],
         [-0.4222,  0.3062,  1.0493],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3139,  0.4236,  1.1274],
         [-0.3514,  0.3852,  1.0892],
         [-0.4316,  0.3013,  1.0056],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
482/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[2.1461, 2.3235, 2.5703],
         [2.1457, 2.3231, 2.5698],
         [2.1435, 2.3208, 2.5676],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.1444, 2.3217, 2.5684],
         [2.1277, 2.3046, 2.5515],
         [2.1277, 2.3046, 2.5515],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.1264, 2.3033, 2.5502],
         [2.1117, 2.2883, 2.5352],
         [2.1097, 2.2862, 2.5331],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 76.9500,  94.0500, 107.3500, 519.6500,   0.0000],
        [139.6500,   5.7000, 165.3000, 104.5000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[2.1461, 2.3235, 2.5703],
         [2.1457, 2.3231, 2.5698],
         [2.1435, 2.3208, 2.5676],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.1444, 2.3217, 2.5684],
         [2.1277, 2.3046, 2.5515],
         [2.1277, 2.3046, 2.5515],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.1264, 2.3033, 2.5502],
         [2.1117, 2.2883, 2.5352],
         [2.1097, 2.2862, 2.5331],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
483/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.9308, 1.1335, 1.6470],
         [0.9308, 1.1335, 1.6470],
         [0.9308, 1.1335, 1.6470],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9488, 1.1519, 1.6653],
         [0.9488, 1.1519, 1.6653],
         [0.9488, 1.1519, 1.6653],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9668, 1.1704, 1.6837],
         [0.9668, 1.1704, 1.6837],
         [0.9668, 1.1704, 1.6837],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[339.1500, 203.3000, 348.6500, 342.9500,   0.0000],
        [172.9000, 188.1000, 186.2000, 332.5000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.9308, 1.1335, 1.6470],
         [0.9308, 1.1335, 1.6470],
         [0.9308, 1.1335, 1.6470],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9488, 1.1519, 1.6653],
         [0.9488, 1.1519, 1.6653],
         [0.9488, 1.1519, 1.6653],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9668, 1.1704, 1.6837],
         [0.9668, 1.1704, 1.6837],
         [0.9668, 1.1704, 1.6837],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
484/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.6118, -0.2159, -0.6716],
         [-0.6127, -0.2155, -0.6761],
         [-0.6349, -0.2274, -0.7381],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.6487, -0.2537, -0.6761],
         [-0.6308, -0.2379, -0.6969],
         [-0.6392, -0.2618, -0.7552],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.7024, -0.3135, -0.7333],
         [-0.6685, -0.2940, -0.7437],
         [-0.6648, -0.2985, -0.7610],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[365.7500, 207.1000, 373.3500, 319.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.6118, -0.2159, -0.6716],
         [-0.6127, -0.2155, -0.6761],
         [-0.6349, -0.2274, -0.7381],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.6487, -0.2537, -0.6761],
         [-0.6308, -0.2379, -0.6969],
         [-0.6392, -0.2618, -0.7552],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.7024, -0.3135, -0.7333],
         [-0.6685, -0.2940, -0.7437],
         [-0.6648, -0.2985, -0.7610],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
485/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.8155, -0.8443, -1.2458],
         [-0.7781, -0.8061, -1.2078],
         [-0.7263, -0.7531, -1.1577],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8129, -0.8416, -1.2445],
         [-0.7769, -0.8048, -1.2093],
         [-0.7265, -0.7533, -1.1753],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.7795, -0.8075, -1.2311],
         [-0.7603, -0.7876, -1.2143],
         [-0.7288, -0.7534, -1.2144],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[355.3000,   0.9500, 385.7000, 311.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.8155, -0.8443, -1.2458],
         [-0.7781, -0.8061, -1.2078],
         [-0.7263, -0.7531, -1.1577],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8129, -0.8416, -1.2445],
         [-0.7769, -0.8048, -1.2093],
         [-0.7265, -0.7533, -1.1753],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.7795, -0.8075, -1.2311],
         [-0.7603, -0.7876, -1.2143],
         [-0.7288, -0.7534, -1.2144],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
486/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.8208, 1.9559, 2.2566],
         [1.8208, 1.9559, 2.2566],
         [1.8185, 1.9536, 2.2543],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8208, 1.9559, 2.2566],
         [1.8208, 1.9559, 2.2566],
         [1.8185, 1.9536, 2.2543],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8208, 1.9559, 2.2566],
         [1.8208, 1.9559, 2.2566],
         [1.8185, 1.9536, 2.2543],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[378.1000,  89.3000, 391.4000, 324.9000,   0.0000],
        [403.7500,  98.8000, 416.1000, 328.7000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.8208, 1.9559, 2.2566],
         [1.8208, 1.9559, 2.2566],
         [1.8185, 1.9536, 2.2543],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8208, 1.9559, 2.2566],
         [1.8208, 1.9559, 2.2566],
         [1.8185, 1.9536, 2.2543],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8208, 1.9559, 2.2566],
         [1.8208, 1.9559, 2.2566],
         [1.8185, 1.9536, 2.2543],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
487/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.1529, 1.4657, 2.2566],
         [1.1529, 1.4657, 2.2566],
         [1.1552, 1.4680, 2.2589],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1529, 1.4657, 2.2566],
         [1.1529, 1.4657, 2.2566],
         [1.1550, 1.4678, 2.2587],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1507, 1.4634, 2.2543],
         [1.1508, 1.4636, 2.2544],
         [1.1529, 1.4657, 2.2566],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[121.6000,  78.8500, 138.7000, 299.2500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.1529, 1.4657, 2.2566],
         [1.1529, 1.4657, 2.2566],
         [1.1552, 1.4680, 2.2589],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1529, 1.4657, 2.2566],
         [1.1529, 1.4657, 2.2566],
         [1.1550, 1.4678, 2.2587],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1507, 1.4634, 2.2543],
         [1.1508, 1.4636, 2.2544],
         [1.1529, 1.4657, 2.2566],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
488/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.6049, 0.8354, 0.9494],
         [0.6049, 0.8354, 0.9494],
         [0.6049, 0.8354, 0.9494],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6063, 0.8368, 0.9494],
         [0.6063, 0.8368, 0.9495],
         [0.6063, 0.8368, 0.9507],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6243, 0.8552, 0.9517],
         [0.6243, 0.8552, 0.9529],
         [0.6243, 0.8552, 0.9671],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[284.0500, 109.2500, 300.2000, 409.4500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.6049, 0.8354, 0.9494],
         [0.6049, 0.8354, 0.9494],
         [0.6049, 0.8354, 0.9494],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6063, 0.8368, 0.9494],
         [0.6063, 0.8368, 0.9495],
         [0.6063, 0.8368, 0.9507],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6243, 0.8552, 0.9517],
         [0.6243, 0.8552, 0.9529],
         [0.6243, 0.8552, 0.9671],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
489/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.2385, 1.8859, 2.1694],
         [1.2385, 1.8859, 2.1694],
         [1.2385, 1.8859, 2.1694],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2385, 1.8859, 2.1694],
         [1.2385, 1.8859, 2.1694],
         [1.2385, 1.8859, 2.1694],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2340, 1.8836, 2.1671],
         [1.2340, 1.8836, 2.1671],
         [1.2340, 1.8836, 2.1671],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[417.0500, 136.8000, 427.5000, 318.2500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.2385, 1.8859, 2.1694],
         [1.2385, 1.8859, 2.1694],
         [1.2385, 1.8859, 2.1694],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2385, 1.8859, 2.1694],
         [1.2385, 1.8859, 2.1694],
         [1.2385, 1.8859, 2.1694],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2340, 1.8836, 2.1671],
         [1.2340, 1.8836, 2.1671],
         [1.2340, 1.8836, 2.1671],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
490/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.8276, 1.0105, 1.4374],
         [0.8276, 1.0105, 1.4374],
         [0.8276, 1.0105, 1.4374],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8276, 1.0105, 1.4374],
         [0.8276, 1.0105, 1.4374],
         [0.8276, 1.0105, 1.4374],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8276, 1.0105, 1.4374],
         [0.8276, 1.0105, 1.4374],
         [0.8276, 1.0105, 1.4374],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[186.2000,   2.8500, 235.6000, 547.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.8276, 1.0105, 1.4374],
         [0.8276, 1.0105, 1.4374],
         [0.8276, 1.0105, 1.4374],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8276, 1.0105, 1.4374],
         [0.8276, 1.0105, 1.4374],
         [0.8276, 1.0105, 1.4374],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8276, 1.0105, 1.4374],
         [0.8276, 1.0105, 1.4374],
         [0.8276, 1.0105, 1.4374],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
491/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.3882, 0.5088, 1.4956],
         [0.2625, 0.3790, 1.3704],
         [0.1528, 0.2511, 1.2900],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7398, 0.8683, 1.8508],
         [0.6386, 0.7648, 1.7478],
         [0.5590, 0.6834, 1.6671],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9399, 1.0729, 2.0178],
         [0.9112, 1.0435, 1.9889],
         [0.8840, 1.0157, 1.9694],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[386.6500, 106.4000, 405.6500, 331.5500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.3882, 0.5088, 1.4956],
         [0.2625, 0.3790, 1.3704],
         [0.1528, 0.2511, 1.2900],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7398, 0.8683, 1.8508],
         [0.6386, 0.7648, 1.7478],
         [0.5590, 0.6834, 1.6671],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9399, 1.0729, 2.0178],
         [0.9112, 1.0435, 1.9889],
         [0.8840, 1.0157, 1.9694],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
492/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.6563, 1.1331, 1.4722],
         [0.6563, 1.1317, 1.4750],
         [0.6563, 1.1155, 1.5071],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6563, 1.1331, 1.4722],
         [0.6563, 1.1317, 1.4750],
         [0.6563, 1.1155, 1.5071],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6563, 1.1331, 1.4722],
         [0.6563, 1.1317, 1.4750],
         [0.6563, 1.1155, 1.5071],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[445.5500,  62.7000, 486.4000, 400.9000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.6563, 1.1331, 1.4722],
         [0.6563, 1.1317, 1.4750],
         [0.6563, 1.1155, 1.5071],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6563, 1.1331, 1.4722],
         [0.6563, 1.1317, 1.4750],
         [0.6563, 1.1155, 1.5071],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6563, 1.1331, 1.4722],
         [0.6563, 1.1317, 1.4750],
         [0.6563, 1.1155, 1.5071],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
493/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.8344, -0.7586, -0.8990],
         [-0.8494, -0.7739, -0.9142],
         [-0.8294, -0.7535, -0.8939],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8521, -0.7766, -0.9170],
         [-0.8533, -0.7779, -0.9182],
         [-0.8454, -0.7699, -0.9102],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8705, -0.7955, -0.9357],
         [-0.8860, -0.8113, -0.9515],
         [-0.8678, -0.7927, -0.9330],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[ 84.5500,  78.8500, 127.3000, 470.2500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.8344, -0.7586, -0.8990],
         [-0.8494, -0.7739, -0.9142],
         [-0.8294, -0.7535, -0.8939],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8521, -0.7766, -0.9170],
         [-0.8533, -0.7779, -0.9182],
         [-0.8454, -0.7699, -0.9102],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8705, -0.7955, -0.9357],
         [-0.8860, -0.8113, -0.9515],
         [-0.8678, -0.7927, -0.9330],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
494/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-1.0571, -1.2313, -0.7770],
         [-1.0932, -1.2695, -0.8111],
         [-1.1322, -1.3175, -0.8140],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.0584, -1.2285, -0.7784],
         [-1.0971, -1.2656, -0.8150],
         [-1.1591, -1.3002, -0.8416],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.0743, -1.1918, -0.7945],
         [-1.1137, -1.2334, -0.8321],
         [-1.1612, -1.2935, -0.8475],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[451.2500, 112.1000, 470.2500, 355.3000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-1.0571, -1.2313, -0.7770],
         [-1.0932, -1.2695, -0.8111],
         [-1.1322, -1.3175, -0.8140],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.0584, -1.2285, -0.7784],
         [-1.0971, -1.2656, -0.8150],
         [-1.1591, -1.3002, -0.8416],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.0743, -1.1918, -0.7945],
         [-1.1137, -1.2334, -0.8321],
         [-1.1612, -1.2935, -0.8475],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
495/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.3369,  0.3978,  1.2805],
         [-0.3352,  0.3996,  1.2823],
         [-0.3176,  0.4176,  1.3002],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3365,  0.3982,  1.2809],
         [-0.3210,  0.4140,  1.2967],
         [-0.3177,  0.4174,  1.3001],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3392,  0.3932,  1.2736],
         [-0.3378,  0.3945,  1.2752],
         [-0.3218,  0.4110,  1.2937],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[ 50.3500,  41.8000,  74.1000, 477.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.3369,  0.3978,  1.2805],
         [-0.3352,  0.3996,  1.2823],
         [-0.3176,  0.4176,  1.3002],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3365,  0.3982,  1.2809],
         [-0.3210,  0.4140,  1.2967],
         [-0.3177,  0.4174,  1.3001],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3392,  0.3932,  1.2736],
         [-0.3378,  0.3945,  1.2752],
         [-0.3218,  0.4110,  1.2937],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
496/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.9510, 1.1017, 1.3539],
         [1.0091, 1.1611, 1.4130],
         [1.1168, 1.2712, 1.5226],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0452, 1.1980, 1.4497],
         [1.1005, 1.2546, 1.5061],
         [1.1891, 1.3451, 1.5962],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1844, 1.3403, 1.5914],
         [1.2206, 1.3773, 1.6283],
         [1.2863, 1.4445, 1.6952],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[136.8000, 145.3500, 152.0000, 282.1500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.9510, 1.1017, 1.3539],
         [1.0091, 1.1611, 1.4130],
         [1.1168, 1.2712, 1.5226],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0452, 1.1980, 1.4497],
         [1.1005, 1.2546, 1.5061],
         [1.1891, 1.3451, 1.5962],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1844, 1.3403, 1.5914],
         [1.2206, 1.3773, 1.6283],
         [1.2863, 1.4445, 1.6952],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
497/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.2346,  0.2222,  1.1406],
         [-0.2346,  0.2222,  1.1406],
         [-0.2324,  0.2245,  1.1429],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2540,  0.2024,  1.1237],
         [-0.2539,  0.2025,  1.1236],
         [-0.2504,  0.2061,  1.1246],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2878,  0.1679,  1.1214],
         [-0.2865,  0.1692,  1.1204],
         [-0.2684,  0.1877,  1.1108],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[285.0000, 133.0000, 300.2000, 380.9500,   0.0000],
        [376.2000, 248.9000, 384.7500, 317.3000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.2346,  0.2222,  1.1406],
         [-0.2346,  0.2222,  1.1406],
         [-0.2324,  0.2245,  1.1429],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2540,  0.2024,  1.1237],
         [-0.2539,  0.2025,  1.1236],
         [-0.2504,  0.2061,  1.1246],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2878,  0.1679,  1.1214],
         [-0.2865,  0.1692,  1.1204],
         [-0.2684,  0.1877,  1.1108],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
498/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.7699, 1.9213, 2.4139],
         [1.7865, 1.9384, 2.4308],
         [1.7888, 1.9407, 2.4331],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7698, 1.9213, 2.4138],
         [1.7853, 1.9371, 2.4296],
         [1.7886, 1.9405, 2.4330],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7672, 1.9186, 2.4112],
         [1.7708, 1.9223, 2.4148],
         [1.7865, 1.9384, 2.4308],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 62.7000,  77.9000,  89.3000, 528.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.7699, 1.9213, 2.4139],
         [1.7865, 1.9384, 2.4308],
         [1.7888, 1.9407, 2.4331],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7698, 1.9213, 2.4138],
         [1.7853, 1.9371, 2.4296],
         [1.7886, 1.9405, 2.4330],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7672, 1.9186, 2.4112],
         [1.7708, 1.9223, 2.4148],
         [1.7865, 1.9384, 2.4308],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
499/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.3755, 1.4657, 1.6640],
         [1.3742, 1.4643, 1.6626],
         [1.3588, 1.4486, 1.6469],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3769, 1.4671, 1.6653],
         [1.3768, 1.4670, 1.6652],
         [1.3735, 1.4636, 1.6619],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3949, 1.4854, 1.6836],
         [1.3915, 1.4820, 1.6802],
         [1.3778, 1.4680, 1.6663],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 74.1000,  69.3500,  91.2000, 398.0500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.3755, 1.4657, 1.6640],
         [1.3742, 1.4643, 1.6626],
         [1.3588, 1.4486, 1.6469],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3769, 1.4671, 1.6653],
         [1.3768, 1.4670, 1.6652],
         [1.3735, 1.4636, 1.6619],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3949, 1.4854, 1.6836],
         [1.3915, 1.4820, 1.6802],
         [1.3778, 1.4680, 1.6663],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
500/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[2.0948, 2.2710, 2.5180],
         [2.0948, 2.2710, 2.5180],
         [2.0948, 2.2710, 2.5180],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0948, 2.2710, 2.5180],
         [2.0948, 2.2710, 2.5180],
         [2.0948, 2.2710, 2.5180],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0970, 2.2733, 2.5203],
         [2.0970, 2.2733, 2.5203],
         [2.0970, 2.2733, 2.5203],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[271.7000, 133.0000, 282.1500, 236.5500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[2.0948, 2.2710, 2.5180],
         [2.0948, 2.2710, 2.5180],
         [2.0948, 2.2710, 2.5180],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0948, 2.2710, 2.5180],
         [2.0948, 2.2710, 2.5180],
         [2.0948, 2.2710, 2.5180],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0970, 2.2733, 2.5203],
         [2.0970, 2.2733, 2.5203],
         [2.0970, 2.2733, 2.5203],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
501/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[2.0254, 2.1826, 2.3254],
         [2.0452, 2.2028, 2.3455],
         [2.0813, 2.2397, 2.3823],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.9704, 2.1263, 2.2722],
         [2.0066, 2.1633, 2.3090],
         [2.0461, 2.2037, 2.3492],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.9027, 2.0572, 2.2354],
         [1.9380, 2.0932, 2.2712],
         [1.9923, 2.1488, 2.3266],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[269.8000, 114.0000, 284.0500, 367.6500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[2.0254, 2.1826, 2.3254],
         [2.0452, 2.2028, 2.3455],
         [2.0813, 2.2397, 2.3823],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.9704, 2.1263, 2.2722],
         [2.0066, 2.1633, 2.3090],
         [2.0461, 2.2037, 2.3492],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.9027, 2.0572, 2.2354],
         [1.9380, 2.0932, 2.2712],
         [1.9923, 2.1488, 2.3266],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
502/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.3656, 0.7484, 1.4727],
         [0.3823, 0.7654, 1.4897],
         [0.3846, 0.7677, 1.4920],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3656, 0.7484, 1.4727],
         [0.3823, 0.7654, 1.4897],
         [0.3846, 0.7677, 1.4920],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3656, 0.7484, 1.4727],
         [0.3823, 0.7654, 1.4897],
         [0.3846, 0.7677, 1.4920],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[217.5500, 114.9500, 240.3500, 468.3500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.3656, 0.7484, 1.4727],
         [0.3823, 0.7654, 1.4897],
         [0.3846, 0.7677, 1.4920],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3656, 0.7484, 1.4727],
         [0.3823, 0.7654, 1.4897],
         [0.3846, 0.7677, 1.4920],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3656, 0.7484, 1.4727],
         [0.3823, 0.7654, 1.4897],
         [0.3846, 0.7677, 1.4920],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
503/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.3413, 1.8683, 2.1346],
         [1.3426, 1.8669, 2.1345],
         [1.3558, 1.8481, 2.1319],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3399, 1.8670, 2.1332],
         [1.3399, 1.8642, 2.1318],
         [1.3399, 1.8320, 2.1157],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3219, 1.8485, 2.1148],
         [1.3219, 1.8458, 2.1135],
         [1.3219, 1.8135, 2.0974],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[495.9000,  98.8000, 541.5000, 369.5500,   0.0000],
        [546.2500,   4.7500, 579.5000,  92.1500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.3413, 1.8683, 2.1346],
         [1.3426, 1.8669, 2.1345],
         [1.3558, 1.8481, 2.1319],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3399, 1.8670, 2.1332],
         [1.3399, 1.8642, 2.1318],
         [1.3399, 1.8320, 2.1157],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3219, 1.8485, 2.1148],
         [1.3219, 1.8458, 2.1135],
         [1.3219, 1.8135, 2.0974],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
504/730
After normalization, Min: -2.0494049107533874, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.8893, 2.0259, 2.3263],
         [1.8893, 2.0259, 2.3263],
         [1.8893, 2.0259, 2.3263],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8893, 2.0259, 2.3263],
         [1.8893, 2.0259, 2.3263],
         [1.8893, 2.0259, 2.3263],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8915, 2.0282, 2.3286],
         [1.8915, 2.0282, 2.3286],
         [1.8915, 2.0282, 2.3286],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[275.5000, 169.1000, 286.9000, 321.1000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.8893, 2.0259, 2.3263],
         [1.8893, 2.0259, 2.3263],
         [1.8893, 2.0259, 2.3263],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8893, 2.0259, 2.3263],
         [1.8893, 2.0259, 2.3263],
         [1.8893, 2.0259, 2.3263],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8915, 2.0282, 2.3286],
         [1.8915, 2.0282, 2.3286],
         [1.8915, 2.0282, 2.3286],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
505/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-1.1760, -0.1800,  1.1934],
         [-1.1760, -0.1800,  1.1934],
         [-1.1760, -0.1800,  1.1934],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.1760, -0.1800,  1.1934],
         [-1.1760, -0.1800,  1.1934],
         [-1.1760, -0.1800,  1.1934],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.1738, -0.1777,  1.1957],
         [-1.1738, -0.1777,  1.1957],
         [-1.1738, -0.1777,  1.1957],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[345.8000,  95.0000, 374.3000, 391.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-1.1760, -0.1800,  1.1934],
         [-1.1760, -0.1800,  1.1934],
         [-1.1760, -0.1800,  1.1934],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.1760, -0.1800,  1.1934],
         [-1.1760, -0.1800,  1.1934],
         [-1.1760, -0.1800,  1.1934],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.1738, -0.1777,  1.1957],
         [-1.1738, -0.1777,  1.1957],
         [-1.1738, -0.1777,  1.1957],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
506/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.5193, 1.0280, 1.5420],
         [0.5193, 1.0280, 1.5420],
         [0.5193, 1.0280, 1.5420],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5193, 1.0280, 1.5420],
         [0.5193, 1.0280, 1.5420],
         [0.5193, 1.0280, 1.5420],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5193, 1.0280, 1.5420],
         [0.5193, 1.0280, 1.5420],
         [0.5193, 1.0280, 1.5420],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[247.9500, 156.7500, 263.1500, 334.4000,   0.0000],
        [581.4000, 272.6500, 589.9500, 314.4500,   0.0000],
        [595.6500, 266.0000, 601.3500, 311.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.5193, 1.0280, 1.5420],
         [0.5193, 1.0280, 1.5420],
         [0.5193, 1.0280, 1.5420],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5193, 1.0280, 1.5420],
         [0.5193, 1.0280, 1.5420],
         [0.5193, 1.0280, 1.5420],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5193, 1.0280, 1.5420],
         [0.5193, 1.0280, 1.5420],
         [0.5193, 1.0280, 1.5420],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
507/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.5707, 0.7304, 0.9842],
         [0.5707, 0.7304, 0.9842],
         [0.5707, 0.7304, 0.9842],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5707, 0.7304, 0.9842],
         [0.5707, 0.7304, 0.9842],
         [0.5707, 0.7304, 0.9842],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5707, 0.7304, 0.9842],
         [0.5707, 0.7304, 0.9842],
         [0.5707, 0.7304, 0.9842],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[295.4500,  72.2000, 321.1000, 390.4500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.5707, 0.7304, 0.9842],
         [0.5707, 0.7304, 0.9842],
         [0.5707, 0.7304, 0.9842],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5707, 0.7304, 0.9842],
         [0.5707, 0.7304, 0.9842],
         [0.5707, 0.7304, 0.9842],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5707, 0.7304, 0.9842],
         [0.5707, 0.7304, 0.9842],
         [0.5707, 0.7304, 0.9842],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
508/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.1182, 1.5002, 2.2735],
         [1.1015, 1.4832, 2.2566],
         [1.0993, 1.4809, 2.2543],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1182, 1.5002, 2.2735],
         [1.1015, 1.4832, 2.2566],
         [1.0993, 1.4809, 2.2543],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1182, 1.5002, 2.2735],
         [1.1015, 1.4832, 2.2566],
         [1.0993, 1.4809, 2.2543],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 54.1500,  70.3000, 104.5000, 513.9500,   0.0000],
        [308.7500, 218.5000, 317.3000, 290.7000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.1182, 1.5002, 2.2735],
         [1.1015, 1.4832, 2.2566],
         [1.0993, 1.4809, 2.2543],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1182, 1.5002, 2.2735],
         [1.1015, 1.4832, 2.2566],
         [1.0993, 1.4809, 2.2543],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1182, 1.5002, 2.2735],
         [1.1015, 1.4832, 2.2566],
         [1.0993, 1.4809, 2.2543],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
509/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.5253,  0.0126,  1.0714],
         [-0.5253,  0.0126,  1.0714],
         [-0.5253,  0.0126,  1.0714],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5239,  0.0140,  1.0727],
         [-0.5239,  0.0140,  1.0727],
         [-0.5239,  0.0140,  1.0727],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5059,  0.0324,  1.0911],
         [-0.5059,  0.0324,  1.0911],
         [-0.5059,  0.0324,  1.0911],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[382.8500, 109.2500, 411.3500, 497.8000,   0.0000],
        [188.1000, 246.0500, 200.4500, 320.1500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.5253,  0.0126,  1.0714],
         [-0.5253,  0.0126,  1.0714],
         [-0.5253,  0.0126,  1.0714],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5239,  0.0140,  1.0727],
         [-0.5239,  0.0140,  1.0727],
         [-0.5239,  0.0140,  1.0727],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5059,  0.0324,  1.0911],
         [-0.5059,  0.0324,  1.0911],
         [-0.5059,  0.0324,  1.0911],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
510/730
After normalization, Min: -2.1179039301310043, Max: 2.6051416142781574
Checking data:  {'img': tensor([[[0.6221, 0.9405, 1.1759],
         [0.6221, 0.9405, 1.1759],
         [0.6221, 0.9405, 1.1759],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6221, 0.9405, 1.1759],
         [0.6221, 0.9405, 1.1759],
         [0.6221, 0.9405, 1.1759],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6221, 0.9405, 1.1759],
         [0.6221, 0.9405, 1.1759],
         [0.6221, 0.9405, 1.1759],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[300.2000, 162.4500, 316.3500, 372.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.6221, 0.9405, 1.1759],
         [0.6221, 0.9405, 1.1759],
         [0.6221, 0.9405, 1.1759],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6221, 0.9405, 1.1759],
         [0.6221, 0.9405, 1.1759],
         [0.6221, 0.9405, 1.1759],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6221, 0.9405, 1.1759],
         [0.6221, 0.9405, 1.1759],
         [0.6221, 0.9405, 1.1759],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
511/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[ 0.1764,  0.9926,  0.8444],
         [-0.4878,  0.3135,  0.1683],
         [-1.0837, -0.2984, -0.4408],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.1391,  0.9531,  0.8050],
         [-0.4667,  0.3324,  0.1872],
         [-1.0129, -0.2413, -0.3839],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0512,  0.8447,  0.7041],
         [-0.4667,  0.3147,  0.1766],
         [-0.9222, -0.1633, -0.2952],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[127.3000, 100.7000, 153.9000, 518.7000,   0.0000],
        [229.9000,   3.8000, 272.6500, 125.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[ 0.1764,  0.9926,  0.8444],
         [-0.4878,  0.3135,  0.1683],
         [-1.0837, -0.2984, -0.4408],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.1391,  0.9531,  0.8050],
         [-0.4667,  0.3324,  0.1872],
         [-1.0129, -0.2413, -0.3839],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0512,  0.8447,  0.7041],
         [-0.4667,  0.3147,  0.1766],
         [-0.9222, -0.1633, -0.2952],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
512/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.6225, 1.3261, 2.2570],
         [0.6419, 1.3459, 2.2767],
         [0.6779, 1.3828, 2.3134],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6212, 1.3247, 2.2556],
         [0.6405, 1.3445, 2.2754],
         [0.6766, 1.3814, 2.3121],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6031, 1.3063, 2.2373],
         [0.6225, 1.3261, 2.2570],
         [0.6586, 1.3629, 2.2937],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 92.1500, 143.4500, 105.4500, 382.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.6225, 1.3261, 2.2570],
         [0.6419, 1.3459, 2.2767],
         [0.6779, 1.3828, 2.3134],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6212, 1.3247, 2.2556],
         [0.6405, 1.3445, 2.2754],
         [0.6766, 1.3814, 2.3121],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6031, 1.3063, 2.2373],
         [0.6225, 1.3261, 2.2570],
         [0.6586, 1.3629, 2.2937],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
513/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.5887, 0.7838, 1.0897],
         [0.6050, 0.8005, 1.1063],
         [0.6076, 0.8031, 1.1089],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6063, 0.8018, 1.1076],
         [0.6076, 0.8032, 1.1090],
         [0.6234, 0.8193, 1.1250],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6244, 0.8226, 1.1237],
         [0.6279, 0.8262, 1.1273],
         [0.6437, 0.8423, 1.1434],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[564.3000,  31.3500, 595.6500, 303.0500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.5887, 0.7838, 1.0897],
         [0.6050, 0.8005, 1.1063],
         [0.6076, 0.8031, 1.1089],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6063, 0.8018, 1.1076],
         [0.6076, 0.8032, 1.1090],
         [0.6234, 0.8193, 1.1250],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6244, 0.8226, 1.1237],
         [0.6279, 0.8262, 1.1273],
         [0.6437, 0.8423, 1.1434],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
514/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.1810,  0.3471,  0.8815],
         [-0.1446,  0.3843,  0.9185],
         [-0.0920,  0.4381,  0.9721],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1365,  0.3899,  0.9227],
         [-0.1395,  0.3867,  0.9196],
         [-0.1450,  0.3811,  0.9140],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0294,  0.5272,  1.0433],
         [-0.0117,  0.4851,  1.0015],
         [-0.0840,  0.4113,  0.9280],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[560.5000,  38.9500, 594.7000, 444.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.1810,  0.3471,  0.8815],
         [-0.1446,  0.3843,  0.9185],
         [-0.0920,  0.4381,  0.9721],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1365,  0.3899,  0.9227],
         [-0.1395,  0.3867,  0.9196],
         [-0.1450,  0.3811,  0.9140],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0294,  0.5272,  1.0433],
         [-0.0117,  0.4851,  1.0015],
         [-0.0840,  0.4113,  0.9280],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
515/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.7866, 0.7410, 1.0296],
         [0.5387, 0.4876, 0.7774],
         [0.3808, 0.3239, 0.6144],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7690, 0.7231, 1.0118],
         [0.5399, 0.4889, 0.7786],
         [0.3737, 0.3166, 0.6071],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7543, 0.7080, 0.9968],
         [0.5610, 0.5105, 0.8001],
         [0.3708, 0.3136, 0.6042],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[563.3500, 161.5000, 582.3500, 376.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.7866, 0.7410, 1.0296],
         [0.5387, 0.4876, 0.7774],
         [0.3808, 0.3239, 0.6144],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7690, 0.7231, 1.0118],
         [0.5399, 0.4889, 0.7786],
         [0.3737, 0.3166, 0.6071],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7543, 0.7080, 0.9968],
         [0.5610, 0.5105, 0.8001],
         [0.3708, 0.3136, 0.6042],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
516/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.2171,  0.4328,  1.1062],
         [-0.2171,  0.4328,  1.1062],
         [-0.2171,  0.4328,  1.1062],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2171,  0.4328,  1.1062],
         [-0.2171,  0.4328,  1.1062],
         [-0.2171,  0.4328,  1.1062],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2148,  0.4351,  1.1085],
         [-0.2148,  0.4351,  1.1085],
         [-0.2148,  0.4351,  1.1085],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[  9.5000,  59.8500,  49.4000, 410.4000,   0.0000],
        [513.9500, 237.5000, 522.5000, 332.5000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.2171,  0.4328,  1.1062],
         [-0.2171,  0.4328,  1.1062],
         [-0.2171,  0.4328,  1.1062],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2171,  0.4328,  1.1062],
         [-0.2171,  0.4328,  1.1062],
         [-0.2171,  0.4328,  1.1062],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2148,  0.4351,  1.1085],
         [-0.2148,  0.4351,  1.1085],
         [-0.2148,  0.4351,  1.1085],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
517/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-1.2950, -0.8968, -1.4545],
         [-1.2774, -0.8789, -1.4352],
         [-1.2594, -0.8605, -1.3958],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.2788, -0.8802, -1.4182],
         [-1.2762, -0.8777, -1.4129],
         [-1.2594, -0.8639, -1.3594],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.2761, -0.8799, -1.3789],
         [-1.2615, -0.8661, -1.3612],
         [-1.2572, -0.8756, -1.3247],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[ 33.2500,  52.2500,  82.6500, 467.4000,   0.0000],
        [ 90.2500,   2.8500, 111.1500,  56.0500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-1.2950, -0.8968, -1.4545],
         [-1.2774, -0.8789, -1.4352],
         [-1.2594, -0.8605, -1.3958],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.2788, -0.8802, -1.4182],
         [-1.2762, -0.8777, -1.4129],
         [-1.2594, -0.8639, -1.3594],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.2761, -0.8799, -1.3789],
         [-1.2615, -0.8661, -1.3612],
         [-1.2572, -0.8756, -1.3247],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
518/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.8789, 1.0980, 1.3328],
         [0.8789, 1.0980, 1.3328],
         [0.8789, 1.0980, 1.3328],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8789, 1.0980, 1.3328],
         [0.8789, 1.0980, 1.3328],
         [0.8789, 1.0980, 1.3328],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8767, 1.0957, 1.3305],
         [0.8767, 1.0957, 1.3305],
         [0.8767, 1.0957, 1.3305],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 49.4000,  84.5500,  91.2000, 377.1500,   0.0000],
        [165.3000, 204.2500, 174.8000, 340.1000,   0.0000],
        [318.2500, 229.9000, 335.3500, 330.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.8789, 1.0980, 1.3328],
         [0.8789, 1.0980, 1.3328],
         [0.8789, 1.0980, 1.3328],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8789, 1.0980, 1.3328],
         [0.8789, 1.0980, 1.3328],
         [0.8789, 1.0980, 1.3328],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8767, 1.0957, 1.3305],
         [0.8767, 1.0957, 1.3305],
         [0.8767, 1.0957, 1.3305],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
519/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.3070, 1.6232, 1.9603],
         [1.3070, 1.6232, 1.9603],
         [1.3070, 1.6232, 1.9603],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3057, 1.6219, 1.9589],
         [1.3057, 1.6219, 1.9589],
         [1.3057, 1.6219, 1.9589],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2854, 1.6057, 1.9405],
         [1.2854, 1.6057, 1.9405],
         [1.2854, 1.6057, 1.9405],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[419.9000, 123.5000, 447.4500, 451.2500,   0.0000],
        [337.2500, 230.8500, 344.8500, 312.5500,   0.0000],
        [472.1500,   1.9000, 513.9500,  97.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.3070, 1.6232, 1.9603],
         [1.3070, 1.6232, 1.9603],
         [1.3070, 1.6232, 1.9603],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3057, 1.6219, 1.9589],
         [1.3057, 1.6219, 1.9589],
         [1.3057, 1.6219, 1.9589],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2854, 1.6057, 1.9405],
         [1.2854, 1.6057, 1.9405],
         [1.2854, 1.6057, 1.9405],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
520/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.0844, 1.6933, 1.7511],
         [1.0844, 1.6933, 1.7511],
         [1.0822, 1.6910, 1.7488],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0844, 1.6933, 1.7511],
         [1.0844, 1.6933, 1.7511],
         [1.0823, 1.6912, 1.7490],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0867, 1.6956, 1.7534],
         [1.0865, 1.6954, 1.7532],
         [1.0844, 1.6933, 1.7511],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[279.3000, 123.5000, 299.2500, 474.0500,   0.0000],
        [290.7000,   0.0000, 312.5500, 118.7500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.0844, 1.6933, 1.7511],
         [1.0844, 1.6933, 1.7511],
         [1.0822, 1.6910, 1.7488],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0844, 1.6933, 1.7511],
         [1.0844, 1.6933, 1.7511],
         [1.0823, 1.6912, 1.7490],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0867, 1.6956, 1.7534],
         [1.0865, 1.6954, 1.7532],
         [1.0844, 1.6933, 1.7511],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
521/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.0801,  0.1352,  1.0539],
         [-0.0801,  0.1352,  1.0539],
         [-0.0801,  0.1352,  1.0539],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0814,  0.1338,  1.0526],
         [-0.0801,  0.1352,  1.0539],
         [-0.0801,  0.1352,  1.0539],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0967,  0.1181,  1.0370],
         [-0.0801,  0.1352,  1.0539],
         [-0.0798,  0.1355,  1.0542],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[371.4500, 123.5000, 400.9000, 493.0500,   0.0000],
        [328.7000,   2.8500, 354.3500, 128.2500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.0801,  0.1352,  1.0539],
         [-0.0801,  0.1352,  1.0539],
         [-0.0801,  0.1352,  1.0539],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0814,  0.1338,  1.0526],
         [-0.0801,  0.1352,  1.0539],
         [-0.0801,  0.1352,  1.0539],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0967,  0.1181,  1.0370],
         [-0.0801,  0.1352,  1.0539],
         [-0.0798,  0.1355,  1.0542],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
522/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.8550, 2.1310, 2.3437],
         [1.8550, 2.1310, 2.3437],
         [1.8573, 2.1286, 2.3437],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8550, 2.1310, 2.3437],
         [1.8550, 2.1310, 2.3437],
         [1.8573, 2.1286, 2.3437],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8573, 2.1333, 2.3460],
         [1.8573, 2.1333, 2.3460],
         [1.8595, 2.1310, 2.3460],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[138.7000, 174.8000, 152.0000, 395.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.8550, 2.1310, 2.3437],
         [1.8550, 2.1310, 2.3437],
         [1.8573, 2.1286, 2.3437],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8550, 2.1310, 2.3437],
         [1.8550, 2.1310, 2.3437],
         [1.8573, 2.1286, 2.3437],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8573, 2.1333, 2.3460],
         [1.8573, 2.1333, 2.3460],
         [1.8595, 2.1310, 2.3460],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
523/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.2390, 1.3261, 1.8387],
         [1.2372, 1.3243, 1.8369],
         [1.2218, 1.3085, 1.8212],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2553, 1.3427, 1.8553],
         [1.2398, 1.3269, 1.8395],
         [1.2365, 1.3235, 1.8361],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2579, 1.3454, 1.8580],
         [1.2566, 1.3441, 1.8566],
         [1.2405, 1.3276, 1.8402],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[326.8000,   0.9500, 361.9500, 480.7000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.2390, 1.3261, 1.8387],
         [1.2372, 1.3243, 1.8369],
         [1.2218, 1.3085, 1.8212],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2553, 1.3427, 1.8553],
         [1.2398, 1.3269, 1.8395],
         [1.2365, 1.3235, 1.8361],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2579, 1.3454, 1.8580],
         [1.2566, 1.3441, 1.8566],
         [1.2405, 1.3276, 1.8402],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
524/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-1.0835, -0.8202, -0.6843],
         [-1.1963, -0.9157, -0.8962],
         [-1.2106, -0.8935, -1.0804],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.3484, -1.0910, -0.9511],
         [-1.2705, -0.9915, -0.9690],
         [-1.0606, -0.7403, -0.9205],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.3416, -1.0910, -0.9121],
         [-1.3480, -1.0778, -1.0177],
         [-1.1224, -0.8145, -0.9487],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[516.8000,  17.1000, 567.1500, 413.2500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-1.0835, -0.8202, -0.6843],
         [-1.1963, -0.9157, -0.8962],
         [-1.2106, -0.8935, -1.0804],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.3484, -1.0910, -0.9511],
         [-1.2705, -0.9915, -0.9690],
         [-1.0606, -0.7403, -0.9205],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.3416, -1.0910, -0.9121],
         [-1.3480, -1.0778, -1.0177],
         [-1.1224, -0.8145, -0.9487],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
525/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.0673, 1.2206, 1.4025],
         [1.0673, 1.2206, 1.4025],
         [1.0696, 1.2229, 1.4048],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0673, 1.2206, 1.4025],
         [1.0673, 1.2206, 1.4025],
         [1.0694, 1.2227, 1.4046],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0650, 1.2183, 1.4002],
         [1.0652, 1.2185, 1.4004],
         [1.0673, 1.2206, 1.4025],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[375.2500, 187.1500, 385.7000, 321.1000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.0673, 1.2206, 1.4025],
         [1.0673, 1.2206, 1.4025],
         [1.0696, 1.2229, 1.4048],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0673, 1.2206, 1.4025],
         [1.0673, 1.2206, 1.4025],
         [1.0694, 1.2227, 1.4046],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0650, 1.2183, 1.4002],
         [1.0652, 1.2185, 1.4004],
         [1.0673, 1.2206, 1.4025],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
526/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.9235, 2.0084, 2.2914],
         [1.9235, 2.0084, 2.2914],
         [1.9258, 2.0107, 2.2937],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.9235, 2.0084, 2.2914],
         [1.9235, 2.0084, 2.2914],
         [1.9258, 2.0107, 2.2937],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.9235, 2.0084, 2.2914],
         [1.9235, 2.0084, 2.2914],
         [1.9258, 2.0107, 2.2937],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[380.0000,   3.8000, 399.0000, 251.7500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.9235, 2.0084, 2.2914],
         [1.9235, 2.0084, 2.2914],
         [1.9258, 2.0107, 2.2937],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.9235, 2.0084, 2.2914],
         [1.9235, 2.0084, 2.2914],
         [1.9258, 2.0107, 2.2937],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.9235, 2.0084, 2.2914],
         [1.9235, 2.0084, 2.2914],
         [1.9258, 2.0107, 2.2937],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
527/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-1.4852, -1.4239, -1.1091],
         [-1.3720, -1.3082, -0.9939],
         [-0.8414, -0.7658, -0.4539],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.4039,  0.5073,  0.7769],
         [-0.1202, -0.0284,  0.2437],
         [-0.2530, -0.1642,  0.1110],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 1.4010,  1.5290,  1.7550],
         [ 1.1307,  1.2525,  1.4827],
         [ 0.6030,  0.7109,  0.9777],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[209.0000,   0.9500, 229.9000, 500.6500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-1.4852, -1.4239, -1.1091],
         [-1.3720, -1.3082, -0.9939],
         [-0.8414, -0.7658, -0.4539],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.4039,  0.5073,  0.7769],
         [-0.1202, -0.0284,  0.2437],
         [-0.2530, -0.1642,  0.1110],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 1.4010,  1.5290,  1.7550],
         [ 1.1307,  1.2525,  1.4827],
         [ 0.6030,  0.7109,  0.9777],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
528/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.9303, 1.5707, 2.1694],
         [0.9276, 1.5721, 2.1694],
         [0.8961, 1.5882, 2.1694],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9303, 1.5707, 2.1694],
         [0.9276, 1.5721, 2.1694],
         [0.8961, 1.5882, 2.1694],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9326, 1.5730, 2.1717],
         [0.9299, 1.5744, 2.1717],
         [0.8983, 1.5905, 2.1717],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[480.7000,  80.7500, 512.0500, 505.4000,   0.0000],
        [537.7000,   0.0000, 558.6000,  72.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.9303, 1.5707, 2.1694],
         [0.9276, 1.5721, 2.1694],
         [0.8961, 1.5882, 2.1694],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9303, 1.5707, 2.1694],
         [0.9276, 1.5721, 2.1694],
         [0.8961, 1.5882, 2.1694],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9326, 1.5730, 2.1717],
         [0.9299, 1.5744, 2.1717],
         [0.8983, 1.5905, 2.1717],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
529/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.0678, 1.0985, 1.4553],
         [1.0844, 1.1155, 1.4722],
         [1.0867, 1.1178, 1.4745],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0677, 1.0985, 1.4552],
         [1.0832, 1.1143, 1.4710],
         [1.0865, 1.1177, 1.4744],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0651, 1.0958, 1.4526],
         [1.0687, 1.0994, 1.4562],
         [1.0844, 1.1155, 1.4722],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[118.7500, 144.4000, 144.4000, 417.0500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.0678, 1.0985, 1.4553],
         [1.0844, 1.1155, 1.4722],
         [1.0867, 1.1178, 1.4745],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0677, 1.0985, 1.4552],
         [1.0832, 1.1143, 1.4710],
         [1.0865, 1.1177, 1.4744],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0651, 1.0958, 1.4526],
         [1.0687, 1.0994, 1.4562],
         [1.0844, 1.1155, 1.4722],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
530/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.1833,  0.2047,  0.9663],
         [-0.2013,  0.1863,  0.9480],
         [-0.2148,  0.1725,  0.9342],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1833,  0.2047,  0.9663],
         [-0.2013,  0.1863,  0.9480],
         [-0.2148,  0.1725,  0.9342],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1833,  0.2047,  0.9663],
         [-0.2013,  0.1863,  0.9480],
         [-0.2148,  0.1725,  0.9342],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[557.6500,   0.9500, 590.9000, 590.9000,   0.0000],
        [315.4000, 235.6000, 324.9000, 268.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.1833,  0.2047,  0.9663],
         [-0.2013,  0.1863,  0.9480],
         [-0.2148,  0.1725,  0.9342],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1833,  0.2047,  0.9663],
         [-0.2013,  0.1863,  0.9480],
         [-0.2148,  0.1725,  0.9342],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1833,  0.2047,  0.9663],
         [-0.2013,  0.1863,  0.9480],
         [-0.2148,  0.1725,  0.9342],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
531/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.1986,  0.0140,  0.7590],
         [-0.1422,  0.0716,  0.8164],
         [-0.0521,  0.1637,  0.9058],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2004,  0.0121,  0.7572],
         [-0.1604,  0.0530,  0.7979],
         [-0.0717,  0.1437,  0.8859],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2139, -0.0017,  0.7434],
         [-0.1755,  0.0376,  0.7825],
         [-0.1078,  0.1067,  0.8491],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[509.2000,  99.7500, 545.3000, 457.9000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.1986,  0.0140,  0.7590],
         [-0.1422,  0.0716,  0.8164],
         [-0.0521,  0.1637,  0.9058],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2004,  0.0121,  0.7572],
         [-0.1604,  0.0530,  0.7979],
         [-0.0717,  0.1437,  0.8859],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2139, -0.0017,  0.7434],
         [-0.1755,  0.0376,  0.7825],
         [-0.1078,  0.1067,  0.8491],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
532/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.3242, 1.4832, 1.5594],
         [1.3255, 1.4845, 1.5607],
         [1.3409, 1.5003, 1.5764],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3228, 1.4818, 1.5580],
         [1.3229, 1.4819, 1.5581],
         [1.3262, 1.4853, 1.5615],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3049, 1.4611, 1.5443],
         [1.3082, 1.4646, 1.5477],
         [1.3219, 1.4786, 1.5617],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[175.7500,  55.1000, 199.5000, 399.0000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.3242, 1.4832, 1.5594],
         [1.3255, 1.4845, 1.5607],
         [1.3409, 1.5003, 1.5764],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3228, 1.4818, 1.5580],
         [1.3229, 1.4819, 1.5581],
         [1.3262, 1.4853, 1.5615],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3049, 1.4611, 1.5443],
         [1.3082, 1.4646, 1.5477],
         [1.3219, 1.4786, 1.5617],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
533/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.2624, 0.3803, 0.8448],
         [0.2611, 0.3789, 0.8462],
         [0.2431, 0.3604, 0.8599],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2624, 0.3803, 0.8448],
         [0.2611, 0.3789, 0.8462],
         [0.2431, 0.3604, 0.8599],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2624, 0.3803, 0.8448],
         [0.2611, 0.3789, 0.8462],
         [0.2431, 0.3604, 0.8599],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[243.2000, 108.3000, 266.0000, 435.1000,   0.0000],
        [504.4500, 126.3500, 520.6000, 418.9500,   0.0000],
        [553.8500, 124.4500, 566.2000, 420.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.2624, 0.3803, 0.8448],
         [0.2611, 0.3789, 0.8462],
         [0.2431, 0.3604, 0.8599],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2624, 0.3803, 0.8448],
         [0.2611, 0.3789, 0.8462],
         [0.2431, 0.3604, 0.8599],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2624, 0.3803, 0.8448],
         [0.2611, 0.3789, 0.8462],
         [0.2431, 0.3604, 0.8599],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
534/730
After normalization, Min: -1.9809058913757707, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.7248, 0.9230, 1.2282],
         [0.7248, 0.9230, 1.2282],
         [0.7248, 0.9230, 1.2282],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7248, 0.9230, 1.2282],
         [0.7248, 0.9230, 1.2282],
         [0.7248, 0.9230, 1.2282],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7248, 0.9230, 1.2282],
         [0.7248, 0.9230, 1.2282],
         [0.7248, 0.9230, 1.2282],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[337.2500, 210.9000, 355.3000, 359.1000,   0.0000],
        [368.6000, 203.3000, 389.5000, 361.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.7248, 0.9230, 1.2282],
         [0.7248, 0.9230, 1.2282],
         [0.7248, 0.9230, 1.2282],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7248, 0.9230, 1.2282],
         [0.7248, 0.9230, 1.2282],
         [0.7248, 0.9230, 1.2282],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7248, 0.9230, 1.2282],
         [0.7248, 0.9230, 1.2282],
         [0.7248, 0.9230, 1.2282],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
535/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.0458,  0.3102,  1.4548],
         [-0.0458,  0.3102,  1.4548],
         [-0.0436,  0.3125,  1.4571],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0445,  0.3088,  1.4548],
         [-0.0444,  0.3090,  1.4549],
         [-0.0410,  0.3123,  1.4583],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0264,  0.2950,  1.4571],
         [-0.0253,  0.2962,  1.4583],
         [-0.0116,  0.3102,  1.4722],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[527.2500,  71.2500, 554.8000, 428.4500,   0.0000],
        [552.9000,  15.2000, 573.8000,  65.5500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.0458,  0.3102,  1.4548],
         [-0.0458,  0.3102,  1.4548],
         [-0.0436,  0.3125,  1.4571],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0445,  0.3088,  1.4548],
         [-0.0444,  0.3090,  1.4549],
         [-0.0410,  0.3123,  1.4583],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0264,  0.2950,  1.4571],
         [-0.0253,  0.2962,  1.4583],
         [-0.0116,  0.3102,  1.4722],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
536/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.4406, -0.4085, -0.8807],
         [-0.5307, -0.4979, -0.9747],
         [-0.6073, -0.5393, -1.0710],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3838, -0.3504, -0.7899],
         [-0.4739, -0.4398, -0.9169],
         [-0.5507, -0.4815, -1.0134],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2959, -0.2606, -0.7003],
         [-0.3861, -0.3500, -0.8229],
         [-0.4652, -0.3940, -0.9224],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[363.8500, 100.7000, 387.6000, 475.9500,   0.0000],
        [351.5000,   3.8000, 369.5500, 108.3000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.4406, -0.4085, -0.8807],
         [-0.5307, -0.4979, -0.9747],
         [-0.6073, -0.5393, -1.0710],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3838, -0.3504, -0.7899],
         [-0.4739, -0.4398, -0.9169],
         [-0.5507, -0.4815, -1.0134],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2959, -0.2606, -0.7003],
         [-0.3861, -0.3500, -0.8229],
         [-0.4652, -0.3940, -0.9224],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
537/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.0056, 0.4328, 0.9668],
         [0.0056, 0.4328, 0.9668],
         [0.0056, 0.4328, 0.9668],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0056, 0.4328, 0.9668],
         [0.0056, 0.4328, 0.9668],
         [0.0056, 0.4328, 0.9668],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0056, 0.4328, 0.9668],
         [0.0056, 0.4328, 0.9668],
         [0.0056, 0.4328, 0.9668],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[406.6000,   0.9500, 433.2000, 452.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.0056, 0.4328, 0.9668],
         [0.0056, 0.4328, 0.9668],
         [0.0056, 0.4328, 0.9668],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0056, 0.4328, 0.9668],
         [0.0056, 0.4328, 0.9668],
         [0.0056, 0.4328, 0.9668],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0056, 0.4328, 0.9668],
         [0.0056, 0.4328, 0.9668],
         [0.0056, 0.4328, 0.9668],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
538/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.2277, 0.6424, 1.0883],
         [0.2097, 0.6240, 1.0700],
         [0.1939, 0.6078, 1.0539],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2291, 0.6437, 1.0897],
         [0.2097, 0.6240, 1.0700],
         [0.1941, 0.6080, 1.0541],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2445, 0.6595, 1.1054],
         [0.2118, 0.6261, 1.0721],
         [0.1962, 0.6101, 1.0562],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[178.6000,  57.0000, 197.6000, 327.7500,   0.0000],
        [214.7000,  57.0000, 231.8000, 343.9000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.2277, 0.6424, 1.0883],
         [0.2097, 0.6240, 1.0700],
         [0.1939, 0.6078, 1.0539],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2291, 0.6437, 1.0897],
         [0.2097, 0.6240, 1.0700],
         [0.1941, 0.6080, 1.0541],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2445, 0.6595, 1.1054],
         [0.2118, 0.6261, 1.0721],
         [0.1962, 0.6101, 1.0562],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
539/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.9232,  0.1131,  1.6920],
         [-0.9717,  0.0649,  1.6073],
         [-0.9848,  0.0698,  1.5638],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.0084,  0.0048,  1.5209],
         [-0.9524,  0.0634,  1.5440],
         [-0.8790,  0.1546,  1.5777],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8660,  0.0928,  1.4397],
         [-0.8002,  0.1612,  1.5042],
         [-0.8335,  0.1418,  1.4394],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[102.6000,   0.9500, 129.2000, 418.9500,   0.0000],
        [556.7000, 234.6500, 565.2500, 255.5500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.9232,  0.1131,  1.6920],
         [-0.9717,  0.0649,  1.6073],
         [-0.9848,  0.0698,  1.5638],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.0084,  0.0048,  1.5209],
         [-0.9524,  0.0634,  1.5440],
         [-0.8790,  0.1546,  1.5777],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8660,  0.0928,  1.4397],
         [-0.8002,  0.1612,  1.5042],
         [-0.8335,  0.1418,  1.4394],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
540/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.2680,  0.0481,  1.2461],
         [-0.2513,  0.0651,  1.2631],
         [-0.2491,  0.0674,  1.2654],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2680,  0.0481,  1.2461],
         [-0.2513,  0.0651,  1.2631],
         [-0.2491,  0.0674,  1.2654],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2680,  0.0481,  1.2461],
         [-0.2513,  0.0651,  1.2631],
         [-0.2491,  0.0674,  1.2654],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[412.3000,  86.4500, 429.4000, 494.0000,   0.0000],
        [449.3500,   0.9500, 469.3000,  81.7000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.2680,  0.0481,  1.2461],
         [-0.2513,  0.0651,  1.2631],
         [-0.2491,  0.0674,  1.2654],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2680,  0.0481,  1.2461],
         [-0.2513,  0.0651,  1.2631],
         [-0.2491,  0.0674,  1.2654],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2680,  0.0481,  1.2461],
         [-0.2513,  0.0651,  1.2631],
         [-0.2491,  0.0674,  1.2654],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
541/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.3652, 0.5203, 0.8274],
         [0.3652, 0.5203, 0.8274],
         [0.3629, 0.5180, 0.8251],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3652, 0.5203, 0.8274],
         [0.3652, 0.5203, 0.8274],
         [0.3629, 0.5180, 0.8251],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3652, 0.5203, 0.8274],
         [0.3652, 0.5203, 0.8274],
         [0.3629, 0.5180, 0.8251],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[491.1500, 113.0500, 518.7000, 382.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.3652, 0.5203, 0.8274],
         [0.3652, 0.5203, 0.8274],
         [0.3629, 0.5180, 0.8251],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3652, 0.5203, 0.8274],
         [0.3652, 0.5203, 0.8274],
         [0.3629, 0.5180, 0.8251],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3652, 0.5203, 0.8274],
         [0.3652, 0.5203, 0.8274],
         [0.3629, 0.5180, 0.8251],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
542/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.5903,  0.4355,  1.9620],
         [-0.5608,  0.4656,  1.9892],
         [-0.5777,  0.4438,  1.9310],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4969,  0.4968,  1.9836],
         [-0.5633,  0.4288,  1.9135],
         [-0.5339,  0.4576,  1.9122],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5466,  0.4437,  1.8597],
         [-0.6121,  0.3733,  1.7896],
         [-0.5391,  0.4339,  1.8459],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[164.3500,   6.6500, 184.3000, 456.9500,   0.0000],
        [ 14.2500, 261.2500,  28.5000, 343.9000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.5903,  0.4355,  1.9620],
         [-0.5608,  0.4656,  1.9892],
         [-0.5777,  0.4438,  1.9310],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4969,  0.4968,  1.9836],
         [-0.5633,  0.4288,  1.9135],
         [-0.5339,  0.4576,  1.9122],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5466,  0.4437,  1.8597],
         [-0.6121,  0.3733,  1.7896],
         [-0.5391,  0.4339,  1.8459],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
543/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.2620, 0.5374, 1.1232],
         [0.2277, 0.5023, 1.0883],
         [0.2116, 0.4858, 1.0720],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2831, 0.5562, 1.1433],
         [0.2612, 0.5365, 1.1224],
         [0.2330, 0.5077, 1.0983],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3319, 0.5746, 1.1773],
         [0.2825, 0.5538, 1.1418],
         [0.2644, 0.5358, 1.1282],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 38.0000,  91.2000,  76.0000, 405.6500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.2620, 0.5374, 1.1232],
         [0.2277, 0.5023, 1.0883],
         [0.2116, 0.4858, 1.0720],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2831, 0.5562, 1.1433],
         [0.2612, 0.5365, 1.1224],
         [0.2330, 0.5077, 1.0983],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3319, 0.5746, 1.1773],
         [0.2825, 0.5538, 1.1418],
         [0.2644, 0.5358, 1.1282],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
544/730
After normalization, Min: -2.1007791752866, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.6232, -0.3500,  0.0306],
         [-0.0807,  0.2045,  0.5800],
         [ 0.0364,  0.3196,  0.6655],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.3024,  0.5962,  0.9726],
         [ 0.1185,  0.4079,  0.7853],
         [-0.2452,  0.0294,  0.4076],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.5761,  0.8691,  1.2512],
         [ 0.5401,  0.8301,  1.2132],
         [ 0.4522,  0.7143,  1.1077],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[546.2500,  89.3000, 564.3000, 348.6500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.6232, -0.3500,  0.0306],
         [-0.0807,  0.2045,  0.5800],
         [ 0.0364,  0.3196,  0.6655],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.3024,  0.5962,  0.9726],
         [ 0.1185,  0.4079,  0.7853],
         [-0.2452,  0.0294,  0.4076],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.5761,  0.8691,  1.2512],
         [ 0.5401,  0.8301,  1.2132],
         [ 0.4522,  0.7143,  1.1077],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
545/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.3481, 0.5203, 0.7228],
         [0.3481, 0.5203, 0.7228],
         [0.3503, 0.5226, 0.7251],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3481, 0.5203, 0.7228],
         [0.3481, 0.5203, 0.7228],
         [0.3501, 0.5224, 0.7249],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3458, 0.5180, 0.7205],
         [0.3460, 0.5182, 0.7207],
         [0.3481, 0.5203, 0.7228],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[397.1000, 244.1500, 403.7500, 335.3500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.3481, 0.5203, 0.7228],
         [0.3481, 0.5203, 0.7228],
         [0.3503, 0.5226, 0.7251],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3481, 0.5203, 0.7228],
         [0.3481, 0.5203, 0.7228],
         [0.3501, 0.5224, 0.7249],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3458, 0.5180, 0.7205],
         [0.3460, 0.5182, 0.7207],
         [0.3481, 0.5203, 0.7228],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
546/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.3716,  0.1172,  1.4718],
         [-0.3883,  0.1001,  1.4548],
         [-0.3906,  0.0978,  1.4525],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3716,  0.1172,  1.4718],
         [-0.3883,  0.1001,  1.4548],
         [-0.3906,  0.0978,  1.4525],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3716,  0.1172,  1.4718],
         [-0.3883,  0.1001,  1.4548],
         [-0.3906,  0.0978,  1.4525],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[578.5500, 175.7500, 598.5000, 370.5000,   0.0000],
        [417.0500, 227.0500, 428.4500, 353.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.3716,  0.1172,  1.4718],
         [-0.3883,  0.1001,  1.4548],
         [-0.3906,  0.0978,  1.4525],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3716,  0.1172,  1.4718],
         [-0.3883,  0.1001,  1.4548],
         [-0.3906,  0.0978,  1.4525],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3716,  0.1172,  1.4718],
         [-0.3883,  0.1001,  1.4548],
         [-0.3906,  0.0978,  1.4525],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
547/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.0629,  0.2927,  1.1067],
         [-0.0629,  0.2927,  1.1237],
         [-0.0629,  0.2904,  1.1282],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0629,  0.2927,  1.1067],
         [-0.0629,  0.2927,  1.1237],
         [-0.0629,  0.2904,  1.1282],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0629,  0.2927,  1.1067],
         [-0.0629,  0.2927,  1.1237],
         [-0.0629,  0.2904,  1.1282],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[432.2500, 102.6000, 444.6000, 163.4000,   0.0000],
        [105.4500, 267.9000, 114.9500, 304.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.0629,  0.2927,  1.1067],
         [-0.0629,  0.2927,  1.1237],
         [-0.0629,  0.2904,  1.1282],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0629,  0.2927,  1.1067],
         [-0.0629,  0.2927,  1.1237],
         [-0.0629,  0.2904,  1.1282],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0629,  0.2927,  1.1067],
         [-0.0629,  0.2927,  1.1237],
         [-0.0629,  0.2904,  1.1282],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
548/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.1426, 0.5203, 0.9668],
         [0.1426, 0.5203, 0.9668],
         [0.1426, 0.5203, 0.9668],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1426, 0.5203, 0.9668],
         [0.1426, 0.5203, 0.9668],
         [0.1426, 0.5203, 0.9668],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1426, 0.5203, 0.9668],
         [0.1426, 0.5203, 0.9668],
         [0.1426, 0.5203, 0.9668],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[384.7500, 107.3500, 395.2000, 352.4500,   0.0000],
        [398.0500, 191.9000, 405.6500, 350.5500,   0.0000],
        [410.4000,  96.9000, 420.8500, 350.5500,   0.0000],
        [570.9500,  21.8500, 598.5000, 304.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.1426, 0.5203, 0.9668],
         [0.1426, 0.5203, 0.9668],
         [0.1426, 0.5203, 0.9668],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1426, 0.5203, 0.9668],
         [0.1426, 0.5203, 0.9668],
         [0.1426, 0.5203, 0.9668],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1426, 0.5203, 0.9668],
         [0.1426, 0.5203, 0.9668],
         [0.1426, 0.5203, 0.9668],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
549/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.7356, 2.0089, 2.0479],
         [1.7523, 2.0259, 2.0649],
         [1.7549, 2.0263, 2.0721],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7369, 2.0102, 2.0492],
         [1.7536, 2.0273, 2.0662],
         [1.7696, 2.0413, 2.0870],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7545, 2.0282, 2.0671],
         [1.7559, 2.0296, 2.0685],
         [1.7736, 2.0454, 2.0911],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[314.4500, 248.9000, 326.8000, 335.3500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.7356, 2.0089, 2.0479],
         [1.7523, 2.0259, 2.0649],
         [1.7549, 2.0263, 2.0721],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7369, 2.0102, 2.0492],
         [1.7536, 2.0273, 2.0662],
         [1.7696, 2.0413, 2.0870],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7545, 2.0282, 2.0671],
         [1.7559, 2.0296, 2.0685],
         [1.7736, 2.0454, 2.0911],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
550/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.4454, 1.6772, 1.8745],
         [1.5807, 1.8155, 2.0122],
         [1.5844, 1.8192, 2.0159],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3625, 1.5924, 1.7901],
         [1.5181, 1.7514, 1.9484],
         [1.5760, 1.8107, 2.0074],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3781, 1.6083, 1.8060],
         [1.5278, 1.7614, 1.9583],
         [1.5982, 1.8333, 2.0300],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[527.2500, 126.3500, 547.2000, 393.3000,   0.0000],
        [108.3000, 149.1500, 125.4000, 399.9500,   0.0000],
        [388.5500, 277.4000, 401.8500, 321.1000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.4454, 1.6772, 1.8745],
         [1.5807, 1.8155, 2.0122],
         [1.5844, 1.8192, 2.0159],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3625, 1.5924, 1.7901],
         [1.5181, 1.7514, 1.9484],
         [1.5760, 1.8107, 2.0074],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3781, 1.6083, 1.8060],
         [1.5278, 1.7614, 1.9583],
         [1.5982, 1.8333, 2.0300],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
551/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.3309, 0.7479, 1.1934],
         [0.2922, 0.7083, 1.1567],
         [0.2251, 0.6374, 1.1274],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3643, 0.7820, 1.2274],
         [0.3284, 0.7454, 1.1962],
         [0.2814, 0.6949, 1.1859],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3625, 0.7802, 1.2265],
         [0.3469, 0.7642, 1.2458],
         [0.3312, 0.7459, 1.2506],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 77.9000, 120.6500,  97.8500, 352.4500,   0.0000],
        [101.6500, 171.0000, 118.7500, 362.9000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.3309, 0.7479, 1.1934],
         [0.2922, 0.7083, 1.1567],
         [0.2251, 0.6374, 1.1274],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3643, 0.7820, 1.2274],
         [0.3284, 0.7454, 1.1962],
         [0.2814, 0.6949, 1.1859],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3625, 0.7802, 1.2265],
         [0.3469, 0.7642, 1.2458],
         [0.3312, 0.7459, 1.2506],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
552/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.8447, 1.0455, 1.3502],
         [0.8447, 1.0455, 1.3502],
         [0.8447, 1.0455, 1.3502],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8447, 1.0455, 1.3502],
         [0.8447, 1.0455, 1.3502],
         [0.8447, 1.0455, 1.3502],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8447, 1.0455, 1.3502],
         [0.8447, 1.0455, 1.3502],
         [0.8447, 1.0455, 1.3502],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[148.2000, 151.0500, 165.3000, 341.0500,   0.0000],
        [163.4000, 136.8000, 173.8500, 341.0500,   0.0000],
        [465.5000,  55.1000, 494.0000, 388.5500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.8447, 1.0455, 1.3502],
         [0.8447, 1.0455, 1.3502],
         [0.8447, 1.0455, 1.3502],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8447, 1.0455, 1.3502],
         [0.8447, 1.0455, 1.3502],
         [0.8447, 1.0455, 1.3502],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8447, 1.0455, 1.3502],
         [0.8447, 1.0455, 1.3502],
         [0.8447, 1.0455, 1.3502],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
553/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.4612, 1.5882, 1.8208],
         [1.4612, 1.5882, 1.8208],
         [1.4612, 1.5882, 1.8208],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4612, 1.5882, 1.8208],
         [1.4612, 1.5882, 1.8208],
         [1.4612, 1.5882, 1.8208],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4612, 1.5882, 1.8208],
         [1.4612, 1.5882, 1.8208],
         [1.4612, 1.5882, 1.8208],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[291.6500,   0.9500, 327.7500, 592.8000,   0.0000],
        [258.4000,  84.5500, 285.0000, 353.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.4612, 1.5882, 1.8208],
         [1.4612, 1.5882, 1.8208],
         [1.4612, 1.5882, 1.8208],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4612, 1.5882, 1.8208],
         [1.4612, 1.5882, 1.8208],
         [1.4612, 1.5882, 1.8208],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4612, 1.5882, 1.8208],
         [1.4612, 1.5882, 1.8208],
         [1.4612, 1.5882, 1.8208],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
554/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.1872, 1.3081, 1.5777],
         [1.1890, 1.3100, 1.5796],
         [1.2092, 1.3306, 1.6002],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1890, 1.3100, 1.6135],
         [1.2069, 1.3283, 1.6318],
         [1.2237, 1.3454, 1.6488],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2069, 1.3260, 1.6341],
         [1.2214, 1.3408, 1.6488],
         [1.2234, 1.3428, 1.6508],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 48.4500,  73.1500,  65.5500, 328.7000,   0.0000],
        [ 66.5000, 122.5500,  85.5000, 323.0000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.1872, 1.3081, 1.5777],
         [1.1890, 1.3100, 1.5796],
         [1.2092, 1.3306, 1.6002],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1890, 1.3100, 1.6135],
         [1.2069, 1.3283, 1.6318],
         [1.2237, 1.3454, 1.6488],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2069, 1.3260, 1.6341],
         [1.2214, 1.3408, 1.6488],
         [1.2234, 1.3428, 1.6508],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
555/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.6157, 1.8513, 2.0479],
         [1.6144, 1.8500, 2.0465],
         [1.5990, 1.8342, 2.0308],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.6351, 1.8711, 2.0676],
         [1.6351, 1.8711, 2.0676],
         [1.6329, 1.8688, 2.0653],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.6712, 1.9080, 2.1043],
         [1.6710, 1.9078, 2.1041],
         [1.6670, 1.9037, 2.1000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[530.1000, 245.1000, 539.6000, 304.9500,   0.0000],
        [565.2500, 232.7500, 578.5500, 293.5500,   0.0000],
        [592.8000, 223.2500, 603.2500, 323.0000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.6157, 1.8513, 2.0479],
         [1.6144, 1.8500, 2.0465],
         [1.5990, 1.8342, 2.0308],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.6351, 1.8711, 2.0676],
         [1.6351, 1.8711, 2.0676],
         [1.6329, 1.8688, 2.0653],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.6712, 1.9080, 2.1043],
         [1.6710, 1.9078, 2.1041],
         [1.6670, 1.9037, 2.1000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
556/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.7591, 0.9230, 1.1759],
         [0.7591, 0.9230, 1.1759],
         [0.7591, 0.9230, 1.1759],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7591, 0.9230, 1.1759],
         [0.7591, 0.9230, 1.1759],
         [0.7591, 0.9230, 1.1759],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7591, 0.9230, 1.1759],
         [0.7591, 0.9230, 1.1759],
         [0.7591, 0.9230, 1.1759],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[276.4500, 252.7000, 287.8500, 329.6500,   0.0000],
        [ 24.7000, 239.4000,  38.0000, 312.5500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.7591, 0.9230, 1.1759],
         [0.7591, 0.9230, 1.1759],
         [0.7591, 0.9230, 1.1759],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7591, 0.9230, 1.1759],
         [0.7591, 0.9230, 1.1759],
         [0.7591, 0.9230, 1.1759],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7591, 0.9230, 1.1759],
         [0.7591, 0.9230, 1.1759],
         [0.7591, 0.9230, 1.1759],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
557/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.0625,  0.3282,  1.2287],
         [-0.0449,  0.3448,  1.2452],
         [-0.0264,  0.3475,  1.2480],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0642,  0.3264,  1.2269],
         [-0.0602,  0.3291,  1.2296],
         [-0.0264,  0.3475,  1.2480],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0796,  0.3107,  1.2113],
         [-0.0602,  0.3291,  1.2296],
         [-0.0264,  0.3475,  1.2480],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[  3.8000,  31.3500,  46.5500, 468.3500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.0625,  0.3282,  1.2287],
         [-0.0449,  0.3448,  1.2452],
         [-0.0264,  0.3475,  1.2480],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0642,  0.3264,  1.2269],
         [-0.0602,  0.3291,  1.2296],
         [-0.0264,  0.3475,  1.2480],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0796,  0.3107,  1.2113],
         [-0.0602,  0.3291,  1.2296],
         [-0.0264,  0.3475,  1.2480],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
558/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.2342,  0.4853,  1.8034],
         [-0.2342,  0.4853,  1.8034],
         [-0.2364,  0.4830,  1.8011],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2355,  0.4839,  1.8020],
         [-0.2355,  0.4839,  1.8020],
         [-0.2376,  0.4818,  1.7999],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2514,  0.4677,  1.7859],
         [-0.2536,  0.4655,  1.7837],
         [-0.2536,  0.4655,  1.7837],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[208.0500, 141.5500, 231.8000, 361.0000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.2342,  0.4853,  1.8034],
         [-0.2342,  0.4853,  1.8034],
         [-0.2364,  0.4830,  1.8011],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2355,  0.4839,  1.8020],
         [-0.2355,  0.4839,  1.8020],
         [-0.2376,  0.4818,  1.7999],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2514,  0.4677,  1.7859],
         [-0.2536,  0.4655,  1.7837],
         [-0.2536,  0.4655,  1.7837],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
559/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.6338, 1.8167, 1.9451],
         [1.6126, 1.7781, 1.9575],
         [1.5612, 1.7255, 1.9052],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7055, 1.8887, 2.0208],
         [1.6706, 1.8374, 2.0166],
         [1.6312, 1.7971, 1.9765],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7757, 1.9448, 2.1235],
         [1.7552, 1.9238, 2.1026],
         [1.7051, 1.8727, 2.0517],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[359.1000,   3.8000, 386.6500, 290.7000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.6338, 1.8167, 1.9451],
         [1.6126, 1.7781, 1.9575],
         [1.5612, 1.7255, 1.9052],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7055, 1.8887, 2.0208],
         [1.6706, 1.8374, 2.0166],
         [1.6312, 1.7971, 1.9765],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.7757, 1.9448, 2.1235],
         [1.7552, 1.9238, 2.1026],
         [1.7051, 1.8727, 2.0517],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
560/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.2342,  0.5028,  1.2457],
         [-0.2324,  0.5046,  1.2503],
         [-0.2144,  0.5207,  1.3052],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2311,  0.5060,  1.2488],
         [-0.2145,  0.5230,  1.2685],
         [-0.1999,  0.5355,  1.3200],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1954,  0.5401,  1.2784],
         [-0.1956,  0.5376,  1.2850],
         [-0.1977,  0.5335,  1.3154],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[  2.8500, 251.7500,  19.0000, 320.1500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.2342,  0.5028,  1.2457],
         [-0.2324,  0.5046,  1.2503],
         [-0.2144,  0.5207,  1.3052],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2311,  0.5060,  1.2488],
         [-0.2145,  0.5230,  1.2685],
         [-0.1999,  0.5355,  1.3200],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1954,  0.5401,  1.2784],
         [-0.1956,  0.5376,  1.2850],
         [-0.1977,  0.5335,  1.3154],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
561/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.4397, -0.0749,  0.9319],
         [-0.4397, -0.0749,  0.9319],
         [-0.4397, -0.0749,  0.9319],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4397, -0.0749,  0.9319],
         [-0.4397, -0.0749,  0.9319],
         [-0.4397, -0.0749,  0.9319],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4397, -0.0749,  0.9319],
         [-0.4397, -0.0749,  0.9319],
         [-0.4397, -0.0749,  0.9319],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[400.9000,  90.2500, 432.2500, 445.5500,   0.0000],
        [445.5500,   1.9000, 470.2500,  93.1000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.4397, -0.0749,  0.9319],
         [-0.4397, -0.0749,  0.9319],
         [-0.4397, -0.0749,  0.9319],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4397, -0.0749,  0.9319],
         [-0.4397, -0.0749,  0.9319],
         [-0.4397, -0.0749,  0.9319],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4397, -0.0749,  0.9319],
         [-0.4397, -0.0749,  0.9319],
         [-0.4397, -0.0749,  0.9319],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
562/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.8447, 1.0630, 1.2980],
         [0.8447, 1.0630, 1.2980],
         [0.8469, 1.0653, 1.3002],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8447, 1.0630, 1.2980],
         [0.8447, 1.0630, 1.2980],
         [0.8469, 1.0653, 1.3002],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8447, 1.0630, 1.2980],
         [0.8447, 1.0630, 1.2980],
         [0.8469, 1.0653, 1.3002],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[440.8000, 268.8500, 454.1000, 293.5500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.8447, 1.0630, 1.2980],
         [0.8447, 1.0630, 1.2980],
         [0.8469, 1.0653, 1.3002],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8447, 1.0630, 1.2980],
         [0.8447, 1.0630, 1.2980],
         [0.8469, 1.0653, 1.3002],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8447, 1.0630, 1.2980],
         [0.8447, 1.0630, 1.2980],
         [0.8469, 1.0653, 1.3002],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
563/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.5364, 0.7479, 0.9494],
         [0.5351, 0.7466, 0.9480],
         [0.5197, 0.7308, 0.9323],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5405, 0.7493, 0.9507],
         [0.5404, 0.7492, 0.9506],
         [0.5371, 0.7458, 0.9473],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5900, 0.7676, 0.9690],
         [0.5866, 0.7642, 0.9656],
         [0.5729, 0.7502, 0.9517],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[396.1500, 163.4000, 412.3000, 369.5500,   0.0000],
        [ 60.8000, 247.9500,  71.2500, 323.0000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.5364, 0.7479, 0.9494],
         [0.5351, 0.7466, 0.9480],
         [0.5197, 0.7308, 0.9323],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5405, 0.7493, 0.9507],
         [0.5404, 0.7492, 0.9506],
         [0.5371, 0.7458, 0.9473],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5900, 0.7676, 0.9690],
         [0.5866, 0.7642, 0.9656],
         [0.5729, 0.7502, 0.9517],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
564/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.4684, 0.6783, 0.9150],
         [0.4877, 0.6981, 0.9347],
         [0.5234, 0.7345, 0.9709],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4670, 0.6769, 0.9136],
         [0.4851, 0.6954, 0.9319],
         [0.5052, 0.7159, 0.9524],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4490, 0.6585, 0.8952],
         [0.4670, 0.6769, 0.9136],
         [0.4851, 0.6954, 0.9319],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[549.1000, 202.3500, 575.7000, 342.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.4684, 0.6783, 0.9150],
         [0.4877, 0.6981, 0.9347],
         [0.5234, 0.7345, 0.9709],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4670, 0.6769, 0.9136],
         [0.4851, 0.6954, 0.9319],
         [0.5052, 0.7159, 0.9524],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4490, 0.6585, 0.8952],
         [0.4670, 0.6769, 0.9136],
         [0.4851, 0.6954, 0.9319],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
565/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.8379, 2.0084, 2.2566],
         [1.8379, 2.0084, 2.2566],
         [1.8379, 2.0084, 2.2566],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8379, 2.0084, 2.2566],
         [1.8379, 2.0084, 2.2566],
         [1.8379, 2.0084, 2.2566],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8357, 2.0061, 2.2543],
         [1.8357, 2.0061, 2.2543],
         [1.8357, 2.0061, 2.2543],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[377.1500, 209.9500, 389.5000, 301.1500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.8379, 2.0084, 2.2566],
         [1.8379, 2.0084, 2.2566],
         [1.8379, 2.0084, 2.2566],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8379, 2.0084, 2.2566],
         [1.8379, 2.0084, 2.2566],
         [1.8379, 2.0084, 2.2566],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8357, 2.0061, 2.2543],
         [1.8357, 2.0061, 2.2543],
         [1.8357, 2.0061, 2.2543],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
566/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.0287,  0.2927,  1.0714],
         [-0.0287,  0.2927,  1.0714],
         [-0.0309,  0.2904,  1.0691],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0287,  0.2927,  1.0714],
         [-0.0287,  0.2927,  1.0714],
         [-0.0308,  0.2906,  1.0693],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0264,  0.2950,  1.0737],
         [-0.0266,  0.2948,  1.0735],
         [-0.0287,  0.2927,  1.0714],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[306.8500, 229.9000, 316.3500, 330.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.0287,  0.2927,  1.0714],
         [-0.0287,  0.2927,  1.0714],
         [-0.0309,  0.2904,  1.0691],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0287,  0.2927,  1.0714],
         [-0.0287,  0.2927,  1.0714],
         [-0.0308,  0.2906,  1.0693],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0264,  0.2950,  1.0737],
         [-0.0266,  0.2948,  1.0735],
         [-0.0287,  0.2927,  1.0714],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
567/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-1.1567, -0.7554, -0.8436],
         [-1.1554, -0.7583, -0.8450],
         [-1.1208, -0.7735, -0.8442],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.0680, -0.6647, -0.7505],
         [-1.1224, -0.7245, -0.8087],
         [-1.1459, -0.7994, -0.8670],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.9877, -0.5849, -0.6321],
         [-1.0778, -0.6810, -0.7266],
         [-1.1657, -0.8217, -0.8504],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[140.6000, 205.2000, 158.6500, 351.5000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-1.1567, -0.7554, -0.8436],
         [-1.1554, -0.7583, -0.8450],
         [-1.1208, -0.7735, -0.8442],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.0680, -0.6647, -0.7505],
         [-1.1224, -0.7245, -0.8087],
         [-1.1459, -0.7994, -0.8670],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.9877, -0.5849, -0.6321],
         [-1.0778, -0.6810, -0.7266],
         [-1.1657, -0.8217, -0.8504],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
568/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[2.2489, 2.4286, 2.6400],
         [2.2489, 2.4286, 2.6400],
         [2.2489, 2.4286, 2.6400],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.2489, 2.4286, 2.6400],
         [2.2489, 2.4286, 2.6400],
         [2.2489, 2.4286, 2.6400],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.2489, 2.4286, 2.6400],
         [2.2489, 2.4286, 2.6400],
         [2.2489, 2.4286, 2.6400],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[406.6000, 213.7500, 420.8500, 340.1000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[2.2489, 2.4286, 2.6400],
         [2.2489, 2.4286, 2.6400],
         [2.2489, 2.4286, 2.6400],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.2489, 2.4286, 2.6400],
         [2.2489, 2.4286, 2.6400],
         [2.2489, 2.4286, 2.6400],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.2489, 2.4286, 2.6400],
         [2.2489, 2.4286, 2.6400],
         [2.2489, 2.4286, 2.6400],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
569/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.8618, 1.0280, 1.2805],
         [0.8618, 1.0280, 1.2805],
         [0.8618, 1.0280, 1.2805],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8618, 1.0280, 1.2805],
         [0.8618, 1.0280, 1.2805],
         [0.8618, 1.0280, 1.2805],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8618, 1.0280, 1.2805],
         [0.8618, 1.0280, 1.2805],
         [0.8618, 1.0280, 1.2805],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[  1.9000, 252.7000,  19.9500, 332.5000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.8618, 1.0280, 1.2805],
         [0.8618, 1.0280, 1.2805],
         [0.8618, 1.0280, 1.2805],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8618, 1.0280, 1.2805],
         [0.8618, 1.0280, 1.2805],
         [0.8618, 1.0280, 1.2805],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8618, 1.0280, 1.2805],
         [0.8618, 1.0280, 1.2805],
         [0.8618, 1.0280, 1.2805],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
570/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.9308, 1.0285, 1.6121],
         [0.9474, 1.0455, 1.6291],
         [0.9474, 1.0455, 1.6291],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9308, 1.0285, 1.6121],
         [0.9474, 1.0455, 1.6291],
         [0.9474, 1.0455, 1.6291],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9308, 1.0285, 1.6121],
         [0.9474, 1.0455, 1.6291],
         [0.9474, 1.0455, 1.6291],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[256.5000, 166.2500, 294.5000, 370.5000,   0.0000],
        [435.1000, 194.7500, 448.4000, 310.6500,   0.0000],
        [209.0000, 248.9000, 214.7000, 323.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.9308, 1.0285, 1.6121],
         [0.9474, 1.0455, 1.6291],
         [0.9474, 1.0455, 1.6291],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9308, 1.0285, 1.6121],
         [0.9474, 1.0455, 1.6291],
         [0.9474, 1.0455, 1.6291],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9308, 1.0285, 1.6121],
         [0.9474, 1.0455, 1.6291],
         [0.9474, 1.0455, 1.6291],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
571/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.4440, 1.6232, 1.9254],
         [1.4440, 1.6232, 1.9254],
         [1.4440, 1.6232, 1.9254],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4440, 1.6232, 1.9254],
         [1.4440, 1.6232, 1.9254],
         [1.4440, 1.6232, 1.9254],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4440, 1.6232, 1.9254],
         [1.4440, 1.6232, 1.9254],
         [1.4440, 1.6232, 1.9254],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[139.6500,  95.9500, 157.7000, 482.6000,   0.0000],
        [130.1500,   0.9500, 148.2000,  95.0000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.4440, 1.6232, 1.9254],
         [1.4440, 1.6232, 1.9254],
         [1.4440, 1.6232, 1.9254],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4440, 1.6232, 1.9254],
         [1.4440, 1.6232, 1.9254],
         [1.4440, 1.6232, 1.9254],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4440, 1.6232, 1.9254],
         [1.4440, 1.6232, 1.9254],
         [1.4440, 1.6232, 1.9254],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
572/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.7185, 0.8640, 1.0824],
         [0.8371, 0.9853, 1.2031],
         [0.4660, 0.6059, 0.8254],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3354, 0.4724, 0.6925],
         [0.4912, 0.6316, 0.8510],
         [0.4080, 0.5466, 0.7664],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3689, 0.5066, 0.7266],
         [0.5276, 0.6688, 0.8881],
         [0.6021, 0.7450, 0.9639],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[513.9500,   0.9500, 535.8000, 264.1000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.7185, 0.8640, 1.0824],
         [0.8371, 0.9853, 1.2031],
         [0.4660, 0.6059, 0.8254],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3354, 0.4724, 0.6925],
         [0.4912, 0.6316, 0.8510],
         [0.4080, 0.5466, 0.7664],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3689, 0.5066, 0.7266],
         [0.5276, 0.6688, 0.8881],
         [0.6021, 0.7450, 0.9639],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
573/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.7766, 1.0635, 1.3333],
         [0.7933, 1.0805, 1.3502],
         [0.7956, 1.0828, 1.3525],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7766, 1.0634, 1.3332],
         [0.7921, 1.0793, 1.3490],
         [0.7954, 1.0827, 1.3524],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7785, 1.0585, 1.3306],
         [0.7820, 1.0621, 1.3342],
         [0.7978, 1.0782, 1.3502],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[146.3000, 150.1000, 163.4000, 317.3000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.7766, 1.0635, 1.3333],
         [0.7933, 1.0805, 1.3502],
         [0.7956, 1.0828, 1.3525],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7766, 1.0634, 1.3332],
         [0.7921, 1.0793, 1.3490],
         [0.7954, 1.0827, 1.3524],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7785, 1.0585, 1.3306],
         [0.7820, 1.0621, 1.3342],
         [0.7978, 1.0782, 1.3502],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
574/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.5707, 0.8880, 1.3154],
         [0.5707, 0.8880, 1.3154],
         [0.5729, 0.8903, 1.3177],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5707, 0.8880, 1.3154],
         [0.5707, 0.8880, 1.3154],
         [0.5728, 0.8901, 1.3175],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5684, 0.8857, 1.3131],
         [0.5686, 0.8858, 1.3133],
         [0.5707, 0.8880, 1.3154],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[130.1500, 104.5000, 150.1000, 358.1500,   0.0000],
        [417.0500,  30.4000, 431.3000, 316.3500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.5707, 0.8880, 1.3154],
         [0.5707, 0.8880, 1.3154],
         [0.5729, 0.8903, 1.3177],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5707, 0.8880, 1.3154],
         [0.5707, 0.8880, 1.3154],
         [0.5728, 0.8901, 1.3175],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5684, 0.8857, 1.3131],
         [0.5686, 0.8858, 1.3133],
         [0.5707, 0.8880, 1.3154],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
575/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.1314,  0.3102,  0.9145],
         [-0.1314,  0.3102,  0.9145],
         [-0.1314,  0.3102,  0.9145],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1314,  0.3102,  0.9145],
         [-0.1314,  0.3102,  0.9145],
         [-0.1314,  0.3102,  0.9145],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1292,  0.3125,  0.9168],
         [-0.1292,  0.3125,  0.9168],
         [-0.1292,  0.3125,  0.9168],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[562.4000,   7.6000, 583.3000, 388.5500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.1314,  0.3102,  0.9145],
         [-0.1314,  0.3102,  0.9145],
         [-0.1314,  0.3102,  0.9145],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1314,  0.3102,  0.9145],
         [-0.1314,  0.3102,  0.9145],
         [-0.1314,  0.3102,  0.9145],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1292,  0.3125,  0.9168],
         [-0.1292,  0.3125,  0.9168],
         [-0.1292,  0.3125,  0.9168],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
576/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.1935, 0.6424, 1.2452],
         [0.1953, 0.6415, 1.2457],
         [0.2111, 0.6254, 1.2503],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1772, 0.6258, 1.2287],
         [0.1940, 0.6402, 1.2444],
         [0.2111, 0.6254, 1.2503],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1746, 0.6231, 1.2260],
         [0.1795, 0.6254, 1.2296],
         [0.2111, 0.6254, 1.2503],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 62.7000, 188.1000,  74.1000, 368.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.1935, 0.6424, 1.2452],
         [0.1953, 0.6415, 1.2457],
         [0.2111, 0.6254, 1.2503],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1772, 0.6258, 1.2287],
         [0.1940, 0.6402, 1.2444],
         [0.2111, 0.6254, 1.2503],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1746, 0.6231, 1.2260],
         [0.1795, 0.6254, 1.2296],
         [0.2111, 0.6254, 1.2503],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
577/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.1935, 0.5023, 1.9772],
         [0.1935, 0.5024, 1.9773],
         [0.1917, 0.5005, 1.9754],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1755, 0.4839, 1.9589],
         [0.1768, 0.4853, 1.9603],
         [0.1905, 0.4993, 1.9742],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1574, 0.4655, 1.9405],
         [0.1588, 0.4669, 1.9419],
         [0.1749, 0.4833, 1.9583],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[478.8000, 248.9000, 488.3000, 337.2500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.1935, 0.5023, 1.9772],
         [0.1935, 0.5024, 1.9773],
         [0.1917, 0.5005, 1.9754],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1755, 0.4839, 1.9589],
         [0.1768, 0.4853, 1.9603],
         [0.1905, 0.4993, 1.9742],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1574, 0.4655, 1.9405],
         [0.1588, 0.4669, 1.9419],
         [0.1749, 0.4833, 1.9583],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
578/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.8618, 1.1155, 1.5768],
         [0.8618, 1.1155, 1.5768],
         [0.8618, 1.1155, 1.5768],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8618, 1.1155, 1.5768],
         [0.8618, 1.1155, 1.5768],
         [0.8618, 1.1155, 1.5768],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8596, 1.1132, 1.5745],
         [0.8596, 1.1132, 1.5745],
         [0.8596, 1.1132, 1.5745],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 98.8000,  72.2000, 123.5000, 474.0500,   0.0000],
        [118.7500,   6.6500, 139.6500,  92.1500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.8618, 1.1155, 1.5768],
         [0.8618, 1.1155, 1.5768],
         [0.8618, 1.1155, 1.5768],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8618, 1.1155, 1.5768],
         [0.8618, 1.1155, 1.5768],
         [0.8618, 1.1155, 1.5768],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8596, 1.1132, 1.5745],
         [0.8596, 1.1132, 1.5745],
         [0.8596, 1.1132, 1.5745],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
579/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.7933, 1.0280, 1.1411],
         [0.7933, 1.0280, 1.1411],
         [0.7956, 1.0303, 1.1434],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7933, 1.0280, 1.1438],
         [0.7933, 1.0280, 1.1438],
         [0.7954, 1.0301, 1.1460],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7911, 1.0257, 1.1737],
         [0.7912, 1.0259, 1.1738],
         [0.7933, 1.0280, 1.1759],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 59.8500, 171.9500,  72.2000, 353.4000,   0.0000],
        [564.3000, 261.2500, 576.6500, 323.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.7933, 1.0280, 1.1411],
         [0.7933, 1.0280, 1.1411],
         [0.7956, 1.0303, 1.1434],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7933, 1.0280, 1.1438],
         [0.7933, 1.0280, 1.1438],
         [0.7954, 1.0301, 1.1460],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7911, 1.0257, 1.1737],
         [0.7912, 1.0259, 1.1738],
         [0.7933, 1.0280, 1.1759],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
580/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.8710, -0.8495, -1.3546],
         [-0.8438, -0.8589, -1.3649],
         [-0.5822, -0.6210, -1.1514],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.9286, -0.9102, -1.3751],
         [-1.0320, -1.0671, -1.5183],
         [-0.5492, -0.5908, -1.0784],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0612,  0.0838, -0.3057],
         [-0.8939, -0.9296, -1.3148],
         [-0.9229, -0.9891, -1.3836],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[566.2000, 241.3000, 581.4000, 330.6000,   0.0000],
        [262.2000, 284.0500, 288.8000, 388.5500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.8710, -0.8495, -1.3546],
         [-0.8438, -0.8589, -1.3649],
         [-0.5822, -0.6210, -1.1514],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.9286, -0.9102, -1.3751],
         [-1.0320, -1.0671, -1.5183],
         [-0.5492, -0.5908, -1.0784],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0612,  0.0838, -0.3057],
         [-0.8939, -0.9296, -1.3148],
         [-0.9229, -0.9891, -1.3836],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
581/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.9474, 1.1681, 1.4025],
         [0.9474, 1.1681, 1.4025],
         [0.9474, 1.1681, 1.4025],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9474, 1.1681, 1.4025],
         [0.9474, 1.1681, 1.4025],
         [0.9474, 1.1681, 1.4025],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9474, 1.1681, 1.4025],
         [0.9474, 1.1681, 1.4025],
         [0.9474, 1.1681, 1.4025],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[532.0000, 135.8500, 551.0000, 395.2000,   0.0000],
        [148.2000, 257.4500, 159.6000, 327.7500,   0.0000],
        [171.0000, 255.5500, 183.3500, 314.4500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.9474, 1.1681, 1.4025],
         [0.9474, 1.1681, 1.4025],
         [0.9474, 1.1681, 1.4025],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9474, 1.1681, 1.4025],
         [0.9474, 1.1681, 1.4025],
         [0.9474, 1.1681, 1.4025],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9474, 1.1681, 1.4025],
         [0.9474, 1.1681, 1.4025],
         [0.9474, 1.1681, 1.4025],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
582/730
After normalization, Min: -2.0665296676312472, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.4911,  0.1527,  1.0017],
         [-0.4911,  0.1527,  1.0017],
         [-0.4911,  0.1527,  1.0017],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4911,  0.1527,  1.0017],
         [-0.4911,  0.1527,  1.0017],
         [-0.4911,  0.1527,  1.0017],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4911,  0.1527,  1.0017],
         [-0.4911,  0.1527,  1.0017],
         [-0.4911,  0.1527,  1.0017],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[378.1000, 121.6000, 395.2000, 384.7500,   0.0000],
        [486.4000, 242.2500, 495.9000, 301.1500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.4911,  0.1527,  1.0017],
         [-0.4911,  0.1527,  1.0017],
         [-0.4911,  0.1527,  1.0017],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4911,  0.1527,  1.0017],
         [-0.4911,  0.1527,  1.0017],
         [-0.4911,  0.1527,  1.0017],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4911,  0.1527,  1.0017],
         [-0.4911,  0.1527,  1.0017],
         [-0.4911,  0.1527,  1.0017],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
583/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.8516, -0.1984,  0.5650],
         [-0.8678, -0.2150,  0.5485],
         [-0.8678, -0.2150,  0.5485],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8691, -0.2164,  0.5471],
         [-0.8691, -0.2164,  0.5471],
         [-0.8690, -0.2162,  0.5473],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8871, -0.2347,  0.5288],
         [-0.8849, -0.2325,  0.5311],
         [-0.8827, -0.2302,  0.5334],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[ 26.6000, 187.1500,  40.8500, 345.8000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.8516, -0.1984,  0.5650],
         [-0.8678, -0.2150,  0.5485],
         [-0.8678, -0.2150,  0.5485],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8691, -0.2164,  0.5471],
         [-0.8691, -0.2164,  0.5471],
         [-0.8690, -0.2162,  0.5473],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8871, -0.2347,  0.5288],
         [-0.8849, -0.2325,  0.5311],
         [-0.8827, -0.2302,  0.5334],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
584/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.2805, 0.6438, 1.0200],
         [0.2259, 0.5867, 0.9673],
         [0.1763, 0.5198, 0.9488],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3702, 0.7355, 1.1113],
         [0.3005, 0.6629, 1.0432],
         [0.2460, 0.5911, 1.0198],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4540, 0.8212, 1.1966],
         [0.3972, 0.7617, 1.1415],
         [0.3116, 0.6581, 1.0865],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[323.9500, 244.1500, 335.3500, 300.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.2805, 0.6438, 1.0200],
         [0.2259, 0.5867, 0.9673],
         [0.1763, 0.5198, 0.9488],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3702, 0.7355, 1.1113],
         [0.3005, 0.6629, 1.0432],
         [0.2460, 0.5911, 1.0198],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4540, 0.8212, 1.1966],
         [0.3972, 0.7617, 1.1415],
         [0.3116, 0.6581, 1.0865],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
585/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.0844, 1.3081, 1.5420],
         [1.0844, 1.3081, 1.5420],
         [1.0867, 1.3104, 1.5443],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0844, 1.3081, 1.5420],
         [1.0844, 1.3081, 1.5420],
         [1.0867, 1.3104, 1.5443],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0844, 1.3081, 1.5420],
         [1.0844, 1.3081, 1.5420],
         [1.0867, 1.3104, 1.5443],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[403.7500, 169.1000, 414.2000, 358.1500,   0.0000],
        [529.1500, 224.2000, 543.4000, 340.1000,   0.0000],
        [487.3500, 266.0000, 503.5000, 318.2500,   0.0000],
        [443.6500, 258.4000, 453.1500, 315.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.0844, 1.3081, 1.5420],
         [1.0844, 1.3081, 1.5420],
         [1.0867, 1.3104, 1.5443],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0844, 1.3081, 1.5420],
         [1.0844, 1.3081, 1.5420],
         [1.0867, 1.3104, 1.5443],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0844, 1.3081, 1.5420],
         [1.0844, 1.3081, 1.5420],
         [1.0867, 1.3104, 1.5443],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
586/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.5707, 0.8880, 1.2631],
         [0.5707, 0.8880, 1.2631],
         [0.5707, 0.8880, 1.2654],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5707, 0.8880, 1.2631],
         [0.5707, 0.8880, 1.2631],
         [0.5707, 0.8880, 1.2654],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5707, 0.8880, 1.2631],
         [0.5707, 0.8880, 1.2631],
         [0.5707, 0.8880, 1.2654],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[583.3000, 129.2000, 603.2500, 293.5500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.5707, 0.8880, 1.2631],
         [0.5707, 0.8880, 1.2631],
         [0.5707, 0.8880, 1.2654],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5707, 0.8880, 1.2631],
         [0.5707, 0.8880, 1.2631],
         [0.5707, 0.8880, 1.2654],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5707, 0.8880, 1.2631],
         [0.5707, 0.8880, 1.2631],
         [0.5707, 0.8880, 1.2654],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
587/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.0565, 0.4848, 1.0186],
         [0.0565, 0.4848, 1.0186],
         [0.0610, 0.4894, 1.0232],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0384, 0.4664, 1.0002],
         [0.0371, 0.4650, 0.9989],
         [0.0416, 0.4696, 1.0035],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0178, 0.4453, 0.9792],
         [0.0033, 0.4305, 0.9645],
         [0.0075, 0.4348, 0.9688],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[414.2000, 211.8500, 424.6500, 325.8500,   0.0000],
        [312.5500, 249.8500, 326.8000, 307.8000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.0565, 0.4848, 1.0186],
         [0.0565, 0.4848, 1.0186],
         [0.0610, 0.4894, 1.0232],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0384, 0.4664, 1.0002],
         [0.0371, 0.4650, 0.9989],
         [0.0416, 0.4696, 1.0035],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0178, 0.4453, 0.9792],
         [0.0033, 0.4305, 0.9645],
         [0.0075, 0.4348, 0.9688],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
588/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.0670, 1.2202, 1.6113],
         [0.5278, 0.6690, 1.0626],
         [0.2561, 0.3913, 0.7860],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5012, 1.6642, 2.0533],
         [1.1395, 1.2944, 1.6851],
         [0.4560, 0.5957, 0.9895],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5773, 0.7196, 1.1129],
         [0.8579, 1.0065, 1.3985],
         [0.9100, 1.0598, 1.4516],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[317.3000,  16.1500, 355.3000, 465.5000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.0670, 1.2202, 1.6113],
         [0.5278, 0.6690, 1.0626],
         [0.2561, 0.3913, 0.7860],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5012, 1.6642, 2.0533],
         [1.1395, 1.2944, 1.6851],
         [0.4560, 0.5957, 0.9895],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5773, 0.7196, 1.1129],
         [0.8579, 1.0065, 1.3985],
         [0.9100, 1.0598, 1.4516],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
589/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.1187, 1.3431, 1.5768],
         [1.1187, 1.3431, 1.5768],
         [1.1187, 1.3431, 1.5768],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1187, 1.3431, 1.5768],
         [1.1187, 1.3431, 1.5768],
         [1.1187, 1.3431, 1.5768],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1164, 1.3408, 1.5745],
         [1.1164, 1.3408, 1.5745],
         [1.1164, 1.3408, 1.5745],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[446.5000, 151.0500, 462.6500, 361.0000,   0.0000],
        [542.4500, 217.5500, 552.9000, 338.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.1187, 1.3431, 1.5768],
         [1.1187, 1.3431, 1.5768],
         [1.1187, 1.3431, 1.5768],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1187, 1.3431, 1.5768],
         [1.1187, 1.3431, 1.5768],
         [1.1187, 1.3431, 1.5768],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1164, 1.3408, 1.5745],
         [1.1164, 1.3408, 1.5745],
         [1.1164, 1.3408, 1.5745],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
590/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.5707, 0.9405, 1.7511],
         [0.5693, 0.9391, 1.7497],
         [0.5513, 0.9207, 1.7314],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5707, 0.9405, 1.7511],
         [0.5693, 0.9391, 1.7497],
         [0.5513, 0.9207, 1.7314],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5707, 0.9405, 1.7511],
         [0.5693, 0.9391, 1.7497],
         [0.5513, 0.9207, 1.7314],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[120.6500, 138.7000, 135.8500, 347.7000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.5707, 0.9405, 1.7511],
         [0.5693, 0.9391, 1.7497],
         [0.5513, 0.9207, 1.7314],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5707, 0.9405, 1.7511],
         [0.5693, 0.9391, 1.7497],
         [0.5513, 0.9207, 1.7314],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5707, 0.9405, 1.7511],
         [0.5693, 0.9391, 1.7497],
         [0.5513, 0.9207, 1.7314],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
591/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.9474, 1.1155, 1.3677],
         [0.9474, 1.1155, 1.3677],
         [0.9497, 1.1178, 1.3700],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9474, 1.1155, 1.3677],
         [0.9474, 1.1155, 1.3677],
         [0.9495, 1.1177, 1.3698],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9452, 1.1132, 1.3654],
         [0.9454, 1.1134, 1.3656],
         [0.9474, 1.1155, 1.3677],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[151.0500, 185.2500, 160.5500, 309.7000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.9474, 1.1155, 1.3677],
         [0.9474, 1.1155, 1.3677],
         [0.9497, 1.1178, 1.3700],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9474, 1.1155, 1.3677],
         [0.9474, 1.1155, 1.3677],
         [0.9495, 1.1177, 1.3698],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9452, 1.1132, 1.3654],
         [0.9454, 1.1134, 1.3656],
         [0.9474, 1.1155, 1.3677],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
592/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.2043, 1.4307, 1.8557],
         [1.2043, 1.4307, 1.8557],
         [1.2043, 1.4307, 1.8557],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2043, 1.4307, 1.8557],
         [1.2043, 1.4307, 1.8557],
         [1.2043, 1.4307, 1.8557],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2020, 1.4284, 1.8534],
         [1.2020, 1.4284, 1.8534],
         [1.2020, 1.4284, 1.8534],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[442.7000, 254.6000, 456.9500, 311.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.2043, 1.4307, 1.8557],
         [1.2043, 1.4307, 1.8557],
         [1.2043, 1.4307, 1.8557],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2043, 1.4307, 1.8557],
         [1.2043, 1.4307, 1.8557],
         [1.2043, 1.4307, 1.8557],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2020, 1.4284, 1.8534],
         [1.2020, 1.4284, 1.8534],
         [1.2020, 1.4284, 1.8534],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
593/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-1.3390, -1.1519, -0.8722],
         [-1.5014, -1.3165, -1.0403],
         [-0.7259, -0.5122, -0.2900],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8336, -0.6352, -0.3578],
         [-1.3034, -1.1141, -0.8387],
         [-0.5901, -0.3734, -0.1518],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.0819, -0.8890, -0.6106],
         [-1.1561, -0.9636, -0.6889],
         [-0.4557, -0.2359, -0.0150],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[302.1000, 208.0500, 310.6500, 338.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-1.3390, -1.1519, -0.8722],
         [-1.5014, -1.3165, -1.0403],
         [-0.7259, -0.5122, -0.2900],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8336, -0.6352, -0.3578],
         [-1.3034, -1.1141, -0.8387],
         [-0.5901, -0.3734, -0.1518],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.0819, -0.8890, -0.6106],
         [-1.1561, -0.9636, -0.6889],
         [-0.4557, -0.2359, -0.0150],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
594/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[2.1628, 2.3406, 2.5872],
         [2.1444, 2.3217, 2.5684],
         [2.1286, 2.3056, 2.5525],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.1597, 2.3374, 2.5841],
         [2.1263, 2.3033, 2.5501],
         [2.1126, 2.2893, 2.5362],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.1263, 2.3033, 2.5501],
         [2.1083, 2.2848, 2.5318],
         [2.0925, 2.2687, 2.5157],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[421.8000, 223.2500, 436.0500, 347.7000,   0.0000],
        [ 43.7000, 244.1500,  59.8500, 267.9000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[2.1628, 2.3406, 2.5872],
         [2.1444, 2.3217, 2.5684],
         [2.1286, 2.3056, 2.5525],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.1597, 2.3374, 2.5841],
         [2.1263, 2.3033, 2.5501],
         [2.1126, 2.2893, 2.5362],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.1263, 2.3033, 2.5501],
         [2.1083, 2.2848, 2.5318],
         [2.0925, 2.2687, 2.5157],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
595/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.2453, 0.6604, 1.7337],
         [0.2453, 0.6604, 1.7337],
         [0.2453, 0.6604, 1.7337],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2453, 0.6604, 1.7337],
         [0.2453, 0.6604, 1.7337],
         [0.2453, 0.6604, 1.7337],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2476, 0.6627, 1.7360],
         [0.2476, 0.6627, 1.7360],
         [0.2476, 0.6627, 1.7360],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[211.8500, 224.2000, 222.3000, 352.4500,   0.0000],
        [ 52.2500, 219.4500,  73.1500, 353.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.2453, 0.6604, 1.7337],
         [0.2453, 0.6604, 1.7337],
         [0.2453, 0.6604, 1.7337],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2453, 0.6604, 1.7337],
         [0.2453, 0.6604, 1.7337],
         [0.2453, 0.6604, 1.7337],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2476, 0.6627, 1.7360],
         [0.2476, 0.6627, 1.7360],
         [0.2476, 0.6627, 1.7360],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
596/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.1143,  0.2752,  0.8274],
         [-0.1143,  0.2752,  0.8274],
         [-0.1143,  0.2752,  0.8274],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1143,  0.2752,  0.8274],
         [-0.1143,  0.2752,  0.8274],
         [-0.1143,  0.2752,  0.8274],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1143,  0.2752,  0.8274],
         [-0.1143,  0.2752,  0.8274],
         [-0.1143,  0.2752,  0.8274],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[175.7500, 258.4000, 186.2000, 322.0500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.1143,  0.2752,  0.8274],
         [-0.1143,  0.2752,  0.8274],
         [-0.1143,  0.2752,  0.8274],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1143,  0.2752,  0.8274],
         [-0.1143,  0.2752,  0.8274],
         [-0.1143,  0.2752,  0.8274],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1143,  0.2752,  0.8274],
         [-0.1143,  0.2752,  0.8274],
         [-0.1143,  0.2752,  0.8274],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
597/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[ 0.2497,  0.0009, -0.6497],
         [ 0.4178,  0.1858, -0.5166],
         [ 0.5004,  0.2338, -0.4899],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.2599,  0.0469, -0.5971],
         [ 0.2036, -0.0476, -0.6952],
         [ 0.2479, -0.0227, -0.7069],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.4024,  0.2244, -0.3429],
         [ 0.0233, -0.2110, -0.7981],
         [-0.0214, -0.2712, -0.8907],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[113.0500, 180.5000, 131.1000, 348.6500,   0.0000],
        [426.5500,   2.8500, 467.4000, 428.4500,   0.0000],
        [356.2500,   0.9500, 388.5500, 419.9000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[ 0.2497,  0.0009, -0.6497],
         [ 0.4178,  0.1858, -0.5166],
         [ 0.5004,  0.2338, -0.4899],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.2599,  0.0469, -0.5971],
         [ 0.2036, -0.0476, -0.6952],
         [ 0.2479, -0.0227, -0.7069],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.4024,  0.2244, -0.3429],
         [ 0.0233, -0.2110, -0.7981],
         [-0.0214, -0.2712, -0.8907],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
598/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[ 1.2713e+00,  1.4301e+00,  1.7827e+00],
         [ 2.4125e-02,  1.7167e-01,  4.7562e-01],
         [-1.2263e+00, -1.1040e+00, -8.5481e-01],
         ...,
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00]],

        [[-8.0678e-01, -6.7778e-01, -3.7006e-01],
         [-8.9959e-01, -7.7005e-01, -4.8834e-01],
         [-1.0767e+00, -9.3608e-01, -7.4181e-01],
         ...,
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00]],

        [[-9.8734e-01, -8.5964e-01, -6.1611e-01],
         [-9.2663e-01, -7.8053e-01, -5.9117e-01],
         [-2.7834e-01, -1.1547e-01,  1.4687e-03],
         ...,
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00]],

        ...,

        [[ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         ...,
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00]],

        [[ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         ...,
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00]],

        [[ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         ...,
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00]]]), 'annot': tensor([[543.4000,  74.1000, 583.3000, 394.2500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[ 1.2713e+00,  1.4301e+00,  1.7827e+00],
         [ 2.4125e-02,  1.7167e-01,  4.7562e-01],
         [-1.2263e+00, -1.1040e+00, -8.5481e-01],
         ...,
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00]],

        [[-8.0678e-01, -6.7778e-01, -3.7006e-01],
         [-8.9959e-01, -7.7005e-01, -4.8834e-01],
         [-1.0767e+00, -9.3608e-01, -7.4181e-01],
         ...,
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00]],

        [[-9.8734e-01, -8.5964e-01, -6.1611e-01],
         [-9.2663e-01, -7.8053e-01, -5.9117e-01],
         [-2.7834e-01, -1.1547e-01,  1.4687e-03],
         ...,
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00]],

        ...,

        [[ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         ...,
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00]],

        [[ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         ...,
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00]],

        [[ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         ...,
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00],
         [ 0.0000e+00,  0.0000e+00,  0.0000e+00]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
599/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.5762, -0.1445,  1.4030],
         [-0.5596, -0.1275,  1.4200],
         [-0.5573, -0.1251,  1.4222],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5762, -0.1445,  1.4030],
         [-0.5596, -0.1275,  1.4200],
         [-0.5573, -0.1251,  1.4222],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5762, -0.1445,  1.4030],
         [-0.5596, -0.1275,  1.4200],
         [-0.5573, -0.1251,  1.4222],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[434.1500, 145.3500, 472.1500, 414.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.5762, -0.1445,  1.4030],
         [-0.5596, -0.1275,  1.4200],
         [-0.5573, -0.1251,  1.4222],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5762, -0.1445,  1.4030],
         [-0.5596, -0.1275,  1.4200],
         [-0.5573, -0.1251,  1.4222],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5762, -0.1445,  1.4030],
         [-0.5596, -0.1275,  1.4200],
         [-0.5573, -0.1251,  1.4222],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
600/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.2860,  0.2047,  0.7920],
         [-0.3027,  0.1877,  0.7751],
         [-0.3049,  0.1854,  0.7728],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2860,  0.2047,  0.7920],
         [-0.3027,  0.1877,  0.7751],
         [-0.3049,  0.1854,  0.7728],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2860,  0.2047,  0.7920],
         [-0.3027,  0.1877,  0.7751],
         [-0.3049,  0.1854,  0.7728],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[209.0000, 176.7000, 228.9500, 228.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.2860,  0.2047,  0.7920],
         [-0.3027,  0.1877,  0.7751],
         [-0.3049,  0.1854,  0.7728],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2860,  0.2047,  0.7920],
         [-0.3027,  0.1877,  0.7751],
         [-0.3049,  0.1854,  0.7728],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2860,  0.2047,  0.7920],
         [-0.3027,  0.1877,  0.7751],
         [-0.3049,  0.1854,  0.7728],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
601/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.4436, 0.7756, 1.0292],
         [0.2446, 0.5721, 0.8266],
         [0.0277, 0.3481, 0.6036],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3501, 0.6800, 0.9367],
         [0.2312, 0.5584, 0.8130],
         [0.0869, 0.4085, 0.6638],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1935, 0.5198, 0.8086],
         [0.2074, 0.5337, 0.7931],
         [0.1810, 0.5008, 0.7616],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[154.8500, 226.1000, 169.1000, 306.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.4436, 0.7756, 1.0292],
         [0.2446, 0.5721, 0.8266],
         [0.0277, 0.3481, 0.6036],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3501, 0.6800, 0.9367],
         [0.2312, 0.5584, 0.8130],
         [0.0869, 0.4085, 0.6638],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1935, 0.5198, 0.8086],
         [0.2074, 0.5337, 0.7931],
         [0.1810, 0.5008, 0.7616],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
602/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.8789, 1.0981, 1.3328],
         [0.8807, 1.0998, 1.3346],
         [0.8983, 1.1178, 1.3525],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8807, 1.0998, 1.3346],
         [0.8961, 1.1155, 1.3502],
         [0.8983, 1.1178, 1.3525],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8961, 1.1155, 1.3502],
         [0.8962, 1.1157, 1.3504],
         [0.9006, 1.1202, 1.3548],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[507.3000,   2.8500, 533.9000, 400.9000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.8789, 1.0981, 1.3328],
         [0.8807, 1.0998, 1.3346],
         [0.8983, 1.1178, 1.3525],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8807, 1.0998, 1.3346],
         [0.8961, 1.1155, 1.3502],
         [0.8983, 1.1178, 1.3525],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8961, 1.1155, 1.3502],
         [0.8962, 1.1157, 1.3504],
         [0.9006, 1.1202, 1.3548],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
603/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.5767, -0.0049,  1.2108],
         [-0.5767, -0.0049,  1.2108],
         [-0.5744, -0.0026,  1.2131],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5767, -0.0049,  1.2108],
         [-0.5767, -0.0049,  1.2108],
         [-0.5744, -0.0026,  1.2131],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5767, -0.0049,  1.2108],
         [-0.5767, -0.0049,  1.2108],
         [-0.5744, -0.0026,  1.2131],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[336.3000, 150.1000, 357.2000, 349.6000,   0.0000],
        [163.4000, 149.1500, 184.3000, 357.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.5767, -0.0049,  1.2108],
         [-0.5767, -0.0049,  1.2108],
         [-0.5744, -0.0026,  1.2131],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5767, -0.0049,  1.2108],
         [-0.5767, -0.0049,  1.2108],
         [-0.5744, -0.0026,  1.2131],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5767, -0.0049,  1.2108],
         [-0.5767, -0.0049,  1.2108],
         [-0.5744, -0.0026,  1.2131],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
604/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.6109,  0.2052,  1.4548],
         [-0.6109,  0.2052,  1.4548],
         [-0.6109,  0.2052,  1.4548],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.6109,  0.2052,  1.4548],
         [-0.6109,  0.2052,  1.4548],
         [-0.6109,  0.2052,  1.4548],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.6132,  0.2029,  1.4525],
         [-0.6132,  0.2029,  1.4525],
         [-0.6132,  0.2029,  1.4525],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[457.9000, 155.8000, 483.5500, 355.3000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.6109,  0.2052,  1.4548],
         [-0.6109,  0.2052,  1.4548],
         [-0.6109,  0.2052,  1.4548],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.6109,  0.2052,  1.4548],
         [-0.6109,  0.2052,  1.4548],
         [-0.6109,  0.2052,  1.4548],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.6132,  0.2029,  1.4525],
         [-0.6132,  0.2029,  1.4525],
         [-0.6132,  0.2029,  1.4525],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
605/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.1872, 1.4307, 1.5420],
         [1.1872, 1.4307, 1.5420],
         [1.1872, 1.4307, 1.5420],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1872, 1.4307, 1.5447],
         [1.1872, 1.4307, 1.5447],
         [1.1872, 1.4307, 1.5447],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1894, 1.4330, 1.5791],
         [1.1894, 1.4330, 1.5791],
         [1.1894, 1.4330, 1.5791],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[166.2500, 134.9000, 194.7500, 333.4500,   0.0000],
        [387.6000, 240.3500, 400.9000, 308.7500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.1872, 1.4307, 1.5420],
         [1.1872, 1.4307, 1.5420],
         [1.1872, 1.4307, 1.5420],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1872, 1.4307, 1.5447],
         [1.1872, 1.4307, 1.5447],
         [1.1872, 1.4307, 1.5447],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1894, 1.4330, 1.5791],
         [1.1894, 1.4330, 1.5791],
         [1.1894, 1.4330, 1.5791],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
606/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.1015, 1.3081, 1.7860],
         [1.1015, 1.3081, 1.7860],
         [1.1037, 1.3104, 1.7882],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1029, 1.3095, 1.7873],
         [1.1028, 1.3094, 1.7872],
         [1.1015, 1.3081, 1.7860],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1209, 1.3279, 1.8056],
         [1.1173, 1.3242, 1.8020],
         [1.1015, 1.3081, 1.7860],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[138.7000, 107.3500, 157.7000, 385.7000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.1015, 1.3081, 1.7860],
         [1.1015, 1.3081, 1.7860],
         [1.1037, 1.3104, 1.7882],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1029, 1.3095, 1.7873],
         [1.1028, 1.3094, 1.7872],
         [1.1015, 1.3081, 1.7860],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1209, 1.3279, 1.8056],
         [1.1173, 1.3242, 1.8020],
         [1.1015, 1.3081, 1.7860],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
607/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[ 0.1583,  0.4134,  1.0870],
         [ 0.2125,  0.4522,  1.1255],
         [ 0.2675,  0.5079,  1.1811],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0475,  0.3006,  0.9746],
         [ 0.1057,  0.3587,  1.0325],
         [ 0.1950,  0.4339,  1.1073],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0940,  0.1559,  0.8306],
         [-0.0168,  0.2335,  0.9078],
         [ 0.0912,  0.3277,  1.0017],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[473.1000, 261.2500, 481.6500, 334.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[ 0.1583,  0.4134,  1.0870],
         [ 0.2125,  0.4522,  1.1255],
         [ 0.2675,  0.5079,  1.1811],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0475,  0.3006,  0.9746],
         [ 0.1057,  0.3587,  1.0325],
         [ 0.1950,  0.4339,  1.1073],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0940,  0.1559,  0.8306],
         [-0.0168,  0.2335,  0.9078],
         [ 0.0912,  0.3277,  1.0017],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
608/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.8618, 1.2731, 1.8905],
         [0.8618, 1.2731, 1.8905],
         [0.8618, 1.2731, 1.8905],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8618, 1.2731, 1.8905],
         [0.8618, 1.2731, 1.8905],
         [0.8618, 1.2731, 1.8905],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8641, 1.2754, 1.8928],
         [0.8641, 1.2754, 1.8928],
         [0.8641, 1.2754, 1.8928],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[231.8000, 103.5500, 242.2500, 163.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.8618, 1.2731, 1.8905],
         [0.8618, 1.2731, 1.8905],
         [0.8618, 1.2731, 1.8905],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8618, 1.2731, 1.8905],
         [0.8618, 1.2731, 1.8905],
         [0.8618, 1.2731, 1.8905],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8641, 1.2754, 1.8928],
         [0.8641, 1.2754, 1.8928],
         [0.8641, 1.2754, 1.8928],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
609/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.9064, 2.0609, 2.3786],
         [1.9064, 2.0609, 2.3786],
         [1.9042, 2.0586, 2.3763],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.9064, 2.0609, 2.3786],
         [1.9064, 2.0609, 2.3786],
         [1.9042, 2.0586, 2.3763],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.9064, 2.0609, 2.3786],
         [1.9064, 2.0609, 2.3786],
         [1.9042, 2.0586, 2.3763],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[268.8500, 199.5000, 281.2000, 317.3000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.9064, 2.0609, 2.3786],
         [1.9064, 2.0609, 2.3786],
         [1.9042, 2.0586, 2.3763],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.9064, 2.0609, 2.3786],
         [1.9064, 2.0609, 2.3786],
         [1.9042, 2.0586, 2.3763],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.9064, 2.0609, 2.3786],
         [1.9064, 2.0609, 2.3786],
         [1.9042, 2.0586, 2.3763],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
610/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-1.0061, -0.8466, -1.1261],
         [-1.1089, -0.9517, -1.2307],
         [-1.1226, -0.9657, -1.2446],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.9587, -0.7981, -1.0778],
         [-1.0576, -0.8993, -1.1785],
         [-1.0799, -0.9220, -1.2011],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.0001, -0.8404, -1.1199],
         [-1.0474, -0.8888, -1.1681],
         [-1.0916, -0.9340, -1.2131],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[516.8000,  98.8000, 541.5000, 417.0500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-1.0061, -0.8466, -1.1261],
         [-1.1089, -0.9517, -1.2307],
         [-1.1226, -0.9657, -1.2446],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.9587, -0.7981, -1.0778],
         [-1.0576, -0.8993, -1.1785],
         [-1.0799, -0.9220, -1.2011],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.0001, -0.8404, -1.1199],
         [-1.0474, -0.8888, -1.1681],
         [-1.0916, -0.9340, -1.2131],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
611/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.5468, 1.6933, 2.0125],
         [1.5437, 1.6901, 2.0094],
         [1.5103, 1.6560, 1.9755],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5463, 1.6928, 2.0121],
         [1.5284, 1.6745, 1.9939],
         [1.5137, 1.6595, 1.9789],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5463, 1.6928, 2.0121],
         [1.5297, 1.6758, 1.9951],
         [1.5274, 1.6735, 1.9928],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[174.8000, 100.7000, 194.7500, 435.1000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.5468, 1.6933, 2.0125],
         [1.5437, 1.6901, 2.0094],
         [1.5103, 1.6560, 1.9755],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5463, 1.6928, 2.0121],
         [1.5284, 1.6745, 1.9939],
         [1.5137, 1.6595, 1.9789],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5463, 1.6928, 2.0121],
         [1.5297, 1.6758, 1.9951],
         [1.5274, 1.6735, 1.9928],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
612/730
After normalization, Min: -2.083654420442196, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.2899, 1.5182, 1.7511],
         [1.2913, 1.5154, 1.7497],
         [1.3048, 1.4809, 1.7314],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2899, 1.5182, 1.7511],
         [1.2913, 1.5154, 1.7497],
         [1.3048, 1.4809, 1.7314],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2877, 1.5159, 1.7488],
         [1.2892, 1.5133, 1.7476],
         [1.3048, 1.4809, 1.7314],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[457.9000, 170.0500, 483.5500, 369.5500,   0.0000],
        [113.0500, 133.0000, 126.3500, 287.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.2899, 1.5182, 1.7511],
         [1.2913, 1.5154, 1.7497],
         [1.3048, 1.4809, 1.7314],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2899, 1.5182, 1.7511],
         [1.2913, 1.5154, 1.7497],
         [1.3048, 1.4809, 1.7314],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2877, 1.5159, 1.7488],
         [1.2892, 1.5133, 1.7476],
         [1.3048, 1.4809, 1.7314],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
613/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.1777, 0.4862, 0.8806],
         [0.1971, 0.5060, 0.9003],
         [0.2282, 0.5379, 0.9320],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1971, 0.5060, 0.9003],
         [0.2138, 0.5231, 0.9173],
         [0.2316, 0.5413, 0.9354],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2304, 0.5401, 0.9342],
         [0.2316, 0.5413, 0.9354],
         [0.2453, 0.5553, 0.9494],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[361.9500, 145.3500, 390.4500, 383.8000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.1777, 0.4862, 0.8806],
         [0.1971, 0.5060, 0.9003],
         [0.2282, 0.5379, 0.9320],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1971, 0.5060, 0.9003],
         [0.2138, 0.5231, 0.9173],
         [0.2316, 0.5413, 0.9354],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2304, 0.5401, 0.9342],
         [0.2316, 0.5413, 0.9354],
         [0.2453, 0.5553, 0.9494],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
614/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.5022, 0.7129, 0.9145],
         [0.5049, 0.7129, 0.9145],
         [0.5387, 0.7152, 0.9168],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5022, 0.7129, 0.9145],
         [0.5049, 0.7129, 0.9145],
         [0.5385, 0.7150, 0.9166],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4999, 0.7106, 0.9122],
         [0.5028, 0.7108, 0.9124],
         [0.5364, 0.7129, 0.9145],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[477.8500,  81.7000, 495.9000, 407.5500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.5022, 0.7129, 0.9145],
         [0.5049, 0.7129, 0.9145],
         [0.5387, 0.7152, 0.9168],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5022, 0.7129, 0.9145],
         [0.5049, 0.7129, 0.9145],
         [0.5385, 0.7150, 0.9166],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4999, 0.7106, 0.9122],
         [0.5028, 0.7108, 0.9124],
         [0.5364, 0.7129, 0.9145],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
615/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.7933, 0.8529, 1.1759],
         [0.7933, 0.8529, 1.1759],
         [0.7933, 0.8529, 1.1759],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7933, 0.8529, 1.1759],
         [0.7933, 0.8529, 1.1759],
         [0.7933, 0.8529, 1.1759],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7933, 0.8529, 1.1759],
         [0.7933, 0.8529, 1.1759],
         [0.7933, 0.8529, 1.1759],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[358.1500, 140.6000, 365.7500, 335.3500,   0.0000],
        [398.0500, 257.4500, 406.6000, 315.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.7933, 0.8529, 1.1759],
         [0.7933, 0.8529, 1.1759],
         [0.7933, 0.8529, 1.1759],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7933, 0.8529, 1.1759],
         [0.7933, 0.8529, 1.1759],
         [0.7933, 0.8529, 1.1759],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7933, 0.8529, 1.1759],
         [0.7933, 0.8529, 1.1759],
         [0.7933, 0.8529, 1.1759],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
616/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.1263, 0.3959, 1.2970],
         [0.1214, 0.3411, 1.2590],
         [0.0723, 0.2909, 1.2090],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1575, 0.3780, 1.2957],
         [0.1228, 0.3426, 1.2605],
         [0.0906, 0.3097, 1.2277],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1399, 0.3600, 1.2778],
         [0.1243, 0.3440, 1.2619],
         [0.1131, 0.3326, 1.2506],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[350.5500, 110.2000, 369.5500, 411.3500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.1263, 0.3959, 1.2970],
         [0.1214, 0.3411, 1.2590],
         [0.0723, 0.2909, 1.2090],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1575, 0.3780, 1.2957],
         [0.1228, 0.3426, 1.2605],
         [0.0906, 0.3097, 1.2277],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1399, 0.3600, 1.2778],
         [0.1243, 0.3440, 1.2619],
         [0.1131, 0.3326, 1.2506],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
617/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.1430, 0.7133, 1.4553],
         [0.1778, 0.7489, 1.4906],
         [0.1894, 0.7608, 1.5025],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1250, 0.6949, 1.4369],
         [0.1610, 0.7318, 1.4736],
         [0.1883, 0.7596, 1.5013],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1070, 0.6765, 1.4186],
         [0.1430, 0.7133, 1.4553],
         [0.1726, 0.7436, 1.4854],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[393.3000, 114.9500, 417.0500, 457.9000,   0.0000],
        [576.6500, 255.5500, 585.2000, 286.9000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.1430, 0.7133, 1.4553],
         [0.1778, 0.7489, 1.4906],
         [0.1894, 0.7608, 1.5025],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1250, 0.6949, 1.4369],
         [0.1610, 0.7318, 1.4736],
         [0.1883, 0.7596, 1.5013],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1070, 0.6765, 1.4186],
         [0.1430, 0.7133, 1.4553],
         [0.1726, 0.7436, 1.4854],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
618/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.8974, 0.7834, 1.0906],
         [0.8969, 0.7815, 1.0852],
         [0.8944, 0.7564, 1.0311],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9483, 0.7972, 1.1558],
         [0.9305, 0.7791, 1.1062],
         [0.9223, 0.7673, 1.0863],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9509, 0.7491, 1.1249],
         [0.9472, 0.7466, 1.1184],
         [0.9826, 0.7921, 1.1154],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[333.4500, 227.0500, 345.8000, 322.0500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.8974, 0.7834, 1.0906],
         [0.8969, 0.7815, 1.0852],
         [0.8944, 0.7564, 1.0311],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9483, 0.7972, 1.1558],
         [0.9305, 0.7791, 1.1062],
         [0.9223, 0.7673, 1.0863],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9509, 0.7491, 1.1249],
         [0.9472, 0.7466, 1.1184],
         [0.9826, 0.7921, 1.1154],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
619/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.3584, 1.5882, 1.8208],
         [1.3611, 1.5869, 1.8208],
         [1.3949, 1.5707, 1.8208],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3584, 1.5882, 1.8208],
         [1.3611, 1.5869, 1.8208],
         [1.3949, 1.5707, 1.8208],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3562, 1.5859, 1.8185],
         [1.3589, 1.5845, 1.8185],
         [1.3927, 1.5684, 1.8185],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[234.6500, 227.0500, 244.1500, 303.0500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.3584, 1.5882, 1.8208],
         [1.3611, 1.5869, 1.8208],
         [1.3949, 1.5707, 1.8208],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3584, 1.5882, 1.8208],
         [1.3611, 1.5869, 1.8208],
         [1.3949, 1.5707, 1.8208],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3562, 1.5859, 1.8185],
         [1.3589, 1.5845, 1.8185],
         [1.3927, 1.5684, 1.8185],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
620/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.4607, 1.5528, 1.7855],
         [1.4427, 1.5343, 1.7672],
         [1.4269, 1.5182, 1.7511],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4607, 1.5528, 1.7855],
         [1.4427, 1.5343, 1.7672],
         [1.4269, 1.5182, 1.7511],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4607, 1.5528, 1.7855],
         [1.4427, 1.5343, 1.7672],
         [1.4269, 1.5182, 1.7511],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[254.6000, 216.6000, 263.1500, 354.3500,   0.0000],
        [ 97.8500, 228.0000, 108.3000, 364.8000,   0.0000],
        [141.5500, 238.4500, 152.9500, 304.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.4607, 1.5528, 1.7855],
         [1.4427, 1.5343, 1.7672],
         [1.4269, 1.5182, 1.7511],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4607, 1.5528, 1.7855],
         [1.4427, 1.5343, 1.7672],
         [1.4269, 1.5182, 1.7511],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4607, 1.5528, 1.7855],
         [1.4427, 1.5343, 1.7672],
         [1.4269, 1.5182, 1.7511],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
621/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.3990, 1.1676, 1.9424],
         [0.4008, 1.1694, 1.9442],
         [0.4211, 1.1879, 1.9626],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3814, 1.1496, 1.9245],
         [0.3994, 1.1681, 1.9428],
         [0.4197, 1.1865, 1.9612],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3634, 1.1312, 1.9107],
         [0.3812, 1.1495, 1.9289],
         [0.3994, 1.1655, 1.9451],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[444.6000, 194.7500, 451.2500, 292.6000,   0.0000],
        [548.1500, 256.5000, 558.6000, 323.0000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.3990, 1.1676, 1.9424],
         [0.4008, 1.1694, 1.9442],
         [0.4211, 1.1879, 1.9626],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3814, 1.1496, 1.9245],
         [0.3994, 1.1681, 1.9428],
         [0.4197, 1.1865, 1.9612],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3634, 1.1312, 1.9107],
         [0.3812, 1.1495, 1.9289],
         [0.3994, 1.1655, 1.9451],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
622/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.8447, 1.0455, 1.5594],
         [0.8447, 1.0455, 1.5594],
         [0.8424, 1.0432, 1.5571],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8447, 1.0455, 1.5594],
         [0.8447, 1.0455, 1.5594],
         [0.8426, 1.0434, 1.5573],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8469, 1.0478, 1.5617],
         [0.8468, 1.0476, 1.5615],
         [0.8447, 1.0455, 1.5594],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[109.2500, 144.4000, 122.5500, 382.8500,   0.0000],
        [275.5000, 262.2000, 284.0500, 327.7500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.8447, 1.0455, 1.5594],
         [0.8447, 1.0455, 1.5594],
         [0.8424, 1.0432, 1.5571],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8447, 1.0455, 1.5594],
         [0.8447, 1.0455, 1.5594],
         [0.8426, 1.0434, 1.5573],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8469, 1.0478, 1.5617],
         [0.8468, 1.0476, 1.5615],
         [0.8447, 1.0455, 1.5594],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
623/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.5193, 0.7829, 1.1411],
         [0.5211, 0.7847, 1.1429],
         [0.5387, 0.8027, 1.1608],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5198, 0.7834, 1.1415],
         [0.5365, 0.8005, 1.1586],
         [0.5400, 0.8041, 1.1622],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5176, 0.7811, 1.1393],
         [0.5380, 0.8020, 1.1601],
         [0.5581, 0.8225, 1.1805],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[331.5500, 186.2000, 341.0500, 363.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.5193, 0.7829, 1.1411],
         [0.5211, 0.7847, 1.1429],
         [0.5387, 0.8027, 1.1608],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5198, 0.7834, 1.1415],
         [0.5365, 0.8005, 1.1586],
         [0.5400, 0.8041, 1.1622],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5176, 0.7811, 1.1393],
         [0.5380, 0.8020, 1.1601],
         [0.5581, 0.8225, 1.1805],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
624/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.0801,  0.5903,  1.6291],
         [-0.0814,  0.5890,  1.6277],
         [-0.0994,  0.5705,  1.6094],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0801,  0.5903,  1.6291],
         [-0.0814,  0.5890,  1.6277],
         [-0.0994,  0.5705,  1.6094],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0823,  0.5880,  1.6268],
         [-0.0835,  0.5868,  1.6256],
         [-0.0994,  0.5705,  1.6094],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[111.1500, 143.4500, 143.4500, 303.0500,   0.0000],
        [150.1000,   1.9000, 172.9000,  95.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.0801,  0.5903,  1.6291],
         [-0.0814,  0.5890,  1.6277],
         [-0.0994,  0.5705,  1.6094],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0801,  0.5903,  1.6291],
         [-0.0814,  0.5890,  1.6277],
         [-0.0994,  0.5705,  1.6094],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0823,  0.5880,  1.6268],
         [-0.0835,  0.5868,  1.6256],
         [-0.0994,  0.5705,  1.6094],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
625/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.6221, 0.7829, 1.0365],
         [0.6221, 0.7829, 1.0365],
         [0.6198, 0.7806, 1.0342],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6221, 0.7829, 1.0365],
         [0.6221, 0.7829, 1.0365],
         [0.6200, 0.7808, 1.0344],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6243, 0.7852, 1.0388],
         [0.6241, 0.7850, 1.0386],
         [0.6221, 0.7829, 1.0365],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[221.3500, 246.0500, 228.9500, 333.4500,   0.0000],
        [ 23.7500, 177.6500,  33.2500, 357.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.6221, 0.7829, 1.0365],
         [0.6221, 0.7829, 1.0365],
         [0.6198, 0.7806, 1.0342],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6221, 0.7829, 1.0365],
         [0.6221, 0.7829, 1.0365],
         [0.6200, 0.7808, 1.0344],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6243, 0.7852, 1.0388],
         [0.6241, 0.7850, 1.0386],
         [0.6221, 0.7829, 1.0365],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
626/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.0673, 1.2206, 1.4374],
         [1.0884, 1.2422, 1.4589],
         [1.1421, 1.2971, 1.5135],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0511, 1.2040, 1.4209],
         [1.0870, 1.2408, 1.4575],
         [1.1239, 1.2785, 1.4950],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0533, 1.2062, 1.4231],
         [1.0858, 1.2395, 1.4562],
         [1.1058, 1.2599, 1.4765],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[144.4000, 138.7000, 161.5000, 364.8000,   0.0000],
        [ 93.1000, 226.1000, 102.6000, 316.3500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.0673, 1.2206, 1.4374],
         [1.0884, 1.2422, 1.4589],
         [1.1421, 1.2971, 1.5135],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0511, 1.2040, 1.4209],
         [1.0870, 1.2408, 1.4575],
         [1.1239, 1.2785, 1.4950],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0533, 1.2062, 1.4231],
         [1.0858, 1.2395, 1.4562],
         [1.1058, 1.2599, 1.4765],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
627/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.3021, 0.2637, 0.4682],
         [0.3940, 0.3572, 0.5613],
         [0.5061, 0.4718, 0.6754],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4274, 0.4084, 0.6462],
         [0.5343, 0.5018, 0.7395],
         [0.6276, 0.5946, 0.8357],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5221, 0.5057, 0.7477],
         [0.6349, 0.6185, 0.8640],
         [0.7406, 0.6986, 0.9897],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[208.0500, 155.8000, 224.2000, 380.0000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.3021, 0.2637, 0.4682],
         [0.3940, 0.3572, 0.5613],
         [0.5061, 0.4718, 0.6754],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4274, 0.4084, 0.6462],
         [0.5343, 0.5018, 0.7395],
         [0.6276, 0.5946, 0.8357],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5221, 0.5057, 0.7477],
         [0.6349, 0.6185, 0.8640],
         [0.7406, 0.6986, 0.9897],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
628/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.2967, 0.9755, 2.1346],
         [0.2980, 0.9755, 2.1346],
         [0.3138, 0.9732, 2.1368],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2967, 0.9755, 2.1346],
         [0.2980, 0.9755, 2.1346],
         [0.3138, 0.9732, 2.1368],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2967, 0.9755, 2.1346],
         [0.2980, 0.9755, 2.1346],
         [0.3138, 0.9732, 2.1368],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[268.8500, 159.6000, 295.4500, 482.6000,   0.0000],
        [310.6500,   1.9000, 340.1000, 111.1500,   0.0000],
        [524.4000, 221.3500, 540.5500, 311.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.2967, 0.9755, 2.1346],
         [0.2980, 0.9755, 2.1346],
         [0.3138, 0.9732, 2.1368],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2967, 0.9755, 2.1346],
         [0.2980, 0.9755, 2.1346],
         [0.3138, 0.9732, 2.1368],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2967, 0.9755, 2.1346],
         [0.2980, 0.9755, 2.1346],
         [0.3138, 0.9732, 2.1368],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
629/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[2.0777, 2.2185, 2.4831],
         [2.0777, 2.2185, 2.4831],
         [2.0777, 2.2185, 2.4831],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0777, 2.2185, 2.4831],
         [2.0777, 2.2185, 2.4831],
         [2.0777, 2.2185, 2.4831],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0754, 2.2162, 2.4808],
         [2.0754, 2.2162, 2.4808],
         [2.0754, 2.2162, 2.4808],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[508.2500, 103.5500, 545.3000, 448.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[2.0777, 2.2185, 2.4831],
         [2.0777, 2.2185, 2.4831],
         [2.0777, 2.2185, 2.4831],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0777, 2.2185, 2.4831],
         [2.0777, 2.2185, 2.4831],
         [2.0777, 2.2185, 2.4831],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0754, 2.2162, 2.4808],
         [2.0754, 2.2162, 2.4808],
         [2.0754, 2.2162, 2.4808],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
630/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.0155, 1.0451, 1.5764],
         [0.9961, 1.0252, 1.5566],
         [0.9600, 0.9884, 1.5199],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0155, 1.0451, 1.5764],
         [0.9961, 1.0252, 1.5566],
         [0.9602, 0.9886, 1.5201],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0133, 1.0428, 1.5741],
         [0.9963, 1.0254, 1.5568],
         [0.9648, 0.9933, 1.5248],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[542.4500, 165.3000, 550.0500, 342.9500,   0.0000],
        [129.2000, 242.2500, 141.5500, 332.5000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.0155, 1.0451, 1.5764],
         [0.9961, 1.0252, 1.5566],
         [0.9600, 0.9884, 1.5199],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0155, 1.0451, 1.5764],
         [0.9961, 1.0252, 1.5566],
         [0.9602, 0.9886, 1.5201],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0133, 1.0428, 1.5741],
         [0.9963, 1.0254, 1.5568],
         [0.9648, 0.9933, 1.5248],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
631/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[2.2489, 2.4286, 2.5703],
         [2.2489, 2.4286, 2.5703],
         [2.2489, 2.4286, 2.5703],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.2489, 2.4286, 2.5730],
         [2.2489, 2.4286, 2.5730],
         [2.2489, 2.4286, 2.5730],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.2489, 2.4286, 2.6051],
         [2.2489, 2.4286, 2.6051],
         [2.2489, 2.4286, 2.6051],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[110.2000,  64.6000, 134.9000, 465.5000,   0.0000],
        [ 72.2000,  12.3500,  95.0000,  92.1500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[2.2489, 2.4286, 2.5703],
         [2.2489, 2.4286, 2.5703],
         [2.2489, 2.4286, 2.5703],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.2489, 2.4286, 2.5730],
         [2.2489, 2.4286, 2.5730],
         [2.2489, 2.4286, 2.5730],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.2489, 2.4286, 2.6051],
         [2.2489, 2.4286, 2.6051],
         [2.2489, 2.4286, 2.6051],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
632/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.1999,  0.1352,  1.0888],
         [-0.1999,  0.1352,  1.0888],
         [-0.1999,  0.1352,  1.0888],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1999,  0.1352,  1.0888],
         [-0.1999,  0.1352,  1.0888],
         [-0.1999,  0.1352,  1.0888],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1999,  0.1352,  1.0888],
         [-0.1999,  0.1352,  1.0888],
         [-0.1999,  0.1352,  1.0888],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[148.2000, 128.2500, 163.4000, 410.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.1999,  0.1352,  1.0888],
         [-0.1999,  0.1352,  1.0888],
         [-0.1999,  0.1352,  1.0888],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1999,  0.1352,  1.0888],
         [-0.1999,  0.1352,  1.0888],
         [-0.1999,  0.1352,  1.0888],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1999,  0.1352,  1.0888],
         [-0.1999,  0.1352,  1.0888],
         [-0.1999,  0.1352,  1.0888],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
633/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.2453, 0.5028, 0.8971],
         [0.2453, 0.5028, 0.8971],
         [0.2476, 0.5051, 0.8994],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2453, 0.5028, 0.8971],
         [0.2454, 0.5029, 0.8972],
         [0.2487, 0.5063, 0.9006],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2476, 0.5051, 0.8994],
         [0.2487, 0.5063, 0.9006],
         [0.2624, 0.5203, 0.9145],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[222.3000, 100.7000, 236.5500, 418.0000,   0.0000],
        [171.0000, 249.8500, 182.4000, 327.7500,   0.0000],
        [557.6500, 265.0500, 572.8500, 304.0000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.2453, 0.5028, 0.8971],
         [0.2453, 0.5028, 0.8971],
         [0.2476, 0.5051, 0.8994],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2453, 0.5028, 0.8971],
         [0.2454, 0.5029, 0.8972],
         [0.2487, 0.5063, 0.9006],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2476, 0.5051, 0.8994],
         [0.2487, 0.5063, 0.9006],
         [0.2624, 0.5203, 0.9145],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
634/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.1083, 0.1527, 1.0888],
         [0.1070, 0.1513, 1.0874],
         [0.0894, 0.1333, 1.0668],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1097, 0.1540, 1.0888],
         [0.1097, 0.1540, 1.0875],
         [0.1078, 0.1517, 1.0706],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1278, 0.1725, 1.0912],
         [0.1322, 0.1725, 1.0934],
         [0.1342, 0.1708, 1.0928],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[199.5000,  18.0500, 223.2500, 333.4500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.1083, 0.1527, 1.0888],
         [0.1070, 0.1513, 1.0874],
         [0.0894, 0.1333, 1.0668],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1097, 0.1540, 1.0888],
         [0.1097, 0.1540, 1.0875],
         [0.1078, 0.1517, 1.0706],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1278, 0.1725, 1.0912],
         [0.1322, 0.1725, 1.0934],
         [0.1342, 0.1708, 1.0928],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
635/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.5878, 0.7829, 1.0888],
         [0.5878, 0.7829, 1.0888],
         [0.5878, 0.7829, 1.0888],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5878, 0.7829, 1.0888],
         [0.5878, 0.7829, 1.0888],
         [0.5878, 0.7829, 1.0888],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5856, 0.7806, 1.0865],
         [0.5856, 0.7806, 1.0865],
         [0.5856, 0.7806, 1.0865],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 32.3000, 111.1500,  55.1000, 421.8000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.5878, 0.7829, 1.0888],
         [0.5878, 0.7829, 1.0888],
         [0.5878, 0.7829, 1.0888],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5878, 0.7829, 1.0888],
         [0.5878, 0.7829, 1.0888],
         [0.5878, 0.7829, 1.0888],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5856, 0.7806, 1.0865],
         [0.5856, 0.7806, 1.0865],
         [0.5856, 0.7806, 1.0865],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
636/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.5938, -0.1800,  0.8099],
         [-0.5951, -0.1813,  0.8086],
         [-0.6105, -0.1971,  0.7929],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5924, -0.1786,  0.8113],
         [-0.5926, -0.1787,  0.8112],
         [-0.5959, -0.1821,  0.8078],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5745, -0.1602,  0.8296],
         [-0.5779, -0.1637,  0.8262],
         [-0.5915, -0.1777,  0.8122],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[292.6000,  94.0500, 314.4500, 475.0000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.5938, -0.1800,  0.8099],
         [-0.5951, -0.1813,  0.8086],
         [-0.6105, -0.1971,  0.7929],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5924, -0.1786,  0.8113],
         [-0.5926, -0.1787,  0.8112],
         [-0.5959, -0.1821,  0.8078],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5745, -0.1602,  0.8296],
         [-0.5779, -0.1637,  0.8262],
         [-0.5915, -0.1777,  0.8122],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
637/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.3541, -0.0224,  0.6531],
         [-0.3541, -0.0224,  0.6531],
         [-0.3518, -0.0201,  0.6554],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3541, -0.0224,  0.6531],
         [-0.3541, -0.0224,  0.6531],
         [-0.3520, -0.0203,  0.6552],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3563, -0.0247,  0.6508],
         [-0.3561, -0.0245,  0.6510],
         [-0.3541, -0.0224,  0.6531],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[471.2000, 146.3000, 486.4000, 411.3500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.3541, -0.0224,  0.6531],
         [-0.3541, -0.0224,  0.6531],
         [-0.3518, -0.0201,  0.6554],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3541, -0.0224,  0.6531],
         [-0.3541, -0.0224,  0.6531],
         [-0.3520, -0.0203,  0.6552],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3563, -0.0247,  0.6508],
         [-0.3561, -0.0245,  0.6510],
         [-0.3541, -0.0224,  0.6531],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
638/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.4684, 0.6783, 0.9150],
         [0.4684, 0.6783, 0.9150],
         [0.4683, 0.6783, 0.9149],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4878, 0.6981, 0.9347],
         [0.4877, 0.6980, 0.9346],
         [0.4843, 0.6946, 0.9312],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5283, 0.7395, 0.9759],
         [0.5247, 0.7359, 0.9723],
         [0.5089, 0.7198, 0.9562],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[326.8000, 148.2000, 342.0000, 385.7000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.4684, 0.6783, 0.9150],
         [0.4684, 0.6783, 0.9150],
         [0.4683, 0.6783, 0.9149],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4878, 0.6981, 0.9347],
         [0.4877, 0.6980, 0.9346],
         [0.4843, 0.6946, 0.9312],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5283, 0.7395, 0.9759],
         [0.5247, 0.7359, 0.9723],
         [0.5089, 0.7198, 0.9562],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
639/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[2.2489, 2.4286, 2.6400],
         [2.2489, 2.4286, 2.6400],
         [2.2489, 2.4286, 2.6400],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.2489, 2.4286, 2.6400],
         [2.2489, 2.4286, 2.6400],
         [2.2489, 2.4286, 2.6400],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.2489, 2.4286, 2.6400],
         [2.2489, 2.4286, 2.6400],
         [2.2489, 2.4286, 2.6400],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 28.5000, 187.1500,  48.4500, 370.5000,   0.0000],
        [308.7500, 203.3000, 322.0500, 361.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[2.2489, 2.4286, 2.6400],
         [2.2489, 2.4286, 2.6400],
         [2.2489, 2.4286, 2.6400],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.2489, 2.4286, 2.6400],
         [2.2489, 2.4286, 2.6400],
         [2.2489, 2.4286, 2.6400],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.2489, 2.4286, 2.6400],
         [2.2489, 2.4286, 2.6400],
         [2.2489, 2.4286, 2.6400],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
640/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.6392, 0.8704, 1.1585],
         [0.6392, 0.8704, 1.1585],
         [0.6369, 0.8681, 1.1562],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6392, 0.8704, 1.1585],
         [0.6392, 0.8704, 1.1585],
         [0.6369, 0.8681, 1.1562],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6392, 0.8704, 1.1585],
         [0.6392, 0.8704, 1.1585],
         [0.6369, 0.8681, 1.1562],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[231.8000, 110.2000, 256.5000, 406.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.6392, 0.8704, 1.1585],
         [0.6392, 0.8704, 1.1585],
         [0.6369, 0.8681, 1.1562],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6392, 0.8704, 1.1585],
         [0.6392, 0.8704, 1.1585],
         [0.6369, 0.8681, 1.1562],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6392, 0.8704, 1.1585],
         [0.6392, 0.8704, 1.1585],
         [0.6369, 0.8681, 1.1562],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
641/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.0511, 1.2040, 1.5952],
         [1.0510, 1.2040, 1.5951],
         [1.0506, 1.2035, 1.5947],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0884, 1.2422, 1.6332],
         [1.0858, 1.2395, 1.6305],
         [1.0698, 1.2232, 1.6142],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1399, 1.2948, 1.6855],
         [1.1218, 1.2763, 1.6672],
         [1.1038, 1.2579, 1.6488],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 33.2500,   0.9500,  68.4000, 595.6500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.0511, 1.2040, 1.5952],
         [1.0510, 1.2040, 1.5951],
         [1.0506, 1.2035, 1.5947],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0884, 1.2422, 1.6332],
         [1.0858, 1.2395, 1.6305],
         [1.0698, 1.2232, 1.6142],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1399, 1.2948, 1.6855],
         [1.1218, 1.2763, 1.6672],
         [1.1038, 1.2579, 1.6488],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
642/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.0673, 1.2906, 1.5245],
         [1.0673, 1.2906, 1.5245],
         [1.0696, 1.2929, 1.5268],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0673, 1.2906, 1.5245],
         [1.0673, 1.2906, 1.5245],
         [1.0696, 1.2929, 1.5268],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0673, 1.2906, 1.5245],
         [1.0673, 1.2906, 1.5245],
         [1.0696, 1.2929, 1.5268],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 38.0000,   5.7000,  58.9000, 448.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.0673, 1.2906, 1.5245],
         [1.0673, 1.2906, 1.5245],
         [1.0696, 1.2929, 1.5268],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0673, 1.2906, 1.5245],
         [1.0673, 1.2906, 1.5245],
         [1.0696, 1.2929, 1.5268],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0673, 1.2906, 1.5245],
         [1.0673, 1.2906, 1.5245],
         [1.0696, 1.2929, 1.5268],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
643/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.8682, -0.8282, -1.2472],
         [-0.8682, -0.8309, -1.2458],
         [-0.8633, -0.8650, -1.2201],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8862, -0.8439, -1.2641],
         [-0.8836, -0.8466, -1.2614],
         [-0.8633, -0.8650, -1.2201],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.9060, -0.8327, -1.2685],
         [-0.8860, -0.8489, -1.2591],
         [-0.8678, -0.8670, -1.2181],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[477.8500,  87.4000, 520.6000, 393.3000,   0.0000],
        [229.9000, 228.9500, 244.1500, 306.8500,   0.0000],
        [190.0000, 242.2500, 204.2500, 297.3500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.8682, -0.8282, -1.2472],
         [-0.8682, -0.8309, -1.2458],
         [-0.8633, -0.8650, -1.2201],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.8862, -0.8439, -1.2641],
         [-0.8836, -0.8466, -1.2614],
         [-0.8633, -0.8650, -1.2201],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.9060, -0.8327, -1.2685],
         [-0.8860, -0.8489, -1.2591],
         [-0.8678, -0.8670, -1.2181],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
644/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.2967, 0.6254, 0.9145],
         [0.2967, 0.6254, 0.9145],
         [0.2967, 0.6254, 0.9145],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2967, 0.6254, 0.9145],
         [0.2967, 0.6254, 0.9145],
         [0.2967, 0.6254, 0.9145],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2967, 0.6254, 0.9145],
         [0.2967, 0.6254, 0.9145],
         [0.2967, 0.6254, 0.9145],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[301.1500,  95.9500, 312.5500, 380.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.2967, 0.6254, 0.9145],
         [0.2967, 0.6254, 0.9145],
         [0.2967, 0.6254, 0.9145],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2967, 0.6254, 0.9145],
         [0.2967, 0.6254, 0.9145],
         [0.2967, 0.6254, 0.9145],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2967, 0.6254, 0.9145],
         [0.2967, 0.6254, 0.9145],
         [0.2967, 0.6254, 0.9145],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
645/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.2684,  0.2752,  0.9842],
         [-0.2684,  0.2752,  0.9842],
         [-0.2684,  0.2752,  0.9842],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2684,  0.2752,  0.9842],
         [-0.2684,  0.2752,  0.9842],
         [-0.2684,  0.2752,  0.9842],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2684,  0.2752,  0.9842],
         [-0.2684,  0.2752,  0.9842],
         [-0.2684,  0.2752,  0.9842],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[190.0000,   0.9500, 220.4000, 454.1000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.2684,  0.2752,  0.9842],
         [-0.2684,  0.2752,  0.9842],
         [-0.2684,  0.2752,  0.9842],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2684,  0.2752,  0.9842],
         [-0.2684,  0.2752,  0.9842],
         [-0.2684,  0.2752,  0.9842],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.2684,  0.2752,  0.9842],
         [-0.2684,  0.2752,  0.9842],
         [-0.2684,  0.2752,  0.9842],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
646/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.7762, 0.9405, 1.1934],
         [0.7762, 0.9405, 1.1934],
         [0.7762, 0.9405, 1.1934],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7762, 0.9405, 1.1934],
         [0.7762, 0.9405, 1.1934],
         [0.7762, 0.9405, 1.1934],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7762, 0.9405, 1.1934],
         [0.7762, 0.9405, 1.1934],
         [0.7762, 0.9405, 1.1934],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[172.9000, 247.0000, 182.4000, 346.7500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.7762, 0.9405, 1.1934],
         [0.7762, 0.9405, 1.1934],
         [0.7762, 0.9405, 1.1934],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7762, 0.9405, 1.1934],
         [0.7762, 0.9405, 1.1934],
         [0.7762, 0.9405, 1.1934],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7762, 0.9405, 1.1934],
         [0.7762, 0.9405, 1.1934],
         [0.7762, 0.9405, 1.1934],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
647/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.5639, 1.5182, 1.9080],
         [1.5639, 1.5182, 1.9080],
         [1.5639, 1.5182, 1.9080],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5653, 1.5196, 1.9093],
         [1.5653, 1.5196, 1.9093],
         [1.5651, 1.5194, 1.9092],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5832, 1.5380, 1.9276],
         [1.5810, 1.5357, 1.9254],
         [1.5791, 1.5337, 1.9234],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[412.3000, 263.1500, 422.7500, 314.4500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.5639, 1.5182, 1.9080],
         [1.5639, 1.5182, 1.9080],
         [1.5639, 1.5182, 1.9080],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5653, 1.5196, 1.9093],
         [1.5653, 1.5196, 1.9093],
         [1.5651, 1.5194, 1.9092],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5832, 1.5380, 1.9276],
         [1.5810, 1.5357, 1.9254],
         [1.5791, 1.5337, 1.9234],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
648/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.5536, 0.7129, 1.0017],
         [0.5522, 0.7115, 1.0003],
         [0.5342, 0.6931, 0.9820],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5536, 0.7129, 1.0017],
         [0.5523, 0.7116, 1.0004],
         [0.5376, 0.6966, 0.9854],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5536, 0.7129, 1.0017],
         [0.5536, 0.7129, 1.0017],
         [0.5516, 0.7109, 0.9997],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[177.6500, 161.5000, 190.9500, 369.5500,   0.0000],
        [429.4000, 208.0500, 440.8000, 350.5500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.5536, 0.7129, 1.0017],
         [0.5522, 0.7115, 1.0003],
         [0.5342, 0.6931, 0.9820],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5536, 0.7129, 1.0017],
         [0.5523, 0.7116, 1.0004],
         [0.5376, 0.6966, 0.9854],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5536, 0.7129, 1.0017],
         [0.5536, 0.7129, 1.0017],
         [0.5516, 0.7109, 0.9997],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
649/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.8722, 2.2185, 2.4657],
         [1.8920, 2.2388, 2.4859],
         [1.9258, 2.2733, 2.5203],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8559, 2.2019, 2.4492],
         [1.8906, 2.2374, 2.4845],
         [1.9246, 2.2721, 2.5191],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8555, 2.2014, 2.4487],
         [1.8749, 2.2213, 2.4685],
         [1.9109, 2.2581, 2.5052],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[328.7000,  37.0500, 358.1500, 371.4500,   0.0000],
        [308.7500,  35.1500, 326.8000, 109.2500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.8722, 2.2185, 2.4657],
         [1.8920, 2.2388, 2.4859],
         [1.9258, 2.2733, 2.5203],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8559, 2.2019, 2.4492],
         [1.8906, 2.2374, 2.4845],
         [1.9246, 2.2721, 2.5191],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8555, 2.2014, 2.4487],
         [1.8749, 2.2213, 2.4685],
         [1.9109, 2.2581, 2.5052],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
650/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.2043, 1.6232, 1.7860],
         [1.2043, 1.6232, 1.7860],
         [1.2043, 1.6232, 1.7860],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2043, 1.6232, 1.7860],
         [1.2043, 1.6232, 1.7860],
         [1.2043, 1.6232, 1.7860],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2043, 1.6232, 1.7860],
         [1.2043, 1.6232, 1.7860],
         [1.2043, 1.6232, 1.7860],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 64.6000, 216.6000,  78.8500, 368.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.2043, 1.6232, 1.7860],
         [1.2043, 1.6232, 1.7860],
         [1.2043, 1.6232, 1.7860],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2043, 1.6232, 1.7860],
         [1.2043, 1.6232, 1.7860],
         [1.2043, 1.6232, 1.7860],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2043, 1.6232, 1.7860],
         [1.2043, 1.6232, 1.7860],
         [1.2043, 1.6232, 1.7860],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
651/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.6734, 0.9405, 1.2631],
         [0.6734, 0.9405, 1.2631],
         [0.6734, 0.9405, 1.2631],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6734, 0.9405, 1.2631],
         [0.6734, 0.9405, 1.2631],
         [0.6734, 0.9405, 1.2631],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6734, 0.9405, 1.2631],
         [0.6734, 0.9405, 1.2631],
         [0.6734, 0.9405, 1.2631],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[153.9000, 170.0500, 165.3000, 358.1500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.6734, 0.9405, 1.2631],
         [0.6734, 0.9405, 1.2631],
         [0.6734, 0.9405, 1.2631],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6734, 0.9405, 1.2631],
         [0.6734, 0.9405, 1.2631],
         [0.6734, 0.9405, 1.2631],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6734, 0.9405, 1.2631],
         [0.6734, 0.9405, 1.2631],
         [0.6734, 0.9405, 1.2631],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
652/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.4166, 0.7829, 1.3328],
         [0.4152, 0.7802, 1.3342],
         [0.3999, 0.7484, 1.3507],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4179, 0.7843, 1.3342],
         [0.4179, 0.7830, 1.3367],
         [0.4177, 0.7678, 1.3665],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4359, 0.8027, 1.3525],
         [0.4359, 0.8027, 1.3525],
         [0.4340, 0.7987, 1.3545],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[152.9500, 213.7500, 171.9500, 361.0000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.4166, 0.7829, 1.3328],
         [0.4152, 0.7802, 1.3342],
         [0.3999, 0.7484, 1.3507],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4179, 0.7843, 1.3342],
         [0.4179, 0.7830, 1.3367],
         [0.4177, 0.7678, 1.3665],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4359, 0.8027, 1.3525],
         [0.4359, 0.8027, 1.3525],
         [0.4340, 0.7987, 1.3545],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
653/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.5531, 0.7124, 1.2452],
         [0.5364, 0.6954, 1.2282],
         [0.5342, 0.6931, 1.2259],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5531, 0.7124, 1.2452],
         [0.5364, 0.6954, 1.2282],
         [0.5342, 0.6931, 1.2259],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5531, 0.7124, 1.2452],
         [0.5364, 0.6954, 1.2282],
         [0.5342, 0.6931, 1.2259],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[464.5500, 180.5000, 473.1000, 377.1500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.5531, 0.7124, 1.2452],
         [0.5364, 0.6954, 1.2282],
         [0.5342, 0.6931, 1.2259],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5531, 0.7124, 1.2452],
         [0.5364, 0.6954, 1.2282],
         [0.5342, 0.6931, 1.2259],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5531, 0.7124, 1.2452],
         [0.5364, 0.6954, 1.2282],
         [0.5342, 0.6931, 1.2259],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
654/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.5527, 0.9221, 1.6988],
         [0.5544, 0.9239, 1.7337],
         [0.5698, 0.9396, 1.7503],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5171, 0.8857, 1.6617],
         [0.5337, 0.9027, 1.6812],
         [0.5358, 0.9048, 1.7129],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4833, 0.8511, 1.6273],
         [0.4999, 0.8681, 1.6442],
         [0.4999, 0.8681, 1.6442],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[342.0000, 198.5500, 356.2500, 345.8000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.5527, 0.9221, 1.6988],
         [0.5544, 0.9239, 1.7337],
         [0.5698, 0.9396, 1.7503],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.5171, 0.8857, 1.6617],
         [0.5337, 0.9027, 1.6812],
         [0.5358, 0.9048, 1.7129],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4833, 0.8511, 1.6273],
         [0.4999, 0.8681, 1.6442],
         [0.4999, 0.8681, 1.6442],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
655/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.2052, 1.4491, 1.5429],
         [1.2214, 1.4657, 1.5594],
         [1.2192, 1.4634, 1.5595],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2228, 1.4671, 1.5608],
         [1.2228, 1.4671, 1.5608],
         [1.2228, 1.4671, 1.5631],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2386, 1.4833, 1.5769],
         [1.2408, 1.4855, 1.5791],
         [1.2408, 1.4855, 1.5814],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[255.5500, 114.0000, 291.6500, 398.0500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.2052, 1.4491, 1.5429],
         [1.2214, 1.4657, 1.5594],
         [1.2192, 1.4634, 1.5595],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2228, 1.4671, 1.5608],
         [1.2228, 1.4671, 1.5608],
         [1.2228, 1.4671, 1.5631],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2386, 1.4833, 1.5769],
         [1.2408, 1.4855, 1.5791],
         [1.2408, 1.4855, 1.5814],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
656/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.6906, 0.8529, 1.5594],
         [0.6906, 0.8529, 1.5594],
         [0.6906, 0.8529, 1.5594],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6906, 0.8529, 1.5594],
         [0.6906, 0.8529, 1.5594],
         [0.6906, 0.8529, 1.5594],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6906, 0.8529, 1.5594],
         [0.6906, 0.8529, 1.5594],
         [0.6906, 0.8529, 1.5594],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[376.2000,  28.5000, 396.1500, 337.2500,   0.0000],
        [ 84.5500, 235.6000, 102.6000, 338.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.6906, 0.8529, 1.5594],
         [0.6906, 0.8529, 1.5594],
         [0.6906, 0.8529, 1.5594],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6906, 0.8529, 1.5594],
         [0.6906, 0.8529, 1.5594],
         [0.6906, 0.8529, 1.5594],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6906, 0.8529, 1.5594],
         [0.6906, 0.8529, 1.5594],
         [0.6906, 0.8529, 1.5594],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
657/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.0159, 1.2381, 1.4374],
         [1.0159, 1.2381, 1.4374],
         [1.0159, 1.2381, 1.4374],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0159, 1.2381, 1.4374],
         [1.0159, 1.2381, 1.4374],
         [1.0159, 1.2381, 1.4374],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0159, 1.2381, 1.4374],
         [1.0159, 1.2381, 1.4374],
         [1.0159, 1.2381, 1.4374],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[268.8500,  74.1000, 290.7000, 399.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.0159, 1.2381, 1.4374],
         [1.0159, 1.2381, 1.4374],
         [1.0159, 1.2381, 1.4374],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0159, 1.2381, 1.4374],
         [1.0159, 1.2381, 1.4374],
         [1.0159, 1.2381, 1.4374],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0159, 1.2381, 1.4374],
         [1.0159, 1.2381, 1.4374],
         [1.0159, 1.2381, 1.4374],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
658/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.9482, -0.8224, -0.8405],
         [-0.7760, -0.6463, -0.6652],
         [-1.0337, -0.9098, -0.9276],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.9670, -0.8416, -0.8596],
         [-1.0926, -0.9700, -0.9875],
         [-1.3753, -1.2590, -1.2752],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.1034, -0.9811, -0.9985],
         [-1.4331, -1.3181, -1.3341],
         [-1.5922, -1.4807, -1.4959],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[479.7500,  80.7500, 508.2500, 461.7000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.9482, -0.8224, -0.8405],
         [-0.7760, -0.6463, -0.6652],
         [-1.0337, -0.9098, -0.9276],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.9670, -0.8416, -0.8596],
         [-1.0926, -0.9700, -0.9875],
         [-1.3753, -1.2590, -1.2752],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.1034, -0.9811, -0.9985],
         [-1.4331, -1.3181, -1.3341],
         [-1.5922, -1.4807, -1.4959],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
659/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.0458,  0.4153,  0.8971],
         [-0.0458,  0.4153,  0.8971],
         [-0.0458,  0.4153,  0.8971],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0445,  0.4139,  0.8971],
         [-0.0445,  0.4139,  0.8971],
         [-0.0445,  0.4139,  0.8971],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0287,  0.3978,  0.8971],
         [-0.0287,  0.3978,  0.8971],
         [-0.0287,  0.3978,  0.8971],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[136.8000,   0.0000, 161.5000, 316.3500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.0458,  0.4153,  0.8971],
         [-0.0458,  0.4153,  0.8971],
         [-0.0458,  0.4153,  0.8971],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0445,  0.4139,  0.8971],
         [-0.0445,  0.4139,  0.8971],
         [-0.0445,  0.4139,  0.8971],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0287,  0.3978,  0.8971],
         [-0.0287,  0.3978,  0.8971],
         [-0.0287,  0.3978,  0.8971],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
660/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.2043, 1.3606, 1.7511],
         [1.2043, 1.3606, 1.7511],
         [1.2043, 1.3606, 1.7511],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2043, 1.3606, 1.7511],
         [1.2043, 1.3606, 1.7511],
         [1.2043, 1.3606, 1.7511],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2043, 1.3606, 1.7557],
         [1.2043, 1.3606, 1.7557],
         [1.2043, 1.3606, 1.7557],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[333.4500, 102.6000, 360.0500, 496.8500,   0.0000],
        [302.1000,   1.9000, 333.4500, 125.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.2043, 1.3606, 1.7511],
         [1.2043, 1.3606, 1.7511],
         [1.2043, 1.3606, 1.7511],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2043, 1.3606, 1.7511],
         [1.2043, 1.3606, 1.7511],
         [1.2043, 1.3606, 1.7511],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2043, 1.3606, 1.7557],
         [1.2043, 1.3606, 1.7557],
         [1.2043, 1.3606, 1.7557],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
661/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.3823, 0.5728, 0.8797],
         [0.4017, 0.5926, 0.8994],
         [0.4355, 0.6272, 0.9338],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3642, 0.5544, 0.8613],
         [0.3823, 0.5728, 0.8797],
         [0.4163, 0.6076, 0.9142],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3436, 0.5333, 0.8403],
         [0.3483, 0.5381, 0.8451],
         [0.3823, 0.5728, 0.8797],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[200.4500,   0.9500, 226.1000, 396.1500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.3823, 0.5728, 0.8797],
         [0.4017, 0.5926, 0.8994],
         [0.4355, 0.6272, 0.9338],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3642, 0.5544, 0.8613],
         [0.3823, 0.5728, 0.8797],
         [0.4163, 0.6076, 0.9142],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3436, 0.5333, 0.8403],
         [0.3483, 0.5381, 0.8451],
         [0.3823, 0.5728, 0.8797],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
662/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.0844, 1.2206, 1.3677],
         [1.0844, 1.2206, 1.3677],
         [1.0844, 1.2206, 1.3677],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0844, 1.2206, 1.3677],
         [1.0844, 1.2206, 1.3677],
         [1.0844, 1.2206, 1.3677],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0822, 1.2183, 1.3654],
         [1.0822, 1.2183, 1.3654],
         [1.0822, 1.2183, 1.3654],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[293.5500,   0.9500, 325.8500, 344.8500,   0.0000],
        [350.5500,   2.8500, 372.4000, 228.0000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.0844, 1.2206, 1.3677],
         [1.0844, 1.2206, 1.3677],
         [1.0844, 1.2206, 1.3677],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0844, 1.2206, 1.3677],
         [1.0844, 1.2206, 1.3677],
         [1.0844, 1.2206, 1.3677],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0822, 1.2183, 1.3654],
         [1.0822, 1.2183, 1.3654],
         [1.0822, 1.2183, 1.3654],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
663/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[2.0610, 2.2189, 2.3616],
         [2.0777, 2.2360, 2.3786],
         [2.0777, 2.2360, 2.3786],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0610, 2.2189, 2.3643],
         [2.0777, 2.2360, 2.3813],
         [2.0777, 2.2360, 2.3813],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0610, 2.2189, 2.3965],
         [2.0777, 2.2360, 2.4134],
         [2.0777, 2.2360, 2.4134],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[278.3500, 120.6500, 297.3500, 467.4000,   0.0000],
        [256.5000,  16.1500, 270.7500, 129.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[2.0610, 2.2189, 2.3616],
         [2.0777, 2.2360, 2.3786],
         [2.0777, 2.2360, 2.3786],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0610, 2.2189, 2.3643],
         [2.0777, 2.2360, 2.3813],
         [2.0777, 2.2360, 2.3813],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0610, 2.2189, 2.3965],
         [2.0777, 2.2360, 2.4134],
         [2.0777, 2.2360, 2.4134],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
664/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.0227, 0.5203, 1.2805],
         [0.0227, 0.5203, 1.2805],
         [0.0227, 0.5203, 1.2805],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0227, 0.5203, 1.2805],
         [0.0227, 0.5203, 1.2805],
         [0.0227, 0.5203, 1.2805],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0249, 0.5226, 1.2828],
         [0.0249, 0.5226, 1.2828],
         [0.0249, 0.5226, 1.2828],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[437.0000,   1.9000, 476.9000, 570.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.0227, 0.5203, 1.2805],
         [0.0227, 0.5203, 1.2805],
         [0.0227, 0.5203, 1.2805],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0227, 0.5203, 1.2805],
         [0.0227, 0.5203, 1.2805],
         [0.0227, 0.5203, 1.2805],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0249, 0.5226, 1.2828],
         [0.0249, 0.5226, 1.2828],
         [0.0249, 0.5226, 1.2828],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
665/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.0921, 0.3987, 0.7934],
         [0.0943, 0.4009, 0.7956],
         [0.1317, 0.4392, 0.8337],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1277, 0.4350, 0.8296],
         [0.1096, 0.4165, 0.8112],
         [0.1125, 0.4195, 0.8142],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1677, 0.4760, 0.8704],
         [0.1305, 0.4379, 0.8325],
         [0.1103, 0.4173, 0.8119],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[351.5000,   1.9000, 377.1500, 447.4500,   0.0000],
        [153.9000, 244.1500, 161.5000, 329.6500,   0.0000],
        [120.6500, 266.9500, 127.3000, 325.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.0921, 0.3987, 0.7934],
         [0.0943, 0.4009, 0.7956],
         [0.1317, 0.4392, 0.8337],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1277, 0.4350, 0.8296],
         [0.1096, 0.4165, 0.8112],
         [0.1125, 0.4195, 0.8142],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1677, 0.4760, 0.8704],
         [0.1305, 0.4379, 0.8325],
         [0.1103, 0.4173, 0.8119],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
666/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.5447, -0.4624, -0.4473],
         [-0.6687, -0.5892, -0.5735],
         [-0.7462, -0.6684, -0.6523],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5130, -0.4300, -0.4150],
         [-0.6518, -0.5719, -0.5563],
         [-0.7612, -0.6837, -0.6676],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5517, -0.4696, -0.4545],
         [-0.6197, -0.5391, -0.5236],
         [-0.6976, -0.6187, -0.6029],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[  1.9000,   0.9500,  31.3500, 405.6500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.5447, -0.4624, -0.4473],
         [-0.6687, -0.5892, -0.5735],
         [-0.7462, -0.6684, -0.6523],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5130, -0.4300, -0.4150],
         [-0.6518, -0.5719, -0.5563],
         [-0.7612, -0.6837, -0.6676],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5517, -0.4696, -0.4545],
         [-0.6197, -0.5391, -0.5236],
         [-0.6976, -0.6187, -0.6029],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
667/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.0331, 1.2031, 1.7685],
         [1.0331, 1.2031, 1.7685],
         [1.0331, 1.2031, 1.7685],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0331, 1.2031, 1.7685],
         [1.0331, 1.2031, 1.7685],
         [1.0331, 1.2031, 1.7685],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0353, 1.2054, 1.7708],
         [1.0353, 1.2054, 1.7708],
         [1.0353, 1.2054, 1.7708],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[506.3500,  74.1000, 551.9500, 533.9000,   0.0000],
        [420.8500,  98.8000, 437.0000, 418.0000,   0.0000],
        [466.4500,  20.9000, 482.6000,  99.7500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.0331, 1.2031, 1.7685],
         [1.0331, 1.2031, 1.7685],
         [1.0331, 1.2031, 1.7685],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0331, 1.2031, 1.7685],
         [1.0331, 1.2031, 1.7685],
         [1.0331, 1.2031, 1.7685],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0353, 1.2054, 1.7708],
         [1.0353, 1.2054, 1.7708],
         [1.0353, 1.2054, 1.7708],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
668/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.4933, -0.5333, -0.3954],
         [-0.7155, -0.7946, -0.6386],
         [-0.7820, -0.8695, -0.7108],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3328, -0.3692, -0.2320],
         [-0.5056, -0.5800, -0.4249],
         [-0.6219, -0.7058, -0.5475],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0158, -0.0128,  0.1228],
         [-0.1045, -0.1699, -0.0163],
         [-0.3261, -0.4034, -0.2382],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[ 35.1500,  57.0000,  74.1000, 446.5000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.4933, -0.5333, -0.3954],
         [-0.7155, -0.7946, -0.6386],
         [-0.7820, -0.8695, -0.7108],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3328, -0.3692, -0.2320],
         [-0.5056, -0.5800, -0.4249],
         [-0.6219, -0.7058, -0.5475],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0158, -0.0128,  0.1228],
         [-0.1045, -0.1699, -0.0163],
         [-0.3261, -0.4034, -0.2382],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
669/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.4054, -0.1450,  1.1759],
         [-0.4054, -0.1450,  1.1759],
         [-0.4054, -0.1450,  1.1759],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4054, -0.1450,  1.1759],
         [-0.4054, -0.1450,  1.1759],
         [-0.4054, -0.1450,  1.1759],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4032, -0.1427,  1.1782],
         [-0.4032, -0.1427,  1.1782],
         [-0.4032, -0.1427,  1.1782],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[260.3000, 218.5000, 279.3000, 371.4500,   0.0000],
        [304.0000,  19.9500, 331.5500, 114.9500,   0.0000],
        [452.2000,  81.7000, 479.7500, 491.1500,   0.0000],
        [536.7500,   0.0000, 568.1000,  58.9000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.4054, -0.1450,  1.1759],
         [-0.4054, -0.1450,  1.1759],
         [-0.4054, -0.1450,  1.1759],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4054, -0.1450,  1.1759],
         [-0.4054, -0.1450,  1.1759],
         [-0.4054, -0.1450,  1.1759],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.4032, -0.1427,  1.1782],
         [-0.4032, -0.1427,  1.1782],
         [-0.4032, -0.1427,  1.1782],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
670/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.2967, 0.5553, 0.9494],
         [0.2967, 0.5553, 0.9494],
         [0.2944, 0.5530, 0.9471],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2967, 0.5553, 0.9494],
         [0.2967, 0.5553, 0.9494],
         [0.2944, 0.5530, 0.9471],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2967, 0.5553, 0.9494],
         [0.2967, 0.5553, 0.9494],
         [0.2944, 0.5530, 0.9471],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[170.0500,  96.9000, 192.8500, 400.9000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.2967, 0.5553, 0.9494],
         [0.2967, 0.5553, 0.9494],
         [0.2944, 0.5530, 0.9471],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2967, 0.5553, 0.9494],
         [0.2967, 0.5553, 0.9494],
         [0.2944, 0.5530, 0.9471],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2967, 0.5553, 0.9494],
         [0.2967, 0.5553, 0.9494],
         [0.2944, 0.5530, 0.9471],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
671/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.0463,  0.3448,  1.0709],
         [-0.0643,  0.3263,  1.0526],
         [-0.0778,  0.3125,  1.0388],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0463,  0.3448,  1.0709],
         [-0.0643,  0.3263,  1.0526],
         [-0.0778,  0.3125,  1.0388],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0463,  0.3448,  1.0709],
         [-0.0643,  0.3263,  1.0526],
         [-0.0778,  0.3125,  1.0388],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[248.9000,  34.2000, 277.4000, 297.3500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.0463,  0.3448,  1.0709],
         [-0.0643,  0.3263,  1.0526],
         [-0.0778,  0.3125,  1.0388],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0463,  0.3448,  1.0709],
         [-0.0643,  0.3263,  1.0526],
         [-0.0778,  0.3125,  1.0388],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.0463,  0.3448,  1.0709],
         [-0.0643,  0.3263,  1.0526],
         [-0.0778,  0.3125,  1.0388],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
672/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.6906, 0.9055, 1.1411],
         [0.6919, 0.9068, 1.1425],
         [0.7121, 0.9275, 1.1630],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6892, 0.9041, 1.1397],
         [0.6906, 0.9055, 1.1411],
         [0.7086, 0.9239, 1.1594],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6712, 0.8857, 1.1214],
         [0.6725, 0.8870, 1.1227],
         [0.6906, 0.9055, 1.1411],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[224.2000,  84.5500, 243.2000, 399.9500,   0.0000],
        [ 18.0500, 236.5500,  27.5500, 300.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.6906, 0.9055, 1.1411],
         [0.6919, 0.9068, 1.1425],
         [0.7121, 0.9275, 1.1630],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6892, 0.9041, 1.1397],
         [0.6906, 0.9055, 1.1411],
         [0.7086, 0.9239, 1.1594],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6712, 0.8857, 1.1214],
         [0.6725, 0.8870, 1.1227],
         [0.6906, 0.9055, 1.1411],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
673/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.7861, 2.0780, 2.4652],
         [1.7514, 2.0425, 2.4299],
         [1.7351, 2.0258, 2.4134],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8068, 2.0991, 2.4836],
         [1.7693, 2.0608, 2.4482],
         [1.7343, 2.0250, 2.4125],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8582, 2.1517, 2.5046],
         [1.8039, 2.0962, 2.4788],
         [1.7520, 2.0431, 2.4266],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[168.1500,  97.8500, 191.9000, 339.1500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.7861, 2.0780, 2.4652],
         [1.7514, 2.0425, 2.4299],
         [1.7351, 2.0258, 2.4134],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8068, 2.0991, 2.4836],
         [1.7693, 2.0608, 2.4482],
         [1.7343, 2.0250, 2.4125],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8582, 2.1517, 2.5046],
         [1.8039, 2.0962, 2.4788],
         [1.7520, 2.0431, 2.4266],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
674/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.2728, 1.7108, 2.1868],
         [1.2741, 1.7121, 2.1882],
         [1.2917, 1.7301, 2.2061],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2714, 1.7094, 2.1855],
         [1.2716, 1.7095, 2.1856],
         [1.2749, 1.7129, 2.1890],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2534, 1.6910, 2.1671],
         [1.2546, 1.6922, 2.1683],
         [1.2686, 1.7065, 2.1826],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[209.0000,  26.6000, 227.0500, 377.1500,   0.0000],
        [335.3500, 229.9000, 342.0000, 327.7500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.2728, 1.7108, 2.1868],
         [1.2741, 1.7121, 2.1882],
         [1.2917, 1.7301, 2.2061],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2714, 1.7094, 2.1855],
         [1.2716, 1.7095, 2.1856],
         [1.2749, 1.7129, 2.1890],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2534, 1.6910, 2.1671],
         [1.2546, 1.6922, 2.1683],
         [1.2686, 1.7065, 2.1826],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
675/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.1764, 0.6949, 1.9075],
         [0.1768, 0.6954, 1.9080],
         [0.1768, 0.6954, 1.9080],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1601, 0.6783, 1.8910],
         [0.1756, 0.6941, 1.9067],
         [0.1768, 0.6954, 1.9080],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1575, 0.6756, 1.8883],
         [0.1610, 0.6793, 1.8919],
         [0.1768, 0.6954, 1.9080],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[368.6000, 106.4000, 393.3000, 434.1500,   0.0000],
        [379.0500,   0.9500, 397.1000, 105.4500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.1764, 0.6949, 1.9075],
         [0.1768, 0.6954, 1.9080],
         [0.1768, 0.6954, 1.9080],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1601, 0.6783, 1.8910],
         [0.1756, 0.6941, 1.9067],
         [0.1768, 0.6954, 1.9080],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1575, 0.6756, 1.8883],
         [0.1610, 0.6793, 1.8919],
         [0.1768, 0.6954, 1.9080],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
676/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[2.0263, 2.1134, 2.4483],
         [2.0263, 2.1134, 2.4483],
         [2.0263, 2.1134, 2.4483],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0263, 2.1134, 2.4483],
         [2.0263, 2.1134, 2.4483],
         [2.0263, 2.1134, 2.4483],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0263, 2.1134, 2.4483],
         [2.0263, 2.1134, 2.4483],
         [2.0263, 2.1134, 2.4483],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[154.8500, 118.7500, 167.2000, 387.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[2.0263, 2.1134, 2.4483],
         [2.0263, 2.1134, 2.4483],
         [2.0263, 2.1134, 2.4483],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0263, 2.1134, 2.4483],
         [2.0263, 2.1134, 2.4483],
         [2.0263, 2.1134, 2.4483],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0263, 2.1134, 2.4483],
         [2.0263, 2.1134, 2.4483],
         [2.0263, 2.1134, 2.4483],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
677/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.1259, 0.6783, 1.5598],
         [0.1426, 0.6954, 1.5768],
         [0.1448, 0.6977, 1.5791],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1259, 0.6783, 1.5598],
         [0.1426, 0.6954, 1.5768],
         [0.1448, 0.6977, 1.5791],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1259, 0.6783, 1.5598],
         [0.1426, 0.6954, 1.5768],
         [0.1448, 0.6977, 1.5791],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[456.0000, 130.1500, 466.4500, 335.3500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.1259, 0.6783, 1.5598],
         [0.1426, 0.6954, 1.5768],
         [0.1448, 0.6977, 1.5791],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1259, 0.6783, 1.5598],
         [0.1426, 0.6954, 1.5768],
         [0.1448, 0.6977, 1.5791],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1259, 0.6783, 1.5598],
         [0.1426, 0.6954, 1.5768],
         [0.1448, 0.6977, 1.5791],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
678/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-1.2525, -1.2385, -0.9410],
         [-1.0247, -1.0057, -0.7093],
         [-0.6725, -0.6456, -0.3508],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.0213, -0.9980, -0.7030],
         [-0.5671, -0.5337, -0.2407],
         [-0.0807, -0.0364,  0.2543],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.1604,  0.2630,  0.5341],
         [ 0.0145,  0.1139,  0.3856],
         [-0.2015, -0.1069,  0.1658],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[159.6000,   0.9500, 180.5000, 434.1500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-1.2525, -1.2385, -0.9410],
         [-1.0247, -1.0057, -0.7093],
         [-0.6725, -0.6456, -0.3508],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.0213, -0.9980, -0.7030],
         [-0.5671, -0.5337, -0.2407],
         [-0.0807, -0.0364,  0.2543],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.1604,  0.2630,  0.5341],
         [ 0.0145,  0.1139,  0.3856],
         [-0.2015, -0.1069,  0.1658],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
679/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.9159, 1.4159, 1.7539],
         [1.0083, 1.5090, 1.8465],
         [1.1299, 1.6173, 1.9543],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9335, 1.4339, 1.7718],
         [1.0096, 1.5104, 1.8479],
         [1.1311, 1.6185, 1.9555],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9515, 1.4523, 1.7901],
         [1.0275, 1.5286, 1.8661],
         [1.1448, 1.6325, 1.9694],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[440.8000,  95.9500, 453.1500, 383.8000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.9159, 1.4159, 1.7539],
         [1.0083, 1.5090, 1.8465],
         [1.1299, 1.6173, 1.9543],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9335, 1.4339, 1.7718],
         [1.0096, 1.5104, 1.8479],
         [1.1311, 1.6185, 1.9555],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9515, 1.4523, 1.7901],
         [1.0275, 1.5286, 1.8661],
         [1.1448, 1.6325, 1.9694],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
680/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[ 0.6957,  1.5069,  1.9485],
         [ 0.3143,  1.1225,  1.5645],
         [-0.1558,  0.7111,  1.1365],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.5792,  1.4247,  1.8497],
         [ 0.5068,  1.3588,  1.7814],
         [ 0.2520,  1.1681,  1.5733],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.2385,  1.1210,  1.5424],
         [ 0.3355,  1.2560,  1.6607],
         [ 0.2968,  1.2655,  1.6538],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[248.9000, 105.4500, 271.7000, 456.9500,   0.0000],
        [ 10.4500, 201.4000,  19.9500, 343.9000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[ 0.6957,  1.5069,  1.9485],
         [ 0.3143,  1.1225,  1.5645],
         [-0.1558,  0.7111,  1.1365],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.5792,  1.4247,  1.8497],
         [ 0.5068,  1.3588,  1.7814],
         [ 0.2520,  1.1681,  1.5733],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.2385,  1.1210,  1.5424],
         [ 0.3355,  1.2560,  1.6607],
         [ 0.2968,  1.2655,  1.6538],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
681/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.6392, 0.8704, 1.1585],
         [0.6392, 0.8704, 1.1585],
         [0.6369, 0.8681, 1.1562],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6392, 0.8704, 1.1585],
         [0.6391, 0.8703, 1.1584],
         [0.6358, 0.8669, 1.1550],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6369, 0.8681, 1.1562],
         [0.6358, 0.8669, 1.1550],
         [0.6221, 0.8529, 1.1411],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[177.6500,  62.7000, 212.8000, 389.5000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.6392, 0.8704, 1.1585],
         [0.6392, 0.8704, 1.1585],
         [0.6369, 0.8681, 1.1562],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6392, 0.8704, 1.1585],
         [0.6391, 0.8703, 1.1584],
         [0.6358, 0.8669, 1.1550],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6369, 0.8681, 1.1562],
         [0.6358, 0.8669, 1.1550],
         [0.6221, 0.8529, 1.1411],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
682/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.8789, 1.0980, 1.2980],
         [0.8802, 1.0994, 1.2993],
         [0.8957, 1.1151, 1.3150],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8776, 1.0967, 1.2966],
         [0.8777, 1.0968, 1.2967],
         [0.8810, 1.1002, 1.3001],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8596, 1.0783, 1.2783],
         [0.8630, 1.0817, 1.2817],
         [0.8767, 1.0957, 1.2957],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[304.0000,   6.6500, 326.8000, 362.9000,   0.0000],
        [282.1500,   1.9000, 323.0000, 464.5500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.8789, 1.0980, 1.2980],
         [0.8802, 1.0994, 1.2993],
         [0.8957, 1.1151, 1.3150],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8776, 1.0967, 1.2966],
         [0.8777, 1.0968, 1.2967],
         [0.8810, 1.1002, 1.3001],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.8596, 1.0783, 1.2783],
         [0.8630, 1.0817, 1.2817],
         [0.8767, 1.0957, 1.2957],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
683/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[2.0096, 2.1839, 2.5707],
         [1.9916, 2.1655, 2.5524],
         [1.9758, 2.1493, 2.5363],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0443, 2.2194, 2.6061],
         [2.0276, 2.2024, 2.5891],
         [2.0096, 2.1839, 2.5707],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0628, 2.2383, 2.6249],
         [2.0614, 2.2369, 2.6235],
         [2.0437, 2.2188, 2.6054],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[446.5000, 108.3000, 467.4000, 456.9500,   0.0000],
        [470.2500,  57.9500, 482.6000, 105.4500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[2.0096, 2.1839, 2.5707],
         [1.9916, 2.1655, 2.5524],
         [1.9758, 2.1493, 2.5363],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0443, 2.2194, 2.6061],
         [2.0276, 2.2024, 2.5891],
         [2.0096, 2.1839, 2.5707],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[2.0628, 2.2383, 2.6249],
         [2.0614, 2.2369, 2.6235],
         [2.0437, 2.2188, 2.6054],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
684/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.0331, 1.1681, 1.3502],
         [1.0331, 1.1681, 1.3502],
         [1.0353, 1.1704, 1.3525],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0331, 1.1681, 1.3502],
         [1.0331, 1.1681, 1.3502],
         [1.0351, 1.1702, 1.3524],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0308, 1.1658, 1.3479],
         [1.0310, 1.1659, 1.3481],
         [1.0331, 1.1681, 1.3502],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[  2.8500,  90.2500,  33.2500, 496.8500,   0.0000],
        [581.4000, 245.1000, 595.6500, 340.1000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.0331, 1.1681, 1.3502],
         [1.0331, 1.1681, 1.3502],
         [1.0353, 1.1704, 1.3525],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0331, 1.1681, 1.3502],
         [1.0331, 1.1681, 1.3502],
         [1.0351, 1.1702, 1.3524],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0308, 1.1658, 1.3479],
         [1.0310, 1.1659, 1.3481],
         [1.0331, 1.1681, 1.3502],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
685/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.0849, 1.2210, 1.4030],
         [1.0862, 1.2224, 1.4043],
         [1.1016, 1.2382, 1.4200],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1043, 1.2409, 1.4227],
         [1.1043, 1.2409, 1.4227],
         [1.1063, 1.2430, 1.4248],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1403, 1.2777, 1.4594],
         [1.1401, 1.2775, 1.4592],
         [1.1383, 1.2757, 1.4574],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[377.1500,   1.9000, 424.6500, 321.1000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.0849, 1.2210, 1.4030],
         [1.0862, 1.2224, 1.4043],
         [1.1016, 1.2382, 1.4200],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1043, 1.2409, 1.4227],
         [1.1043, 1.2409, 1.4227],
         [1.1063, 1.2430, 1.4248],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1403, 1.2777, 1.4594],
         [1.1401, 1.2775, 1.4592],
         [1.1383, 1.2757, 1.4574],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
686/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.0912, 0.5028, 1.0017],
         [0.0912, 0.5028, 1.0017],
         [0.0912, 0.5028, 1.0017],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0912, 0.5028, 1.0017],
         [0.0912, 0.5028, 1.0017],
         [0.0912, 0.5028, 1.0017],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0934, 0.5051, 1.0039],
         [0.0934, 0.5051, 1.0039],
         [0.0934, 0.5051, 1.0039],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[330.6000, 133.0000, 343.9000, 371.4500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.0912, 0.5028, 1.0017],
         [0.0912, 0.5028, 1.0017],
         [0.0912, 0.5028, 1.0017],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0912, 0.5028, 1.0017],
         [0.0912, 0.5028, 1.0017],
         [0.0912, 0.5028, 1.0017],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0934, 0.5051, 1.0039],
         [0.0934, 0.5051, 1.0039],
         [0.0934, 0.5051, 1.0039],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
687/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.0741, 0.3627, 0.8448],
         [0.0741, 0.3627, 0.8448],
         [0.0741, 0.3627, 0.8448],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0741, 0.3627, 0.8448],
         [0.0741, 0.3627, 0.8448],
         [0.0741, 0.3627, 0.8448],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0741, 0.3627, 0.8448],
         [0.0741, 0.3627, 0.8448],
         [0.0741, 0.3627, 0.8448],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[106.4000,   2.8500, 133.0000, 456.9500,   0.0000],
        [538.6500, 219.4500, 551.9500, 316.3500,   0.0000],
        [548.1500, 217.5500, 560.5000, 327.7500,   0.0000],
        [ 45.6000, 278.3500,  57.0000, 319.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.0741, 0.3627, 0.8448],
         [0.0741, 0.3627, 0.8448],
         [0.0741, 0.3627, 0.8448],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0741, 0.3627, 0.8448],
         [0.0741, 0.3627, 0.8448],
         [0.0741, 0.3627, 0.8448],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0741, 0.3627, 0.8448],
         [0.0741, 0.3627, 0.8448],
         [0.0741, 0.3627, 0.8448],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
688/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.3990, 0.6949, 1.1755],
         [0.3990, 0.6949, 1.1755],
         [0.3990, 0.6949, 1.1755],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3823, 0.6779, 1.1585],
         [0.3823, 0.6779, 1.1585],
         [0.3823, 0.6779, 1.1585],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3801, 0.6756, 1.1562],
         [0.3801, 0.6756, 1.1562],
         [0.3801, 0.6756, 1.1562],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[297.3500,   0.0000, 319.2000, 410.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.3990, 0.6949, 1.1755],
         [0.3990, 0.6949, 1.1755],
         [0.3990, 0.6949, 1.1755],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3823, 0.6779, 1.1585],
         [0.3823, 0.6779, 1.1585],
         [0.3823, 0.6779, 1.1585],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3801, 0.6756, 1.1562],
         [0.3801, 0.6756, 1.1562],
         [0.3801, 0.6756, 1.1562],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
689/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.3027,  0.2752,  0.9668],
         [-0.3027,  0.2752,  0.9668],
         [-0.3027,  0.2752,  0.9668],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3027,  0.2752,  0.9668],
         [-0.3027,  0.2752,  0.9668],
         [-0.3027,  0.2752,  0.9668],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3004,  0.2775,  0.9691],
         [-0.3004,  0.2775,  0.9691],
         [-0.3004,  0.2775,  0.9691],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[554.8000,   2.8500, 605.1500, 504.4500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.3027,  0.2752,  0.9668],
         [-0.3027,  0.2752,  0.9668],
         [-0.3027,  0.2752,  0.9668],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3027,  0.2752,  0.9668],
         [-0.3027,  0.2752,  0.9668],
         [-0.3027,  0.2752,  0.9668],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.3004,  0.2775,  0.9691],
         [-0.3004,  0.2775,  0.9691],
         [-0.3004,  0.2775,  0.9691],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
690/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.6114,  0.2047,  1.5066],
         [-0.6294,  0.1863,  1.4883],
         [-0.6452,  0.1702,  1.4722],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.6101,  0.2061,  1.5080],
         [-0.6294,  0.1863,  1.4883],
         [-0.6450,  0.1703,  1.4724],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5946,  0.2218,  1.5237],
         [-0.6273,  0.1884,  1.4904],
         [-0.6429,  0.1725,  1.4745],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[ 96.9000,  80.7500, 122.5500, 437.0000,   0.0000],
        [ 85.5000,   9.5000, 101.6500,  80.7500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.6114,  0.2047,  1.5066],
         [-0.6294,  0.1863,  1.4883],
         [-0.6452,  0.1702,  1.4722],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.6101,  0.2061,  1.5080],
         [-0.6294,  0.1863,  1.4883],
         [-0.6450,  0.1703,  1.4724],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5946,  0.2218,  1.5237],
         [-0.6273,  0.1884,  1.4904],
         [-0.6429,  0.1725,  1.4745],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
691/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.5082,  0.5728,  1.7685],
         [-0.5082,  0.5728,  1.7685],
         [-0.5082,  0.5728,  1.7685],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5082,  0.5728,  1.7685],
         [-0.5082,  0.5728,  1.7685],
         [-0.5082,  0.5728,  1.7685],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5059,  0.5751,  1.7708],
         [-0.5059,  0.5751,  1.7708],
         [-0.5059,  0.5751,  1.7708],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[232.7500,   2.8500, 244.1500, 402.8000,   0.0000],
        [489.2500, 179.5500, 504.4500, 347.7000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.5082,  0.5728,  1.7685],
         [-0.5082,  0.5728,  1.7685],
         [-0.5082,  0.5728,  1.7685],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5082,  0.5728,  1.7685],
         [-0.5082,  0.5728,  1.7685],
         [-0.5082,  0.5728,  1.7685],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.5059,  0.5751,  1.7708],
         [-0.5059,  0.5751,  1.7708],
         [-0.5059,  0.5751,  1.7708],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
692/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.0331, 1.1856, 1.4374],
         [1.0331, 1.1856, 1.4374],
         [1.0353, 1.1879, 1.4397],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0331, 1.1856, 1.4374],
         [1.0331, 1.1856, 1.4374],
         [1.0351, 1.1877, 1.4395],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0308, 1.1833, 1.4351],
         [1.0310, 1.1835, 1.4353],
         [1.0331, 1.1856, 1.4374],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[342.9500,  19.9500, 372.4000, 429.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.0331, 1.1856, 1.4374],
         [1.0331, 1.1856, 1.4374],
         [1.0353, 1.1879, 1.4397],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0331, 1.1856, 1.4374],
         [1.0331, 1.1856, 1.4374],
         [1.0351, 1.1877, 1.4395],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0308, 1.1833, 1.4351],
         [1.0310, 1.1835, 1.4353],
         [1.0331, 1.1856, 1.4374],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
693/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.4499, 1.0621, 2.0988],
         [0.4139, 1.0252, 2.0621],
         [0.3823, 0.9930, 2.0300],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4499, 1.0621, 2.0988],
         [0.4139, 1.0252, 2.0621],
         [0.3823, 0.9930, 2.0300],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4499, 1.0621, 2.0988],
         [0.4139, 1.0252, 2.0621],
         [0.3823, 0.9930, 2.0300],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[548.1500,   0.0000, 594.7000, 456.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.4499, 1.0621, 2.0988],
         [0.4139, 1.0252, 2.0621],
         [0.3823, 0.9930, 2.0300],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4499, 1.0621, 2.0988],
         [0.4139, 1.0252, 2.0621],
         [0.3823, 0.9930, 2.0300],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4499, 1.0621, 2.0988],
         [0.4139, 1.0252, 2.0621],
         [0.3823, 0.9930, 2.0300],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
694/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.6739, 0.6608, 1.1764],
         [0.6933, 0.6806, 1.1961],
         [0.7293, 0.7175, 1.2328],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6712, 0.6581, 1.1764],
         [0.6906, 0.6779, 1.1961],
         [0.7266, 0.7147, 1.2328],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6351, 0.6258, 1.1741],
         [0.6545, 0.6456, 1.1938],
         [0.6906, 0.6825, 1.2305],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[550.0500,  45.6000, 578.5500, 475.9500,   0.0000],
        [502.5500,   1.9000, 525.3500,  74.1000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.6739, 0.6608, 1.1764],
         [0.6933, 0.6806, 1.1961],
         [0.7293, 0.7175, 1.2328],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6712, 0.6581, 1.1764],
         [0.6906, 0.6779, 1.1961],
         [0.7266, 0.7147, 1.2328],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6351, 0.6258, 1.1741],
         [0.6545, 0.6456, 1.1938],
         [0.6906, 0.6825, 1.2305],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
695/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.4170, 0.7649, 0.9842],
         [0.4157, 0.7622, 0.9842],
         [0.3954, 0.7258, 0.9793],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4337, 0.7479, 0.9842],
         [0.4324, 0.7466, 0.9830],
         [0.4157, 0.7295, 0.9682],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4337, 0.7479, 0.9842],
         [0.4339, 0.7481, 0.9844],
         [0.4337, 0.7479, 0.9865],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[399.9500,   1.9000, 437.9500, 470.2500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.4170, 0.7649, 0.9842],
         [0.4157, 0.7622, 0.9842],
         [0.3954, 0.7258, 0.9793],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4337, 0.7479, 0.9842],
         [0.4324, 0.7466, 0.9830],
         [0.4157, 0.7295, 0.9682],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4337, 0.7479, 0.9842],
         [0.4339, 0.7481, 0.9844],
         [0.4337, 0.7479, 0.9865],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
696/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-1.3343, -1.2521, -1.3389],
         [-1.2841, -1.1994, -1.3260],
         [-1.0445, -0.9383, -1.1394],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.5303, -1.4525, -1.5385],
         [-1.5619, -1.4834, -1.6080],
         [-1.4734, -1.3763, -1.5683],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.6257, -1.5501, -1.6401],
         [-1.6982, -1.6224, -1.7399],
         [-1.7791, -1.6785, -1.7965],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[275.5000,  31.3500, 289.7500, 183.3500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-1.3343, -1.2521, -1.3389],
         [-1.2841, -1.1994, -1.3260],
         [-1.0445, -0.9383, -1.1394],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.5303, -1.4525, -1.5385],
         [-1.5619, -1.4834, -1.6080],
         [-1.4734, -1.3763, -1.5683],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.6257, -1.5501, -1.6401],
         [-1.6982, -1.6224, -1.7399],
         [-1.7791, -1.6785, -1.7965],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
697/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-1.1413, -0.1795,  1.2461],
         [-1.1247, -0.1625,  1.2631],
         [-1.1224, -0.1602,  1.2654],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.1413, -0.1795,  1.2461],
         [-1.1247, -0.1625,  1.2631],
         [-1.1224, -0.1602,  1.2654],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.1413, -0.1795,  1.2461],
         [-1.1247, -0.1625,  1.2631],
         [-1.1224, -0.1602,  1.2654],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[160.5500,   1.9000, 199.5000, 460.7500,   0.0000],
        [ 57.0000, 266.9500,  74.1000, 340.1000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-1.1413, -0.1795,  1.2461],
         [-1.1247, -0.1625,  1.2631],
         [-1.1224, -0.1602,  1.2654],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.1413, -0.1795,  1.2461],
         [-1.1247, -0.1625,  1.2631],
         [-1.1224, -0.1602,  1.2654],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.1413, -0.1795,  1.2461],
         [-1.1247, -0.1625,  1.2631],
         [-1.1224, -0.1602,  1.2654],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
698/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.4098, 1.3957, 1.7511],
         [1.4098, 1.3957, 1.7511],
         [1.4120, 1.3980, 1.7534],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4098, 1.3957, 1.7511],
         [1.4098, 1.3957, 1.7511],
         [1.4120, 1.3980, 1.7534],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4053, 1.3980, 1.7511],
         [1.4053, 1.3980, 1.7511],
         [1.4075, 1.4003, 1.7534],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[436.0500,  96.9000, 463.6000, 340.1000,   0.0000],
        [497.8000,   2.8500, 527.2500, 101.6500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.4098, 1.3957, 1.7511],
         [1.4098, 1.3957, 1.7511],
         [1.4120, 1.3980, 1.7534],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4098, 1.3957, 1.7511],
         [1.4098, 1.3957, 1.7511],
         [1.4120, 1.3980, 1.7534],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4053, 1.3980, 1.7511],
         [1.4053, 1.3980, 1.7511],
         [1.4075, 1.4003, 1.7534],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
699/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.0339, 1.2911, 1.7878],
         [0.8280, 1.0639, 1.6126],
         [0.5525, 0.7796, 1.3582],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2715, 1.5344, 2.0259],
         [1.0329, 1.2891, 1.7873],
         [0.7339, 0.9673, 1.5368],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5559, 1.8206, 2.2741],
         [1.3364, 1.5948, 2.0558],
         [1.0252, 1.2605, 1.8023],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[123.5000,  78.8500, 139.6500, 368.6000,   0.0000],
        [109.2500,  16.1500, 128.2500,  89.3000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.0339, 1.2911, 1.7878],
         [0.8280, 1.0639, 1.6126],
         [0.5525, 0.7796, 1.3582],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2715, 1.5344, 2.0259],
         [1.0329, 1.2891, 1.7873],
         [0.7339, 0.9673, 1.5368],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5559, 1.8206, 2.2741],
         [1.3364, 1.5948, 2.0558],
         [1.0252, 1.2605, 1.8023],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
700/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.7213, 1.0590, 1.3453],
         [0.6654, 0.9820, 1.2347],
         [0.9158, 1.2011, 1.4483],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6803, 1.0171, 1.3036],
         [0.7438, 1.0622, 1.3145],
         [0.8239, 1.1072, 1.3547],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7559, 1.0899, 1.3783],
         [0.8511, 1.1718, 1.4237],
         [0.7669, 1.0486, 1.2973],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[521.5500,   1.9000, 553.8500, 527.2500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.7213, 1.0590, 1.3453],
         [0.6654, 0.9820, 1.2347],
         [0.9158, 1.2011, 1.4483],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6803, 1.0171, 1.3036],
         [0.7438, 1.0622, 1.3145],
         [0.8239, 1.1072, 1.3547],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7559, 1.0899, 1.3783],
         [0.8511, 1.1718, 1.4237],
         [0.7669, 1.0486, 1.2973],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
701/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.3985, 0.4144, 1.1750],
         [0.3810, 0.3964, 1.1571],
         [0.3651, 0.3802, 1.1410],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3810, 0.3964, 1.1571],
         [0.3797, 0.3951, 1.1559],
         [0.3629, 0.3779, 1.1388],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3651, 0.3802, 1.1410],
         [0.3629, 0.3779, 1.1388],
         [0.3607, 0.3756, 1.1365],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[564.3000,  58.9000, 577.6000, 377.1500,   0.0000],
        [ 11.4000, 263.1500,  20.9000, 322.0500,   0.0000],
        [ 76.0000, 198.5500,  95.0000, 380.0000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.3985, 0.4144, 1.1750],
         [0.3810, 0.3964, 1.1571],
         [0.3651, 0.3802, 1.1410],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3810, 0.3964, 1.1571],
         [0.3797, 0.3951, 1.1559],
         [0.3629, 0.3779, 1.1388],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3651, 0.3802, 1.1410],
         [0.3629, 0.3779, 1.1388],
         [0.3607, 0.3756, 1.1365],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
702/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.3819, 0.6949, 0.9489],
         [0.3656, 0.6769, 0.9351],
         [0.3656, 0.6608, 0.9673],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3837, 0.6968, 0.9507],
         [0.3837, 0.6955, 0.9533],
         [0.3835, 0.6803, 0.9830],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4039, 0.7175, 0.9714],
         [0.4038, 0.7173, 0.9712],
         [0.3997, 0.7112, 0.9711],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[307.8000,  70.3000, 345.8000, 422.7500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.3819, 0.6949, 0.9489],
         [0.3656, 0.6769, 0.9351],
         [0.3656, 0.6608, 0.9673],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.3837, 0.6968, 0.9507],
         [0.3837, 0.6955, 0.9533],
         [0.3835, 0.6803, 0.9830],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4039, 0.7175, 0.9714],
         [0.4038, 0.7173, 0.9712],
         [0.3997, 0.7112, 0.9711],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
703/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.0912, 0.6779, 1.2980],
         [0.0912, 0.6779, 1.2980],
         [0.0912, 0.6779, 1.2980],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0912, 0.6779, 1.2980],
         [0.0912, 0.6779, 1.2980],
         [0.0912, 0.6779, 1.2980],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0912, 0.6779, 1.2980],
         [0.0912, 0.6779, 1.2980],
         [0.0912, 0.6779, 1.2980],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[555.7500,   2.8500, 607.0500, 462.6500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.0912, 0.6779, 1.2980],
         [0.0912, 0.6779, 1.2980],
         [0.0912, 0.6779, 1.2980],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0912, 0.6779, 1.2980],
         [0.0912, 0.6779, 1.2980],
         [0.0912, 0.6779, 1.2980],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0912, 0.6779, 1.2980],
         [0.0912, 0.6779, 1.2980],
         [0.0912, 0.6779, 1.2980],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
704/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.9132, 1.0455, 1.3677],
         [0.9132, 1.0455, 1.3677],
         [0.9132, 1.0455, 1.3677],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9132, 1.0455, 1.3677],
         [0.9132, 1.0455, 1.3677],
         [0.9132, 1.0455, 1.3677],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9132, 1.0455, 1.3677],
         [0.9132, 1.0455, 1.3677],
         [0.9132, 1.0455, 1.3677],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 58.9000,  21.8500,  84.5500, 266.0000,   0.0000],
        [192.8500, 191.9000, 203.3000, 266.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.9132, 1.0455, 1.3677],
         [0.9132, 1.0455, 1.3677],
         [0.9132, 1.0455, 1.3677],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9132, 1.0455, 1.3677],
         [0.9132, 1.0455, 1.3677],
         [0.9132, 1.0455, 1.3677],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9132, 1.0455, 1.3677],
         [0.9132, 1.0455, 1.3677],
         [0.9132, 1.0455, 1.3677],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
705/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.4337, 1.1506, 2.1520],
         [0.4337, 1.1506, 2.1520],
         [0.4337, 1.1506, 2.1520],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4337, 1.1506, 2.1520],
         [0.4337, 1.1506, 2.1520],
         [0.4337, 1.1506, 2.1520],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4359, 1.1529, 2.1543],
         [0.4359, 1.1529, 2.1543],
         [0.4359, 1.1529, 2.1543],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[345.8000,  62.7000, 365.7500, 412.3000,   0.0000],
        [513.9500, 218.5000, 525.3500, 342.0000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.4337, 1.1506, 2.1520],
         [0.4337, 1.1506, 2.1520],
         [0.4337, 1.1506, 2.1520],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4337, 1.1506, 2.1520],
         [0.4337, 1.1506, 2.1520],
         [0.4337, 1.1506, 2.1520],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4359, 1.1529, 2.1543],
         [0.4359, 1.1529, 2.1543],
         [0.4359, 1.1529, 2.1543],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
706/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.0411, 0.4341, 1.6130],
         [0.0569, 0.4502, 1.6290],
         [0.0560, 0.4493, 1.6281],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0749, 0.4687, 1.6474],
         [0.0541, 0.4474, 1.6262],
         [0.0191, 0.4116, 1.5906],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0814, 0.4753, 1.6540],
         [0.0489, 0.4421, 1.6209],
         [0.0059, 0.3981, 1.5771],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[ 89.3000, 140.6000, 114.9500, 437.9500,   0.0000],
        [121.6000, 105.4500, 149.1500, 415.1500,   0.0000],
        [455.0500, 150.1000, 467.4000, 278.3500,   0.0000],
        [338.2000, 249.8500, 348.6500, 339.1500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.0411, 0.4341, 1.6130],
         [0.0569, 0.4502, 1.6290],
         [0.0560, 0.4493, 1.6281],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0749, 0.4687, 1.6474],
         [0.0541, 0.4474, 1.6262],
         [0.0191, 0.4116, 1.5906],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0814, 0.4753, 1.6540],
         [0.0489, 0.4421, 1.6209],
         [0.0059, 0.3981, 1.5771],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
707/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.7419, 0.9755, 1.1237],
         [0.7419, 0.9755, 1.1237],
         [0.7397, 0.9732, 1.1214],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7419, 0.9755, 1.1237],
         [0.7419, 0.9755, 1.1237],
         [0.7397, 0.9732, 1.1214],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7419, 0.9755, 1.1237],
         [0.7419, 0.9755, 1.1237],
         [0.7397, 0.9732, 1.1214],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[349.6000,   0.0000, 367.6500, 361.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.7419, 0.9755, 1.1237],
         [0.7419, 0.9755, 1.1237],
         [0.7397, 0.9732, 1.1214],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7419, 0.9755, 1.1237],
         [0.7419, 0.9755, 1.1237],
         [0.7397, 0.9732, 1.1214],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.7419, 0.9755, 1.1237],
         [0.7419, 0.9755, 1.1237],
         [0.7397, 0.9732, 1.1214],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
708/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.4679, 1.0980, 1.9951],
         [0.4679, 1.0980, 1.9951],
         [0.4653, 1.0953, 1.9924],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4679, 1.0980, 1.9951],
         [0.4653, 1.0954, 1.9925],
         [0.4508, 1.0805, 1.9777],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4653, 1.0953, 1.9947],
         [0.4508, 1.0805, 1.9800],
         [0.4505, 1.0802, 1.9797],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[410.4000, 107.3500, 446.5000, 443.6500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.4679, 1.0980, 1.9951],
         [0.4679, 1.0980, 1.9951],
         [0.4653, 1.0953, 1.9924],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4679, 1.0980, 1.9951],
         [0.4653, 1.0954, 1.9925],
         [0.4508, 1.0805, 1.9777],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.4653, 1.0953, 1.9947],
         [0.4508, 1.0805, 1.9800],
         [0.4505, 1.0802, 1.9797],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
709/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.3070, 1.4832, 1.7337],
         [1.3070, 1.4832, 1.7336],
         [1.3044, 1.4805, 1.7310],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3070, 1.4832, 1.7336],
         [1.3044, 1.4805, 1.7310],
         [1.2899, 1.4657, 1.7163],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3044, 1.4805, 1.7310],
         [1.2899, 1.4657, 1.7163],
         [1.2896, 1.4654, 1.7160],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[525.3500,  84.5500, 566.2000, 329.6500,   0.0000],
        [ 49.4000, 223.2500,  61.7500, 298.3000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.3070, 1.4832, 1.7337],
         [1.3070, 1.4832, 1.7336],
         [1.3044, 1.4805, 1.7310],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3070, 1.4832, 1.7336],
         [1.3044, 1.4805, 1.7310],
         [1.2899, 1.4657, 1.7163],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3044, 1.4805, 1.7310],
         [1.2899, 1.4657, 1.7163],
         [1.2896, 1.4654, 1.7160],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
710/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.1601, 0.5383, 0.9498],
         [0.1615, 0.5396, 0.9512],
         [0.1790, 0.5576, 0.9690],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1782, 0.5567, 0.9682],
         [0.1782, 0.5567, 0.9682],
         [0.1782, 0.5567, 0.9682],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2007, 0.5797, 0.9911],
         [0.2005, 0.5796, 0.9909],
         [0.1984, 0.5774, 0.9888],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[580.4500,  47.5000, 599.4500, 390.4500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.1601, 0.5383, 0.9498],
         [0.1615, 0.5396, 0.9512],
         [0.1790, 0.5576, 0.9690],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1782, 0.5567, 0.9682],
         [0.1782, 0.5567, 0.9682],
         [0.1782, 0.5567, 0.9682],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2007, 0.5797, 0.9911],
         [0.2005, 0.5796, 0.9909],
         [0.1984, 0.5774, 0.9888],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
711/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.1872, 1.3782, 1.5768],
         [1.1872, 1.3782, 1.5768],
         [1.1872, 1.3782, 1.5768],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1872, 1.3782, 1.5768],
         [1.1872, 1.3782, 1.5768],
         [1.1872, 1.3782, 1.5768],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1894, 1.3805, 1.5791],
         [1.1894, 1.3805, 1.5791],
         [1.1894, 1.3805, 1.5791],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[394.2500,  81.7000, 407.5500, 401.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.1872, 1.3782, 1.5768],
         [1.1872, 1.3782, 1.5768],
         [1.1872, 1.3782, 1.5768],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1872, 1.3782, 1.5768],
         [1.1872, 1.3782, 1.5768],
         [1.1872, 1.3782, 1.5768],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.1894, 1.3805, 1.5791],
         [1.1894, 1.3805, 1.5791],
         [1.1894, 1.3805, 1.5791],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
712/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.9749, 2.1485, 2.3960],
         [1.9754, 2.1489, 2.3965],
         [1.9776, 2.1512, 2.3987],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.9767, 2.1503, 2.3978],
         [1.9920, 2.1660, 2.4134],
         [1.9922, 2.1661, 2.4136],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.9920, 2.1660, 2.4134],
         [1.9922, 2.1661, 2.4136],
         [1.9962, 2.1703, 2.4177],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[518.7000, 142.5000, 540.5500, 401.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.9749, 2.1485, 2.3960],
         [1.9754, 2.1489, 2.3965],
         [1.9776, 2.1512, 2.3987],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.9767, 2.1503, 2.3978],
         [1.9920, 2.1660, 2.4134],
         [1.9922, 2.1661, 2.4136],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.9920, 2.1660, 2.4134],
         [1.9922, 2.1661, 2.4136],
         [1.9962, 2.1703, 2.4177],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
713/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-1.7596, -1.5819, -1.4577],
         [-1.8133, -1.6367, -1.5122],
         [-1.8651, -1.6897, -1.5600],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.7605, -1.5814, -1.4783],
         [-1.7965, -1.6183, -1.5134],
         [-1.8471, -1.6713, -1.5432],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.7781, -1.5832, -1.5373],
         [-1.7951, -1.6018, -1.5478],
         [-1.8290, -1.6506, -1.5519],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[181.4500,   5.7000, 200.4500, 479.7500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-1.7596, -1.5819, -1.4577],
         [-1.8133, -1.6367, -1.5122],
         [-1.8651, -1.6897, -1.5600],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.7605, -1.5814, -1.4783],
         [-1.7965, -1.6183, -1.5134],
         [-1.8471, -1.6713, -1.5432],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.7781, -1.5832, -1.5373],
         [-1.7951, -1.6018, -1.5478],
         [-1.8290, -1.6506, -1.5519],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
714/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.2444, 0.6945, 1.1576],
         [0.2070, 0.6562, 1.1195],
         [0.1529, 0.6009, 1.0645],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2444, 0.6945, 1.1576],
         [0.2084, 0.6576, 1.1209],
         [0.1545, 0.6025, 1.0660],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2449, 0.6949, 1.1581],
         [0.2243, 0.6739, 1.1371],
         [0.1746, 0.6230, 1.0865],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[307.8000,  17.1000, 323.0000, 437.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.2444, 0.6945, 1.1576],
         [0.2070, 0.6562, 1.1195],
         [0.1529, 0.6009, 1.0645],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2444, 0.6945, 1.1576],
         [0.2084, 0.6576, 1.1209],
         [0.1545, 0.6025, 1.0660],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.2449, 0.6949, 1.1581],
         [0.2243, 0.6739, 1.1371],
         [0.1746, 0.6230, 1.0865],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
715/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-1.5578, -1.3055, -1.7939],
         [-1.3122, -1.0544, -1.5770],
         [-1.1748, -0.9163, -1.4349],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.3277, -1.0703, -1.5955],
         [-1.1417, -0.8801, -1.4034],
         [-1.0090, -0.7468, -1.2661],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.1575, -0.8963, -1.4537],
         [-1.0991, -0.8367, -1.3644],
         [-1.0068, -0.7442, -1.2642],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[543.4000,   1.9000, 600.4000, 482.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-1.5578, -1.3055, -1.7939],
         [-1.3122, -1.0544, -1.5770],
         [-1.1748, -0.9163, -1.4349],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.3277, -1.0703, -1.5955],
         [-1.1417, -0.8801, -1.4034],
         [-1.0090, -0.7468, -1.2661],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.1575, -0.8963, -1.4537],
         [-1.0991, -0.8367, -1.3644],
         [-1.0068, -0.7442, -1.2642],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
716/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.0502, 1.3256, 1.6814],
         [1.0502, 1.3256, 1.6814],
         [1.0502, 1.3256, 1.6814],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0502, 1.3256, 1.6814],
         [1.0502, 1.3256, 1.6814],
         [1.0502, 1.3256, 1.6814],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0524, 1.3279, 1.6837],
         [1.0524, 1.3279, 1.6837],
         [1.0524, 1.3279, 1.6837],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[396.1500,  32.3000, 409.4500, 116.8500,   0.0000],
        [424.6500,  96.9000, 440.8000, 417.0500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.0502, 1.3256, 1.6814],
         [1.0502, 1.3256, 1.6814],
         [1.0502, 1.3256, 1.6814],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0502, 1.3256, 1.6814],
         [1.0502, 1.3256, 1.6814],
         [1.0502, 1.3256, 1.6814],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.0524, 1.3279, 1.6837],
         [1.0524, 1.3279, 1.6837],
         [1.0524, 1.3279, 1.6837],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
717/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.9196, 2.1094, 2.3910],
         [2.0099, 2.2017, 2.4490],
         [2.0607, 2.2560, 2.4962],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.6646, 1.8487, 2.1315],
         [1.8700, 2.0587, 2.3066],
         [2.0570, 2.2522, 2.4924],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3781, 1.5558, 1.8399],
         [1.6597, 1.8437, 2.0926],
         [1.9235, 2.1154, 2.3571],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[495.9000,  49.4000, 524.4000, 378.1000,   0.0000],
        [551.9500,   0.9500, 584.2500,  79.8000,   0.0000],
        [ 91.2000, 252.7000, 100.7000, 304.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.9196, 2.1094, 2.3910],
         [2.0099, 2.2017, 2.4490],
         [2.0607, 2.2560, 2.4962],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.6646, 1.8487, 2.1315],
         [1.8700, 2.0587, 2.3066],
         [2.0570, 2.2522, 2.4924],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.3781, 1.5558, 1.8399],
         [1.6597, 1.8437, 2.0926],
         [1.9235, 2.1154, 2.3571],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
718/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-1.6867, -1.5773, -1.4527],
         [-1.5849, -1.4733, -1.3518],
         [-1.5653, -1.4533, -1.3641],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.6696, -1.5599, -1.4354],
         [-1.6084, -1.4974, -1.3756],
         [-1.6194, -1.5086, -1.4167],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.6535, -1.5434, -1.4189],
         [-1.6631, -1.5533, -1.4287],
         [-1.7005, -1.5914, -1.4707],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[467.4000,   0.9500, 490.2000, 414.2000,   0.0000],
        [326.8000, 213.7500, 342.9500, 337.2500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-1.6867, -1.5773, -1.4527],
         [-1.5849, -1.4733, -1.3518],
         [-1.5653, -1.4533, -1.3641],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.6696, -1.5599, -1.4354],
         [-1.6084, -1.4974, -1.3756],
         [-1.6194, -1.5086, -1.4167],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-1.6535, -1.5434, -1.4189],
         [-1.6631, -1.5533, -1.4287],
         [-1.7005, -1.5914, -1.4707],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
719/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[-0.1652,  0.3282,  0.8452],
         [-0.1670,  0.3264,  0.8435],
         [-0.1824,  0.3106,  0.8278],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1490,  0.3448,  0.8618],
         [-0.1644,  0.3290,  0.8461],
         [-0.1678,  0.3256,  0.8427],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1418,  0.3475,  0.8645],
         [-0.1431,  0.3462,  0.8631],
         [-0.1592,  0.3297,  0.8468],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]]), 'annot': tensor([[148.2000,   4.7500, 171.9500, 441.7500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[-0.1652,  0.3282,  0.8452],
         [-0.1670,  0.3264,  0.8435],
         [-0.1824,  0.3106,  0.8278],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1490,  0.3448,  0.8618],
         [-0.1644,  0.3290,  0.8461],
         [-0.1678,  0.3256,  0.8427],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[-0.1418,  0.3475,  0.8645],
         [-0.1431,  0.3462,  0.8631],
         [-0.1592,  0.3297,  0.8468],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        ...,

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]],

        [[ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         ...,
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000],
         [ 0.0000,  0.0000,  0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
720/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.1259, 0.5908, 1.9607],
         [0.1453, 0.6106, 1.9804],
         [0.1791, 0.6452, 2.0148],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1259, 0.5908, 1.9607],
         [0.1453, 0.6106, 1.9804],
         [0.1791, 0.6452, 2.0148],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1281, 0.5931, 1.9630],
         [0.1472, 0.6125, 1.9824],
         [0.1768, 0.6429, 2.0125],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[308.7500, 178.6000, 324.9000, 358.1500,   0.0000],
        [136.8000, 233.7000, 151.0500, 359.1000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.1259, 0.5908, 1.9607],
         [0.1453, 0.6106, 1.9804],
         [0.1791, 0.6452, 2.0148],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1259, 0.5908, 1.9607],
         [0.1453, 0.6106, 1.9804],
         [0.1791, 0.6452, 2.0148],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.1281, 0.5931, 1.9630],
         [0.1472, 0.6125, 1.9824],
         [0.1768, 0.6429, 2.0125],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
721/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.8379, 2.0434, 2.2391],
         [1.8379, 2.0434, 2.2391],
         [1.8379, 2.0434, 2.2391],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8379, 2.0434, 2.2391],
         [1.8379, 2.0434, 2.2391],
         [1.8379, 2.0434, 2.2391],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8379, 2.0434, 2.2391],
         [1.8379, 2.0434, 2.2391],
         [1.8379, 2.0434, 2.2391],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[529.1500, 113.0500, 566.2000, 312.5500,   0.0000],
        [ 15.2000, 255.5500,  24.7000, 306.8500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.8379, 2.0434, 2.2391],
         [1.8379, 2.0434, 2.2391],
         [1.8379, 2.0434, 2.2391],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8379, 2.0434, 2.2391],
         [1.8379, 2.0434, 2.2391],
         [1.8379, 2.0434, 2.2391],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8379, 2.0434, 2.2391],
         [1.8379, 2.0434, 2.2391],
         [1.8379, 2.0434, 2.2391],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
722/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.8893, 2.0259, 2.2914],
         [1.8893, 2.0259, 2.2914],
         [1.8870, 2.0236, 2.2891],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8893, 2.0259, 2.2914],
         [1.8893, 2.0259, 2.2914],
         [1.8870, 2.0236, 2.2891],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8893, 2.0259, 2.2914],
         [1.8893, 2.0259, 2.2914],
         [1.8870, 2.0236, 2.2891],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[135.8500,  95.9500, 159.6000, 417.0500,   0.0000],
        [ 60.8000, 269.8000,  69.3500, 330.6000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.8893, 2.0259, 2.2914],
         [1.8893, 2.0259, 2.2914],
         [1.8870, 2.0236, 2.2891],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8893, 2.0259, 2.2914],
         [1.8893, 2.0259, 2.2914],
         [1.8870, 2.0236, 2.2891],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.8893, 2.0259, 2.2914],
         [1.8893, 2.0259, 2.2914],
         [1.8870, 2.0236, 2.2891],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
723/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.9474, 1.1506, 1.4548],
         [0.9474, 1.1506, 1.4548],
         [0.9474, 1.1506, 1.4548],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9474, 1.1506, 1.4548],
         [0.9474, 1.1506, 1.4548],
         [0.9474, 1.1506, 1.4548],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9474, 1.1506, 1.4548],
         [0.9474, 1.1506, 1.4548],
         [0.9474, 1.1506, 1.4548],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[300.2000, 215.6500, 309.7000, 320.1500,   0.0000],
        [490.2000, 204.2500, 503.5000, 338.2000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.9474, 1.1506, 1.4548],
         [0.9474, 1.1506, 1.4548],
         [0.9474, 1.1506, 1.4548],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9474, 1.1506, 1.4548],
         [0.9474, 1.1506, 1.4548],
         [0.9474, 1.1506, 1.4548],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9474, 1.1506, 1.4548],
         [0.9474, 1.1506, 1.4548],
         [0.9474, 1.1506, 1.4548],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
724/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.6734, 0.8704, 1.1759],
         [0.6734, 0.8704, 1.1759],
         [0.6734, 0.8704, 1.1759],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6734, 0.8704, 1.1759],
         [0.6734, 0.8704, 1.1759],
         [0.6734, 0.8704, 1.1759],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6757, 0.8728, 1.1782],
         [0.6757, 0.8728, 1.1782],
         [0.6757, 0.8728, 1.1782],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[400.9000, 250.8000, 409.4500, 312.5500,   0.0000],
        [530.1000, 247.0000, 538.6500, 315.4000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.6734, 0.8704, 1.1759],
         [0.6734, 0.8704, 1.1759],
         [0.6734, 0.8704, 1.1759],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6734, 0.8704, 1.1759],
         [0.6734, 0.8704, 1.1759],
         [0.6734, 0.8704, 1.1759],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.6757, 0.8728, 1.1782],
         [0.6757, 0.8728, 1.1782],
         [0.6757, 0.8728, 1.1782],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
725/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.5125, 1.5882, 1.7511],
         [1.5139, 1.5896, 1.7525],
         [1.5292, 1.6053, 1.7681],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5112, 1.5855, 1.7525],
         [1.5112, 1.5855, 1.7525],
         [1.5114, 1.5857, 1.7527],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4932, 1.5509, 1.7662],
         [1.4932, 1.5509, 1.7662],
         [1.4951, 1.5529, 1.7682],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[209.0000, 172.9000, 222.3000, 389.5000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.5125, 1.5882, 1.7511],
         [1.5139, 1.5896, 1.7525],
         [1.5292, 1.6053, 1.7681],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5112, 1.5855, 1.7525],
         [1.5112, 1.5855, 1.7525],
         [1.5114, 1.5857, 1.7527],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.4932, 1.5509, 1.7662],
         [1.4932, 1.5509, 1.7662],
         [1.4951, 1.5529, 1.7682],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
726/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.5810, 1.7633, 2.0474],
         [1.5810, 1.7633, 2.0474],
         [1.5810, 1.7633, 2.0474],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5824, 1.7647, 2.0487],
         [1.5810, 1.7633, 2.0474],
         [1.5810, 1.7633, 2.0474],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5977, 1.7804, 2.0644],
         [1.5810, 1.7633, 2.0474],
         [1.5807, 1.7630, 2.0471],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[245.1000, 113.0500, 259.3500, 371.4500,   0.0000],
        [482.6000, 236.5500, 490.2000, 335.3500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.5810, 1.7633, 2.0474],
         [1.5810, 1.7633, 2.0474],
         [1.5810, 1.7633, 2.0474],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5824, 1.7647, 2.0487],
         [1.5810, 1.7633, 2.0474],
         [1.5810, 1.7633, 2.0474],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.5977, 1.7804, 2.0644],
         [1.5810, 1.7633, 2.0474],
         [1.5807, 1.7630, 2.0471],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
727/730
After normalization, Min: -2.0665296676312472, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[0.9817, 1.4482, 1.6988],
         [0.9817, 1.4482, 1.6988],
         [0.9817, 1.4482, 1.6988],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9817, 1.4482, 1.6988],
         [0.9817, 1.4482, 1.6988],
         [0.9817, 1.4482, 1.6988],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9794, 1.4459, 1.6965],
         [0.9794, 1.4459, 1.6965],
         [0.9794, 1.4459, 1.6965],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[470.2500,  84.5500, 487.3500, 412.3000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[0.9817, 1.4482, 1.6988],
         [0.9817, 1.4482, 1.6988],
         [0.9817, 1.4482, 1.6988],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9817, 1.4482, 1.6988],
         [0.9817, 1.4482, 1.6988],
         [0.9817, 1.4482, 1.6988],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.9794, 1.4459, 1.6965],
         [0.9794, 1.4459, 1.6965],
         [0.9794, 1.4459, 1.6965],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
728/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.6329, 1.8513, 2.3616],
         [1.6509, 1.8697, 2.3799],
         [1.6689, 1.8882, 2.3983],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.6329, 1.8513, 2.3616],
         [1.6509, 1.8697, 2.3799],
         [1.6689, 1.8882, 2.3983],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.6329, 1.8513, 2.3616],
         [1.6509, 1.8697, 2.3799],
         [1.6689, 1.8882, 2.3983],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[219.4500, 104.5000, 238.4500, 476.9000,   0.0000],
        [200.4500,   0.0000, 219.4500, 112.1000,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.6329, 1.8513, 2.3616],
         [1.6509, 1.8697, 2.3799],
         [1.6689, 1.8882, 2.3983],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.6329, 1.8513, 2.3616],
         [1.6509, 1.8697, 2.3799],
         [1.6689, 1.8882, 2.3983],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.6329, 1.8513, 2.3616],
         [1.6509, 1.8697, 2.3799],
         [1.6689, 1.8882, 2.3983],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
729/730
After normalization, Min: -2.1179039301310043, Max: 2.6399999999999997
Checking data:  {'img': tensor([[[1.2214, 1.4482, 1.6465],
         [1.2214, 1.4482, 1.6465],
         [1.2192, 1.4459, 1.6442],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2214, 1.4482, 1.6465],
         [1.2214, 1.4482, 1.6465],
         [1.2193, 1.4461, 1.6444],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2237, 1.4505, 1.6488],
         [1.2235, 1.4503, 1.6486],
         [1.2214, 1.4482, 1.6465],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]]), 'annot': tensor([[196.6500,  23.7500, 209.0000, 421.8000,   0.0000],
        [378.1000, 212.8000, 387.6000, 323.9500,   0.0000]],
       dtype=torch.float64), 'scale': 0.95}
Checking scale:  0.95
Checking data[img]:  tensor([[[1.2214, 1.4482, 1.6465],
         [1.2214, 1.4482, 1.6465],
         [1.2192, 1.4459, 1.6442],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2214, 1.4482, 1.6465],
         [1.2214, 1.4482, 1.6465],
         [1.2193, 1.4461, 1.6444],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[1.2237, 1.4505, 1.6488],
         [1.2235, 1.4503, 1.6486],
         [1.2214, 1.4482, 1.6465],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        ...,

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]],

        [[0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         ...,
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000],
         [0.0000, 0.0000, 0.0000]]])
Checking scores:  []
Checking labels:  []
Checking boxes:  []
730/730
1/730
2/730
3/730
4/730
5/730
6/730
7/730
8/730
9/730
10/730
11/730
12/730
13/730
14/730
15/730
16/730
17/730
18/730
19/730
20/730
21/730
22/730
23/730
24/730
25/730
26/730
27/730
28/730
29/730
30/730
31/730
32/730
33/730
34/730
35/730
36/730
37/730
38/730
39/730
40/730
41/730
42/730
43/730
44/730
45/730
46/730
47/730
48/730
49/730
50/730
51/730
52/730
53/730
54/730
55/730
56/730
57/730
58/730
59/730
60/730
61/730
62/730
63/730
64/730
65/730
66/730
67/730
68/730
69/730
70/730
71/730
72/730
73/730
74/730
75/730
76/730
77/730
78/730
79/730
80/730
81/730
82/730
83/730
84/730
85/730
86/730
87/730
88/730
89/730
90/730
91/730
92/730
93/730
94/730
95/730
96/730
97/730
98/730
99/730
100/730
101/730
102/730
103/730
104/730
105/730
106/730
107/730
108/730
109/730
110/730
111/730
112/730
113/730
114/730
115/730
116/730
117/730
118/730
119/730
120/730
121/730
122/730
123/730
124/730
125/730
126/730
127/730
128/730
129/730
130/730
131/730
132/730
133/730
134/730
135/730
136/730
137/730
138/730
139/730
140/730
141/730
142/730
143/730
144/730
145/730
146/730
147/730
148/730
149/730
150/730
151/730
152/730
153/730
154/730
155/730
156/730
157/730
158/730
159/730
160/730
161/730
162/730
163/730
164/730
165/730
166/730
167/730
168/730
169/730
170/730
171/730
172/730
173/730
174/730
175/730
176/730
177/730
178/730
179/730
180/730
181/730
182/730
183/730
184/730
185/730
186/730
187/730
188/730
189/730
190/730
191/730
192/730
193/730
194/730
195/730
196/730
197/730
198/730
199/730
200/730
201/730
202/730
203/730
204/730
205/730
206/730
207/730
208/730
209/730
210/730
211/730
212/730
213/730
214/730
215/730
216/730
217/730
218/730
219/730
220/730
221/730
222/730
223/730
224/730
225/730
226/730
227/730
228/730
229/730
230/730
231/730
232/730
233/730
234/730
235/730
236/730
237/730
238/730
239/730
240/730
241/730
242/730
243/730
244/730
245/730
246/730
247/730
248/730
249/730
250/730
251/730
252/730
253/730
254/730
255/730
256/730
257/730
258/730
259/730
260/730
261/730
262/730
263/730
264/730
265/730
266/730
267/730
268/730
269/730
270/730
271/730
272/730
273/730
274/730
275/730
276/730
277/730
278/730
279/730
280/730
281/730
282/730
283/730
284/730
285/730
286/730
287/730
288/730
289/730
290/730
291/730
292/730
293/730
294/730
295/730
296/730
297/730
298/730
299/730
300/730
301/730
302/730
303/730
304/730
305/730
306/730
307/730
308/730
309/730
310/730
311/730
312/730
313/730
314/730
315/730
316/730
317/730
318/730
319/730
320/730
321/730
322/730
323/730
324/730
325/730
326/730
327/730
328/730
329/730
330/730
331/730
332/730
333/730
334/730
335/730
336/730
337/730
338/730
339/730
340/730
341/730
342/730
343/730
344/730
345/730
346/730
347/730
348/730
349/730
350/730
351/730
352/730
353/730
354/730
355/730
356/730
357/730
358/730
359/730
360/730
361/730
362/730
363/730
364/730
365/730
366/730
367/730
368/730
369/730
370/730
371/730
372/730
373/730
374/730
375/730
376/730
377/730
378/730
379/730
380/730
381/730
382/730
383/730
384/730
385/730
386/730
387/730
388/730
389/730
390/730
391/730
392/730
393/730
394/730
395/730
396/730
397/730
398/730
399/730
400/730
401/730
402/730
403/730
404/730
405/730
406/730
407/730
408/730
409/730
410/730
411/730
412/730
413/730
414/730
415/730
416/730
417/730
418/730
419/730
420/730
421/730
422/730
423/730
424/730
425/730
426/730
427/730
428/730
429/730
430/730
431/730
432/730
433/730
434/730
435/730
436/730
437/730
438/730
439/730
440/730
441/730
442/730
443/730
444/730
445/730
446/730
447/730
448/730
449/730
450/730
451/730
452/730
453/730
454/730
455/730
456/730
457/730
458/730
459/730
460/730
461/730
462/730
463/730
464/730
465/730
466/730
467/730
468/730
469/730
470/730
471/730
472/730
473/730
474/730
475/730
476/730
477/730
478/730
479/730
480/730
481/730
482/730
483/730
484/730
485/730
486/730
487/730
488/730
489/730
490/730
491/730
492/730
493/730
494/730
495/730
496/730
497/730
498/730
499/730
500/730
501/730
502/730
503/730
504/730
505/730
506/730
507/730
508/730
509/730
510/730
511/730
512/730
513/730
514/730
515/730
516/730
517/730
518/730
519/730
520/730
521/730
522/730
523/730
524/730
525/730
526/730
527/730
528/730
529/730
530/730
531/730
532/730
533/730
534/730
535/730
536/730
537/730
538/730
539/730
540/730
541/730
542/730
543/730
544/730
545/730
546/730
547/730
548/730
549/730
550/730
551/730
552/730
553/730
554/730
555/730
556/730
557/730
558/730
559/730
560/730
561/730
562/730
563/730
564/730
565/730
566/730
567/730
568/730
569/730
570/730
571/730
572/730
573/730
574/730
575/730
576/730
577/730
578/730
579/730
580/730
581/730
582/730
583/730
584/730
585/730
586/730
587/730
588/730
589/730
590/730
591/730
592/730
593/730
594/730
595/730
596/730
597/730
598/730
599/730
600/730
601/730
602/730
603/730
604/730
605/730
606/730
607/730
608/730
609/730
610/730
611/730
612/730
613/730
614/730
615/730
616/730
617/730
618/730
619/730
620/730
621/730
622/730
623/730
624/730
625/730
626/730
627/730
628/730
629/730
630/730
631/730
632/730
633/730
634/730
635/730
636/730
637/730
638/730
639/730
640/730
641/730
642/730
643/730
644/730
645/730
646/730
647/730
648/730
649/730
650/730
651/730
652/730
653/730
654/730
655/730
656/730
657/730
658/730
659/730
660/730
661/730
662/730
663/730
664/730
665/730
666/730
667/730
668/730
669/730
670/730
671/730
672/730
673/730
674/730
675/730
676/730
677/730
678/730
679/730
680/730
681/730
682/730
683/730
684/730
685/730
686/730
687/730
688/730
689/730
690/730
691/730
692/730
693/730
694/730
695/730
696/730
697/730
698/730
699/730
700/730
701/730
702/730
703/730
704/730
705/730
706/730
707/730
708/730
709/730
710/730
711/730
712/730
713/730
714/730
715/730
716/730
717/730
718/730
719/730
720/730
721/730
722/730
723/730
724/730
725/730
726/730
727/730
728/730
729/730
730/730
Checking all detections:  [[array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)], [array([], shape=(0, 5), dtype=float64)]]
Checking all annotations:  [[array([[405., 208., 420., 370.],
       [360., 236., 371., 291.]])], [array([[462., 277., 472., 353.],
       [393., 285., 404., 342.]])], [array([[496., 158., 511., 380.],
       [208., 247., 218., 272.]])], [array([[535., 241., 544., 280.],
       [452., 289., 460., 328.]])], [array([[199.,  91., 210., 128.],
       [422., 198., 434., 375.],
       [384., 265., 392., 348.]])], [array([[387., 159., 402., 404.],
       [530., 181., 542., 324.],
       [302., 270., 309., 319.]])], [array([[ 58.,   3., 101., 182.],
       [417., 249., 429., 332.],
       [343., 283., 350., 338.]])], [array([[479., 237., 489., 346.],
       [579., 283., 589., 332.]])], [array([[569., 125., 592., 412.],
       [402., 265., 412., 328.]])], [array([[336., 127., 350., 177.],
       [320., 133., 332., 184.]])], [array([[ 43., 273.,  52., 329.],
       [102., 299., 107., 320.]])], [array([[581., 181., 594., 384.],
       [571., 283., 577., 340.],
       [452., 263., 459., 350.]])], [array([[279., 119., 296., 166.],
       [605., 266., 612., 293.]])], [array([[430., 256., 438., 276.],
       [498., 266., 508., 326.],
       [547., 270., 556., 334.]])], [array([[369., 291., 378., 364.],
       [403., 297., 413., 363.]])], [array([[312., 232., 323., 351.],
       [471., 239., 482., 320.],
       [376., 286., 385., 315.]])], [array([[535.,  65., 562., 282.],
       [508.,  32., 525.,  91.],
       [226., 286., 233., 344.],
       [165., 278., 172., 325.]])], [array([[109.,  88., 132., 357.],
       [138.,  78., 163., 354.],
       [499., 267., 513., 350.],
       [544., 284., 553., 335.],
       [434., 297., 441., 332.]])], [array([[405., 253., 416., 321.],
       [327., 271., 338., 332.]])], [array([[411., 289., 419., 365.]])], [array([[ 72., 244.,  82., 290.],
       [227., 289., 234., 319.],
       [206., 297., 212., 324.]])], [array([[351., 240., 360., 336.],
       [416., 274., 425., 333.]])], [array([[343., 211., 360., 321.]])], [array([[ 25.,  95.,  59., 421.],
       [459., 144., 476., 207.]])], [array([[204., 246., 214., 356.],
       [223., 243., 232., 356.]])], [array([[366., 246., 376., 332.],
       [628., 253., 637., 321.]])], [array([[385., 272., 397., 329.],
       [418., 290., 427., 331.]])], [array([[340., 271., 351., 363.],
       [429., 287., 440., 357.]])], [array([[168.,  18., 205., 351.],
       [495.,  34., 520., 385.]])], [array([[365., 106., 388., 401.],
       [ 41., 230.,  65., 368.],
       [ 11., 243.,  34., 330.]])], [array([[332., 210., 344., 370.]])], [array([[ 17.,   3.,  81., 441.]])], [array([[189., 260., 199., 333.],
       [364., 268., 377., 342.]])], [array([[ 76., 225.,  92., 315.],
       [218., 257., 231., 315.],
       [408.,   4., 437., 126.],
       [437., 137., 477., 498.]])], [array([[382.,  36., 400., 315.],
       [403.,   2., 435., 385.]])], [array([[214., 152., 224., 392.]])], [array([[393., 271., 406., 328.]])], [array([[593., 283., 607., 363.]])], [array([[145.,  98., 173., 434.],
       [463., 276., 477., 340.]])], [array([[436., 285., 444., 341.]])], [array([[580.,   2., 607., 398.]])], [array([[ 53., 118.,  77., 366.]])], [array([[556., 235., 568., 375.],
       [419., 290., 433., 313.]])], [array([[286., 158., 304., 338.]])], [array([[155.,   3., 184., 323.]])], [array([[ 68., 291.,  83., 316.]])], [array([[442., 153., 457., 360.],
       [233., 268., 245., 298.]])], [array([[169., 261., 181., 321.]])], [array([[316.,  12., 360., 456.],
       [ 89., 229., 104., 288.]])], [array([[168., 281., 179., 342.],
       [  5., 269.,  25., 362.]])], [array([[608., 153., 632., 425.]])], [array([[173., 161., 208., 396.]])], [array([[284., 305., 301., 526.],
       [274., 125., 298., 271.],
       [324.,  38., 344., 134.]])], [array([[302.,  77., 324., 435.],
       [394., 161., 417., 424.]])], [array([[104., 177., 121., 363.]])], [array([[193., 244., 204., 316.]])], [array([[243.,  83., 268., 149.]])], [array([[342., 169., 368., 377.]])], [array([[186., 212., 200., 360.]])], [array([[551., 180., 583., 407.]])], [array([[242., 136., 258., 293.]])], [array([[  1.,  75.,  14., 350.]])], [array([[248., 166., 282., 372.]])], [array([[ 92.,   2., 143., 479.]])], [array([[607., 233., 619., 291.]])], [array([[524.,   1., 545., 443.]])], [array([[581., 277., 594., 352.]])], [array([[270., 118., 294., 484.],
       [248.,  17., 268., 136.]])], [array([[382., 296., 390., 335.]])], [array([[113., 240., 125., 341.]])], [array([[360., 241., 371., 335.]])], [array([[580., 293., 590., 333.]])], [array([[531., 229., 547., 290.]])], [array([[450., 189., 475., 313.]])], [array([[562., 226., 596., 630.],
       [563.,   4., 636., 222.]])], [array([[442.,   1., 483., 530.]])], [array([[ 72., 209.,  83., 363.],
       [328., 229., 343., 317.]])], [array([[376., 285., 392., 312.]])], [array([[187., 259., 196., 321.]])], [array([[412., 101., 432., 393.],
       [149., 222., 162., 335.]])], [array([[242., 248., 256., 346.]])], [array([[427.,   2., 465., 526.]])], [array([[577., 154., 599., 271.]])], [array([[401., 280., 411., 326.],
       [472., 289., 481., 319.]])], [array([[282., 283., 296., 334.]])], [array([[518., 250., 528., 356.]])], [array([[202., 277., 212., 341.],
       [ 50., 286.,  61., 317.]])], [array([[  2., 145.,  21., 431.]])], [array([[ 96.,   2., 137., 521.],
       [514., 273., 524., 341.]])], [array([[352., 290., 361., 337.]])], [array([[284., 270., 293., 311.],
       [569., 268., 579., 301.]])], [array([[568., 264., 576., 336.]])], [array([[147.,  45., 163., 455.],
       [481., 238., 500., 377.]])], [array([[404.,   2., 437., 623.]])], [array([[498., 233., 508., 370.],
       [349., 246., 363., 346.]])], [array([[105.,   8., 123., 415.]])], [array([[ 42., 137.,  80., 380.]])], [array([[235., 126., 249., 378.]])], [array([[242., 183., 259., 375.],
       [151., 278., 164., 322.]])], [array([[103., 218., 124., 374.]])], [array([[557.,  89., 591., 357.],
       [199., 271., 208., 362.],
       [257., 293., 266., 324.]])], [array([[445., 231., 458., 345.],
       [302., 243., 312., 343.]])], [array([[494., 121., 520., 329.]])], [array([[ 83., 163., 116., 380.]])], [array([[144.,  29., 166., 454.],
       [251., 224., 263., 317.]])], [array([[315.,   3., 346., 504.]])], [array([[215., 207., 228., 375.]])], [array([[514., 283., 528., 309.]])], [array([[124., 205., 138., 313.]])], [array([[181., 106., 204., 459.],
       [194.,  63., 210., 118.],
       [ 18.,  49.,  40., 462.]])], [array([[175.,   2., 232., 493.],
       [412., 241., 425., 350.]])], [array([[515., 241., 524., 352.]])], [array([[109., 228., 122., 339.]])], [array([[289.,  21., 304., 109.]])], [array([[332.,  35., 355., 170.]])], [array([[431.,  99., 450., 513.]])], [array([[540., 204., 567., 480.]])], [array([[267., 209., 279., 386.]])], [array([[ 48., 238.,  61., 330.]])], [array([[241., 115., 276., 444.],
       [267.,  63., 284., 138.],
       [ 50., 244.,  68., 286.]])], [array([[323., 229., 340., 397.],
       [359., 233., 372., 396.]])], [array([[400., 245., 412., 315.]])], [array([[  0.,   5.,  25., 299.]])], [array([[ 78., 191.,  97., 347.],
       [ 54., 189.,  71., 342.],
       [458.,   3., 480., 104.]])], [array([[ 75., 201.,  85., 364.]])], [array([[ 16., 136.,  33., 294.]])], [array([[613., 220., 626., 385.]])], [array([[348., 134., 368., 409.]])], [array([[335.,   3., 355., 429.]])], [array([[450., 111., 463., 226.]])], [array([[252., 137., 299., 349.],
       [356., 115., 374., 194.]])], [array([[455., 113., 481., 528.]])], [array([[252., 239., 263., 367.]])], [array([[263., 121., 288., 365.]])], [array([[196., 119., 225., 417.],
       [160.,   9., 184., 117.]])], [array([[484., 265., 498., 314.],
       [262., 209., 277., 339.]])], [array([[ 17., 249.,  34., 368.]])], [array([[ 75.,  66., 109., 393.],
       [419., 249., 432., 355.]])], [array([[412.,   3., 443., 416.]])], [array([[264., 121., 300., 518.],
       [263.,   1., 288., 123.]])], [array([[321., 271., 336., 329.]])], [array([[177., 219., 195., 294.]])], [array([[195., 192., 217., 375.]])], [array([[ 98., 109., 116., 301.]])], [array([[361., 163., 375., 312.],
       [150., 258., 168., 350.]])], [array([[526.,  85., 549., 354.],
       [292., 252., 300., 351.]])], [array([[ 76., 306.,  86., 343.]])], [array([[303., 123., 321., 458.]])], [array([[149., 185., 160., 265.]])], [array([[524., 229., 536., 287.]])], [array([[232., 246., 243., 351.],
       [358., 256., 372., 327.]])], [array([[184.,   3., 220., 477.]])], [array([[488., 101., 517., 322.],
       [480.,   2., 502., 128.]])], [array([[403., 200., 418., 368.]])], [array([[566.,  67., 608., 507.]])], [array([[534.,  98., 551., 435.]])], [array([[121., 254., 130., 329.]])], [array([[360., 235., 376., 296.],
       [280., 285., 294., 327.]])], [array([[522.,  72., 562., 397.]])], [array([[499., 239., 516., 378.]])], [array([[345., 231., 362., 394.]])], [array([[585., 276., 596., 319.]])], [array([[514.,   1., 547., 493.],
       [118., 265., 129., 333.]])], [array([[  2.,  26.,  24., 277.]])], [array([[ 11., 236.,  29., 354.]])], [array([[189., 159., 206., 224.]])], [array([[146., 128., 161., 380.]])], [array([[360., 210., 376., 374.],
       [ 88., 281., 123., 448.],
       [315., 264., 326., 317.]])], [array([[  5., 250.,  21., 365.]])], [array([[523.,  88., 551., 508.]])], [array([[365., 259., 375., 299.],
       [295., 257., 307., 353.]])], [array([[369., 247., 380., 361.]])], [array([[501., 123., 520., 319.]])], [array([[521., 237., 532., 320.]])], [array([[220., 192., 232., 349.],
       [431., 284., 444., 329.]])], [array([[429., 208., 438., 374.]])], [array([[172., 268., 185., 318.]])], [array([[242., 276., 254., 305.]])], [array([[442., 171., 463., 402.]])], [array([[367.,  28., 381., 319.]])], [array([[473., 238., 492., 368.]])], [array([[ 48., 251.,  57., 334.],
       [461., 283., 471., 321.]])], [array([[149., 248., 160., 354.]])], [array([[565.,   1., 593., 439.]])], [array([[301., 278., 314., 332.],
       [241., 247., 258., 314.]])], [array([[122., 190., 140., 334.]])], [array([[195., 278., 202., 304.]])], [array([[300., 110., 332., 498.],
       [256.,   4., 285., 130.]])], [array([[579.,  66., 601., 304.]])], [array([[499., 184., 518., 278.]])], [array([[442.,  93., 481., 358.],
       [478.,   7., 512., 101.]])], [array([[ 48.,   3.,  82., 390.]])], [array([[178., 254., 195., 353.],
       [110., 259., 123., 330.]])], [array([[614., 193., 637., 391.]])], [array([[336.,  98., 366., 383.]])], [array([[ 11., 209.,  22., 360.]])], [array([[ 90., 160., 120., 388.]])], [array([[323., 248., 332., 347.],
       [456., 267., 469., 327.]])], [array([[341., 282., 348., 332.]])], [array([[447., 130., 468., 454.]])], [array([[479., 264., 489., 333.]])], [array([[555., 150., 570., 390.],
       [182., 236., 196., 357.]])], [array([[186., 260., 194., 340.]])], [array([[343., 283., 354., 333.]])], [array([[565., 277., 580., 368.]])], [array([[ 72., 258.,  84., 328.]])], [array([[452., 148., 466., 358.]])], [array([[213., 260., 222., 347.]])], [array([[243., 279., 252., 322.],
       [196., 269., 206., 330.]])], [array([[354.,  25., 367., 390.]])], [array([[379., 243., 386., 304.]])], [array([[330., 197., 341., 303.]])], [array([[493., 305., 502., 346.]])], [array([[286., 124., 306., 448.]])], [array([[ 52., 165.,  69., 321.],
       [252., 260., 264., 343.]])], [array([[158., 252., 176., 346.],
       [542., 191., 564., 296.],
       [118., 287., 132., 326.]])], [array([[557., 119., 576., 439.],
       [117., 281., 132., 349.]])], [array([[ 48., 243.,  62., 338.]])], [array([[343., 218., 357., 359.]])], [array([[121.,   3., 177., 513.]])], [array([[255., 242., 269., 358.]])], [array([[534.,   6., 572., 374.],
       [150., 269., 164., 302.]])], [array([[ 51., 290.,  60., 343.]])], [array([[619., 176., 631., 361.]])], [array([[162., 128., 181., 452.]])], [array([[138., 105., 157., 417.]])], [array([[352., 156., 369., 292.],
       [154., 260., 164., 332.]])], [array([[455., 123., 470., 289.]])], [array([[463., 178., 478., 396.]])], [array([[448.,   1., 495., 526.],
       [108., 226., 118., 345.]])], [array([[247.,   1., 293., 362.]])], [array([[522.,  57., 554., 473.]])], [array([[ 49.,  71., 107., 552.],
       [115.,   2., 147., 105.],
       [626., 248., 638., 332.]])], [array([[175., 198., 191., 376.]])], [array([[136., 194., 154., 355.],
       [185., 281., 202., 329.]])], [array([[234.,  99., 250., 394.],
       [  8., 262.,  20., 334.]])], [array([[267.,  88., 293., 357.]])], [array([[622., 156., 639., 315.]])], [array([[136., 182., 154., 336.]])], [array([[232.,   3., 259., 508.]])], [array([[212.,  19., 251., 370.]])], [array([[ 34.,  68., 123., 533.],
       [  7.,   4.,  36.,  71.]])], [array([[175.,   0., 206., 242.]])], [array([[588., 125., 624., 447.],
       [354., 288., 365., 348.]])], [array([[487.,   3., 528., 480.],
       [147., 251., 161., 347.]])], [array([[305., 219., 318., 350.],
       [122., 225., 137., 368.]])], [array([[448.,   9., 480., 157.]])], [array([[590.,  24., 634., 463.],
       [398., 265., 411., 332.]])], [array([[472., 234., 485., 360.],
       [579., 239., 599., 345.]])], [array([[613., 103., 636., 352.]])], [array([[  5., 267.,  18., 374.]])], [array([[527.,  61., 584., 523.]])], [array([[603., 260., 618., 338.]])], [array([[614., 157., 630., 365.],
       [204., 155., 220., 248.]])], [array([[287., 230., 304., 282.]])], [array([[208., 169., 219., 339.],
       [174., 150., 200., 348.]])], [array([[447., 130., 470., 268.]])], [array([[249., 212., 260., 313.],
       [179., 257., 197., 303.]])], [array([[  1., 189.,  14., 363.]])], [array([[254.,  32., 270., 284.]])], [array([[359., 200., 374., 371.]])], [array([[229., 259., 244., 343.]])], [array([[ 67., 232.,  76., 322.]])], [array([[189.,  28., 208., 416.]])], [array([[163., 172., 183., 388.]])], [array([[476., 238., 490., 334.]])], [array([[344., 247., 352., 332.]])], [array([[ 65., 276.,  82., 337.]])], [array([[131., 148., 151., 354.]])], [array([[478., 204., 493., 365.]])], [array([[ 33., 242.,  40., 318.]])], [array([[430., 217., 441., 318.]])], [array([[ 12., 146.,  41., 412.]])], [array([[571., 146., 585., 391.]])], [array([[ 41., 183.,  59., 351.]])], [array([[511., 175., 522., 360.]])], [array([[380., 115., 417., 479.]])], [array([[273., 146., 292., 416.]])], [array([[320., 137., 333., 353.],
       [585., 205., 604., 310.]])], [array([[ 41., 194.,  59., 355.],
       [469., 218., 489., 286.]])], [array([[208., 197., 232., 383.]])], [array([[104., 235., 116., 348.]])], [array([[361., 268., 367., 355.]])], [array([[446., 222., 457., 385.],
       [283., 263., 299., 342.]])], [array([[400., 250., 411., 355.]])], [array([[374., 198., 392., 452.]])], [array([[426., 209., 441., 374.]])], [array([[613.,  84., 637., 206.],
       [482., 247., 495., 318.]])], [array([[479., 178., 499., 377.]])], [array([[219., 174., 251., 382.]])], [array([[602., 205., 628., 314.]])], [array([[ 18., 179.,  41., 385.],
       [177., 263., 192., 297.]])], [array([[198.,  97., 220., 321.]])], [array([[240., 194., 260., 260.],
       [151., 282., 165., 347.],
       [ 62., 255.,  80., 332.]])], [array([[215., 116., 233., 292.]])], [array([[227.,   0., 261., 481.]])], [array([[482., 108., 509., 325.]])], [array([[363., 145., 378., 299.]])], [array([[370., 259., 378., 302.]])], [array([[378., 187., 400., 381.]])], [array([[172.,  93., 202., 306.]])], [array([[542., 257., 561., 314.]])], [array([[535., 179., 557., 340.]])], [array([[256.,  97., 278., 376.]])], [array([[297.,  22., 331., 446.],
       [479., 205., 492., 266.]])], [array([[356., 124., 380., 372.],
       [361.,   2., 396., 123.],
       [ 75., 265.,  89., 301.]])], [array([[ 37., 242.,  60., 386.]])], [array([[269.,  67., 304., 413.]])], [array([[153., 182., 169., 315.]])], [array([[457., 101., 506., 496.],
       [558.,   4., 588.,  97.]])], [array([[146.,   0., 192., 488.]])], [array([[273., 112., 295., 340.]])], [array([[ 97., 157., 127., 378.]])], [array([[248., 135., 263., 430.]])], [array([[191., 267., 227., 519.]])], [array([[478., 104., 500., 361.]])], [array([[407., 149., 416., 367.]])], [array([[344., 111., 356., 400.]])], [array([[528.,  90., 544., 472.]])], [array([[348., 141., 366., 283.]])], [array([[110.,  88., 148., 454.]])], [array([[265., 212., 275., 342.]])], [array([[ 65., 203.,  76., 364.]])], [array([[ 70.,  94.,  90., 406.]])], [array([[445., 127., 458., 401.]])], [array([[246., 169., 263., 335.]])], [array([[366., 268., 373., 335.]])], [array([[486., 261., 491., 334.],
       [127., 254., 141., 281.]])], [array([[209., 250., 215., 342.],
       [ 96., 288., 105., 336.]])], [array([[ 34., 266.,  43., 327.]])], [array([[591., 241., 596., 303.]])], [array([[318.,  24., 350., 372.]])], [array([[245., 266., 251., 356.]])], [array([[150., 207., 156., 263.]])], [array([[568., 145., 586., 337.]])], [array([[199., 228., 204., 363.]])], [array([[232.,  84., 252., 296.]])], [array([[292., 203., 305., 363.]])], [array([[339.,  82., 351., 403.]])], [array([[ 12., 177.,  24., 339.]])], [array([[217., 197., 228., 371.]])], [array([[337., 125., 353., 440.]])], [array([[436.,   8., 452., 363.]])], [array([[377., 123., 392., 403.],
       [237., 280., 251., 331.]])], [array([[386., 117., 408., 513.]])], [array([[281.,  28., 298., 266.]])], [array([[379., 103., 395., 426.],
       [240., 269., 247., 339.],
       [126., 258., 141., 320.]])], [array([[537., 119., 555., 462.]])], [array([[513., 157., 525., 367.]])], [array([[536., 164., 556., 456.]])], [array([[481., 165., 500., 424.]])], [array([[128., 106., 157., 532.],
       [ 97.,   3., 136.,  89.]])], [array([[415., 144., 429., 407.],
       [  2., 141.,  19., 424.]])], [array([[577., 119., 593., 430.],
       [281., 264., 292., 310.]])], [array([[221., 199., 232., 355.]])], [array([[487., 109., 519., 525.],
       [564.,   4., 593.,  76.]])], [array([[282., 178., 294., 320.]])], [array([[558., 152., 570., 429.]])], [array([[398., 168., 414., 434.]])], [array([[296., 129., 311., 453.],
       [624., 270., 638., 344.]])], [array([[539., 124., 559., 315.]])], [array([[447., 110., 468., 481.]])], [array([[561., 121., 593., 557.],
       [583.,  58., 616., 559.]])], [array([[326., 117., 348., 508.]])], [array([[574.,  76., 607., 576.],
       [537.,   3., 566.,  94.]])], [array([[ 70., 184.,  98., 408.],
       [345., 209., 363., 368.]])], [array([[ 73.,  68.,  95., 415.]])], [array([[607., 211., 619., 305.]])], [array([[  3.,  66.,  70., 515.]])], [array([[353.,  66., 366., 431.]])], [array([[427.,  53., 446., 277.],
       [277., 216., 296., 359.],
       [ 76., 230.,  95., 369.],
       [148., 271., 159., 326.]])], [array([[412., 127., 437., 474.],
       [303., 263., 317., 327.],
       [145., 255., 154., 353.]])], [array([[539., 179., 548., 370.],
       [109., 295., 120., 329.]])], [array([[539., 131., 559., 298.]])], [array([[441.,  19., 478., 388.]])], [array([[244., 171., 256., 343.],
       [442., 283., 455., 327.]])], [array([[228., 103., 239., 309.],
       [376.,  81., 391., 238.]])], [array([[291., 193., 302., 307.],
       [580., 244., 595., 347.]])], [array([[ 11.,   1.,  54., 459.],
       [482., 267., 493., 361.]])], [array([[432.,  96., 460., 304.],
       [418.,  50., 434., 107.],
       [  0., 176.,  12., 317.]])], [array([[584.,  42., 620., 550.],
       [575.,  10., 592.,  69.]])], [array([[255.,  25., 288., 482.]])], [array([[418.,  41., 450., 447.],
       [380., 192., 387., 353.]])], [array([[484., 172., 503., 303.]])], [array([[144., 148., 157., 369.]])], [array([[404., 177., 420., 423.]])], [array([[385.,   1., 415., 515.]])], [array([[ 12.,  98.,  42., 393.]])], [array([[577., 262., 591., 420.]])], [array([[108.,   1., 130., 323.]])], [array([[103.,   0., 134., 460.]])], [array([[349.,  36., 367., 404.]])], [array([[409.,   3., 444., 530.]])], [array([[ 37.,   1.,  77., 498.],
       [296., 274., 308., 336.],
       [358., 261., 373., 341.]])], [array([[ 23.,  91.,  73., 569.],
       [  8.,   3.,  36.,  86.],
       [164.,   1., 194.,  98.],
       [195., 107., 221., 532.]])], [array([[ 74., 127.,  90., 397.]])], [array([[260.,   4., 279., 485.]])], [array([[ 77.,   1., 116., 475.]])], [array([[440.,  95., 472., 505.],
       [491.,   0., 509.,  93.]])], [array([[371.,   2., 392., 409.],
       [  8., 253.,  21., 335.]])], [array([[216., 109., 239., 439.],
       [267.,  10., 286., 137.]])], [array([[240., 161., 254., 330.]])], [array([[141.,  11., 166., 444.],
       [428., 251., 438., 366.],
       [486., 265., 495., 355.],
       [525., 297., 534., 356.],
       [628., 281., 637., 328.]])], [array([[112.,   1., 140., 501.],
       [234., 281., 247., 329.],
       [611., 292., 621., 318.]])], [array([[396.,  38., 424., 438.]])], [array([[190., 117., 221., 420.],
       [237.,  97., 253., 132.]])], [array([[ 35., 150.,  59., 298.],
       [112., 106., 131., 298.],
       [357., 237., 371., 322.],
       [374., 196., 385., 325.]])], [array([[564.,  54., 631., 554.]])], [array([[332., 141., 347., 440.]])], [array([[ 68.,  65., 107., 523.],
       [570., 269., 581., 374.]])], [array([[388.,   2., 436., 437.]])], [array([[590.,  54., 630., 588.]])], [array([[476.,   4., 504., 480.]])], [array([[399.,  92., 432., 481.],
       [459.,  50., 480., 126.]])], [array([[197.,  28., 218., 241.]])], [array([[304., 126., 331., 504.]])], [array([[ 88.,   1., 120., 304.],
       [  3.,   6.,  34., 276.]])], [array([[580.,  43., 616., 560.]])], [array([[214.,  82., 243., 424.]])], [array([[423.,   1., 475., 449.]])], [array([[306., 102., 327., 428.],
       [347.,   1., 376., 116.]])], [array([[351., 118., 368., 363.]])], [array([[460.,   3., 501., 474.]])], [array([[109., 113., 134., 406.]])], [array([[536.,   1., 603., 636.],
       [604.,   2., 629., 498.]])], [array([[420.,   1., 447., 462.]])], [array([[106.,   1., 133., 512.]])], [array([[285.,  61., 324., 324.]])], [array([[427.,  70., 446., 382.]])], [array([[486.,   2., 526., 482.],
       [162., 271., 176., 323.]])], [array([[ 33.,  63.,  74., 332.],
       [282., 253., 296., 282.]])], [array([[582., 150., 613., 470.]])], [array([[530.,  94., 561., 545.],
       [529.,   1., 557.,  96.]])], [array([[172.,  38., 196., 411.]])], [array([[565., 114., 593., 469.],
       [304., 275., 319., 322.]])], [array([[  4.,  25.,  34., 475.]])], [array([[375., 101., 388., 376.]])], [array([[336., 268., 343., 313.],
       [343., 270., 351., 312.]])], [array([[175.,  63., 200., 422.]])], [array([[540., 167., 553., 397.],
       [230., 244., 241., 354.]])], [array([[ 20.,  72.,  66., 496.],
       [575., 263., 588., 328.]])], [array([[391., 224., 401., 342.]])], [array([[110., 233., 131., 337.],
       [472., 264., 485., 314.]])], [array([[117.,   3., 136., 331.]])], [array([[ 52.,  99.,  64., 309.]])], [array([[ 78.,   3., 120., 261.]])], [array([[244., 235., 260., 369.],
       [404., 258., 419., 307.]])], [array([[350., 196., 364., 330.]])], [array([[592., 163., 603., 223.],
       [300., 257., 315., 324.]])], [array([[ 82.,  94., 114., 402.]])], [array([[ 17., 223.,  36., 291.]])], [array([[100.,  83., 115., 343.]])], [array([[128., 274., 139., 351.],
       [ 64., 280.,  80., 353.]])], [array([[124., 289., 134., 321.]])], [array([[496.,  41., 544., 442.],
       [403., 248., 420., 324.]])], [array([[468., 117., 479., 409.]])], [array([[399., 255., 413., 338.],
       [199., 247., 215., 337.]])], [array([[358.,   2., 403., 552.]])], [array([[424., 182., 441., 390.],
       [100., 264., 111., 346.]])], [array([[582., 209., 596., 372.]])], [array([[150., 170., 165., 387.]])], [array([[296.,  97., 316., 440.],
       [482., 234., 493., 325.]])], [array([[600.,   1., 638., 409.]])], [array([[593., 273., 612., 351.]])], [array([[316., 122., 340., 388.],
       [536., 231., 545., 358.]])], [array([[344., 116., 369., 388.]])], [array([[534.,  86., 568., 451.]])], [array([[488., 225., 510., 365.]])], [array([[286., 249., 301., 354.]])], [array([[384., 118., 419., 370.]])], [array([[248., 179., 269., 390.]])], [array([[250., 171., 265., 371.],
       [325., 183., 341., 361.]])], [array([[331., 117., 357., 430.]])], [array([[399., 249., 408., 338.]])], [array([[165., 109., 188., 301.],
       [143.,   6., 168., 107.]])], [array([[445., 209., 458., 369.]])], [array([[199., 228., 210., 274.],
       [272., 271., 287., 350.]])], [array([[573., 215., 587., 325.]])], [array([[423., 172., 436., 344.]])], [array([[253., 167., 261., 409.],
       [174., 247., 188., 378.]])], [array([[407., 148., 428., 422.],
       [192., 213., 207., 352.]])], [array([[308., 282., 314., 339.],
       [416., 283., 430., 345.]])], [array([[ 81.,  99., 113., 547.],
       [147.,   6., 174., 110.]])], [array([[357., 214., 367., 361.],
       [182., 198., 196., 350.]])], [array([[385., 218., 393., 336.]])], [array([[374.,   1., 406., 328.]])], [array([[398.,  94., 412., 342.],
       [425., 104., 438., 346.]])], [array([[128.,  83., 146., 315.]])], [array([[299., 115., 316., 431.]])], [array([[439., 144., 450., 335.]])], [array([[196.,   3., 248., 576.]])], [array([[407., 112., 427., 349.]])], [array([[469.,  66., 512., 422.]])], [array([[ 89.,  83., 134., 495.]])], [array([[475., 118., 495., 374.]])], [array([[ 53.,  44.,  78., 503.]])], [array([[144., 153., 160., 297.]])], [array([[300., 140., 316., 401.],
       [396., 262., 405., 334.]])], [array([[ 66.,  82.,  94., 556.]])], [array([[ 78.,  73.,  96., 419.]])], [array([[286., 140., 297., 249.]])], [array([[284., 120., 299., 387.]])], [array([[229., 121., 253., 493.]])], [array([[522., 104., 570., 389.],
       [575.,   5., 610.,  97.]])], [array([[290., 178., 302., 338.]])], [array([[364., 100., 394., 412.]])], [array([[261., 165., 277., 352.],
       [612., 287., 621., 331.],
       [627., 280., 633., 328.]])], [array([[311.,  76., 338., 411.]])], [array([[ 57.,  74., 110., 541.],
       [325., 230., 334., 306.]])], [array([[403., 115., 433., 524.],
       [198., 259., 211., 337.]])], [array([[316., 171., 333., 392.]])], [array([[134., 106., 162., 546.],
       [242.,   4., 287., 132.]])], [array([[ 97., 151., 111., 403.]])], [array([[594.,  33., 627., 319.]])], [array([[590.,  41., 626., 468.]])], [array([[593., 170., 613., 396.]])], [array([[ 10.,  63.,  52., 432.],
       [541., 250., 550., 350.]])], [array([[ 35.,  55.,  87., 492.],
       [ 95.,   3., 117.,  59.]])], [array([[ 52.,  89.,  96., 397.],
       [174., 215., 184., 358.],
       [335., 242., 353., 348.]])], [array([[442., 130., 471., 475.],
       [355., 243., 363., 329.],
       [497.,   2., 541., 103.]])], [array([[294., 130., 315., 499.],
       [306.,   0., 329., 125.]])], [array([[391., 130., 422., 519.],
       [346.,   3., 373., 135.]])], [array([[146., 184., 160., 416.]])], [array([[344.,   1., 381., 506.]])], [array([[544.,  18., 597., 435.]])], [array([[395., 197., 406., 338.]])], [array([[400.,   4., 420., 265.]])], [array([[220.,   1., 242., 527.]])], [array([[506.,  85., 539., 532.],
       [566.,   0., 588.,  76.]])], [array([[125., 152., 152., 439.]])], [array([[587.,   1., 622., 622.],
       [332., 248., 342., 283.]])], [array([[536., 105., 574., 482.]])], [array([[185.,  58., 210., 420.]])], [array([[256., 114., 280., 458.],
       [531., 133., 548., 441.],
       [583., 131., 596., 443.]])], [array([[355., 222., 374., 378.],
       [388., 214., 410., 381.]])], [array([[555.,  75., 584., 451.],
       [582.,  16., 604.,  69.]])], [array([[383., 106., 408., 501.],
       [370.,   4., 389., 114.]])], [array([[428.,   1., 456., 476.]])], [array([[188.,  60., 208., 345.],
       [226.,  60., 244., 362.]])], [array([[108.,   1., 136., 441.],
       [586., 247., 595., 269.]])], [array([[434.,  91., 452., 520.],
       [473.,   1., 494.,  86.]])], [array([[517., 119., 546., 403.]])], [array([[173.,   7., 194., 481.],
       [ 15., 275.,  30., 362.]])], [array([[ 40.,  96.,  80., 427.]])], [array([[575.,  94., 594., 367.]])], [array([[418., 257., 425., 353.]])], [array([[609., 185., 630., 390.],
       [439., 239., 451., 372.]])], [array([[455., 108., 468., 172.],
       [111., 282., 121., 321.]])], [array([[405., 113., 416., 371.],
       [419., 202., 427., 369.],
       [432., 102., 443., 369.],
       [601.,  23., 630., 321.]])], [array([[331., 262., 344., 353.]])], [array([[555., 133., 576., 414.],
       [114., 157., 132., 421.],
       [409., 292., 423., 338.]])], [array([[ 82., 127., 103., 371.],
       [107., 180., 125., 382.]])], [array([[156., 159., 174., 359.],
       [172., 144., 183., 359.],
       [490.,  58., 520., 409.]])], [array([[307.,   1., 345., 624.],
       [272.,  89., 300., 372.]])], [array([[ 51.,  77.,  69., 346.],
       [ 70., 129.,  90., 340.]])], [array([[558., 258., 568., 321.],
       [595., 245., 609., 309.],
       [624., 235., 635., 340.]])], [array([[291., 266., 303., 347.],
       [ 26., 252.,  40., 329.]])], [array([[  4.,  33.,  49., 493.]])], [array([[219., 149., 244., 380.]])], [array([[378.,   4., 407., 306.]])], [array([[  3., 265.,  20., 337.]])], [array([[422.,  95., 455., 469.],
       [469.,   2., 495.,  98.]])], [array([[464., 283., 478., 309.]])], [array([[417., 172., 434., 389.],
       [ 64., 261.,  75., 340.]])], [array([[578., 213., 606., 361.]])], [array([[397., 221., 410., 317.]])], [array([[323., 242., 333., 348.]])], [array([[148., 216., 167., 370.]])], [array([[428., 225., 443., 358.]])], [array([[  2., 266.,  21., 350.]])], [array([[270., 175., 310., 390.],
       [458., 205., 472., 327.],
       [220., 262., 226., 341.]])], [array([[147., 101., 166., 508.],
       [137.,   1., 156., 100.]])], [array([[541.,   1., 564., 278.]])], [array([[154., 158., 172., 334.]])], [array([[137., 110., 158., 377.],
       [439.,  32., 454., 333.]])], [array([[592.,   8., 614., 409.]])], [array([[ 66., 198.,  78., 388.]])], [array([[504., 262., 514., 355.]])], [array([[104.,  76., 130., 499.],
       [125.,   7., 147.,  97.]])], [array([[ 63., 181.,  76., 372.],
       [594., 275., 607., 341.]])], [array([[596., 254., 612., 348.],
       [276., 299., 304., 409.]])], [array([[560., 143., 580., 416.],
       [156., 271., 168., 345.],
       [180., 269., 193., 331.]])], [array([[398., 128., 416., 405.],
       [512., 255., 522., 317.]])], [array([[ 28., 197.,  43., 364.]])], [array([[341., 257., 353., 316.]])], [array([[425., 178., 436., 377.],
       [557., 236., 572., 358.],
       [513., 280., 530., 335.],
       [467., 272., 477., 332.]])], [array([[614., 136., 635., 309.]])], [array([[436., 223., 447., 343.],
       [329., 263., 344., 324.]])], [array([[334.,  17., 374., 490.]])], [array([[470., 159., 487., 380.],
       [571., 229., 582., 356.]])], [array([[127., 146., 143., 366.]])], [array([[159., 195., 169., 326.]])], [array([[466., 268., 481., 328.]])], [array([[318., 219., 327., 356.]])], [array([[444., 235., 459., 366.],
       [ 46., 257.,  63., 282.]])], [array([[223., 236., 234., 371.],
       [ 55., 231.,  77., 372.]])], [array([[185., 272., 196., 339.]])], [array([[119., 190., 138., 367.],
       [449.,   3., 492., 451.],
       [375.,   1., 409., 442.]])], [array([[572.,  78., 614., 415.]])], [array([[457., 153., 497., 436.]])], [array([[220., 186., 241., 241.]])], [array([[163., 238., 178., 323.]])], [array([[534.,   3., 562., 422.]])], [array([[354., 158., 376., 368.],
       [172., 157., 194., 376.]])], [array([[482., 164., 509., 374.]])], [array([[175., 142., 205., 351.],
       [408., 253., 422., 325.]])], [array([[146., 113., 166., 406.]])], [array([[498., 275., 507., 352.]])], [array([[244., 109., 255., 172.]])], [array([[283., 210., 296., 334.]])], [array([[544., 104., 570., 439.]])], [array([[184., 106., 205., 458.]])], [array([[482., 179., 509., 389.],
       [119., 140., 133., 303.]])], [array([[381., 153., 411., 404.]])], [array([[503.,  86., 522., 429.]])], [array([[377., 148., 385., 353.],
       [419., 271., 428., 332.]])], [array([[369., 116., 389., 433.]])], [array([[414., 121., 439., 482.],
       [607., 269., 616., 302.]])], [array([[351., 239., 364., 339.]])], [array([[247., 239., 257., 319.]])], [array([[268., 228., 277., 373.],
       [103., 240., 114., 384.],
       [149., 251., 161., 321.]])], [array([[468., 205., 475., 308.],
       [577., 270., 588., 340.]])], [array([[115., 152., 129., 403.],
       [290., 276., 299., 345.]])], [array([[349., 196., 359., 383.]])], [array([[117., 151., 151., 319.],
       [158.,   2., 182., 101.]])], [array([[233., 259., 241., 351.],
       [ 25., 187.,  35., 376.]])], [array([[152., 146., 170., 384.],
       [ 98., 238., 108., 333.]])], [array([[219., 164., 236., 400.]])], [array([[283., 168., 311., 508.],
       [327.,   2., 358., 117.],
       [552., 233., 569., 328.]])], [array([[535., 109., 574., 472.]])], [array([[571., 174., 579., 361.],
       [136., 255., 149., 350.]])], [array([[116.,  68., 142., 490.],
       [ 76.,  13., 100.,  97.]])], [array([[156., 135., 172., 432.]])], [array([[234., 106., 249., 440.],
       [180., 263., 192., 345.],
       [587., 279., 603., 320.]])], [array([[210.,  19., 235., 351.]])], [array([[ 34., 117.,  58., 444.]])], [array([[308.,  99., 331., 500.]])], [array([[496., 154., 512., 433.]])], [array([[344., 156., 360., 406.]])], [array([[ 30., 197.,  51., 390.],
       [325., 214., 339., 381.]])], [array([[244., 116., 270., 428.]])], [array([[ 35.,   1.,  72., 627.]])], [array([[ 40.,   6.,  62., 472.]])], [array([[503.,  92., 548., 414.],
       [242., 241., 257., 323.],
       [200., 255., 215., 313.]])], [array([[317., 101., 329., 401.]])], [array([[200.,   1., 232., 478.]])], [array([[182., 260., 192., 365.]])], [array([[434., 277., 445., 331.]])], [array([[187., 170., 201., 389.],
       [452., 219., 464., 369.]])], [array([[346.,  39., 377., 391.],
       [325.,  37., 344., 115.]])], [array([[ 68., 228.,  83., 388.]])], [array([[162., 179., 174., 377.]])], [array([[161., 225., 181., 380.]])], [array([[489., 190., 498., 397.]])], [array([[360., 209., 375., 364.]])], [array([[269., 120., 307., 419.]])], [array([[396.,  30., 417., 355.],
       [ 89., 248., 108., 356.]])], [array([[283.,  78., 306., 421.]])], [array([[505.,  85., 535., 486.]])], [array([[144.,   0., 170., 333.]])], [array([[351., 108., 379., 523.],
       [318.,   2., 351., 132.]])], [array([[211.,   1., 238., 417.]])], [array([[309.,   1., 343., 363.],
       [369.,   3., 392., 240.]])], [array([[293., 127., 313., 492.],
       [270.,  17., 285., 136.]])], [array([[460.,   2., 502., 601.]])], [array([[370.,   2., 397., 471.],
       [162., 257., 170., 347.],
       [127., 281., 134., 343.]])], [array([[  2.,   1.,  33., 427.]])], [array([[533.,  78., 581., 562.],
       [443., 104., 460., 440.],
       [491.,  22., 508., 105.]])], [array([[ 37.,  60.,  78., 470.]])], [array([[274., 230., 294., 391.],
       [320.,  21., 349., 121.],
       [476.,  86., 505., 517.],
       [565.,   0., 598.,  62.]])], [array([[179., 102., 203., 422.]])], [array([[262.,  36., 292., 313.]])], [array([[236.,  89., 256., 421.],
       [ 19., 249.,  29., 316.]])], [array([[177., 103., 202., 357.]])], [array([[220.,  28., 239., 397.],
       [353., 242., 360., 345.]])], [array([[388., 112., 414., 457.],
       [399.,   1., 418., 111.]])], [array([[163., 125., 176., 408.]])], [array([[480., 137., 491., 353.]])], [array([[168.,   1., 190., 457.]])], [array([[464., 101., 477., 404.]])], [array([[262., 111., 286., 481.],
       [ 11., 212.,  21., 362.]])], [array([[187.,  66., 224., 410.]])], [array([[320.,   7., 344., 382.],
       [297.,   2., 340., 489.]])], [array([[470., 114., 492., 481.],
       [495.,  61., 508., 111.]])], [array([[  3.,  95.,  35., 523.],
       [612., 258., 627., 358.]])], [array([[397.,   2., 447., 338.]])], [array([[348., 140., 362., 391.]])], [array([[112.,   3., 140., 481.],
       [567., 231., 581., 333.],
       [577., 229., 590., 345.],
       [ 48., 293.,  60., 336.]])], [array([[313.,   0., 336., 432.]])], [array([[584.,   3., 637., 531.]])], [array([[102.,  85., 129., 460.],
       [ 90.,  10., 107.,  85.]])], [array([[245.,   3., 257., 424.],
       [515., 189., 531., 366.]])], [array([[361.,  21., 392., 452.]])], [array([[577.,   0., 626., 481.]])], [array([[579.,  48., 609., 501.],
       [529.,   2., 553.,  78.]])], [array([[421.,   2., 461., 495.]])], [array([[290.,  33., 305., 193.]])], [array([[169.,   2., 210., 485.],
       [ 60., 281.,  78., 358.]])], [array([[459., 102., 488., 358.],
       [524.,   3., 555., 107.]])], [array([[130.,  83., 147., 388.],
       [115.,  17., 135.,  94.]])], [array([[549.,   2., 583., 555.]])], [array([[594.,  62., 608., 397.],
       [ 12., 277.,  22., 339.],
       [ 80., 209., 100., 400.]])], [array([[324.,  74., 364., 445.]])], [array([[585.,   3., 639., 487.]])], [array([[ 62.,  23.,  89., 280.],
       [203., 202., 214., 281.]])], [array([[364.,  66., 385., 434.],
       [541., 230., 553., 360.]])], [array([[ 94., 148., 121., 461.],
       [128., 111., 157., 437.],
       [479., 158., 492., 293.],
       [356., 263., 367., 357.]])], [array([[368.,   0., 387., 381.]])], [array([[432., 113., 470., 467.]])], [array([[553.,  89., 596., 347.],
       [ 52., 235.,  65., 314.]])], [array([[611.,  50., 631., 411.]])], [array([[415.,  86., 429., 423.]])], [array([[546., 150., 569., 423.]])], [array([[191.,   6., 211., 505.]])], [array([[324.,  18., 340., 461.]])], [array([[572.,   2., 632., 508.]])], [array([[417.,  34., 431., 123.],
       [447., 102., 464., 439.]])], [array([[522.,  52., 552., 398.],
       [581.,   1., 615.,  84.],
       [ 96., 266., 106., 321.]])], [array([[492.,   1., 516., 436.],
       [344., 225., 361., 355.]])], [array([[156.,   5., 181., 465.]])], [array([[325., 188., 342., 377.],
       [144., 246., 159., 378.]])], [array([[557., 119., 596., 329.],
       [ 16., 269.,  26., 323.]])], [array([[143., 101., 168., 439.],
       [ 64., 284.,  73., 348.]])], [array([[316., 227., 326., 337.],
       [516., 215., 530., 356.]])], [array([[422., 264., 431., 329.],
       [558., 260., 567., 332.]])], [array([[220., 182., 234., 410.]])], [array([[258., 119., 273., 391.],
       [508., 249., 516., 353.]])], [array([[495.,  89., 513., 434.]])], [array([[231., 110., 251., 502.],
       [211.,   0., 231., 118.]])], [array([[207.,  25., 220., 444.],
       [398., 224., 408., 341.]])]]
Checking generator:  <retinanet.dataloader.CSVDataset object at 0x1465842b3730>
Checking retinanet:  DataParallel(
  (module): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU(inplace=True)
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer2): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer3): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (5): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (6): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (7): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (8): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (9): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (10): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (11): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (12): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (13): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (14): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (15): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (16): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (17): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (18): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (19): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (20): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (21): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (22): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer4): Sequential(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (fpn): PyramidFeatures(
      (P5_1): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
      (P5_upsampled): Upsample(scale_factor=2.0, mode='nearest')
      (P5_2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (P4_1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
      (P4_upsampled): Upsample(scale_factor=2.0, mode='nearest')
      (P4_2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (P3_1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
      (P3_2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (P6): Conv2d(2048, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (P7_1): ReLU()
      (P7_2): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    )
    (regressionModel): RegressionModel(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (act1): ReLU()
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (act2): ReLU()
      (conv3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (act3): ReLU()
      (conv4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (act4): ReLU()
      (output): Conv2d(256, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (classificationModel): ClassificationModel(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (act1): ReLU()
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (act2): ReLU()
      (conv3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (act3): ReLU()
      (conv4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (act4): ReLU()
      (output): Conv2d(256, 9, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (output_act): Sigmoid()
    )
    (anchors): Anchors()
    (regressBoxes): BBoxTransform()
    (clipBoxes): ClipBoxes()
    (focalLoss): FocalLoss()
  )
)
Checking score threshold:  0.05
Checking max detections:  100
Checking detections:  []
Checking annotations:  [[405. 208. 420. 370.]
 [360. 236. 371. 291.]]
Checking num annotations:  2.0
Checking detections:  []
Checking annotations:  [[462. 277. 472. 353.]
 [393. 285. 404. 342.]]
Checking num annotations:  4.0
Checking detections:  []
Checking annotations:  [[496. 158. 511. 380.]
 [208. 247. 218. 272.]]
Checking num annotations:  6.0
Checking detections:  []
Checking annotations:  [[535. 241. 544. 280.]
 [452. 289. 460. 328.]]
Checking num annotations:  8.0
Checking detections:  []
Checking annotations:  [[199.  91. 210. 128.]
 [422. 198. 434. 375.]
 [384. 265. 392. 348.]]
Checking num annotations:  11.0
Checking detections:  []
Checking annotations:  [[387. 159. 402. 404.]
 [530. 181. 542. 324.]
 [302. 270. 309. 319.]]
Checking num annotations:  14.0
Checking detections:  []
Checking annotations:  [[ 58.   3. 101. 182.]
 [417. 249. 429. 332.]
 [343. 283. 350. 338.]]
Checking num annotations:  17.0
Checking detections:  []
Checking annotations:  [[479. 237. 489. 346.]
 [579. 283. 589. 332.]]
Checking num annotations:  19.0
Checking detections:  []
Checking annotations:  [[569. 125. 592. 412.]
 [402. 265. 412. 328.]]
Checking num annotations:  21.0
Checking detections:  []
Checking annotations:  [[336. 127. 350. 177.]
 [320. 133. 332. 184.]]
Checking num annotations:  23.0
Checking detections:  []
Checking annotations:  [[ 43. 273.  52. 329.]
 [102. 299. 107. 320.]]
Checking num annotations:  25.0
Checking detections:  []
Checking annotations:  [[581. 181. 594. 384.]
 [571. 283. 577. 340.]
 [452. 263. 459. 350.]]
Checking num annotations:  28.0
Checking detections:  []
Checking annotations:  [[279. 119. 296. 166.]
 [605. 266. 612. 293.]]
Checking num annotations:  30.0
Checking detections:  []
Checking annotations:  [[430. 256. 438. 276.]
 [498. 266. 508. 326.]
 [547. 270. 556. 334.]]
Checking num annotations:  33.0
Checking detections:  []
Checking annotations:  [[369. 291. 378. 364.]
 [403. 297. 413. 363.]]
Checking num annotations:  35.0
Checking detections:  []
Checking annotations:  [[312. 232. 323. 351.]
 [471. 239. 482. 320.]
 [376. 286. 385. 315.]]
Checking num annotations:  38.0
Checking detections:  []
Checking annotations:  [[535.  65. 562. 282.]
 [508.  32. 525.  91.]
 [226. 286. 233. 344.]
 [165. 278. 172. 325.]]
Checking num annotations:  42.0
Checking detections:  []
Checking annotations:  [[109.  88. 132. 357.]
 [138.  78. 163. 354.]
 [499. 267. 513. 350.]
 [544. 284. 553. 335.]
 [434. 297. 441. 332.]]
Checking num annotations:  47.0
Checking detections:  []
Checking annotations:  [[405. 253. 416. 321.]
 [327. 271. 338. 332.]]
Checking num annotations:  49.0
Checking detections:  []
Checking annotations:  [[411. 289. 419. 365.]]
Checking num annotations:  50.0
Checking detections:  []
Checking annotations:  [[ 72. 244.  82. 290.]
 [227. 289. 234. 319.]
 [206. 297. 212. 324.]]
Checking num annotations:  53.0
Checking detections:  []
Checking annotations:  [[351. 240. 360. 336.]
 [416. 274. 425. 333.]]
Checking num annotations:  55.0
Checking detections:  []
Checking annotations:  [[343. 211. 360. 321.]]
Checking num annotations:  56.0
Checking detections:  []
Checking annotations:  [[ 25.  95.  59. 421.]
 [459. 144. 476. 207.]]
Checking num annotations:  58.0
Checking detections:  []
Checking annotations:  [[204. 246. 214. 356.]
 [223. 243. 232. 356.]]
Checking num annotations:  60.0
Checking detections:  []
Checking annotations:  [[366. 246. 376. 332.]
 [628. 253. 637. 321.]]
Checking num annotations:  62.0
Checking detections:  []
Checking annotations:  [[385. 272. 397. 329.]
 [418. 290. 427. 331.]]
Checking num annotations:  64.0
Checking detections:  []
Checking annotations:  [[340. 271. 351. 363.]
 [429. 287. 440. 357.]]
Checking num annotations:  66.0
Checking detections:  []
Checking annotations:  [[168.  18. 205. 351.]
 [495.  34. 520. 385.]]
Checking num annotations:  68.0
Checking detections:  []
Checking annotations:  [[365. 106. 388. 401.]
 [ 41. 230.  65. 368.]
 [ 11. 243.  34. 330.]]
Checking num annotations:  71.0
Checking detections:  []
Checking annotations:  [[332. 210. 344. 370.]]
Checking num annotations:  72.0
Checking detections:  []
Checking annotations:  [[ 17.   3.  81. 441.]]
Checking num annotations:  73.0
Checking detections:  []
Checking annotations:  [[189. 260. 199. 333.]
 [364. 268. 377. 342.]]
Checking num annotations:  75.0
Checking detections:  []
Checking annotations:  [[ 76. 225.  92. 315.]
 [218. 257. 231. 315.]
 [408.   4. 437. 126.]
 [437. 137. 477. 498.]]
Checking num annotations:  79.0
Checking detections:  []
Checking annotations:  [[382.  36. 400. 315.]
 [403.   2. 435. 385.]]
Checking num annotations:  81.0
Checking detections:  []
Checking annotations:  [[214. 152. 224. 392.]]
Checking num annotations:  82.0
Checking detections:  []
Checking annotations:  [[393. 271. 406. 328.]]
Checking num annotations:  83.0
Checking detections:  []
Checking annotations:  [[593. 283. 607. 363.]]
Checking num annotations:  84.0
Checking detections:  []
Checking annotations:  [[145.  98. 173. 434.]
 [463. 276. 477. 340.]]
Checking num annotations:  86.0
Checking detections:  []
Checking annotations:  [[436. 285. 444. 341.]]
Checking num annotations:  87.0
Checking detections:  []
Checking annotations:  [[580.   2. 607. 398.]]
Checking num annotations:  88.0
Checking detections:  []
Checking annotations:  [[ 53. 118.  77. 366.]]
Checking num annotations:  89.0
Checking detections:  []
Checking annotations:  [[556. 235. 568. 375.]
 [419. 290. 433. 313.]]
Checking num annotations:  91.0
Checking detections:  []
Checking annotations:  [[286. 158. 304. 338.]]
Checking num annotations:  92.0
Checking detections:  []
Checking annotations:  [[155.   3. 184. 323.]]
Checking num annotations:  93.0
Checking detections:  []
Checking annotations:  [[ 68. 291.  83. 316.]]
Checking num annotations:  94.0
Checking detections:  []
Checking annotations:  [[442. 153. 457. 360.]
 [233. 268. 245. 298.]]
Checking num annotations:  96.0
Checking detections:  []
Checking annotations:  [[169. 261. 181. 321.]]
Checking num annotations:  97.0
Checking detections:  []
Checking annotations:  [[316.  12. 360. 456.]
 [ 89. 229. 104. 288.]]
Checking num annotations:  99.0
Checking detections:  []
Checking annotations:  [[168. 281. 179. 342.]
 [  5. 269.  25. 362.]]
Checking num annotations:  101.0
Checking detections:  []
Checking annotations:  [[608. 153. 632. 425.]]
Checking num annotations:  102.0
Checking detections:  []
Checking annotations:  [[173. 161. 208. 396.]]
Checking num annotations:  103.0
Checking detections:  []
Checking annotations:  [[284. 305. 301. 526.]
 [274. 125. 298. 271.]
 [324.  38. 344. 134.]]
Checking num annotations:  106.0
Checking detections:  []
Checking annotations:  [[302.  77. 324. 435.]
 [394. 161. 417. 424.]]
Checking num annotations:  108.0
Checking detections:  []
Checking annotations:  [[104. 177. 121. 363.]]
Checking num annotations:  109.0
Checking detections:  []
Checking annotations:  [[193. 244. 204. 316.]]
Checking num annotations:  110.0
Checking detections:  []
Checking annotations:  [[243.  83. 268. 149.]]
Checking num annotations:  111.0
Checking detections:  []
Checking annotations:  [[342. 169. 368. 377.]]
Checking num annotations:  112.0
Checking detections:  []
Checking annotations:  [[186. 212. 200. 360.]]
Checking num annotations:  113.0
Checking detections:  []
Checking annotations:  [[551. 180. 583. 407.]]
Checking num annotations:  114.0
Checking detections:  []
Checking annotations:  [[242. 136. 258. 293.]]
Checking num annotations:  115.0
Checking detections:  []
Checking annotations:  [[  1.  75.  14. 350.]]
Checking num annotations:  116.0
Checking detections:  []
Checking annotations:  [[248. 166. 282. 372.]]
Checking num annotations:  117.0
Checking detections:  []
Checking annotations:  [[ 92.   2. 143. 479.]]
Checking num annotations:  118.0
Checking detections:  []
Checking annotations:  [[607. 233. 619. 291.]]
Checking num annotations:  119.0
Checking detections:  []
Checking annotations:  [[524.   1. 545. 443.]]
Checking num annotations:  120.0
Checking detections:  []
Checking annotations:  [[581. 277. 594. 352.]]
Checking num annotations:  121.0
Checking detections:  []
Checking annotations:  [[270. 118. 294. 484.]
 [248.  17. 268. 136.]]
Checking num annotations:  123.0
Checking detections:  []
Checking annotations:  [[382. 296. 390. 335.]]
Checking num annotations:  124.0
Checking detections:  []
Checking annotations:  [[113. 240. 125. 341.]]
Checking num annotations:  125.0
Checking detections:  []
Checking annotations:  [[360. 241. 371. 335.]]
Checking num annotations:  126.0
Checking detections:  []
Checking annotations:  [[580. 293. 590. 333.]]
Checking num annotations:  127.0
Checking detections:  []
Checking annotations:  [[531. 229. 547. 290.]]
Checking num annotations:  128.0
Checking detections:  []
Checking annotations:  [[450. 189. 475. 313.]]
Checking num annotations:  129.0
Checking detections:  []
Checking annotations:  [[562. 226. 596. 630.]
 [563.   4. 636. 222.]]
Checking num annotations:  131.0
Checking detections:  []
Checking annotations:  [[442.   1. 483. 530.]]
Checking num annotations:  132.0
Checking detections:  []
Checking annotations:  [[ 72. 209.  83. 363.]
 [328. 229. 343. 317.]]
Checking num annotations:  134.0
Checking detections:  []
Checking annotations:  [[376. 285. 392. 312.]]
Checking num annotations:  135.0
Checking detections:  []
Checking annotations:  [[187. 259. 196. 321.]]
Checking num annotations:  136.0
Checking detections:  []
Checking annotations:  [[412. 101. 432. 393.]
 [149. 222. 162. 335.]]
Checking num annotations:  138.0
Checking detections:  []
Checking annotations:  [[242. 248. 256. 346.]]
Checking num annotations:  139.0
Checking detections:  []
Checking annotations:  [[427.   2. 465. 526.]]
Checking num annotations:  140.0
Checking detections:  []
Checking annotations:  [[577. 154. 599. 271.]]
Checking num annotations:  141.0
Checking detections:  []
Checking annotations:  [[401. 280. 411. 326.]
 [472. 289. 481. 319.]]
Checking num annotations:  143.0
Checking detections:  []
Checking annotations:  [[282. 283. 296. 334.]]
Checking num annotations:  144.0
Checking detections:  []
Checking annotations:  [[518. 250. 528. 356.]]
Checking num annotations:  145.0
Checking detections:  []
Checking annotations:  [[202. 277. 212. 341.]
 [ 50. 286.  61. 317.]]
Checking num annotations:  147.0
Checking detections:  []
Checking annotations:  [[  2. 145.  21. 431.]]
Checking num annotations:  148.0
Checking detections:  []
Checking annotations:  [[ 96.   2. 137. 521.]
 [514. 273. 524. 341.]]
Checking num annotations:  150.0
Checking detections:  []
Checking annotations:  [[352. 290. 361. 337.]]
Checking num annotations:  151.0
Checking detections:  []
Checking annotations:  [[284. 270. 293. 311.]
 [569. 268. 579. 301.]]
Checking num annotations:  153.0
Checking detections:  []
Checking annotations:  [[568. 264. 576. 336.]]
Checking num annotations:  154.0
Checking detections:  []
Checking annotations:  [[147.  45. 163. 455.]
 [481. 238. 500. 377.]]
Checking num annotations:  156.0
Checking detections:  []
Checking annotations:  [[404.   2. 437. 623.]]
Checking num annotations:  157.0
Checking detections:  []
Checking annotations:  [[498. 233. 508. 370.]
 [349. 246. 363. 346.]]
Checking num annotations:  159.0
Checking detections:  []
Checking annotations:  [[105.   8. 123. 415.]]
Checking num annotations:  160.0
Checking detections:  []
Checking annotations:  [[ 42. 137.  80. 380.]]
Checking num annotations:  161.0
Checking detections:  []
Checking annotations:  [[235. 126. 249. 378.]]
Checking num annotations:  162.0
Checking detections:  []
Checking annotations:  [[242. 183. 259. 375.]
 [151. 278. 164. 322.]]
Checking num annotations:  164.0
Checking detections:  []
Checking annotations:  [[103. 218. 124. 374.]]
Checking num annotations:  165.0
Checking detections:  []
Checking annotations:  [[557.  89. 591. 357.]
 [199. 271. 208. 362.]
 [257. 293. 266. 324.]]
Checking num annotations:  168.0
Checking detections:  []
Checking annotations:  [[445. 231. 458. 345.]
 [302. 243. 312. 343.]]
Checking num annotations:  170.0
Checking detections:  []
Checking annotations:  [[494. 121. 520. 329.]]
Checking num annotations:  171.0
Checking detections:  []
Checking annotations:  [[ 83. 163. 116. 380.]]
Checking num annotations:  172.0
Checking detections:  []
Checking annotations:  [[144.  29. 166. 454.]
 [251. 224. 263. 317.]]
Checking num annotations:  174.0
Checking detections:  []
Checking annotations:  [[315.   3. 346. 504.]]
Checking num annotations:  175.0
Checking detections:  []
Checking annotations:  [[215. 207. 228. 375.]]
Checking num annotations:  176.0
Checking detections:  []
Checking annotations:  [[514. 283. 528. 309.]]
Checking num annotations:  177.0
Checking detections:  []
Checking annotations:  [[124. 205. 138. 313.]]
Checking num annotations:  178.0
Checking detections:  []
Checking annotations:  [[181. 106. 204. 459.]
 [194.  63. 210. 118.]
 [ 18.  49.  40. 462.]]
Checking num annotations:  181.0
Checking detections:  []
Checking annotations:  [[175.   2. 232. 493.]
 [412. 241. 425. 350.]]
Checking num annotations:  183.0
Checking detections:  []
Checking annotations:  [[515. 241. 524. 352.]]
Checking num annotations:  184.0
Checking detections:  []
Checking annotations:  [[109. 228. 122. 339.]]
Checking num annotations:  185.0
Checking detections:  []
Checking annotations:  [[289.  21. 304. 109.]]
Checking num annotations:  186.0
Checking detections:  []
Checking annotations:  [[332.  35. 355. 170.]]
Checking num annotations:  187.0
Checking detections:  []
Checking annotations:  [[431.  99. 450. 513.]]
Checking num annotations:  188.0
Checking detections:  []
Checking annotations:  [[540. 204. 567. 480.]]
Checking num annotations:  189.0
Checking detections:  []
Checking annotations:  [[267. 209. 279. 386.]]
Checking num annotations:  190.0
Checking detections:  []
Checking annotations:  [[ 48. 238.  61. 330.]]
Checking num annotations:  191.0
Checking detections:  []
Checking annotations:  [[241. 115. 276. 444.]
 [267.  63. 284. 138.]
 [ 50. 244.  68. 286.]]
Checking num annotations:  194.0
Checking detections:  []
Checking annotations:  [[323. 229. 340. 397.]
 [359. 233. 372. 396.]]
Checking num annotations:  196.0
Checking detections:  []
Checking annotations:  [[400. 245. 412. 315.]]
Checking num annotations:  197.0
Checking detections:  []
Checking annotations:  [[  0.   5.  25. 299.]]
Checking num annotations:  198.0
Checking detections:  []
Checking annotations:  [[ 78. 191.  97. 347.]
 [ 54. 189.  71. 342.]
 [458.   3. 480. 104.]]
Checking num annotations:  201.0
Checking detections:  []
Checking annotations:  [[ 75. 201.  85. 364.]]
Checking num annotations:  202.0
Checking detections:  []
Checking annotations:  [[ 16. 136.  33. 294.]]
Checking num annotations:  203.0
Checking detections:  []
Checking annotations:  [[613. 220. 626. 385.]]
Checking num annotations:  204.0
Checking detections:  []
Checking annotations:  [[348. 134. 368. 409.]]
Checking num annotations:  205.0
Checking detections:  []
Checking annotations:  [[335.   3. 355. 429.]]
Checking num annotations:  206.0
Checking detections:  []
Checking annotations:  [[450. 111. 463. 226.]]
Checking num annotations:  207.0
Checking detections:  []
Checking annotations:  [[252. 137. 299. 349.]
 [356. 115. 374. 194.]]
Checking num annotations:  209.0
Checking detections:  []
Checking annotations:  [[455. 113. 481. 528.]]
Checking num annotations:  210.0
Checking detections:  []
Checking annotations:  [[252. 239. 263. 367.]]
Checking num annotations:  211.0
Checking detections:  []
Checking annotations:  [[263. 121. 288. 365.]]
Checking num annotations:  212.0
Checking detections:  []
Checking annotations:  [[196. 119. 225. 417.]
 [160.   9. 184. 117.]]
Checking num annotations:  214.0
Checking detections:  []
Checking annotations:  [[484. 265. 498. 314.]
 [262. 209. 277. 339.]]
Checking num annotations:  216.0
Checking detections:  []
Checking annotations:  [[ 17. 249.  34. 368.]]
Checking num annotations:  217.0
Checking detections:  []
Checking annotations:  [[ 75.  66. 109. 393.]
 [419. 249. 432. 355.]]
Checking num annotations:  219.0
Checking detections:  []
Checking annotations:  [[412.   3. 443. 416.]]
Checking num annotations:  220.0
Checking detections:  []
Checking annotations:  [[264. 121. 300. 518.]
 [263.   1. 288. 123.]]
Checking num annotations:  222.0
Checking detections:  []
Checking annotations:  [[321. 271. 336. 329.]]
Checking num annotations:  223.0
Checking detections:  []
Checking annotations:  [[177. 219. 195. 294.]]
Checking num annotations:  224.0
Checking detections:  []
Checking annotations:  [[195. 192. 217. 375.]]
Checking num annotations:  225.0
Checking detections:  []
Checking annotations:  [[ 98. 109. 116. 301.]]
Checking num annotations:  226.0
Checking detections:  []
Checking annotations:  [[361. 163. 375. 312.]
 [150. 258. 168. 350.]]
Checking num annotations:  228.0
Checking detections:  []
Checking annotations:  [[526.  85. 549. 354.]
 [292. 252. 300. 351.]]
Checking num annotations:  230.0
Checking detections:  []
Checking annotations:  [[ 76. 306.  86. 343.]]
Checking num annotations:  231.0
Checking detections:  []
Checking annotations:  [[303. 123. 321. 458.]]
Checking num annotations:  232.0
Checking detections:  []
Checking annotations:  [[149. 185. 160. 265.]]
Checking num annotations:  233.0
Checking detections:  []
Checking annotations:  [[524. 229. 536. 287.]]
Checking num annotations:  234.0
Checking detections:  []
Checking annotations:  [[232. 246. 243. 351.]
 [358. 256. 372. 327.]]
Checking num annotations:  236.0
Checking detections:  []
Checking annotations:  [[184.   3. 220. 477.]]
Checking num annotations:  237.0
Checking detections:  []
Checking annotations:  [[488. 101. 517. 322.]
 [480.   2. 502. 128.]]
Checking num annotations:  239.0
Checking detections:  []
Checking annotations:  [[403. 200. 418. 368.]]
Checking num annotations:  240.0
Checking detections:  []
Checking annotations:  [[566.  67. 608. 507.]]
Checking num annotations:  241.0
Checking detections:  []
Checking annotations:  [[534.  98. 551. 435.]]
Checking num annotations:  242.0
Checking detections:  []
Checking annotations:  [[121. 254. 130. 329.]]
Checking num annotations:  243.0
Checking detections:  []
Checking annotations:  [[360. 235. 376. 296.]
 [280. 285. 294. 327.]]
Checking num annotations:  245.0
Checking detections:  []
Checking annotations:  [[522.  72. 562. 397.]]
Checking num annotations:  246.0
Checking detections:  []
Checking annotations:  [[499. 239. 516. 378.]]
Checking num annotations:  247.0
Checking detections:  []
Checking annotations:  [[345. 231. 362. 394.]]
Checking num annotations:  248.0
Checking detections:  []
Checking annotations:  [[585. 276. 596. 319.]]
Checking num annotations:  249.0
Checking detections:  []
Checking annotations:  [[514.   1. 547. 493.]
 [118. 265. 129. 333.]]
Checking num annotations:  251.0
Checking detections:  []
Checking annotations:  [[  2.  26.  24. 277.]]
Checking num annotations:  252.0
Checking detections:  []
Checking annotations:  [[ 11. 236.  29. 354.]]
Checking num annotations:  253.0
Checking detections:  []
Checking annotations:  [[189. 159. 206. 224.]]
Checking num annotations:  254.0
Checking detections:  []
Checking annotations:  [[146. 128. 161. 380.]]
Checking num annotations:  255.0
Checking detections:  []
Checking annotations:  [[360. 210. 376. 374.]
 [ 88. 281. 123. 448.]
 [315. 264. 326. 317.]]
Checking num annotations:  258.0
Checking detections:  []
Checking annotations:  [[  5. 250.  21. 365.]]
Checking num annotations:  259.0
Checking detections:  []
Checking annotations:  [[523.  88. 551. 508.]]
Checking num annotations:  260.0
Checking detections:  []
Checking annotations:  [[365. 259. 375. 299.]
 [295. 257. 307. 353.]]
Checking num annotations:  262.0
Checking detections:  []
Checking annotations:  [[369. 247. 380. 361.]]
Checking num annotations:  263.0
Checking detections:  []
Checking annotations:  [[501. 123. 520. 319.]]
Checking num annotations:  264.0
Checking detections:  []
Checking annotations:  [[521. 237. 532. 320.]]
Checking num annotations:  265.0
Checking detections:  []
Checking annotations:  [[220. 192. 232. 349.]
 [431. 284. 444. 329.]]
Checking num annotations:  267.0
Checking detections:  []
Checking annotations:  [[429. 208. 438. 374.]]
Checking num annotations:  268.0
Checking detections:  []
Checking annotations:  [[172. 268. 185. 318.]]
Checking num annotations:  269.0
Checking detections:  []
Checking annotations:  [[242. 276. 254. 305.]]
Checking num annotations:  270.0
Checking detections:  []
Checking annotations:  [[442. 171. 463. 402.]]
Checking num annotations:  271.0
Checking detections:  []
Checking annotations:  [[367.  28. 381. 319.]]
Checking num annotations:  272.0
Checking detections:  []
Checking annotations:  [[473. 238. 492. 368.]]
Checking num annotations:  273.0
Checking detections:  []
Checking annotations:  [[ 48. 251.  57. 334.]
 [461. 283. 471. 321.]]
Checking num annotations:  275.0
Checking detections:  []
Checking annotations:  [[149. 248. 160. 354.]]
Checking num annotations:  276.0
Checking detections:  []
Checking annotations:  [[565.   1. 593. 439.]]
Checking num annotations:  277.0
Checking detections:  []
Checking annotations:  [[301. 278. 314. 332.]
 [241. 247. 258. 314.]]
Checking num annotations:  279.0
Checking detections:  []
Checking annotations:  [[122. 190. 140. 334.]]
Checking num annotations:  280.0
Checking detections:  []
Checking annotations:  [[195. 278. 202. 304.]]
Checking num annotations:  281.0
Checking detections:  []
Checking annotations:  [[300. 110. 332. 498.]
 [256.   4. 285. 130.]]
Checking num annotations:  283.0
Checking detections:  []
Checking annotations:  [[579.  66. 601. 304.]]
Checking num annotations:  284.0
Checking detections:  []
Checking annotations:  [[499. 184. 518. 278.]]
Checking num annotations:  285.0
Checking detections:  []
Checking annotations:  [[442.  93. 481. 358.]
 [478.   7. 512. 101.]]
Checking num annotations:  287.0
Checking detections:  []
Checking annotations:  [[ 48.   3.  82. 390.]]
Checking num annotations:  288.0
Checking detections:  []
Checking annotations:  [[178. 254. 195. 353.]
 [110. 259. 123. 330.]]
Checking num annotations:  290.0
Checking detections:  []
Checking annotations:  [[614. 193. 637. 391.]]
Checking num annotations:  291.0
Checking detections:  []
Checking annotations:  [[336.  98. 366. 383.]]
Checking num annotations:  292.0
Checking detections:  []
Checking annotations:  [[ 11. 209.  22. 360.]]
Checking num annotations:  293.0
Checking detections:  []
Checking annotations:  [[ 90. 160. 120. 388.]]
Checking num annotations:  294.0
Checking detections:  []
Checking annotations:  [[323. 248. 332. 347.]
 [456. 267. 469. 327.]]
Checking num annotations:  296.0
Checking detections:  []
Checking annotations:  [[341. 282. 348. 332.]]
Checking num annotations:  297.0
Checking detections:  []
Checking annotations:  [[447. 130. 468. 454.]]
Checking num annotations:  298.0
Checking detections:  []
Checking annotations:  [[479. 264. 489. 333.]]
Checking num annotations:  299.0
Checking detections:  []
Checking annotations:  [[555. 150. 570. 390.]
 [182. 236. 196. 357.]]
Checking num annotations:  301.0
Checking detections:  []
Checking annotations:  [[186. 260. 194. 340.]]
Checking num annotations:  302.0
Checking detections:  []
Checking annotations:  [[343. 283. 354. 333.]]
Checking num annotations:  303.0
Checking detections:  []
Checking annotations:  [[565. 277. 580. 368.]]
Checking num annotations:  304.0
Checking detections:  []
Checking annotations:  [[ 72. 258.  84. 328.]]
Checking num annotations:  305.0
Checking detections:  []
Checking annotations:  [[452. 148. 466. 358.]]
Checking num annotations:  306.0
Checking detections:  []
Checking annotations:  [[213. 260. 222. 347.]]
Checking num annotations:  307.0
Checking detections:  []
Checking annotations:  [[243. 279. 252. 322.]
 [196. 269. 206. 330.]]
Checking num annotations:  309.0
Checking detections:  []
Checking annotations:  [[354.  25. 367. 390.]]
Checking num annotations:  310.0
Checking detections:  []
Checking annotations:  [[379. 243. 386. 304.]]
Checking num annotations:  311.0
Checking detections:  []
Checking annotations:  [[330. 197. 341. 303.]]
Checking num annotations:  312.0
Checking detections:  []
Checking annotations:  [[493. 305. 502. 346.]]
Checking num annotations:  313.0
Checking detections:  []
Checking annotations:  [[286. 124. 306. 448.]]
Checking num annotations:  314.0
Checking detections:  []
Checking annotations:  [[ 52. 165.  69. 321.]
 [252. 260. 264. 343.]]
Checking num annotations:  316.0
Checking detections:  []
Checking annotations:  [[158. 252. 176. 346.]
 [542. 191. 564. 296.]
 [118. 287. 132. 326.]]
Checking num annotations:  319.0
Checking detections:  []
Checking annotations:  [[557. 119. 576. 439.]
 [117. 281. 132. 349.]]
Checking num annotations:  321.0
Checking detections:  []
Checking annotations:  [[ 48. 243.  62. 338.]]
Checking num annotations:  322.0
Checking detections:  []
Checking annotations:  [[343. 218. 357. 359.]]
Checking num annotations:  323.0
Checking detections:  []
Checking annotations:  [[121.   3. 177. 513.]]
Checking num annotations:  324.0
Checking detections:  []
Checking annotations:  [[255. 242. 269. 358.]]
Checking num annotations:  325.0
Checking detections:  []
Checking annotations:  [[534.   6. 572. 374.]
 [150. 269. 164. 302.]]
Checking num annotations:  327.0
Checking detections:  []
Checking annotations:  [[ 51. 290.  60. 343.]]
Checking num annotations:  328.0
Checking detections:  []
Checking annotations:  [[619. 176. 631. 361.]]
Checking num annotations:  329.0
Checking detections:  []
Checking annotations:  [[162. 128. 181. 452.]]
Checking num annotations:  330.0
Checking detections:  []
Checking annotations:  [[138. 105. 157. 417.]]
Checking num annotations:  331.0
Checking detections:  []
Checking annotations:  [[352. 156. 369. 292.]
 [154. 260. 164. 332.]]
Checking num annotations:  333.0
Checking detections:  []
Checking annotations:  [[455. 123. 470. 289.]]
Checking num annotations:  334.0
Checking detections:  []
Checking annotations:  [[463. 178. 478. 396.]]
Checking num annotations:  335.0
Checking detections:  []
Checking annotations:  [[448.   1. 495. 526.]
 [108. 226. 118. 345.]]
Checking num annotations:  337.0
Checking detections:  []
Checking annotations:  [[247.   1. 293. 362.]]
Checking num annotations:  338.0
Checking detections:  []
Checking annotations:  [[522.  57. 554. 473.]]
Checking num annotations:  339.0
Checking detections:  []
Checking annotations:  [[ 49.  71. 107. 552.]
 [115.   2. 147. 105.]
 [626. 248. 638. 332.]]
Checking num annotations:  342.0
Checking detections:  []
Checking annotations:  [[175. 198. 191. 376.]]
Checking num annotations:  343.0
Checking detections:  []
Checking annotations:  [[136. 194. 154. 355.]
 [185. 281. 202. 329.]]
Checking num annotations:  345.0
Checking detections:  []
Checking annotations:  [[234.  99. 250. 394.]
 [  8. 262.  20. 334.]]
Checking num annotations:  347.0
Checking detections:  []
Checking annotations:  [[267.  88. 293. 357.]]
Checking num annotations:  348.0
Checking detections:  []
Checking annotations:  [[622. 156. 639. 315.]]
Checking num annotations:  349.0
Checking detections:  []
Checking annotations:  [[136. 182. 154. 336.]]
Checking num annotations:  350.0
Checking detections:  []
Checking annotations:  [[232.   3. 259. 508.]]
Checking num annotations:  351.0
Checking detections:  []
Checking annotations:  [[212.  19. 251. 370.]]
Checking num annotations:  352.0
Checking detections:  []
Checking annotations:  [[ 34.  68. 123. 533.]
 [  7.   4.  36.  71.]]
Checking num annotations:  354.0
Checking detections:  []
Checking annotations:  [[175.   0. 206. 242.]]
Checking num annotations:  355.0
Checking detections:  []
Checking annotations:  [[588. 125. 624. 447.]
 [354. 288. 365. 348.]]
Checking num annotations:  357.0
Checking detections:  []
Checking annotations:  [[487.   3. 528. 480.]
 [147. 251. 161. 347.]]
Checking num annotations:  359.0
Checking detections:  []
Checking annotations:  [[305. 219. 318. 350.]
 [122. 225. 137. 368.]]
Checking num annotations:  361.0
Checking detections:  []
Checking annotations:  [[448.   9. 480. 157.]]
Checking num annotations:  362.0
Checking detections:  []
Checking annotations:  [[590.  24. 634. 463.]
 [398. 265. 411. 332.]]
Checking num annotations:  364.0
Checking detections:  []
Checking annotations:  [[472. 234. 485. 360.]
 [579. 239. 599. 345.]]
Checking num annotations:  366.0
Checking detections:  []
Checking annotations:  [[613. 103. 636. 352.]]
Checking num annotations:  367.0
Checking detections:  []
Checking annotations:  [[  5. 267.  18. 374.]]
Checking num annotations:  368.0
Checking detections:  []
Checking annotations:  [[527.  61. 584. 523.]]
Checking num annotations:  369.0
Checking detections:  []
Checking annotations:  [[603. 260. 618. 338.]]
Checking num annotations:  370.0
Checking detections:  []
Checking annotations:  [[614. 157. 630. 365.]
 [204. 155. 220. 248.]]
Checking num annotations:  372.0
Checking detections:  []
Checking annotations:  [[287. 230. 304. 282.]]
Checking num annotations:  373.0
Checking detections:  []
Checking annotations:  [[208. 169. 219. 339.]
 [174. 150. 200. 348.]]
Checking num annotations:  375.0
Checking detections:  []
Checking annotations:  [[447. 130. 470. 268.]]
Checking num annotations:  376.0
Checking detections:  []
Checking annotations:  [[249. 212. 260. 313.]
 [179. 257. 197. 303.]]
Checking num annotations:  378.0
Checking detections:  []
Checking annotations:  [[  1. 189.  14. 363.]]
Checking num annotations:  379.0
Checking detections:  []
Checking annotations:  [[254.  32. 270. 284.]]
Checking num annotations:  380.0
Checking detections:  []
Checking annotations:  [[359. 200. 374. 371.]]
Checking num annotations:  381.0
Checking detections:  []
Checking annotations:  [[229. 259. 244. 343.]]
Checking num annotations:  382.0
Checking detections:  []
Checking annotations:  [[ 67. 232.  76. 322.]]
Checking num annotations:  383.0
Checking detections:  []
Checking annotations:  [[189.  28. 208. 416.]]
Checking num annotations:  384.0
Checking detections:  []
Checking annotations:  [[163. 172. 183. 388.]]
Checking num annotations:  385.0
Checking detections:  []
Checking annotations:  [[476. 238. 490. 334.]]
Checking num annotations:  386.0
Checking detections:  []
Checking annotations:  [[344. 247. 352. 332.]]
Checking num annotations:  387.0
Checking detections:  []
Checking annotations:  [[ 65. 276.  82. 337.]]
Checking num annotations:  388.0
Checking detections:  []
Checking annotations:  [[131. 148. 151. 354.]]
Checking num annotations:  389.0
Checking detections:  []
Checking annotations:  [[478. 204. 493. 365.]]
Checking num annotations:  390.0
Checking detections:  []
Checking annotations:  [[ 33. 242.  40. 318.]]
Checking num annotations:  391.0
Checking detections:  []
Checking annotations:  [[430. 217. 441. 318.]]
Checking num annotations:  392.0
Checking detections:  []
Checking annotations:  [[ 12. 146.  41. 412.]]
Checking num annotations:  393.0
Checking detections:  []
Checking annotations:  [[571. 146. 585. 391.]]
Checking num annotations:  394.0
Checking detections:  []
Checking annotations:  [[ 41. 183.  59. 351.]]
Checking num annotations:  395.0
Checking detections:  []
Checking annotations:  [[511. 175. 522. 360.]]
Checking num annotations:  396.0
Checking detections:  []
Checking annotations:  [[380. 115. 417. 479.]]
Checking num annotations:  397.0
Checking detections:  []
Checking annotations:  [[273. 146. 292. 416.]]
Checking num annotations:  398.0
Checking detections:  []
Checking annotations:  [[320. 137. 333. 353.]
 [585. 205. 604. 310.]]
Checking num annotations:  400.0
Checking detections:  []
Checking annotations:  [[ 41. 194.  59. 355.]
 [469. 218. 489. 286.]]
Checking num annotations:  402.0
Checking detections:  []
Checking annotations:  [[208. 197. 232. 383.]]
Checking num annotations:  403.0
Checking detections:  []
Checking annotations:  [[104. 235. 116. 348.]]
Checking num annotations:  404.0
Checking detections:  []
Checking annotations:  [[361. 268. 367. 355.]]
Checking num annotations:  405.0
Checking detections:  []
Checking annotations:  [[446. 222. 457. 385.]
 [283. 263. 299. 342.]]
Checking num annotations:  407.0
Checking detections:  []
Checking annotations:  [[400. 250. 411. 355.]]
Checking num annotations:  408.0
Checking detections:  []
Checking annotations:  [[374. 198. 392. 452.]]
Checking num annotations:  409.0
Checking detections:  []
Checking annotations:  [[426. 209. 441. 374.]]
Checking num annotations:  410.0
Checking detections:  []
Checking annotations:  [[613.  84. 637. 206.]
 [482. 247. 495. 318.]]
Checking num annotations:  412.0
Checking detections:  []
Checking annotations:  [[479. 178. 499. 377.]]
Checking num annotations:  413.0
Checking detections:  []
Checking annotations:  [[219. 174. 251. 382.]]
Checking num annotations:  414.0
Checking detections:  []
Checking annotations:  [[602. 205. 628. 314.]]
Checking num annotations:  415.0
Checking detections:  []
Checking annotations:  [[ 18. 179.  41. 385.]
 [177. 263. 192. 297.]]
Checking num annotations:  417.0
Checking detections:  []
Checking annotations:  [[198.  97. 220. 321.]]
Checking num annotations:  418.0
Checking detections:  []
Checking annotations:  [[240. 194. 260. 260.]
 [151. 282. 165. 347.]
 [ 62. 255.  80. 332.]]
Checking num annotations:  421.0
Checking detections:  []
Checking annotations:  [[215. 116. 233. 292.]]
Checking num annotations:  422.0
Checking detections:  []
Checking annotations:  [[227.   0. 261. 481.]]
Checking num annotations:  423.0
Checking detections:  []
Checking annotations:  [[482. 108. 509. 325.]]
Checking num annotations:  424.0
Checking detections:  []
Checking annotations:  [[363. 145. 378. 299.]]
Checking num annotations:  425.0
Checking detections:  []
Checking annotations:  [[370. 259. 378. 302.]]
Checking num annotations:  426.0
Checking detections:  []
Checking annotations:  [[378. 187. 400. 381.]]
Checking num annotations:  427.0
Checking detections:  []
Checking annotations:  [[172.  93. 202. 306.]]
Checking num annotations:  428.0
Checking detections:  []
Checking annotations:  [[542. 257. 561. 314.]]
Checking num annotations:  429.0
Checking detections:  []
Checking annotations:  [[535. 179. 557. 340.]]
Checking num annotations:  430.0
Checking detections:  []
Checking annotations:  [[256.  97. 278. 376.]]
Checking num annotations:  431.0
Checking detections:  []
Checking annotations:  [[297.  22. 331. 446.]
 [479. 205. 492. 266.]]
Checking num annotations:  433.0
Checking detections:  []
Checking annotations:  [[356. 124. 380. 372.]
 [361.   2. 396. 123.]
 [ 75. 265.  89. 301.]]
Checking num annotations:  436.0
Checking detections:  []
Checking annotations:  [[ 37. 242.  60. 386.]]
Checking num annotations:  437.0
Checking detections:  []
Checking annotations:  [[269.  67. 304. 413.]]
Checking num annotations:  438.0
Checking detections:  []
Checking annotations:  [[153. 182. 169. 315.]]
Checking num annotations:  439.0
Checking detections:  []
Checking annotations:  [[457. 101. 506. 496.]
 [558.   4. 588.  97.]]
Checking num annotations:  441.0
Checking detections:  []
Checking annotations:  [[146.   0. 192. 488.]]
Checking num annotations:  442.0
Checking detections:  []
Checking annotations:  [[273. 112. 295. 340.]]
Checking num annotations:  443.0
Checking detections:  []
Checking annotations:  [[ 97. 157. 127. 378.]]
Checking num annotations:  444.0
Checking detections:  []
Checking annotations:  [[248. 135. 263. 430.]]
Checking num annotations:  445.0
Checking detections:  []
Checking annotations:  [[191. 267. 227. 519.]]
Checking num annotations:  446.0
Checking detections:  []
Checking annotations:  [[478. 104. 500. 361.]]
Checking num annotations:  447.0
Checking detections:  []
Checking annotations:  [[407. 149. 416. 367.]]
Checking num annotations:  448.0
Checking detections:  []
Checking annotations:  [[344. 111. 356. 400.]]
Checking num annotations:  449.0
Checking detections:  []
Checking annotations:  [[528.  90. 544. 472.]]
Checking num annotations:  450.0
Checking detections:  []
Checking annotations:  [[348. 141. 366. 283.]]
Checking num annotations:  451.0
Checking detections:  []
Checking annotations:  [[110.  88. 148. 454.]]
Checking num annotations:  452.0
Checking detections:  []
Checking annotations:  [[265. 212. 275. 342.]]
Checking num annotations:  453.0
Checking detections:  []
Checking annotations:  [[ 65. 203.  76. 364.]]
Checking num annotations:  454.0
Checking detections:  []
Checking annotations:  [[ 70.  94.  90. 406.]]
Checking num annotations:  455.0
Checking detections:  []
Checking annotations:  [[445. 127. 458. 401.]]
Checking num annotations:  456.0
Checking detections:  []
Checking annotations:  [[246. 169. 263. 335.]]
Checking num annotations:  457.0
Checking detections:  []
Checking annotations:  [[366. 268. 373. 335.]]
Checking num annotations:  458.0
Checking detections:  []
Checking annotations:  [[486. 261. 491. 334.]
 [127. 254. 141. 281.]]
Checking num annotations:  460.0
Checking detections:  []
Checking annotations:  [[209. 250. 215. 342.]
 [ 96. 288. 105. 336.]]
Checking num annotations:  462.0
Checking detections:  []
Checking annotations:  [[ 34. 266.  43. 327.]]
Checking num annotations:  463.0
Checking detections:  []
Checking annotations:  [[591. 241. 596. 303.]]
Checking num annotations:  464.0
Checking detections:  []
Checking annotations:  [[318.  24. 350. 372.]]
Checking num annotations:  465.0
Checking detections:  []
Checking annotations:  [[245. 266. 251. 356.]]
Checking num annotations:  466.0
Checking detections:  []
Checking annotations:  [[150. 207. 156. 263.]]
Checking num annotations:  467.0
Checking detections:  []
Checking annotations:  [[568. 145. 586. 337.]]
Checking num annotations:  468.0
Checking detections:  []
Checking annotations:  [[199. 228. 204. 363.]]
Checking num annotations:  469.0
Checking detections:  []
Checking annotations:  [[232.  84. 252. 296.]]
Checking num annotations:  470.0
Checking detections:  []
Checking annotations:  [[292. 203. 305. 363.]]
Checking num annotations:  471.0
Checking detections:  []
Checking annotations:  [[339.  82. 351. 403.]]
Checking num annotations:  472.0
Checking detections:  []
Checking annotations:  [[ 12. 177.  24. 339.]]
Checking num annotations:  473.0
Checking detections:  []
Checking annotations:  [[217. 197. 228. 371.]]
Checking num annotations:  474.0
Checking detections:  []
Checking annotations:  [[337. 125. 353. 440.]]
Checking num annotations:  475.0
Checking detections:  []
Checking annotations:  [[436.   8. 452. 363.]]
Checking num annotations:  476.0
Checking detections:  []
Checking annotations:  [[377. 123. 392. 403.]
 [237. 280. 251. 331.]]
Checking num annotations:  478.0
Checking detections:  []
Checking annotations:  [[386. 117. 408. 513.]]
Checking num annotations:  479.0
Checking detections:  []
Checking annotations:  [[281.  28. 298. 266.]]
Checking num annotations:  480.0
Checking detections:  []
Checking annotations:  [[379. 103. 395. 426.]
 [240. 269. 247. 339.]
 [126. 258. 141. 320.]]
Checking num annotations:  483.0
Checking detections:  []
Checking annotations:  [[537. 119. 555. 462.]]
Checking num annotations:  484.0
Checking detections:  []
Checking annotations:  [[513. 157. 525. 367.]]
Checking num annotations:  485.0
Checking detections:  []
Checking annotations:  [[536. 164. 556. 456.]]
Checking num annotations:  486.0
Checking detections:  []
Checking annotations:  [[481. 165. 500. 424.]]
Checking num annotations:  487.0
Checking detections:  []
Checking annotations:  [[128. 106. 157. 532.]
 [ 97.   3. 136.  89.]]
Checking num annotations:  489.0
Checking detections:  []
Checking annotations:  [[415. 144. 429. 407.]
 [  2. 141.  19. 424.]]
Checking num annotations:  491.0
Checking detections:  []
Checking annotations:  [[577. 119. 593. 430.]
 [281. 264. 292. 310.]]
Checking num annotations:  493.0
Checking detections:  []
Checking annotations:  [[221. 199. 232. 355.]]
Checking num annotations:  494.0
Checking detections:  []
Checking annotations:  [[487. 109. 519. 525.]
 [564.   4. 593.  76.]]
Checking num annotations:  496.0
Checking detections:  []
Checking annotations:  [[282. 178. 294. 320.]]
Checking num annotations:  497.0
Checking detections:  []
Checking annotations:  [[558. 152. 570. 429.]]
Checking num annotations:  498.0
Checking detections:  []
Checking annotations:  [[398. 168. 414. 434.]]
Checking num annotations:  499.0
Checking detections:  []
Checking annotations:  [[296. 129. 311. 453.]
 [624. 270. 638. 344.]]
Checking num annotations:  501.0
Checking detections:  []
Checking annotations:  [[539. 124. 559. 315.]]
Checking num annotations:  502.0
Checking detections:  []
Checking annotations:  [[447. 110. 468. 481.]]
Checking num annotations:  503.0
Checking detections:  []
Checking annotations:  [[561. 121. 593. 557.]
 [583.  58. 616. 559.]]
Checking num annotations:  505.0
Checking detections:  []
Checking annotations:  [[326. 117. 348. 508.]]
Checking num annotations:  506.0
Checking detections:  []
Checking annotations:  [[574.  76. 607. 576.]
 [537.   3. 566.  94.]]
Checking num annotations:  508.0
Checking detections:  []
Checking annotations:  [[ 70. 184.  98. 408.]
 [345. 209. 363. 368.]]
Checking num annotations:  510.0
Checking detections:  []
Checking annotations:  [[ 73.  68.  95. 415.]]
Checking num annotations:  511.0
Checking detections:  []
Checking annotations:  [[607. 211. 619. 305.]]
Checking num annotations:  512.0
Checking detections:  []
Checking annotations:  [[  3.  66.  70. 515.]]
Checking num annotations:  513.0
Checking detections:  []
Checking annotations:  [[353.  66. 366. 431.]]
Checking num annotations:  514.0
Checking detections:  []
Checking annotations:  [[427.  53. 446. 277.]
 [277. 216. 296. 359.]
 [ 76. 230.  95. 369.]
 [148. 271. 159. 326.]]
Checking num annotations:  518.0
Checking detections:  []
Checking annotations:  [[412. 127. 437. 474.]
 [303. 263. 317. 327.]
 [145. 255. 154. 353.]]
Checking num annotations:  521.0
Checking detections:  []
Checking annotations:  [[539. 179. 548. 370.]
 [109. 295. 120. 329.]]
Checking num annotations:  523.0
Checking detections:  []
Checking annotations:  [[539. 131. 559. 298.]]
Checking num annotations:  524.0
Checking detections:  []
Checking annotations:  [[441.  19. 478. 388.]]
Checking num annotations:  525.0
Checking detections:  []
Checking annotations:  [[244. 171. 256. 343.]
 [442. 283. 455. 327.]]
Checking num annotations:  527.0
Checking detections:  []
Checking annotations:  [[228. 103. 239. 309.]
 [376.  81. 391. 238.]]
Checking num annotations:  529.0
Checking detections:  []
Checking annotations:  [[291. 193. 302. 307.]
 [580. 244. 595. 347.]]
Checking num annotations:  531.0
Checking detections:  []
Checking annotations:  [[ 11.   1.  54. 459.]
 [482. 267. 493. 361.]]
Checking num annotations:  533.0
Checking detections:  []
Checking annotations:  [[432.  96. 460. 304.]
 [418.  50. 434. 107.]
 [  0. 176.  12. 317.]]
Checking num annotations:  536.0
Checking detections:  []
Checking annotations:  [[584.  42. 620. 550.]
 [575.  10. 592.  69.]]
Checking num annotations:  538.0
Checking detections:  []
Checking annotations:  [[255.  25. 288. 482.]]
Checking num annotations:  539.0
Checking detections:  []
Checking annotations:  [[418.  41. 450. 447.]
 [380. 192. 387. 353.]]
Checking num annotations:  541.0
Checking detections:  []
Checking annotations:  [[484. 172. 503. 303.]]
Checking num annotations:  542.0
Checking detections:  []
Checking annotations:  [[144. 148. 157. 369.]]
Checking num annotations:  543.0
Checking detections:  []
Checking annotations:  [[404. 177. 420. 423.]]
Checking num annotations:  544.0
Checking detections:  []
Checking annotations:  [[385.   1. 415. 515.]]
Checking num annotations:  545.0
Checking detections:  []
Checking annotations:  [[ 12.  98.  42. 393.]]
Checking num annotations:  546.0
Checking detections:  []
Checking annotations:  [[577. 262. 591. 420.]]
Checking num annotations:  547.0
Checking detections:  []
Checking annotations:  [[108.   1. 130. 323.]]
Checking num annotations:  548.0
Checking detections:  []
Checking annotations:  [[103.   0. 134. 460.]]
Checking num annotations:  549.0
Checking detections:  []
Checking annotations:  [[349.  36. 367. 404.]]
Checking num annotations:  550.0
Checking detections:  []
Checking annotations:  [[409.   3. 444. 530.]]
Checking num annotations:  551.0
Checking detections:  []
Checking annotations:  [[ 37.   1.  77. 498.]
 [296. 274. 308. 336.]
 [358. 261. 373. 341.]]
Checking num annotations:  554.0
Checking detections:  []
Checking annotations:  [[ 23.  91.  73. 569.]
 [  8.   3.  36.  86.]
 [164.   1. 194.  98.]
 [195. 107. 221. 532.]]
Checking num annotations:  558.0
Checking detections:  []
Checking annotations:  [[ 74. 127.  90. 397.]]
Checking num annotations:  559.0
Checking detections:  []
Checking annotations:  [[260.   4. 279. 485.]]
Checking num annotations:  560.0
Checking detections:  []
Checking annotations:  [[ 77.   1. 116. 475.]]
Checking num annotations:  561.0
Checking detections:  []
Checking annotations:  [[440.  95. 472. 505.]
 [491.   0. 509.  93.]]
Checking num annotations:  563.0
Checking detections:  []
Checking annotations:  [[371.   2. 392. 409.]
 [  8. 253.  21. 335.]]
Checking num annotations:  565.0
Checking detections:  []
Checking annotations:  [[216. 109. 239. 439.]
 [267.  10. 286. 137.]]
Checking num annotations:  567.0
Checking detections:  []
Checking annotations:  [[240. 161. 254. 330.]]
Checking num annotations:  568.0
Checking detections:  []
Checking annotations:  [[141.  11. 166. 444.]
 [428. 251. 438. 366.]
 [486. 265. 495. 355.]
 [525. 297. 534. 356.]
 [628. 281. 637. 328.]]
Checking num annotations:  573.0
Checking detections:  []
Checking annotations:  [[112.   1. 140. 501.]
 [234. 281. 247. 329.]
 [611. 292. 621. 318.]]
Checking num annotations:  576.0
Checking detections:  []
Checking annotations:  [[396.  38. 424. 438.]]
Checking num annotations:  577.0
Checking detections:  []
Checking annotations:  [[190. 117. 221. 420.]
 [237.  97. 253. 132.]]
Checking num annotations:  579.0
Checking detections:  []
Checking annotations:  [[ 35. 150.  59. 298.]
 [112. 106. 131. 298.]
 [357. 237. 371. 322.]
 [374. 196. 385. 325.]]
Checking num annotations:  583.0
Checking detections:  []
Checking annotations:  [[564.  54. 631. 554.]]
Checking num annotations:  584.0
Checking detections:  []
Checking annotations:  [[332. 141. 347. 440.]]
Checking num annotations:  585.0
Checking detections:  []
Checking annotations:  [[ 68.  65. 107. 523.]
 [570. 269. 581. 374.]]
Checking num annotations:  587.0
Checking detections:  []
Checking annotations:  [[388.   2. 436. 437.]]
Checking num annotations:  588.0
Checking detections:  []
Checking annotations:  [[590.  54. 630. 588.]]
Checking num annotations:  589.0
Checking detections:  []
Checking annotations:  [[476.   4. 504. 480.]]
Checking num annotations:  590.0
Checking detections:  []
Checking annotations:  [[399.  92. 432. 481.]
 [459.  50. 480. 126.]]
Checking num annotations:  592.0
Checking detections:  []
Checking annotations:  [[197.  28. 218. 241.]]
Checking num annotations:  593.0
Checking detections:  []
Checking annotations:  [[304. 126. 331. 504.]]
Checking num annotations:  594.0
Checking detections:  []
Checking annotations:  [[ 88.   1. 120. 304.]
 [  3.   6.  34. 276.]]
Checking num annotations:  596.0
Checking detections:  []
Checking annotations:  [[580.  43. 616. 560.]]
Checking num annotations:  597.0
Checking detections:  []
Checking annotations:  [[214.  82. 243. 424.]]
Checking num annotations:  598.0
Checking detections:  []
Checking annotations:  [[423.   1. 475. 449.]]
Checking num annotations:  599.0
Checking detections:  []
Checking annotations:  [[306. 102. 327. 428.]
 [347.   1. 376. 116.]]
Checking num annotations:  601.0
Checking detections:  []
Checking annotations:  [[351. 118. 368. 363.]]
Checking num annotations:  602.0
Checking detections:  []
Checking annotations:  [[460.   3. 501. 474.]]
Checking num annotations:  603.0
Checking detections:  []
Checking annotations:  [[109. 113. 134. 406.]]
Checking num annotations:  604.0
Checking detections:  []
Checking annotations:  [[536.   1. 603. 636.]
 [604.   2. 629. 498.]]
Checking num annotations:  606.0
Checking detections:  []
Checking annotations:  [[420.   1. 447. 462.]]
Checking num annotations:  607.0
Checking detections:  []
Checking annotations:  [[106.   1. 133. 512.]]
Checking num annotations:  608.0
Checking detections:  []
Checking annotations:  [[285.  61. 324. 324.]]
Checking num annotations:  609.0
Checking detections:  []
Checking annotations:  [[427.  70. 446. 382.]]
Checking num annotations:  610.0
Checking detections:  []
Checking annotations:  [[486.   2. 526. 482.]
 [162. 271. 176. 323.]]
Checking num annotations:  612.0
Checking detections:  []
Checking annotations:  [[ 33.  63.  74. 332.]
 [282. 253. 296. 282.]]
Checking num annotations:  614.0
Checking detections:  []
Checking annotations:  [[582. 150. 613. 470.]]
Checking num annotations:  615.0
Checking detections:  []
Checking annotations:  [[530.  94. 561. 545.]
 [529.   1. 557.  96.]]
Checking num annotations:  617.0
Checking detections:  []
Checking annotations:  [[172.  38. 196. 411.]]
Checking num annotations:  618.0
Checking detections:  []
Checking annotations:  [[565. 114. 593. 469.]
 [304. 275. 319. 322.]]
Checking num annotations:  620.0
Checking detections:  []
Checking annotations:  [[  4.  25.  34. 475.]]
Checking num annotations:  621.0
Checking detections:  []
Checking annotations:  [[375. 101. 388. 376.]]
Checking num annotations:  622.0
Checking detections:  []
Checking annotations:  [[336. 268. 343. 313.]
 [343. 270. 351. 312.]]
Checking num annotations:  624.0
Checking detections:  []
Checking annotations:  [[175.  63. 200. 422.]]
Checking num annotations:  625.0
Checking detections:  []
Checking annotations:  [[540. 167. 553. 397.]
 [230. 244. 241. 354.]]
Checking num annotations:  627.0
Checking detections:  []
Checking annotations:  [[ 20.  72.  66. 496.]
 [575. 263. 588. 328.]]
Checking num annotations:  629.0
Checking detections:  []
Checking annotations:  [[391. 224. 401. 342.]]
Checking num annotations:  630.0
Checking detections:  []
Checking annotations:  [[110. 233. 131. 337.]
 [472. 264. 485. 314.]]
Checking num annotations:  632.0
Checking detections:  []
Checking annotations:  [[117.   3. 136. 331.]]
Checking num annotations:  633.0
Checking detections:  []
Checking annotations:  [[ 52.  99.  64. 309.]]
Checking num annotations:  634.0
Checking detections:  []
Checking annotations:  [[ 78.   3. 120. 261.]]
Checking num annotations:  635.0
Checking detections:  []
Checking annotations:  [[244. 235. 260. 369.]
 [404. 258. 419. 307.]]
Checking num annotations:  637.0
Checking detections:  []
Checking annotations:  [[350. 196. 364. 330.]]
Checking num annotations:  638.0
Checking detections:  []
Checking annotations:  [[592. 163. 603. 223.]
 [300. 257. 315. 324.]]
Checking num annotations:  640.0
Checking detections:  []
Checking annotations:  [[ 82.  94. 114. 402.]]
Checking num annotations:  641.0
Checking detections:  []
Checking annotations:  [[ 17. 223.  36. 291.]]
Checking num annotations:  642.0
Checking detections:  []
Checking annotations:  [[100.  83. 115. 343.]]
Checking num annotations:  643.0
Checking detections:  []
Checking annotations:  [[128. 274. 139. 351.]
 [ 64. 280.  80. 353.]]
Checking num annotations:  645.0
Checking detections:  []
Checking annotations:  [[124. 289. 134. 321.]]
Checking num annotations:  646.0
Checking detections:  []
Checking annotations:  [[496.  41. 544. 442.]
 [403. 248. 420. 324.]]
Checking num annotations:  648.0
Checking detections:  []
Checking annotations:  [[468. 117. 479. 409.]]
Checking num annotations:  649.0
Checking detections:  []
Checking annotations:  [[399. 255. 413. 338.]
 [199. 247. 215. 337.]]
Checking num annotations:  651.0
Checking detections:  []
Checking annotations:  [[358.   2. 403. 552.]]
Checking num annotations:  652.0
Checking detections:  []
Checking annotations:  [[424. 182. 441. 390.]
 [100. 264. 111. 346.]]
Checking num annotations:  654.0
Checking detections:  []
Checking annotations:  [[582. 209. 596. 372.]]
Checking num annotations:  655.0
Checking detections:  []
Checking annotations:  [[150. 170. 165. 387.]]
Checking num annotations:  656.0
Checking detections:  []
Checking annotations:  [[296.  97. 316. 440.]
 [482. 234. 493. 325.]]
Checking num annotations:  658.0
Checking detections:  []
Checking annotations:  [[600.   1. 638. 409.]]
Checking num annotations:  659.0
Checking detections:  []
Checking annotations:  [[593. 273. 612. 351.]]
Checking num annotations:  660.0
Checking detections:  []
Checking annotations:  [[316. 122. 340. 388.]
 [536. 231. 545. 358.]]
Checking num annotations:  662.0
Checking detections:  []
Checking annotations:  [[344. 116. 369. 388.]]
Checking num annotations:  663.0
Checking detections:  []
Checking annotations:  [[534.  86. 568. 451.]]
Checking num annotations:  664.0
Checking detections:  []
Checking annotations:  [[488. 225. 510. 365.]]
Checking num annotations:  665.0
Checking detections:  []
Checking annotations:  [[286. 249. 301. 354.]]
Checking num annotations:  666.0
Checking detections:  []
Checking annotations:  [[384. 118. 419. 370.]]
Checking num annotations:  667.0
Checking detections:  []
Checking annotations:  [[248. 179. 269. 390.]]
Checking num annotations:  668.0
Checking detections:  []
Checking annotations:  [[250. 171. 265. 371.]
 [325. 183. 341. 361.]]
Checking num annotations:  670.0
Checking detections:  []
Checking annotations:  [[331. 117. 357. 430.]]
Checking num annotations:  671.0
Checking detections:  []
Checking annotations:  [[399. 249. 408. 338.]]
Checking num annotations:  672.0
Checking detections:  []
Checking annotations:  [[165. 109. 188. 301.]
 [143.   6. 168. 107.]]
Checking num annotations:  674.0
Checking detections:  []
Checking annotations:  [[445. 209. 458. 369.]]
Checking num annotations:  675.0
Checking detections:  []
Checking annotations:  [[199. 228. 210. 274.]
 [272. 271. 287. 350.]]
Checking num annotations:  677.0
Checking detections:  []
Checking annotations:  [[573. 215. 587. 325.]]
Checking num annotations:  678.0
Checking detections:  []
Checking annotations:  [[423. 172. 436. 344.]]
Checking num annotations:  679.0
Checking detections:  []
Checking annotations:  [[253. 167. 261. 409.]
 [174. 247. 188. 378.]]
Checking num annotations:  681.0
Checking detections:  []
Checking annotations:  [[407. 148. 428. 422.]
 [192. 213. 207. 352.]]
Checking num annotations:  683.0
Checking detections:  []
Checking annotations:  [[308. 282. 314. 339.]
 [416. 283. 430. 345.]]
Checking num annotations:  685.0
Checking detections:  []
Checking annotations:  [[ 81.  99. 113. 547.]
 [147.   6. 174. 110.]]
Checking num annotations:  687.0
Checking detections:  []
Checking annotations:  [[357. 214. 367. 361.]
 [182. 198. 196. 350.]]
Checking num annotations:  689.0
Checking detections:  []
Checking annotations:  [[385. 218. 393. 336.]]
Checking num annotations:  690.0
Checking detections:  []
Checking annotations:  [[374.   1. 406. 328.]]
Checking num annotations:  691.0
Checking detections:  []
Checking annotations:  [[398.  94. 412. 342.]
 [425. 104. 438. 346.]]
Checking num annotations:  693.0
Checking detections:  []
Checking annotations:  [[128.  83. 146. 315.]]
Checking num annotations:  694.0
Checking detections:  []
Checking annotations:  [[299. 115. 316. 431.]]
Checking num annotations:  695.0
Checking detections:  []
Checking annotations:  [[439. 144. 450. 335.]]
Checking num annotations:  696.0
Checking detections:  []
Checking annotations:  [[196.   3. 248. 576.]]
Checking num annotations:  697.0
Checking detections:  []
Checking annotations:  [[407. 112. 427. 349.]]
Checking num annotations:  698.0
Checking detections:  []
Checking annotations:  [[469.  66. 512. 422.]]
Checking num annotations:  699.0
Checking detections:  []
Checking annotations:  [[ 89.  83. 134. 495.]]
Checking num annotations:  700.0
Checking detections:  []
Checking annotations:  [[475. 118. 495. 374.]]
Checking num annotations:  701.0
Checking detections:  []
Checking annotations:  [[ 53.  44.  78. 503.]]
Checking num annotations:  702.0
Checking detections:  []
Checking annotations:  [[144. 153. 160. 297.]]
Checking num annotations:  703.0
Checking detections:  []
Checking annotations:  [[300. 140. 316. 401.]
 [396. 262. 405. 334.]]
Checking num annotations:  705.0
Checking detections:  []
Checking annotations:  [[ 66.  82.  94. 556.]]
Checking num annotations:  706.0
Checking detections:  []
Checking annotations:  [[ 78.  73.  96. 419.]]
Checking num annotations:  707.0
Checking detections:  []
Checking annotations:  [[286. 140. 297. 249.]]
Checking num annotations:  708.0
Checking detections:  []
Checking annotations:  [[284. 120. 299. 387.]]
Checking num annotations:  709.0
Checking detections:  []
Checking annotations:  [[229. 121. 253. 493.]]
Checking num annotations:  710.0
Checking detections:  []
Checking annotations:  [[522. 104. 570. 389.]
 [575.   5. 610.  97.]]
Checking num annotations:  712.0
Checking detections:  []
Checking annotations:  [[290. 178. 302. 338.]]
Checking num annotations:  713.0
Checking detections:  []
Checking annotations:  [[364. 100. 394. 412.]]
Checking num annotations:  714.0
Checking detections:  []
Checking annotations:  [[261. 165. 277. 352.]
 [612. 287. 621. 331.]
 [627. 280. 633. 328.]]
Checking num annotations:  717.0
Checking detections:  []
Checking annotations:  [[311.  76. 338. 411.]]
Checking num annotations:  718.0
Checking detections:  []
Checking annotations:  [[ 57.  74. 110. 541.]
 [325. 230. 334. 306.]]
Checking num annotations:  720.0
Checking detections:  []
Checking annotations:  [[403. 115. 433. 524.]
 [198. 259. 211. 337.]]
Checking num annotations:  722.0
Checking detections:  []
Checking annotations:  [[316. 171. 333. 392.]]
Checking num annotations:  723.0
Checking detections:  []
Checking annotations:  [[134. 106. 162. 546.]
 [242.   4. 287. 132.]]
Checking num annotations:  725.0
Checking detections:  []
Checking annotations:  [[ 97. 151. 111. 403.]]
Checking num annotations:  726.0
Checking detections:  []
Checking annotations:  [[594.  33. 627. 319.]]
Checking num annotations:  727.0
Checking detections:  []
Checking annotations:  [[590.  41. 626. 468.]]
Checking num annotations:  728.0
Checking detections:  []
Checking annotations:  [[593. 170. 613. 396.]]
Checking num annotations:  729.0
Checking detections:  []
Checking annotations:  [[ 10.  63.  52. 432.]
 [541. 250. 550. 350.]]
Checking num annotations:  731.0
Checking detections:  []
Checking annotations:  [[ 35.  55.  87. 492.]
 [ 95.   3. 117.  59.]]
Checking num annotations:  733.0
Checking detections:  []
Checking annotations:  [[ 52.  89.  96. 397.]
 [174. 215. 184. 358.]
 [335. 242. 353. 348.]]
Checking num annotations:  736.0
Checking detections:  []
Checking annotations:  [[442. 130. 471. 475.]
 [355. 243. 363. 329.]
 [497.   2. 541. 103.]]
Checking num annotations:  739.0
Checking detections:  []
Checking annotations:  [[294. 130. 315. 499.]
 [306.   0. 329. 125.]]
Checking num annotations:  741.0
Checking detections:  []
Checking annotations:  [[391. 130. 422. 519.]
 [346.   3. 373. 135.]]
Checking num annotations:  743.0
Checking detections:  []
Checking annotations:  [[146. 184. 160. 416.]]
Checking num annotations:  744.0
Checking detections:  []
Checking annotations:  [[344.   1. 381. 506.]]
Checking num annotations:  745.0
Checking detections:  []
Checking annotations:  [[544.  18. 597. 435.]]
Checking num annotations:  746.0
Checking detections:  []
Checking annotations:  [[395. 197. 406. 338.]]
Checking num annotations:  747.0
Checking detections:  []
Checking annotations:  [[400.   4. 420. 265.]]
Checking num annotations:  748.0
Checking detections:  []
Checking annotations:  [[220.   1. 242. 527.]]
Checking num annotations:  749.0
Checking detections:  []
Checking annotations:  [[506.  85. 539. 532.]
 [566.   0. 588.  76.]]
Checking num annotations:  751.0
Checking detections:  []
Checking annotations:  [[125. 152. 152. 439.]]
Checking num annotations:  752.0
Checking detections:  []
Checking annotations:  [[587.   1. 622. 622.]
 [332. 248. 342. 283.]]
Checking num annotations:  754.0
Checking detections:  []
Checking annotations:  [[536. 105. 574. 482.]]
Checking num annotations:  755.0
Checking detections:  []
Checking annotations:  [[185.  58. 210. 420.]]
Checking num annotations:  756.0
Checking detections:  []
Checking annotations:  [[256. 114. 280. 458.]
 [531. 133. 548. 441.]
 [583. 131. 596. 443.]]
Checking num annotations:  759.0
Checking detections:  []
Checking annotations:  [[355. 222. 374. 378.]
 [388. 214. 410. 381.]]
Checking num annotations:  761.0
Checking detections:  []
Checking annotations:  [[555.  75. 584. 451.]
 [582.  16. 604.  69.]]
Checking num annotations:  763.0
Checking detections:  []
Checking annotations:  [[383. 106. 408. 501.]
 [370.   4. 389. 114.]]
Checking num annotations:  765.0
Checking detections:  []
Checking annotations:  [[428.   1. 456. 476.]]
Checking num annotations:  766.0
Checking detections:  []
Checking annotations:  [[188.  60. 208. 345.]
 [226.  60. 244. 362.]]
Checking num annotations:  768.0
Checking detections:  []
Checking annotations:  [[108.   1. 136. 441.]
 [586. 247. 595. 269.]]
Checking num annotations:  770.0
Checking detections:  []
Checking annotations:  [[434.  91. 452. 520.]
 [473.   1. 494.  86.]]
Checking num annotations:  772.0
Checking detections:  []
Checking annotations:  [[517. 119. 546. 403.]]
Checking num annotations:  773.0
Checking detections:  []
Checking annotations:  [[173.   7. 194. 481.]
 [ 15. 275.  30. 362.]]
Checking num annotations:  775.0
Checking detections:  []
Checking annotations:  [[ 40.  96.  80. 427.]]
Checking num annotations:  776.0
Checking detections:  []
Checking annotations:  [[575.  94. 594. 367.]]
Checking num annotations:  777.0
Checking detections:  []
Checking annotations:  [[418. 257. 425. 353.]]
Checking num annotations:  778.0
Checking detections:  []
Checking annotations:  [[609. 185. 630. 390.]
 [439. 239. 451. 372.]]
Checking num annotations:  780.0
Checking detections:  []
Checking annotations:  [[455. 108. 468. 172.]
 [111. 282. 121. 321.]]
Checking num annotations:  782.0
Checking detections:  []
Checking annotations:  [[405. 113. 416. 371.]
 [419. 202. 427. 369.]
 [432. 102. 443. 369.]
 [601.  23. 630. 321.]]
Checking num annotations:  786.0
Checking detections:  []
Checking annotations:  [[331. 262. 344. 353.]]
Checking num annotations:  787.0
Checking detections:  []
Checking annotations:  [[555. 133. 576. 414.]
 [114. 157. 132. 421.]
 [409. 292. 423. 338.]]
Checking num annotations:  790.0
Checking detections:  []
Checking annotations:  [[ 82. 127. 103. 371.]
 [107. 180. 125. 382.]]
Checking num annotations:  792.0
Checking detections:  []
Checking annotations:  [[156. 159. 174. 359.]
 [172. 144. 183. 359.]
 [490.  58. 520. 409.]]
Checking num annotations:  795.0
Checking detections:  []
Checking annotations:  [[307.   1. 345. 624.]
 [272.  89. 300. 372.]]
Checking num annotations:  797.0
Checking detections:  []
Checking annotations:  [[ 51.  77.  69. 346.]
 [ 70. 129.  90. 340.]]
Checking num annotations:  799.0
Checking detections:  []
Checking annotations:  [[558. 258. 568. 321.]
 [595. 245. 609. 309.]
 [624. 235. 635. 340.]]
Checking num annotations:  802.0
Checking detections:  []
Checking annotations:  [[291. 266. 303. 347.]
 [ 26. 252.  40. 329.]]
Checking num annotations:  804.0
Checking detections:  []
Checking annotations:  [[  4.  33.  49. 493.]]
Checking num annotations:  805.0
Checking detections:  []
Checking annotations:  [[219. 149. 244. 380.]]
Checking num annotations:  806.0
Checking detections:  []
Checking annotations:  [[378.   4. 407. 306.]]
Checking num annotations:  807.0
Checking detections:  []
Checking annotations:  [[  3. 265.  20. 337.]]
Checking num annotations:  808.0
Checking detections:  []
Checking annotations:  [[422.  95. 455. 469.]
 [469.   2. 495.  98.]]
Checking num annotations:  810.0
Checking detections:  []
Checking annotations:  [[464. 283. 478. 309.]]
Checking num annotations:  811.0
Checking detections:  []
Checking annotations:  [[417. 172. 434. 389.]
 [ 64. 261.  75. 340.]]
Checking num annotations:  813.0
Checking detections:  []
Checking annotations:  [[578. 213. 606. 361.]]
Checking num annotations:  814.0
Checking detections:  []
Checking annotations:  [[397. 221. 410. 317.]]
Checking num annotations:  815.0
Checking detections:  []
Checking annotations:  [[323. 242. 333. 348.]]
Checking num annotations:  816.0
Checking detections:  []
Checking annotations:  [[148. 216. 167. 370.]]
Checking num annotations:  817.0
Checking detections:  []
Checking annotations:  [[428. 225. 443. 358.]]
Checking num annotations:  818.0
Checking detections:  []
Checking annotations:  [[  2. 266.  21. 350.]]
Checking num annotations:  819.0
Checking detections:  []
Checking annotations:  [[270. 175. 310. 390.]
 [458. 205. 472. 327.]
 [220. 262. 226. 341.]]
Checking num annotations:  822.0
Checking detections:  []
Checking annotations:  [[147. 101. 166. 508.]
 [137.   1. 156. 100.]]
Checking num annotations:  824.0
Checking detections:  []
Checking annotations:  [[541.   1. 564. 278.]]
Checking num annotations:  825.0
Checking detections:  []
Checking annotations:  [[154. 158. 172. 334.]]
Checking num annotations:  826.0
Checking detections:  []
Checking annotations:  [[137. 110. 158. 377.]
 [439.  32. 454. 333.]]
Checking num annotations:  828.0
Checking detections:  []
Checking annotations:  [[592.   8. 614. 409.]]
Checking num annotations:  829.0
Checking detections:  []
Checking annotations:  [[ 66. 198.  78. 388.]]
Checking num annotations:  830.0
Checking detections:  []
Checking annotations:  [[504. 262. 514. 355.]]
Checking num annotations:  831.0
Checking detections:  []
Checking annotations:  [[104.  76. 130. 499.]
 [125.   7. 147.  97.]]
Checking num annotations:  833.0
Checking detections:  []
Checking annotations:  [[ 63. 181.  76. 372.]
 [594. 275. 607. 341.]]
Checking num annotations:  835.0
Checking detections:  []
Checking annotations:  [[596. 254. 612. 348.]
 [276. 299. 304. 409.]]
Checking num annotations:  837.0
Checking detections:  []
Checking annotations:  [[560. 143. 580. 416.]
 [156. 271. 168. 345.]
 [180. 269. 193. 331.]]
Checking num annotations:  840.0
Checking detections:  []
Checking annotations:  [[398. 128. 416. 405.]
 [512. 255. 522. 317.]]
Checking num annotations:  842.0
Checking detections:  []
Checking annotations:  [[ 28. 197.  43. 364.]]
Checking num annotations:  843.0
Checking detections:  []
Checking annotations:  [[341. 257. 353. 316.]]
Checking num annotations:  844.0
Checking detections:  []
Checking annotations:  [[425. 178. 436. 377.]
 [557. 236. 572. 358.]
 [513. 280. 530. 335.]
 [467. 272. 477. 332.]]
Checking num annotations:  848.0
Checking detections:  []
Checking annotations:  [[614. 136. 635. 309.]]
Checking num annotations:  849.0
Checking detections:  []
Checking annotations:  [[436. 223. 447. 343.]
 [329. 263. 344. 324.]]
Checking num annotations:  851.0
Checking detections:  []
Checking annotations:  [[334.  17. 374. 490.]]
Checking num annotations:  852.0
Checking detections:  []
Checking annotations:  [[470. 159. 487. 380.]
 [571. 229. 582. 356.]]
Checking num annotations:  854.0
Checking detections:  []
Checking annotations:  [[127. 146. 143. 366.]]
Checking num annotations:  855.0
Checking detections:  []
Checking annotations:  [[159. 195. 169. 326.]]
Checking num annotations:  856.0
Checking detections:  []
Checking annotations:  [[466. 268. 481. 328.]]
Checking num annotations:  857.0
Checking detections:  []
Checking annotations:  [[318. 219. 327. 356.]]
Checking num annotations:  858.0
Checking detections:  []
Checking annotations:  [[444. 235. 459. 366.]
 [ 46. 257.  63. 282.]]
Checking num annotations:  860.0
Checking detections:  []
Checking annotations:  [[223. 236. 234. 371.]
 [ 55. 231.  77. 372.]]
Checking num annotations:  862.0
Checking detections:  []
Checking annotations:  [[185. 272. 196. 339.]]
Checking num annotations:  863.0
Checking detections:  []
Checking annotations:  [[119. 190. 138. 367.]
 [449.   3. 492. 451.]
 [375.   1. 409. 442.]]
Checking num annotations:  866.0
Checking detections:  []
Checking annotations:  [[572.  78. 614. 415.]]
Checking num annotations:  867.0
Checking detections:  []
Checking annotations:  [[457. 153. 497. 436.]]
Checking num annotations:  868.0
Checking detections:  []
Checking annotations:  [[220. 186. 241. 241.]]
Checking num annotations:  869.0
Checking detections:  []
Checking annotations:  [[163. 238. 178. 323.]]
Checking num annotations:  870.0
Checking detections:  []
Checking annotations:  [[534.   3. 562. 422.]]
Checking num annotations:  871.0
Checking detections:  []
Checking annotations:  [[354. 158. 376. 368.]
 [172. 157. 194. 376.]]
Checking num annotations:  873.0
Checking detections:  []
Checking annotations:  [[482. 164. 509. 374.]]
Checking num annotations:  874.0
Checking detections:  []
Checking annotations:  [[175. 142. 205. 351.]
 [408. 253. 422. 325.]]
Checking num annotations:  876.0
Checking detections:  []
Checking annotations:  [[146. 113. 166. 406.]]
Checking num annotations:  877.0
Checking detections:  []
Checking annotations:  [[498. 275. 507. 352.]]
Checking num annotations:  878.0
Checking detections:  []
Checking annotations:  [[244. 109. 255. 172.]]
Checking num annotations:  879.0
Checking detections:  []
Checking annotations:  [[283. 210. 296. 334.]]
Checking num annotations:  880.0
Checking detections:  []
Checking annotations:  [[544. 104. 570. 439.]]
Checking num annotations:  881.0
Checking detections:  []
Checking annotations:  [[184. 106. 205. 458.]]
Checking num annotations:  882.0
Checking detections:  []
Checking annotations:  [[482. 179. 509. 389.]
 [119. 140. 133. 303.]]
Checking num annotations:  884.0
Checking detections:  []
Checking annotations:  [[381. 153. 411. 404.]]
Checking num annotations:  885.0
Checking detections:  []
Checking annotations:  [[503.  86. 522. 429.]]
Checking num annotations:  886.0
Checking detections:  []
Checking annotations:  [[377. 148. 385. 353.]
 [419. 271. 428. 332.]]
Checking num annotations:  888.0
Checking detections:  []
Checking annotations:  [[369. 116. 389. 433.]]
Checking num annotations:  889.0
Checking detections:  []
Checking annotations:  [[414. 121. 439. 482.]
 [607. 269. 616. 302.]]
Checking num annotations:  891.0
Checking detections:  []
Checking annotations:  [[351. 239. 364. 339.]]
Checking num annotations:  892.0
Checking detections:  []
Checking annotations:  [[247. 239. 257. 319.]]
Checking num annotations:  893.0
Checking detections:  []
Checking annotations:  [[268. 228. 277. 373.]
 [103. 240. 114. 384.]
 [149. 251. 161. 321.]]
Checking num annotations:  896.0
Checking detections:  []
Checking annotations:  [[468. 205. 475. 308.]
 [577. 270. 588. 340.]]
Checking num annotations:  898.0
Checking detections:  []
Checking annotations:  [[115. 152. 129. 403.]
 [290. 276. 299. 345.]]
Checking num annotations:  900.0
Checking detections:  []
Checking annotations:  [[349. 196. 359. 383.]]
Checking num annotations:  901.0
Checking detections:  []
Checking annotations:  [[117. 151. 151. 319.]
 [158.   2. 182. 101.]]
Checking num annotations:  903.0
Checking detections:  []
Checking annotations:  [[233. 259. 241. 351.]
 [ 25. 187.  35. 376.]]
Checking num annotations:  905.0
Checking detections:  []
Checking annotations:  [[152. 146. 170. 384.]
 [ 98. 238. 108. 333.]]
Checking num annotations:  907.0
Checking detections:  []
Checking annotations:  [[219. 164. 236. 400.]]
Checking num annotations:  908.0
Checking detections:  []
Checking annotations:  [[283. 168. 311. 508.]
 [327.   2. 358. 117.]
 [552. 233. 569. 328.]]
Checking num annotations:  911.0
Checking detections:  []
Checking annotations:  [[535. 109. 574. 472.]]
Checking num annotations:  912.0
Checking detections:  []
Checking annotations:  [[571. 174. 579. 361.]
 [136. 255. 149. 350.]]
Checking num annotations:  914.0
Checking detections:  []
Checking annotations:  [[116.  68. 142. 490.]
 [ 76.  13. 100.  97.]]
Checking num annotations:  916.0
Checking detections:  []
Checking annotations:  [[156. 135. 172. 432.]]
Checking num annotations:  917.0
Checking detections:  []
Checking annotations:  [[234. 106. 249. 440.]
 [180. 263. 192. 345.]
 [587. 279. 603. 320.]]
Checking num annotations:  920.0
Checking detections:  []
Checking annotations:  [[210.  19. 235. 351.]]
Checking num annotations:  921.0
Checking detections:  []
Checking annotations:  [[ 34. 117.  58. 444.]]
Checking num annotations:  922.0
Checking detections:  []
Checking annotations:  [[308.  99. 331. 500.]]
Checking num annotations:  923.0
Checking detections:  []
Checking annotations:  [[496. 154. 512. 433.]]
Checking num annotations:  924.0
Checking detections:  []
Checking annotations:  [[344. 156. 360. 406.]]
Checking num annotations:  925.0
Checking detections:  []
Checking annotations:  [[ 30. 197.  51. 390.]
 [325. 214. 339. 381.]]
Checking num annotations:  927.0
Checking detections:  []
Checking annotations:  [[244. 116. 270. 428.]]
Checking num annotations:  928.0
Checking detections:  []
Checking annotations:  [[ 35.   1.  72. 627.]]
Checking num annotations:  929.0
Checking detections:  []
Checking annotations:  [[ 40.   6.  62. 472.]]
Checking num annotations:  930.0
Checking detections:  []
Checking annotations:  [[503.  92. 548. 414.]
 [242. 241. 257. 323.]
 [200. 255. 215. 313.]]
Checking num annotations:  933.0
Checking detections:  []
Checking annotations:  [[317. 101. 329. 401.]]
Checking num annotations:  934.0
Checking detections:  []
Checking annotations:  [[200.   1. 232. 478.]]
Checking num annotations:  935.0
Checking detections:  []
Checking annotations:  [[182. 260. 192. 365.]]
Checking num annotations:  936.0
Checking detections:  []
Checking annotations:  [[434. 277. 445. 331.]]
Checking num annotations:  937.0
Checking detections:  []
Checking annotations:  [[187. 170. 201. 389.]
 [452. 219. 464. 369.]]
Checking num annotations:  939.0
Checking detections:  []
Checking annotations:  [[346.  39. 377. 391.]
 [325.  37. 344. 115.]]
Checking num annotations:  941.0
Checking detections:  []
Checking annotations:  [[ 68. 228.  83. 388.]]
Checking num annotations:  942.0
Checking detections:  []
Checking annotations:  [[162. 179. 174. 377.]]
Checking num annotations:  943.0
Checking detections:  []
Checking annotations:  [[161. 225. 181. 380.]]
Checking num annotations:  944.0
Checking detections:  []
Checking annotations:  [[489. 190. 498. 397.]]
Checking num annotations:  945.0
Checking detections:  []
Checking annotations:  [[360. 209. 375. 364.]]
Checking num annotations:  946.0
Checking detections:  []
Checking annotations:  [[269. 120. 307. 419.]]
Checking num annotations:  947.0
Checking detections:  []
Checking annotations:  [[396.  30. 417. 355.]
 [ 89. 248. 108. 356.]]
Checking num annotations:  949.0
Checking detections:  []
Checking annotations:  [[283.  78. 306. 421.]]
Checking num annotations:  950.0
Checking detections:  []
Checking annotations:  [[505.  85. 535. 486.]]
Checking num annotations:  951.0
Checking detections:  []
Checking annotations:  [[144.   0. 170. 333.]]
Checking num annotations:  952.0
Checking detections:  []
Checking annotations:  [[351. 108. 379. 523.]
 [318.   2. 351. 132.]]
Checking num annotations:  954.0
Checking detections:  []
Checking annotations:  [[211.   1. 238. 417.]]
Checking num annotations:  955.0
Checking detections:  []
Checking annotations:  [[309.   1. 343. 363.]
 [369.   3. 392. 240.]]
Checking num annotations:  957.0
Checking detections:  []
Checking annotations:  [[293. 127. 313. 492.]
 [270.  17. 285. 136.]]
Checking num annotations:  959.0
Checking detections:  []
Checking annotations:  [[460.   2. 502. 601.]]
Checking num annotations:  960.0
Checking detections:  []
Checking annotations:  [[370.   2. 397. 471.]
 [162. 257. 170. 347.]
 [127. 281. 134. 343.]]
Checking num annotations:  963.0
Checking detections:  []
Checking annotations:  [[  2.   1.  33. 427.]]
Checking num annotations:  964.0
Checking detections:  []
Checking annotations:  [[533.  78. 581. 562.]
 [443. 104. 460. 440.]
 [491.  22. 508. 105.]]
Checking num annotations:  967.0
Checking detections:  []
Checking annotations:  [[ 37.  60.  78. 470.]]
Checking num annotations:  968.0
Checking detections:  []
Checking annotations:  [[274. 230. 294. 391.]
 [320.  21. 349. 121.]
 [476.  86. 505. 517.]
 [565.   0. 598.  62.]]
Checking num annotations:  972.0
Checking detections:  []
Checking annotations:  [[179. 102. 203. 422.]]
Checking num annotations:  973.0
Checking detections:  []
Checking annotations:  [[262.  36. 292. 313.]]
Checking num annotations:  974.0
Checking detections:  []
Checking annotations:  [[236.  89. 256. 421.]
 [ 19. 249.  29. 316.]]
Checking num annotations:  976.0
Checking detections:  []
Checking annotations:  [[177. 103. 202. 357.]]
Checking num annotations:  977.0
Checking detections:  []
Checking annotations:  [[220.  28. 239. 397.]
 [353. 242. 360. 345.]]
Checking num annotations:  979.0
Checking detections:  []
Checking annotations:  [[388. 112. 414. 457.]
 [399.   1. 418. 111.]]
Checking num annotations:  981.0
Checking detections:  []
Checking annotations:  [[163. 125. 176. 408.]]
Checking num annotations:  982.0
Checking detections:  []
Checking annotations:  [[480. 137. 491. 353.]]
Checking num annotations:  983.0
Checking detections:  []
Checking annotations:  [[168.   1. 190. 457.]]
Checking num annotations:  984.0
Checking detections:  []
Checking annotations:  [[464. 101. 477. 404.]]
Checking num annotations:  985.0
Checking detections:  []
Checking annotations:  [[262. 111. 286. 481.]
 [ 11. 212.  21. 362.]]
Checking num annotations:  987.0
Checking detections:  []
Checking annotations:  [[187.  66. 224. 410.]]
Checking num annotations:  988.0
Checking detections:  []
Checking annotations:  [[320.   7. 344. 382.]
 [297.   2. 340. 489.]]
Checking num annotations:  990.0
Checking detections:  []
Checking annotations:  [[470. 114. 492. 481.]
 [495.  61. 508. 111.]]
Checking num annotations:  992.0
Checking detections:  []
Checking annotations:  [[  3.  95.  35. 523.]
 [612. 258. 627. 358.]]
Checking num annotations:  994.0
Checking detections:  []
Checking annotations:  [[397.   2. 447. 338.]]
Checking num annotations:  995.0
Checking detections:  []
Checking annotations:  [[348. 140. 362. 391.]]
Checking num annotations:  996.0
Checking detections:  []
Checking annotations:  [[112.   3. 140. 481.]
 [567. 231. 581. 333.]
 [577. 229. 590. 345.]
 [ 48. 293.  60. 336.]]
Checking num annotations:  1000.0
Checking detections:  []
Checking annotations:  [[313.   0. 336. 432.]]
Checking num annotations:  1001.0
Checking detections:  []
Checking annotations:  [[584.   3. 637. 531.]]
Checking num annotations:  1002.0
Checking detections:  []
Checking annotations:  [[102.  85. 129. 460.]
 [ 90.  10. 107.  85.]]
Checking num annotations:  1004.0
Checking detections:  []
Checking annotations:  [[245.   3. 257. 424.]
 [515. 189. 531. 366.]]
Checking num annotations:  1006.0
Checking detections:  []
Checking annotations:  [[361.  21. 392. 452.]]
Checking num annotations:  1007.0
Checking detections:  []
Checking annotations:  [[577.   0. 626. 481.]]
Checking num annotations:  1008.0
Checking detections:  []
Checking annotations:  [[579.  48. 609. 501.]
 [529.   2. 553.  78.]]
Checking num annotations:  1010.0
Checking detections:  []
Checking annotations:  [[421.   2. 461. 495.]]
Checking num annotations:  1011.0
Checking detections:  []
Checking annotations:  [[290.  33. 305. 193.]]
Checking num annotations:  1012.0
Checking detections:  []
Checking annotations:  [[169.   2. 210. 485.]
 [ 60. 281.  78. 358.]]
Checking num annotations:  1014.0
Checking detections:  []
Checking annotations:  [[459. 102. 488. 358.]
 [524.   3. 555. 107.]]
Checking num annotations:  1016.0
Checking detections:  []
Checking annotations:  [[130.  83. 147. 388.]
 [115.  17. 135.  94.]]
Checking num annotations:  1018.0
Checking detections:  []
Checking annotations:  [[549.   2. 583. 555.]]
Checking num annotations:  1019.0
Checking detections:  []
Checking annotations:  [[594.  62. 608. 397.]
 [ 12. 277.  22. 339.]
 [ 80. 209. 100. 400.]]
Checking num annotations:  1022.0
Checking detections:  []
Checking annotations:  [[324.  74. 364. 445.]]
Checking num annotations:  1023.0
Checking detections:  []
Checking annotations:  [[585.   3. 639. 487.]]
Checking num annotations:  1024.0
Checking detections:  []
Checking annotations:  [[ 62.  23.  89. 280.]
 [203. 202. 214. 281.]]
Checking num annotations:  1026.0
Checking detections:  []
Checking annotations:  [[364.  66. 385. 434.]
 [541. 230. 553. 360.]]
Checking num annotations:  1028.0
Checking detections:  []
Checking annotations:  [[ 94. 148. 121. 461.]
 [128. 111. 157. 437.]
 [479. 158. 492. 293.]
 [356. 263. 367. 357.]]
Checking num annotations:  1032.0
Checking detections:  []
Checking annotations:  [[368.   0. 387. 381.]]
Checking num annotations:  1033.0
Checking detections:  []
Checking annotations:  [[432. 113. 470. 467.]]
Checking num annotations:  1034.0
Checking detections:  []
Checking annotations:  [[553.  89. 596. 347.]
 [ 52. 235.  65. 314.]]
Checking num annotations:  1036.0
Checking detections:  []
Checking annotations:  [[611.  50. 631. 411.]]
Checking num annotations:  1037.0
Checking detections:  []
Checking annotations:  [[415.  86. 429. 423.]]
Checking num annotations:  1038.0
Checking detections:  []
Checking annotations:  [[546. 150. 569. 423.]]
Checking num annotations:  1039.0
Checking detections:  []
Checking annotations:  [[191.   6. 211. 505.]]
Checking num annotations:  1040.0
Checking detections:  []
Checking annotations:  [[324.  18. 340. 461.]]
Checking num annotations:  1041.0
Checking detections:  []
Checking annotations:  [[572.   2. 632. 508.]]
Checking num annotations:  1042.0
Checking detections:  []
Checking annotations:  [[417.  34. 431. 123.]
 [447. 102. 464. 439.]]
Checking num annotations:  1044.0
Checking detections:  []
Checking annotations:  [[522.  52. 552. 398.]
 [581.   1. 615.  84.]
 [ 96. 266. 106. 321.]]
Checking num annotations:  1047.0
Checking detections:  []
Checking annotations:  [[492.   1. 516. 436.]
 [344. 225. 361. 355.]]
Checking num annotations:  1049.0
Checking detections:  []
Checking annotations:  [[156.   5. 181. 465.]]
Checking num annotations:  1050.0
Checking detections:  []
Checking annotations:  [[325. 188. 342. 377.]
 [144. 246. 159. 378.]]
Checking num annotations:  1052.0
Checking detections:  []
Checking annotations:  [[557. 119. 596. 329.]
 [ 16. 269.  26. 323.]]
Checking num annotations:  1054.0
Checking detections:  []
Checking annotations:  [[143. 101. 168. 439.]
 [ 64. 284.  73. 348.]]
Checking num annotations:  1056.0
Checking detections:  []
Checking annotations:  [[316. 227. 326. 337.]
 [516. 215. 530. 356.]]
Checking num annotations:  1058.0
Checking detections:  []
Checking annotations:  [[422. 264. 431. 329.]
 [558. 260. 567. 332.]]
Checking num annotations:  1060.0
Checking detections:  []
Checking annotations:  [[220. 182. 234. 410.]]
Checking num annotations:  1061.0
Checking detections:  []
Checking annotations:  [[258. 119. 273. 391.]
 [508. 249. 516. 353.]]
Checking num annotations:  1063.0
Checking detections:  []
Checking annotations:  [[495.  89. 513. 434.]]
Checking num annotations:  1064.0
Checking detections:  []
Checking annotations:  [[231. 110. 251. 502.]
 [211.   0. 231. 118.]]
Checking num annotations:  1066.0
Checking detections:  []
Checking annotations:  [[207.  25. 220. 444.]
 [398. 224. 408. 341.]]
Checking num annotations:  1068.0
Checking Indices:  []
Checking recall:  []
Checking True Positives:  []
Checking False Positives:  []

mAP:
Checking Label 0
Checking label_name myClass
myClass: 0.0
Traceback (most recent call last):
  File "/pytorch-retinanet/train.py", line 236, in <module>
    main()
  File "/pytorch-retinanet/train.py", line 223, in main
    mAP = csv_eval.evaluate(dataset_val, retinanet)
  File "/pytorch-retinanet/retinanet/csv_eval.py", line 287, in evaluate
    print("Precision: ",precision[-1])
IndexError: index -1 is out of bounds for axis 0 with size 0
